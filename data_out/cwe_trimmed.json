{
  "Weaknesses": [
    {
      "ID": "1004",
      "Name": "Sensitive Cookie Without 'HttpOnly' Flag",
      "Abstraction": "Variant",
      "Description": "The product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag.",
      "ExtendedDescription": "The HttpOnly flag directs compatible browsers to prevent client-side script from accessing cookies. Including the HttpOnly flag in the Set-Cookie HTTP response header helps mitigate the risk associated with Cross-Site Scripting (XSS) where an attacker's script code might attempt to read the contents of a cookie and exfiltrate information obtained. When set, browsers that support the flag will not reveal the contents of the cookie to a third party via client-side script executed via XSS.",
      "BackgroundDetails": [
        "An HTTP cookie is a small piece of data attributed to a specific website and stored on the user's computer by the user's web browser. This data can be leveraged for a variety of purposes including saving information entered into form fields, recording user activity, and for authentication purposes. Cookies used to save or record information generated by the user are accessed and modified by script code embedded in a web page. While cookies used for authentication are created by the website's server and sent to the user to be attached to future requests. These authentication cookies are often not meant to be accessed by the web page sent to the user, and are instead just supposed to be attached to future requests to verify authentication details."
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-24045",
          "Description": "Web application for a room automation system has client-side Javascript that sets a sensitive cookie without the HTTPOnly security attribute, allowing the cookie to be accessed.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-24045"
        },
        {
          "Reference": "CVE-2014-3852",
          "Description": "CMS written in Python does not include the HTTPOnly flag in a Set-Cookie header, allowing remote attackers to obtain potentially sensitive information via script access to this cookie.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-3852"
        },
        {
          "Reference": "CVE-2015-4138",
          "Description": "Appliance for managing encrypted communications does not use HttpOnly flag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2015-4138"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1007",
      "Name": "Insufficient Visual Distinction of Homoglyphs Presented to User",
      "Abstraction": "Base",
      "Description": "The product displays information or identifiers to a user, but the display mechanism does not make it easy for the user to distinguish between visually similar or identical glyphs (homoglyphs), which may cause the user to misinterpret a glyph and perform an unintended, insecure action.",
      "ExtendedDescription": "\n\nSome glyphs, pictures, or icons can be semantically distinct to a program, while appearing very similar or identical to a human user. These are referred to as homoglyphs. For example, the lowercase \"l\" (ell) and uppercase \"I\" (eye) have different character codes, but these characters can be displayed in exactly the same way to a user, depending on the font. This can also occur between different character sets. For example, the Latin capital letter \"A\" and the Greek capital letter \"\u0391\" (Alpha) are treated as distinct by programs, but may be displayed in exactly the same way to a user. Accent marks may also cause letters to appear very similar, such as the Latin capital letter grave mark \"\u00c0\" and its equivalent \"\u00c1\" with the acute accent.\n\n\nAdversaries can exploit this visual similarity for attacks such as phishing, e.g. by providing a link to an attacker-controlled hostname that looks like a hostname that the victim trusts. In a different use of homoglyphs, an adversary may create a back door username that is visually similar to the username of a regular user, which then makes it more difficult for a system administrator to detect the malicious username while reviewing logs.\n",
      "AlternateTerms": [
        {
          "Term": "Homograph Attack",
          "Description": "\"Homograph\" is often used as a synonym of \"homoglyph\" by researchers, but according to Wikipedia, a homograph is a word that has multiple, distinct meanings."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2013-7236",
          "Description": "web forum allows impersonation of users with homoglyphs in account names",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2013-7236"
        },
        {
          "Reference": "CVE-2012-0584",
          "Description": "Improper character restriction in URLs in web browser",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-0584"
        },
        {
          "Reference": "CVE-2009-0652",
          "Description": "Incomplete denylist does not include homoglyphs of \"/\" and \"?\" characters in URLs",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0652"
        },
        {
          "Reference": "CVE-2017-5015",
          "Description": "web browser does not convert hyphens to punycode, allowing IDN spoofing in URLs",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-5015"
        },
        {
          "Reference": "CVE-2005-0233",
          "Description": "homoglyph spoofing using punycode in URLs and certificates",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0233"
        },
        {
          "Reference": "CVE-2005-0234",
          "Description": "homoglyph spoofing using punycode in URLs and certificates",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0234"
        },
        {
          "Reference": "CVE-2005-0235",
          "Description": "homoglyph spoofing using punycode in URLs and certificates",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0235"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "102",
      "Name": "Struts: Duplicate Validation Forms",
      "Abstraction": "Variant",
      "Description": "The product uses multiple validation forms with the same name, which might cause the Struts Validator to validate a form that the programmer does not expect.",
      "ExtendedDescription": "If two validation forms have the same name, the Struts Validator arbitrarily chooses one of the forms to use for input validation and discards the other. This decision might not correspond to the programmer's expectations, possibly leading to resultant weaknesses. Moreover, it indicates that the validation logic is not up-to-date, and can indicate that other, more subtle validation errors are present.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1021",
      "Name": "Improper Restriction of Rendered UI Layers or Frames",
      "Abstraction": "Base",
      "Description": "The web application does not restrict or incorrectly restricts frame objects or UI layers that belong to another application or domain, which can lead to user confusion about which interface the user is interacting with.",
      "ExtendedDescription": "A web application is expected to place restrictions on whether it is allowed to be rendered within frames, iframes, objects, embed or applet elements. Without the restrictions, users can be tricked into interacting with the application when they were not intending to.",
      "AlternateTerms": [
        {
          "Term": "Clickjacking"
        },
        {
          "Term": "UI Redress Attack"
        },
        {
          "Term": "Tapjacking",
          "Description": "\"Tapjacking\" is similar to clickjacking, except it is used for mobile applications in which the user \"taps\" the application instead of performing a mouse click."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2017-7440",
          "Description": "E-mail preview feature in a desktop application allows clickjacking attacks via a crafted e-mail message",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-7440"
        },
        {
          "Reference": "CVE-2017-5697",
          "Description": "Hardware/firmware product has insufficient clickjacking protection in its web user interface",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-5697"
        },
        {
          "Reference": "CVE-2017-4015",
          "Description": "Clickjacking in data-loss prevention product via HTTP response header.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-4015"
        },
        {
          "Reference": "CVE-2016-2496",
          "Description": "Tapjacking in permission dialog for mobile OS allows access of private storage using a partially-overlapping window.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2016-2496"
        },
        {
          "Reference": "CVE-2015-1241",
          "Description": "Tapjacking in web browser related to page navigation and touch/gesture events.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2015-1241"
        },
        {
          "Reference": "CVE-2017-0492",
          "Description": "System UI in mobile OS allows a malicious application to create a UI overlay of the entire screen to gain privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-0492"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "1022",
      "Name": "Use of Web Link to Untrusted Target with window.opener Access",
      "Abstraction": "Variant",
      "Description": "The web application produces links to untrusted external sites outside of its sphere of control, but it does not properly prevent the external site from modifying  security-critical properties of the window.opener object, such as the location property.",
      "ExtendedDescription": "When a user clicks a link to an external site (\"target\"), the target=\"_blank\" attribute causes the target site's contents to be opened in a new window or tab, which runs in the same process as the original page. The window.opener object records information about the original page that offered the link. If an attacker can run script on the target page, then they could read or modify certain properties of the window.opener object, including the location property - even if the original and target site are not the same origin. An attacker can modify the location property to automatically redirect the user to a malicious site, e.g. as part of a phishing attack. Since this redirect happens in the original window/tab - which is not necessarily visible, since the browser is focusing the display on the new target page - the user might not notice any suspicious redirection.",
      "AlternateTerms": [
        {
          "Term": "tabnabbing"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-4927",
          "Description": "Library software does not use rel: \"noopener noreferrer\" setting, allowing tabnabbing attacks to redirect to a malicious page",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-4927"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1023",
      "Name": "Incomplete Comparison with Missing Factors",
      "Abstraction": "Class",
      "Description": "The product performs a comparison between entities that must consider multiple factors or characteristics of each entity, but the comparison does not include one or more of these factors.",
      "ExtendedDescription": "An incomplete comparison can lead to resultant weaknesses, e.g., by operating on the wrong object or making a security decision without considering a required factor.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-2782",
          "Description": "PHP remote file inclusion in web application that filters \"http\" and \"https\" URLs, but not \"ftp\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2782"
        },
        {
          "Reference": "CVE-2014-6394",
          "Description": "Product does not prevent access to restricted directories due to partial string comparison with a public directory",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-6394"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "1024",
      "Name": "Comparison of Incompatible Types",
      "Abstraction": "Base",
      "Description": "The product performs a comparison between two entities, but the entities are of different, incompatible types that cannot be guaranteed to provide correct results when they are directly compared.",
      "ExtendedDescription": "In languages that are strictly typed but support casting/conversion, such as C or C++, the programmer might assume that casting one entity to the same type as another entity will ensure that the comparison will be performed correctly, but this cannot be guaranteed. In languages that are not strictly typed, such as PHP or JavaScript, there may be implicit casting/conversion to a type that the programmer is unaware of, causing unexpected results; for example, the string \"123\" might be converted to a number type. See examples.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1025",
      "Name": "Comparison Using Wrong Factors",
      "Abstraction": "Base",
      "Description": "The code performs a comparison between two entities, but the comparison examines the wrong factors or characteristics of the entities, which can lead to incorrect results and resultant weaknesses.",
      "ExtendedDescription": "This can lead to incorrect results and resultant weaknesses. For example, the code might inadvertently compare references to objects, instead of the relevant contents of those objects, causing two \"equal\" objects to be considered unequal.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "103",
      "Name": "Struts: Incomplete validate() Method Definition",
      "Abstraction": "Variant",
      "Description": "The product has a validator form that either does not define a validate() method, or defines a validate() method but does not call super.validate().",
      "ExtendedDescription": "If the code does not call super.validate(), the Validation Framework cannot check the contents of the form against a validation form. In other words, the validation framework will be disabled for the given form.",
      "BackgroundDetails": [
        "The Struts Validator uses a form's validate() method to check the contents of the form properties against the constraints specified in the associated validation form. That means the following classes have a validate() method that is part of the validation framework: ValidatorForm, ValidatorActionForm, DynaValidatorForm, and DynaValidatorActionForm. If the code creates a class that extends one of these classes, and if that class implements custom validation logic by overriding the validate() method, the code must call super.validate() in the validate() implementation."
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1037",
      "Name": "Processor Optimization Removal or Modification of Security-critical Code",
      "Abstraction": "Base",
      "Description": "The developer builds a security-critical protection mechanism into the software, but the processor optimizes the execution of the program such that the mechanism is removed or modified.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2017-5715",
          "Description": "Intel, ARM, and AMD processor optimizations related to speculative execution and branch prediction cause access control checks to be bypassed when placing data into the cache. Often known as \"Spectre\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-5715"
        },
        {
          "Reference": "CVE-2017-5753",
          "Description": "Intel, ARM, and AMD processor optimizations related to speculative execution and branch prediction cause access control checks to be bypassed when placing data into the cache. Often known as \"Spectre\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-5753"
        },
        {
          "Reference": "CVE-2017-5754",
          "Description": "Intel processor optimizations related to speculative execution cause access control checks to be bypassed when placing data into the cache. Often known as \"Meltdown\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-5754"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1038",
      "Name": "Insecure Automated Optimizations",
      "Abstraction": "Class",
      "Description": "The product uses a mechanism that automatically optimizes code, e.g. to improve a characteristic such as performance, but the optimizations can have an unintended side effect that might violate an intended security assumption.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2017-5715",
          "Description": "Intel, ARM, and AMD processor optimizations related to speculative execution and branch prediction cause access control checks to be bypassed when placing data into the cache. Often known as \"Spectre\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-5715"
        },
        {
          "Reference": "CVE-2008-1685",
          "Description": "C compiler optimization, as allowed by specifications, removes code that is used to perform checks to detect integer overflows.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1685"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "1039",
      "Name": "Automated Recognition Mechanism with Inadequate Detection or Handling of Adversarial Input Perturbations",
      "Abstraction": "Class",
      "Description": "The product uses an automated mechanism such as machine learning to recognize complex data inputs (e.g. image or audio) as a particular concept or category, but it does not properly detect or handle inputs that have been modified or constructed in a way that causes the mechanism to detect a different, incorrect concept.",
      "ExtendedDescription": "\n\nWhen techniques such as machine learning are used to automatically classify input streams, and those classifications are used for security-critical decisions, then any mistake in classification can introduce a vulnerability that allows attackers to cause the product to make the wrong security decision. If the automated mechanism is not developed or \"trained\" with enough input data, then attackers may be able to craft malicious input that intentionally triggers the incorrect classification.\n\n\nTargeted technologies include, but are not necessarily limited to:\n\n\n  - automated speech recognition\n\n  - automated image recognition\n\nFor example, an attacker might modify road signs or road surface markings to trick autonomous vehicles into misreading the sign/marking and performing a dangerous action.",
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "104",
      "Name": "Struts: Form Bean Does Not Extend Validation Class",
      "Abstraction": "Variant",
      "Description": "If a form bean does not extend an ActionForm subclass of the Validator framework, it can expose the application to other weaknesses related to insufficient input validation.",
      "BackgroundDetails": [
        "In order to use the Struts Validator, a form must extend one of the following: ValidatorForm, ValidatorActionForm, DynaValidatorActionForm, and DynaValidatorForm. One of these classes must be extended because the Struts Validator ties in to the application by implementing the validate() method in these classes. Forms derived from the ActionForm and DynaActionForm classes cannot use the Struts Validator."
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1045",
      "Name": "Parent Class with a Virtual Destructor and a Child Class without a Virtual Destructor",
      "Abstraction": "Base",
      "Description": "A parent class has a virtual destructor method, but the parent has a child class that does not have a virtual destructor.",
      "ExtendedDescription": "\n\nThis issue can prevent the product from running reliably, since the child might not perform essential destruction operations. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability, such as a memory leak (CWE-401).\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1046",
      "Name": "Creation of Immutable Text Using String Concatenation",
      "Abstraction": "Base",
      "Description": "The product creates an immutable text string using string concatenation operations.",
      "ExtendedDescription": "\n\nWhen building a string via a looping feature (e.g., a FOR or WHILE loop), the use of += to append to the existing string will result in the creation of a new object with each iteration. This programming pattern can be inefficient in comparison with use of text buffer data elements. This issue can make the product perform more slowly. If the relevant code is reachable by an attacker, then this could be influenced to create performance problem.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1049",
      "Name": "Excessive Data Query Operations in a Large Data Table",
      "Abstraction": "Base",
      "Description": "The product performs a data query with a large number of joins\n\t\t\t\t\tand sub-queries on a large data table.",
      "ExtendedDescription": "\n\nThis issue can make the product perform more slowly. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.\n\n\nWhile the interpretation of \"large data table\" and \"large number of joins or sub-queries\" may vary for each product or developer, CISQ recommends a default of 1 million rows for a \"large\" data table, a default minimum of 5 joins, and a default minimum of 3 sub-queries.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "105",
      "Name": "Struts: Form Field Without Validator",
      "Abstraction": "Variant",
      "Description": "The product has a form field that is not validated by a corresponding validation form, which can introduce other weaknesses related to insufficient input validation.",
      "ExtendedDescription": "Omitting validation for even a single input field may give attackers the leeway they need to compromise the product. Although J2EE applications are not generally susceptible to memory corruption attacks, if a J2EE application interfaces with native code that does not perform array bounds checking, an attacker may be able to use an input validation mistake in the J2EE application to launch a buffer overflow attack.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1050",
      "Name": "Excessive Platform Resource Consumption within a Loop",
      "Abstraction": "Base",
      "Description": "The product has a loop body or loop condition that contains a control element that directly or\n\t\t\t\t\tindirectly consumes platform resources, e.g. messaging, sessions, locks, or file\n\t\t\t\t\tdescriptors.",
      "ExtendedDescription": "\n\nThis issue can make the product perform more slowly. If an attacker can influence the number of iterations in the loop, then this performance problem might allow a denial of service by consuming more platform resources than intended.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1052",
      "Name": "Excessive Use of Hard-Coded Literals in Initialization",
      "Abstraction": "Base",
      "Description": "The product initializes a data element using a hard-coded\n\t\t\t\t\tliteral that is not a simple integer or static constant element.",
      "ExtendedDescription": "\n\nThis issue makes it more difficult to modify or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1058",
      "Name": "Invokable Control Element in Multi-Thread Context with non-Final Static Storable or Member Element",
      "Abstraction": "Base",
      "Description": "The code contains a function or method that\n\t\t operates in a multi-threaded environment but owns an unsafe non-final\n\t\t                     static storable or member data element.",
      "ExtendedDescription": "\n\nThis issue can prevent the product from running reliably. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "106",
      "Name": "Struts: Plug-in Framework not in Use",
      "Abstraction": "Variant",
      "Description": "When an application does not use an input validation framework such as the Struts Validator, there is a greater risk of introducing weaknesses related to insufficient input validation.",
      "ExtendedDescription": "\n\nUnchecked input is the leading cause of vulnerabilities in J2EE applications. Unchecked input leads to cross-site scripting, process control, and SQL injection vulnerabilities, among others.\n\n\nAlthough J2EE applications are not generally susceptible to memory corruption attacks, if a J2EE application interfaces with native code that does not perform array bounds checking, an attacker may be able to use an input validation mistake in the J2EE application to launch a buffer overflow attack.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1061",
      "Name": "Insufficient Encapsulation",
      "Abstraction": "Class",
      "Description": "The product does not sufficiently hide the internal representation and implementation details of data or methods, which might allow external components or modules to modify data unexpectedly, invoke unexpected functionality, or introduce dependencies that the programmer did not intend.",
      "ExtendedDescription": "\n\nThis issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2010-3860",
          "Description": "variables declared public allow remote read of system properties such as user name and home directory.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-3860"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "1067",
      "Name": "Excessive Execution of Sequential Searches of Data Resource",
      "Abstraction": "Base",
      "Description": "The product contains a data query against an SQL table or view\n\t\t\t\t\tthat is configured in a way that does not utilize an index and may cause\n\t\t\t\t\tsequential searches to be performed.",
      "ExtendedDescription": "\n\nThis issue can make the product perform more slowly. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "107",
      "Name": "Struts: Unused Validation Form",
      "Abstraction": "Variant",
      "Description": "An unused validation form indicates that validation logic is not up-to-date.",
      "ExtendedDescription": "It is easy for developers to forget to update validation logic when they remove or rename action form mappings. One indication that validation logic is not being properly maintained is the presence of an unused validation form.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1071",
      "Name": "Empty Code Block",
      "Abstraction": "Base",
      "Description": "The source code contains a block that does not contain any code, i.e., the block is empty.",
      "ExtendedDescription": "\n\nEmpty code blocks can occur in the bodies of conditionals, function or method definitions, exception handlers, etc. While an empty code block might be intentional, it might also indicate incomplete implementation, accidental code deletion, unexpected macro expansion, etc. For some programming languages and constructs, an empty block might be allowed by the syntax, but the lack of any behavior within the block might violate a convention or API in such a way that it is an error.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1075",
      "Name": "Unconditional Control Flow Transfer outside of Switch Block",
      "Abstraction": "Base",
      "Description": "The product performs unconditional control transfer (such as a\n\t\t\t\t\t\"goto\") in code outside of a branching structure such as a switch\n\t\t\t\t\tblock.",
      "ExtendedDescription": "\n\nThis issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1077",
      "Name": "Floating Point Comparison with Incorrect Operator",
      "Abstraction": "Variant",
      "Description": "The code performs a comparison such as an\n        equality test between two float (floating point) values, but\n        it uses comparison operators that do not account for the\n        possibility of loss of precision.",
      "ExtendedDescription": "\n\nNumeric calculation using floating point values can generate imprecise results because of rounding errors. As a result, two different calculations might generate numbers that are mathematically equal, but have slightly different bit representations that do not translate to the same mathematically-equal values. As a result, an equality test or other comparison might produce unexpected results.\n\n\nThis issue can prevent the product from running reliably. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1079",
      "Name": "Parent Class without Virtual Destructor Method",
      "Abstraction": "Base",
      "Description": "A parent class contains one or more child classes, but the parent class does not have a virtual destructor method.",
      "ExtendedDescription": "\n\nThis issue can prevent the product from running reliably due to undefined or unexpected behaviors. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "108",
      "Name": "Struts: Unvalidated Action Form",
      "Abstraction": "Variant",
      "Description": "Every Action Form must have a corresponding validation form.",
      "ExtendedDescription": "If a Struts Action Form Mapping specifies a form, it must have a validation form defined under the Struts Validator.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1087",
      "Name": "Class with Virtual Method without a Virtual Destructor",
      "Abstraction": "Base",
      "Description": "A class contains a virtual method, but the method does not have an associated virtual destructor.",
      "ExtendedDescription": "\n\nThis issue can prevent the product from running reliably, e.g. due to undefined behavior. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1088",
      "Name": "Synchronous Access of Remote Resource without Timeout",
      "Abstraction": "Base",
      "Description": "The code has a synchronous call to a remote resource, but there is no timeout for the call, or the timeout is set to infinite.",
      "ExtendedDescription": "\n\nThis issue can prevent the product from running reliably, since an outage for the remote resource can cause the product to hang. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1089",
      "Name": "Large Data Table with Excessive Number of Indices",
      "Abstraction": "Base",
      "Description": "The product uses a large data table that contains an excessively large number of\n\t\t\t\t\tindices.",
      "ExtendedDescription": "\n\nThis issue can make the product perform more slowly. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.\n\n\nWhile the interpretation of \"large data table\" and \"excessively large number of indices\" may vary for each product or developer, CISQ recommends a default threshold of 1000000 rows for a \"large\" table and a default threshold of 3 indices.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "109",
      "Name": "Struts: Validator Turned Off",
      "Abstraction": "Variant",
      "Description": "Automatic filtering via a Struts bean has been turned off, which disables the Struts Validator and custom validation logic. This exposes the application to other weaknesses related to insufficient input validation.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1091",
      "Name": "Use of Object without Invoking Destructor Method",
      "Abstraction": "Base",
      "Description": "The product contains a method that accesses an object but does not later invoke\n\t\t\t\t\tthe element's associated finalize/destructor method.",
      "ExtendedDescription": "\n\nThis issue can make the product perform more slowly by retaining memory and/or other resources longer than necessary. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1093",
      "Name": "Excessively Complex Data Representation",
      "Abstraction": "Class",
      "Description": "The product uses an unnecessarily complex internal representation for its data structures or interrelationships between those structures.",
      "ExtendedDescription": "\n\nThis issue makes it more difficult to understand or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.\n",
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "1096",
      "Name": "Singleton Class Instance Creation without Proper Locking or Synchronization",
      "Abstraction": "Variant",
      "Description": "The product implements a Singleton design pattern but does not use appropriate locking or other synchronization mechanism to ensure that the singleton class is only instantiated once.",
      "ExtendedDescription": "\n\nThis issue can prevent the product from running reliably, e.g. by making the instantiation process non-thread-safe and introducing deadlock (CWE-833) or livelock conditions. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1098",
      "Name": "Data Element containing Pointer Item without Proper Copy Control Element",
      "Abstraction": "Base",
      "Description": "The code contains a data element with a pointer that does not have an associated copy or constructor method.",
      "ExtendedDescription": "\n\nThis issue can prevent the product from running reliably. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "11",
      "Name": "ASP.NET Misconfiguration: Creating Debug Binary",
      "Abstraction": "Variant",
      "Description": "Debugging messages help attackers learn about the system and plan a form of attack.",
      "ExtendedDescription": "ASP .NET applications can be configured to produce debug binaries. These binaries give detailed debugging messages and should not be used in production environments. Debug binaries are meant to be used in a development or testing environment and can pose a security risk if they are deployed to production.",
      "BackgroundDetails": [
        "The debug attribute of the <compilation> tag defines whether compiled binaries should include debugging information. The use of debug binaries causes an application to provide as much information about itself as possible to the user."
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "110",
      "Name": "Struts: Validator Without Form Field",
      "Abstraction": "Variant",
      "Description": "Validation fields that do not appear in forms they are associated with indicate that the validation logic is out of date.",
      "ExtendedDescription": "\n\nIt is easy for developers to forget to update validation logic when they make changes to an ActionForm class. One indication that validation logic is not being properly maintained is inconsistencies between the action form and the validation form.\n\n\nAlthough J2EE applications are not generally susceptible to memory corruption attacks, if a J2EE application interfaces with native code that does not perform array bounds checking, an attacker may be able to use an input validation mistake in the J2EE application to launch a buffer overflow attack.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1100",
      "Name": "Insufficient Isolation of System-Dependent Functions",
      "Abstraction": "Base",
      "Description": "The product or code does not isolate system-dependent\n\t\t\t\t\tfunctionality into separate standalone modules.",
      "ExtendedDescription": "\n\nThis issue makes it more difficult to maintain and/or port the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1102",
      "Name": "Reliance on Machine-Dependent Data Representation",
      "Abstraction": "Base",
      "Description": "The code uses a data representation that relies on low-level\n\t\t\t\t\tdata representation or constructs that may vary across different processors,\n\t\t\t\t\tphysical machines, OSes, or other physical components.",
      "ExtendedDescription": "\n\nThis issue makes it more difficult to maintain and/or port the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1104",
      "Name": "Use of Unmaintained Third Party Components",
      "Abstraction": "Base",
      "Description": "The product relies on third-party components that are not\n\t\t\t\t\tactively supported or maintained by the original developer or a trusted proxy\n\t\t\t\t\tfor the original developer.",
      "ExtendedDescription": "\n\nReliance on components that are no longer maintained can make it difficult or impossible to fix significant bugs, vulnerabilities, or quality issues. In effect, unmaintained code can become obsolete.\n\n\nThis issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1108",
      "Name": "Excessive Reliance on Global Variables",
      "Abstraction": "Base",
      "Description": "The code is structured in a way that relies too much on using\n\t\t\t\t\tor setting global variables throughout various points in the code, instead of\n\t\t\t\t\tpreserving the associated information in a narrower, more local\n\t\t\t\t\tcontext.",
      "ExtendedDescription": "\n\nThis issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "111",
      "Name": "Direct Use of Unsafe JNI",
      "Abstraction": "Variant",
      "Description": "When a Java application uses the Java Native Interface (JNI) to call code written in another programming language, it can expose the application to weaknesses in that code, even if those weaknesses cannot occur in Java.",
      "ExtendedDescription": "Many safety features that programmers may take for granted do not apply for native code, so you must carefully review all such code for potential problems. The languages used to implement native code may be more susceptible to buffer overflows and other attacks. Native code is unprotected by the security features enforced by the runtime environment, such as strong typing and array bounds checking.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1116",
      "Name": "Inaccurate Comments",
      "Abstraction": "Base",
      "Description": "The source code contains comments that do not accurately\n\t\t\t\t\tdescribe or explain aspects of the portion of the code with which the comment is\n\t\t\t\t\tassociated.",
      "ExtendedDescription": "\n\nWhen a comment does not accurately reflect the associated code elements, this can introduce confusion to a reviewer (due to inconsistencies) or make it more difficult and less efficient to validate that the code is implementing the intended behavior correctly.\n\n\nThis issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "112",
      "Name": "Missing XML Validation",
      "Abstraction": "Base",
      "Description": "The product accepts XML from an untrusted source but does not validate the XML against the proper schema.",
      "ExtendedDescription": "Most successful attacks begin with a violation of the programmer's assumptions. By accepting an XML document without validating it against a DTD or XML schema, the programmer leaves a door open for attackers to provide unexpected, unreasonable, or malicious input.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1120",
      "Name": "Excessive Code Complexity",
      "Abstraction": "Class",
      "Description": "The code is too complex, as calculated using a well-defined,\n\t\t\t\t\tquantitative measure.",
      "ExtendedDescription": "\n\nThis issue makes it more difficult to understand and/or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.\n\n\nThis issue can make the product perform more slowly. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.\n",
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "1123",
      "Name": "Excessive Use of Self-Modifying Code",
      "Abstraction": "Base",
      "Description": "The product uses too much self-modifying\n\t\t\t\t\tcode.",
      "ExtendedDescription": "\n\nThis issue makes it more difficult to understand or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1126",
      "Name": "Declaration of Variable with Unnecessarily Wide Scope",
      "Abstraction": "Base",
      "Description": "The source code declares a variable in one scope, but the\n\t\t\t\t\tvariable is only used within a narrower scope.",
      "ExtendedDescription": "\n\nThis issue makes it more difficult to understand and/or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1127",
      "Name": "Compilation with Insufficient Warnings or Errors",
      "Abstraction": "Base",
      "Description": "The code is compiled without sufficient warnings enabled, which\n\t\t\t\t\tmay prevent the detection of subtle bugs or quality\n\t\t\t\t\tissues.",
      "ExtendedDescription": "\n\nThis issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "113",
      "Name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
      "Abstraction": "Variant",
      "Description": "The product receives data from an HTTP agent/component (e.g., web server, proxy, browser, etc.), but it does not neutralize or incorrectly neutralizes CR and LF characters before the data is included in outgoing HTTP headers.",
      "ExtendedDescription": "\n\n HTTP agents or components may include a web server, load balancer, reverse proxy, web caching proxy, application firewall, web browser, etc. Regardless of the role, they are expected to maintain coherent, consistent HTTP communication state across all components. However, including unexpected data in an HTTP header allows an attacker to specify the entirety of the HTTP message that is rendered by the client HTTP agent (e.g., web browser) or back-end HTTP agent (e.g., web server), whether the message is part of a request or a response. \n\n\nWhen an HTTP request contains unexpected CR and LF characters, the server may respond with an output stream that is interpreted as \"splitting\" the stream into two different HTTP messages instead of one. CR is carriage return, also given by %0d or \\r, and LF is line feed, also given by %0a or \\n.\n\n\nIn addition to CR and LF characters, other valid/RFC compliant special characters and unique character encodings can be utilized, such as HT (horizontal tab, also given by %09 or \\t) and SP (space, also given as + sign or %20).\n\n\nThese types of unvalidated and unexpected data in HTTP message headers allow an attacker to control the second \"split\" message to mount attacks such as server-side request forgery, cross-site scripting, and cache poisoning attacks.\n\n\nHTTP response splitting weaknesses may be present when:\n\n\n  1. Data enters a web application through an untrusted source, most frequently an HTTP request.\n\n  1. The data is included in an HTTP response header sent to a web user without neutralizing malicious characters that can be interpreted as separator characters for headers.\n\n",
      "AlternateTerms": [
        {
          "Term": "HTTP Request Splitting"
        },
        {
          "Term": "HTTP Response Splitting"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-15811",
          "Description": "Chain: Proxy uses a substring search instead of parsing the Transfer-Encoding header (CWE-697), allowing request splitting (CWE-113) and cache poisoning",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-15811"
        },
        {
          "Reference": "CVE-2021-41084",
          "Description": "Scala-based HTTP interface allows request splitting and response splitting through header names, header values, status reasons, and URIs",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-41084"
        },
        {
          "Reference": "CVE-2018-12116",
          "Description": "Javascript-based framework allows request splitting through a path option of an HTTP request",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-12116"
        },
        {
          "Reference": "CVE-2004-2146",
          "Description": "Application accepts CRLF in an object ID, allowing HTTP response splitting.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2146"
        },
        {
          "Reference": "CVE-2004-1656",
          "Description": "Shopping cart allows HTTP response splitting to perform HTML injection via CRLF in a parameter for a url",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1656"
        },
        {
          "Reference": "CVE-2005-2060",
          "Description": "Bulletin board allows response splitting via CRLF in parameter.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2060"
        },
        {
          "Reference": "CVE-2004-2512",
          "Description": "Response splitting via CRLF in PHPSESSID.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2512"
        },
        {
          "Reference": "CVE-2005-1951",
          "Description": "e-commerce app allows HTTP response splitting using CRLF in object id parameters",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1951"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "114",
      "Name": "Process Control",
      "Abstraction": "Class",
      "Description": "Executing commands or loading libraries from an untrusted source or in an untrusted environment can cause an application to execute malicious commands (and payloads) on behalf of an attacker.",
      "ExtendedDescription": "Process control vulnerabilities take two forms: \n\n  - An attacker can change the command that the program executes: the attacker explicitly controls what the command is.\n\n  - An attacker can change the environment in which the command executes: the attacker implicitly controls what the command means.\n\nProcess control vulnerabilities of the first type occur when either data enters the application from an untrusted source and the data is used as part of a string representing a command that is executed by the application. By executing the command, the application gives an attacker a privilege or capability that the attacker would not otherwise have.",
      "AffectedResources": [
        "System Process"
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "115",
      "Name": "Misinterpretation of Input",
      "Abstraction": "Base",
      "Description": "The product misinterprets an input, whether from an attacker or another product, in a security-relevant fashion.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-2225",
          "Description": "Product sees dangerous file extension in free text of a group discussion, disconnects all users.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2225"
        },
        {
          "Reference": "CVE-2001-0003",
          "Description": "Product does not correctly import and process security settings from another product.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0003"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "116",
      "Name": "Improper Encoding or Escaping of Output",
      "Abstraction": "Class",
      "Description": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
      "ExtendedDescription": "\n\nImproper encoding or escaping can allow attackers to change the commands that are sent to another component, inserting malicious commands instead.\n\n\nMost products follow a certain protocol that uses structured messages for communication between components, such as queries or commands. These structured messages can contain raw data interspersed with metadata or control information. For example, \"GET /index.html HTTP/1.1\" is a structured message containing a command (\"GET\") with a single argument (\"/index.html\") and metadata about which protocol version is being used (\"HTTP/1.1\").\n\n\nIf an application uses attacker-supplied inputs to construct a structured message without properly encoding or escaping, then the attacker could insert special characters that will cause the data to be interpreted as control information or metadata. Consequently, the component that receives the output will perform the wrong operations, or otherwise interpret the data incorrectly.\n",
      "AlternateTerms": [
        {
          "Term": "Output Sanitization"
        },
        {
          "Term": "Output Validation"
        },
        {
          "Term": "Output Encoding"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-41232",
          "Description": "Chain: authentication routine in Go-based agile development product does not escape user name (CWE-116), allowing LDAP injection (CWE-90)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-41232"
        },
        {
          "Reference": "CVE-2008-4636",
          "Description": "OS command injection in backup software using shell metacharacters in a filename; correct behavior would require that this filename could not be changed.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4636"
        },
        {
          "Reference": "CVE-2008-0769",
          "Description": "Web application does not set the charset when sending a page to a browser, allowing for XSS exploitation when a browser chooses an unexpected encoding.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0769"
        },
        {
          "Reference": "CVE-2008-0005",
          "Description": "Program does not set the charset when sending a page to a browser, allowing for XSS exploitation when a browser chooses an unexpected encoding.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0005"
        },
        {
          "Reference": "CVE-2008-5573",
          "Description": "SQL injection via password parameter; a strong password might contain \"&\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5573"
        },
        {
          "Reference": "CVE-2008-3773",
          "Description": "Cross-site scripting in chat application via a message subject, which normally might contain \"&\" and other XSS-related characters.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3773"
        },
        {
          "Reference": "CVE-2008-0757",
          "Description": "Cross-site scripting in chat application via a message, which normally might be allowed to contain arbitrary content.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0757"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "1164",
      "Name": "Irrelevant Code",
      "Abstraction": "Class",
      "Description": "The product contains code that is not essential for execution,\n\t     i.e. makes no state changes and has no side effects that alter\n\t     data or control flow, such that removal of the code would have no impact\n\t     to functionality or correctness.",
      "ExtendedDescription": "\n\nIrrelevant code could include dead code, initialization that is not used, empty blocks, code that could be entirely removed due to optimization, etc.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2014-1266",
          "Description": "chain: incorrect \"goto\" in Apple SSL product bypasses certificate validation, allowing Adversary-in-the-Middle (AITM) attack (Apple \"goto fail\" bug). CWE-705 (Incorrect Control Flow Scoping) -> CWE-561 (Dead Code) -> CWE-295 (Improper Certificate Validation) -> CWE-393 (Return of Wrong Status Code) -> CWE-300 (Channel Accessible by Non-Endpoint).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-1266"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "117",
      "Name": "Improper Output Neutralization for Logs",
      "Abstraction": "Base",
      "Description": "The product does not neutralize or incorrectly neutralizes output that is written to logs.",
      "ExtendedDescription": "\n\nThis can allow an attacker to forge log entries or inject malicious content into logs.\n\n\nLog forging vulnerabilities occur when:\n\n\n  1. Data enters an application from an untrusted source.\n\n  1. The data is written to an application or system log file.\n\n",
      "BackgroundDetails": [
        "Applications typically use log files to store a history of events or transactions for later review, statistics gathering, or debugging. Depending on the nature of the application, the task of reviewing log files may be performed manually on an as-needed basis or automated with a tool that automatically culls logs for important events or trending information."
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2006-4624",
          "Description": "Chain: inject fake log entries with fake timestamps using CRLF injection",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4624"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1173",
      "Name": "Improper Use of Validation Framework",
      "Abstraction": "Base",
      "Description": "The product does not use, or incorrectly uses, an input validation framework that is provided by the source language or an independent library.",
      "ExtendedDescription": "Many modern coding languages provide developers with input validation frameworks to make the task of input validation easier and less error-prone. These frameworks will automatically check all input against specified criteria and direct execution to error handlers when invalid input is received. The improper use (i.e., an incorrect implementation or missing altogether) of these frameworks is not directly exploitable, but can lead to an exploitable condition if proper input validation is not performed later in the product. Not using provided input validation frameworks can also hurt the maintainability of code as future developers may not recognize the downstream input validation being used in the place of the validation framework.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1174",
      "Name": "ASP.NET Misconfiguration: Improper Model Validation",
      "Abstraction": "Variant",
      "Description": "The ASP.NET application does not use, or incorrectly uses, the model validation framework.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1176",
      "Name": "Inefficient CPU Computation",
      "Abstraction": "Class",
      "Description": "The product performs CPU computations using\n         algorithms that are not as efficient as they could be for the\n         needs of the developer, i.e., the computations can be\n         optimized further.",
      "ExtendedDescription": "\n\nThis issue can make the product perform more slowly, possibly in ways that are noticeable to the users. If an attacker can influence the amount of computation that must be performed, e.g. by triggering worst-case complexity, then this performance problem might introduce a vulnerability.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-37734",
          "Description": "Chain: lexer in Java-based GraphQL server does not enforce maximum of tokens early enough (CWE-696), allowing excessive CPU consumption (CWE-1176)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-37734"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "1177",
      "Name": "Use of Prohibited Code",
      "Abstraction": "Class",
      "Description": "The product uses a function, library, or third party component\n\t     that has been explicitly prohibited, whether by the developer or\n\t     the customer.",
      "ExtendedDescription": "\n\nThe developer - or customers - may wish to restrict or eliminate use of a function, library, or third party component for any number of reasons, including real or suspected vulnerabilities; difficulty to use securely; export controls or license requirements; obsolete or poorly-maintained code; internal code being scheduled for deprecation; etc.\n\n\nTo reduce risk of vulnerabilities, the developer might maintain a list of \"banned\" functions that programmers must avoid using because the functions are difficult or impossible to use securely. This issue can also make the product more costly and difficult to maintain.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-1470",
          "Description": "Library has multiple buffer overflows using sprintf() and strcpy()",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1470"
        },
        {
          "Reference": "CVE-2007-4004",
          "Description": "FTP client uses inherently insecure gets() function and is setuid root on some systems, allowing buffer overflow",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4004"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "118",
      "Name": "Incorrect Access of Indexable Resource ('Range Error')",
      "Abstraction": "Class",
      "Description": "The product does not restrict or incorrectly restricts operations within the boundaries of a resource that is accessed using an index or pointer, such as memory or files.",
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "1188",
      "Name": "Initialization of a Resource with an Insecure Default",
      "Abstraction": "Base",
      "Description": "The product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.",
      "ExtendedDescription": "\n\nDevelopers often choose default values that leave the product as open and easy to use as possible out-of-the-box, under the assumption that the administrator can (or should) change the default value. However, this ease-of-use comes at a cost when the default is insecure and the administrator does not change it.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-36349",
          "Description": "insecure default variable initialization in BIOS firmware for a hardware board allows DoS",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-36349"
        },
        {
          "Reference": "CVE-2022-42467",
          "Description": "A generic database browser interface has a default mode that exposes a web server to the network, allowing queries to the database.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-42467"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "1189",
      "Name": "Improper Isolation of Shared Resources on System-on-a-Chip (SoC)",
      "Abstraction": "Base",
      "Description": "The System-On-a-Chip (SoC) does not properly isolate shared resources between trusted and untrusted agents.",
      "ExtendedDescription": "\n\nA System-On-a-Chip (SoC) has a lot of functionality, but it may have a limited number of pins or pads. A pin can only perform one function at a time. However, it can be configured to perform multiple different functions. This technique is called pin multiplexing. Similarly, several resources on the chip may be shared to multiplex and support different features or functions. When such resources are shared between trusted and untrusted agents, untrusted agents may be able to access the assets intended to be accessed only by the trusted agents.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-8698",
          "Description": "Processor has improper isolation of shared resources allowing for information disclosure.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8698"
        },
        {
          "Reference": "CVE-2019-6260",
          "Description": "Baseboard Management Controller (BMC) device implements Advanced High-performance Bus (AHB) bridges that do not require authentication for arbitrary read and write access to the BMC's physical address space from the host, and possibly the network [REF-1138].",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-6260"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "119",
      "Name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "Abstraction": "Class",
      "Diagram": "/data/images/CWE-119-Diagram.png",
      "Description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
      "ExtendedDescription": "\n\nCertain languages allow direct addressing of memory locations and do not automatically ensure that these locations are valid for the memory buffer that is being referenced. This can cause read or write operations to be performed on memory locations that may be associated with other variables, data structures, or internal program data.\n",
      "BackgroundDetails": [
        "Certain languages allow direct addressing of memory locations and do not automatically ensure that these locations are valid for the memory buffer that is being referenced."
      ],
      "AlternateTerms": [
        {
          "Term": "Buffer Overflow",
          "Description": "This term has many different meanings to different audiences. From a CWE mapping perspective, this term should be avoided where possible. Some researchers, developers, and tools intend for it to mean \"write past the end of a buffer,\" whereas others use the same term to mean \"any read or write outside the boundaries of a buffer, whether before the beginning of the buffer or after the end of the buffer.\" Others could mean \"any action after the end of a buffer, whether it is a read or write.\" Since the term is commonly used for exploitation and for vulnerabilities, it further confuses things."
        },
        {
          "Term": "buffer overrun",
          "Description": "Some prominent vendors and researchers use the term \"buffer overrun,\" but most people use \"buffer overflow.\" See the alternate term for \"buffer overflow\" for context."
        },
        {
          "Term": "memory safety",
          "Description": "Generally used for techniques that avoid weaknesses related to memory access, such as those identified by CWE-119 and its descendants. However, the term is not formal, and there is likely disagreement between practitioners as to which weaknesses are implicitly covered by the \"memory safety\" term."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-22991",
          "Description": "Incorrect URI normalization in application traffic product leads to buffer overflow, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-22991"
        },
        {
          "Reference": "CVE-2020-29557",
          "Description": "Buffer overflow in Wi-Fi router web interface, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-29557"
        },
        {
          "Reference": "CVE-2009-2550",
          "Description": "Classic stack-based buffer overflow in media player using a long entry in a playlist",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2550"
        },
        {
          "Reference": "CVE-2009-2403",
          "Description": "Heap-based buffer overflow in media player using a long entry in a playlist",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2403"
        },
        {
          "Reference": "CVE-2009-0689",
          "Description": "large precision value in a format string triggers overflow",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0689"
        },
        {
          "Reference": "CVE-2009-0690",
          "Description": "negative offset value leads to out-of-bounds read",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0690"
        },
        {
          "Reference": "CVE-2009-1532",
          "Description": "malformed inputs cause accesses of uninitialized or previously-deleted objects, leading to memory corruption",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1532"
        },
        {
          "Reference": "CVE-2009-1528",
          "Description": "chain: lack of synchronization leads to memory corruption",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1528"
        },
        {
          "Reference": "CVE-2021-29529",
          "Description": "Chain: machine-learning product can have a heap-based buffer overflow (CWE-122) when some integer-oriented bounds are calculated by using ceiling() and floor() on floating point values (CWE-1339)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-29529"
        },
        {
          "Reference": "CVE-2009-0558",
          "Description": "attacker-controlled array index leads to code execution",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0558"
        },
        {
          "Reference": "CVE-2009-0269",
          "Description": "chain: -1 value from a function call was intended to indicate an error, but is used as an array index instead.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0269"
        },
        {
          "Reference": "CVE-2009-0566",
          "Description": "chain: incorrect calculations lead to incorrect pointer dereference and memory corruption",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0566"
        },
        {
          "Reference": "CVE-2009-1350",
          "Description": "product accepts crafted messages that lead to a dereference of an arbitrary pointer",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1350"
        },
        {
          "Reference": "CVE-2009-0191",
          "Description": "chain: malformed input causes dereference of uninitialized memory",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0191"
        },
        {
          "Reference": "CVE-2008-4113",
          "Description": "OS kernel trusts userland-supplied length value, allowing reading of sensitive information",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4113"
        },
        {
          "Reference": "CVE-2005-1513",
          "Description": "Chain: integer overflow in securely-coded mail program leads to buffer overflow. In 2005, this was regarded as unrealistic to exploit, but in 2020, it was rediscovered to be easier to exploit due to evolutions of the technology.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1513"
        },
        {
          "Reference": "CVE-2003-0542",
          "Description": "buffer overflow involving a regular expression with a large number of captures",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0542"
        },
        {
          "Reference": "CVE-2017-1000121",
          "Description": "chain: unchecked message size metadata allows integer overflow (CWE-190) leading to buffer overflow (CWE-119).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-1000121"
        }
      ],
      "AffectedResources": [
        "Memory"
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "1190",
      "Name": "DMA Device Enabled Too Early in Boot Phase",
      "Abstraction": "Base",
      "Description": "The product enables a Direct Memory Access (DMA) capable device before the security configuration settings are established, which allows an attacker to extract data from or gain privileges on the product.",
      "ExtendedDescription": "\n\nDMA is included in a number of devices because it allows data transfer between the computer and the connected device, using direct hardware access to read or write directly to main memory without any OS interaction. An attacker could exploit this to access secrets. Several virtualization-based mitigations have been introduced to thwart DMA attacks. These are usually configured/setup during boot time. However, certain IPs that are powered up before boot is complete (known as early boot IPs) may be DMA capable. Such IPs, if not trusted, could launch DMA attacks and gain access to assets that should otherwise be protected.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1191",
      "Name": "On-Chip Debug and Test Interface With Improper Access Control",
      "Abstraction": "Base",
      "Description": "The chip does not implement or does not correctly perform access control to check whether users are authorized to access internal registers and test modes through the physical debug/test interface.",
      "ExtendedDescription": "\n\nA device's internal information may be accessed through a scan chain of interconnected internal registers, usually through a JTAG interface. The JTAG interface provides access to these registers in a serial fashion in the form of a scan chain for the purposes of debugging programs running on a device. Since almost all information contained within a device may be accessed over this interface, device manufacturers typically insert some form of authentication and authorization to prevent unintended use of this sensitive information. This mechanism is implemented in addition to on-chip protections that are already present.\n\n\nIf authorization, authentication, or some other form of access control is not implemented or not implemented correctly, a user may be able to bypass on-chip protection mechanisms through the debug interface.\n\n\nSometimes, designers choose not to expose the debug pins on the motherboard. Instead, they choose to hide these pins in the intermediate layers of the board. This is primarily done to work around the lack of debug authorization inside the chip. In such a scenario (without debug authorization), when the debug interface is exposed, chip internals are accessible to an attacker.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-18827",
          "Description": "chain: JTAG interface is not disabled (CWE-1191) during ROM code execution, introducing a race condition (CWE-362) to extract encryption keys",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-18827"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1192",
      "Name": "Improper Identifier for IP Block used in System-On-Chip (SOC)",
      "Abstraction": "Base",
      "Description": "The System-on-Chip (SoC) does not have unique, immutable identifiers for each of its components.",
      "ExtendedDescription": "\n\nA System-on-Chip (SoC) comprises several components (IP) with varied trust requirements. It is required that each IP is identified uniquely and should distinguish itself from other entities in the SoC without any ambiguity. The unique secured identity is required for various purposes. Most of the time the identity is used to route a transaction or perform certain actions, including resetting, retrieving a sensitive information, and acting upon or on behalf of something else.\n\n\nThere are several variants of this weakness:\n\n\n  - A \"missing\" identifier is when the SoC does not define any mechanism to uniquely identify the IP.\n\n  - An \"insufficient\" identifier might provide some defenses - for example, against the most common attacks - but it does not protect against everything that is intended.\n\n  - A \"misconfigured\" mechanism occurs when a mechanism is available but not implemented correctly.\n\n  - An \"ignored\" identifier occurs when the SoC/IP has not applied any policies or does not act upon the identifier securely.\n\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1193",
      "Name": "Power-On of Untrusted Execution Core Before Enabling Fabric Access Control",
      "Abstraction": "Base",
      "Description": "The product enables components that contain untrusted firmware before memory and fabric access controls have been enabled.",
      "ExtendedDescription": "\n\n After initial reset, System-on-Chip (SoC) fabric access controls and other security features need to be programmed by trusted firmware as part of the boot sequence. If untrusted IPs or peripheral microcontrollers are enabled first, then the untrusted component can master transactions on the hardware bus and target memory or other assets to compromise the SoC boot firmware.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "12",
      "Name": "ASP.NET Misconfiguration: Missing Custom Error Page",
      "Abstraction": "Variant",
      "Description": "An ASP .NET application must enable custom error pages in order to prevent attackers from mining information from the framework's built-in responses.",
      "BackgroundDetails": [
        "The mode attribute of the <customErrors> tag defines whether custom or default error pages are used."
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "120",
      "Name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
      "Abstraction": "Base",
      "Description": "The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.",
      "ExtendedDescription": "A buffer overflow condition exists when a product attempts to put more data in a buffer than it can hold, or when it attempts to put data in a memory area outside of the boundaries of a buffer. The simplest type of error, and the most common cause of buffer overflows, is the \"classic\" case in which the product copies the buffer without restricting how much is copied. Other variants exist, but the existence of a classic overflow strongly suggests that the programmer is not considering even the most basic of security protections.",
      "AlternateTerms": [
        {
          "Term": "Classic Buffer Overflow",
          "Description": "This term was frequently used by vulnerability researchers during approximately 1995 to 2005 to differentiate buffer copies without length checks (which had been known about for decades) from other emerging weaknesses that still involved invalid accesses of buffers, as vulnerability researchers began to develop advanced exploitation techniques."
        },
        {
          "Term": "Unbounded Transfer"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-1094",
          "Description": "buffer overflow using command with long argument",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1094"
        },
        {
          "Reference": "CVE-1999-0046",
          "Description": "buffer overflow in local program using long environment variable",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0046"
        },
        {
          "Reference": "CVE-2002-1337",
          "Description": "buffer overflow in comment characters, when product increments a counter for a \">\" but does not decrement for \"<\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1337"
        },
        {
          "Reference": "CVE-2003-0595",
          "Description": "By replacing a valid cookie value with an extremely long string of characters, an attacker may overflow the application's buffers.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0595"
        },
        {
          "Reference": "CVE-2001-0191",
          "Description": "By replacing a valid cookie value with an extremely long string of characters, an attacker may overflow the application's buffers.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0191"
        }
      ],
      "FunctionalAreas": [
        "Memory Management"
      ],
      "AffectedResources": [
        "Memory"
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "1204",
      "Name": "Generation of Weak Initialization Vector (IV)",
      "Abstraction": "Base",
      "Description": "The product uses a cryptographic primitive that uses an Initialization\n\t\t\tVector (IV), but the product does not generate IVs that are\n\t\t\tsufficiently unpredictable or unique according to the expected\n\t\t\tcryptographic requirements for that primitive.\n\t\t\t",
      "ExtendedDescription": "By design, some cryptographic primitives (such as block ciphers) require that IVs must have certain properties for the uniqueness and/or unpredictability of an IV. Primitives may vary in how important these properties are. If these properties are not maintained, e.g. by a bug in the code, then the cryptography may be weakened or broken by attacking the IVs themselves.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-1472",
          "Description": "ZeroLogon vulnerability - use of a static IV of all zeroes in AES-CFB8 mode",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-1472"
        },
        {
          "Reference": "CVE-2011-3389",
          "Description": "BEAST attack in SSL 3.0 / TLS 1.0. In CBC mode, chained initialization vectors are non-random, allowing decryption of HTTPS traffic using a chosen plaintext attack.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-3389"
        },
        {
          "Reference": "CVE-2001-0161",
          "Description": "wireless router does not use 6 of the 24 bits for WEP encryption, making it easier for attackers to decrypt traffic",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0161"
        },
        {
          "Reference": "CVE-2001-0160",
          "Description": "WEP card generates predictable IV values, making it easier for attackers to decrypt traffic",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0160"
        },
        {
          "Reference": "CVE-2017-3225",
          "Description": "device bootloader uses a zero initialization vector during AES-CBC",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-3225"
        },
        {
          "Reference": "CVE-2016-6485",
          "Description": "crypto framework uses PHP rand function - which is not cryptographically secure - for an initialization vector",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2016-6485"
        },
        {
          "Reference": "CVE-2014-5386",
          "Description": "encryption routine does not seed the random number generator, causing the same initialization vector to be generated repeatedly",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-5386"
        },
        {
          "Reference": "CVE-2020-5408",
          "Description": "encryption functionality in an authentication framework uses a fixed null IV with CBC mode, allowing attackers to decrypt traffic in applications that use this functionality",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-5408"
        },
        {
          "Reference": "CVE-2017-17704",
          "Description": "messages for a door-unlocking product use a fixed IV in CBC mode, which is the same after each restart",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-17704"
        },
        {
          "Reference": "CVE-2017-11133",
          "Description": "application uses AES in CBC mode, but the pseudo-random secret and IV are generated using math.random, which is not cryptographically strong.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-11133"
        },
        {
          "Reference": "CVE-2007-3528",
          "Description": "Blowfish-CBC implementation constructs an IV where each byte is calculated modulo 8 instead of modulo 256, resulting in less than 12 bits for the effective IV length, and less than 4096 possible IV values.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3528"
        }
      ],
      "FunctionalAreas": [
        "Cryptography"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1209",
      "Name": "Failure to Disable Reserved Bits",
      "Abstraction": "Base",
      "Description": "The reserved bits in a hardware design are not disabled prior to production. Typically, reserved bits are used for future capabilities and should not support any functional logic in the design.   However, designers might covertly use these bits to debug or further develop new capabilities in production hardware. Adversaries with access to these bits will write to them in hopes of compromising hardware state.",
      "ExtendedDescription": "\n\nReserved bits are labeled as such so they can be allocated for a later purpose. They are not to do anything in the current design. However, designers might want to use these bits to debug or control/configure a future capability to help minimize time to market (TTM). If the logic being controlled by these bits is still enabled in production, an adversary could use the logic to induce unwanted/unsupported behavior in the hardware.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "121",
      "Name": "Stack-based Buffer Overflow",
      "Abstraction": "Variant",
      "Description": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
      "BackgroundDetails": [
        "There are generally several security-critical data on an execution stack that can lead to arbitrary code execution. The most prominent is the stored return address, the memory address at which execution should continue once the current function is finished executing. The attacker can overwrite this value with some memory address to which the attacker also has write access, into which they place arbitrary code to be run with the full privileges of the vulnerable program. Alternately, the attacker can supply the address of an important call, for instance the POSIX system() call, leaving arguments to the call on the stack. This is often called a return into libc exploit, since the attacker generally forces the program to jump at return time into an interesting routine in the C standard library (libc). Other important data commonly on the stack include the stack pointer and frame pointer, two values that indicate offsets for computing memory addresses. Modifying those values can often be leveraged into a \"write-what-where\" condition."
      ],
      "AlternateTerms": [
        {
          "Term": "Stack Overflow",
          "Description": "\"Stack Overflow\" is often used to mean the same thing as stack-based buffer overflow, however it is also used on occasion to mean stack exhaustion, usually a result from an excessively recursive function call. Due to the ambiguity of the term, use of stack overflow to describe either circumstance is discouraged."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-35395",
          "Description": "Stack-based buffer overflows in SFK for wifi chipset used for IoT/embedded devices, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-35395"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "122",
      "Name": "Heap-based Buffer Overflow",
      "Abstraction": "Variant",
      "Description": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-43537",
          "Description": "Chain: in a web browser, an unsigned 64-bit integer is forcibly cast to a 32-bit integer (CWE-681) and potentially leading to an integer overflow (CWE-190). If an integer overflow occurs, this can cause heap memory corruption (CWE-122)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-43537"
        },
        {
          "Reference": "CVE-2007-4268",
          "Description": "Chain: integer signedness error (CWE-195) passes signed comparison, leading to heap overflow (CWE-122)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4268"
        },
        {
          "Reference": "CVE-2009-2523",
          "Description": "Chain: product does not handle when an input string is not NULL terminated (CWE-170), leading to buffer over-read (CWE-125) or heap-based buffer overflow (CWE-122).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2523"
        },
        {
          "Reference": "CVE-2021-29529",
          "Description": "Chain: machine-learning product can have a heap-based buffer overflow (CWE-122) when some integer-oriented bounds are calculated by using ceiling() and floor() on floating point values (CWE-1339)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-29529"
        },
        {
          "Reference": "CVE-2010-1866",
          "Description": "Chain: integer overflow (CWE-190) causes a negative signed value, which later bypasses a maximum-only check (CWE-839), leading to heap-based buffer overflow (CWE-122).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-1866"
        }
      ],
      "AffectedResources": [
        "Memory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1220",
      "Name": "Insufficient Granularity of Access Control",
      "Abstraction": "Base",
      "Description": "The product implements access controls via a policy or other feature with the intention to disable or restrict accesses (reads and/or writes) to assets in a system from untrusted agents. However, implemented access controls lack required granularity, which renders the control policy too broad because it allows accesses from unauthorized agents to the security-sensitive assets.",
      "ExtendedDescription": "\n\nIntegrated circuits and hardware engines can expose accesses to assets (device configuration, keys, etc.) to trusted firmware or a software module (commonly set by BIOS/bootloader). This access is typically access-controlled. Upon a power reset, the hardware or system usually starts with default values in registers, and the trusted firmware (Boot firmware) configures the necessary access-control protection.\n\n\nA common weakness that can exist in such protection schemes is that access controls or policies are not granular enough. This condition allows agents beyond trusted agents to access assets and could lead to a loss of functionality or the ability to set up the device securely. This further results in security risks from leaked, sensitive, key material to modification of device configuration.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-24985",
          "Description": "A form hosting website only checks the session authentication status for a single form, making it possible to bypass authentication when there are multiple forms",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-24985"
        },
        {
          "Reference": "CVE-2021-36934",
          "Description": "An operating system has an overly permission Access Control List onsome system files, including those related to user passwords",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-36934"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1221",
      "Name": "Incorrect Register Defaults or Module Parameters",
      "Abstraction": "Base",
      "Description": "Hardware description language code incorrectly defines register defaults or hardware Intellectual Property (IP) parameters to insecure values.",
      "ExtendedDescription": "\n\nIntegrated circuits and hardware IP software programmable controls and settings are commonly stored in register circuits. These register contents have to be initialized at hardware reset to defined default values that are hard coded in the hardware description language (HDL) code of the hardware unit. Hardware descriptive languages also support definition of parameter variables, which can be defined in code during instantiation of the hardware IP module. Such parameters are generally used to configure a specific instance of a hardware IP in the design.\n\n\nThe system security settings of a hardware design can be affected by incorrectly defined default values or IP parameters. The hardware IP would be in an insecure state at power reset, and this can be exposed or exploited by untrusted software running on the system. Both register defaults and parameters are hardcoded values, which cannot be changed using software or firmware patches but must be changed in hardware silicon. Thus, such security issues are considerably more difficult to address later in the lifecycle. Hardware designs can have a large number of such parameters and register defaults settings, and it is important to have design tool support to check these settings in an automated way and be able to identify which settings are security sensitive.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1222",
      "Name": "Insufficient Granularity of Address Regions Protected by Register Locks",
      "Abstraction": "Variant",
      "Description": "The product defines a large address region protected from modification by the same register lock control bit. This results in a conflict between the functional requirement that some addresses need to be writable by software during operation and the security requirement that the system configuration lock bit must be set during the boot process.",
      "ExtendedDescription": "\n\nIntegrated circuits and hardware IPs can expose the device configuration controls that need to be programmed after device power reset by a trusted firmware or software module (commonly set by BIOS/bootloader) and then locked from any further modification. In hardware design, this is commonly implemented using a programmable lock bit which enables/disables writing to a protected set of registers or address regions. When the programmable lock bit is set, the relevant address region can be implemented as a hardcoded value in hardware logic that cannot be changed later.\n\n\nA problem can arise wherein the protected region definition is not granular enough. After the programmable lock bit has been set, then this new functionality cannot be implemented without change to the hardware design.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1223",
      "Name": "Race Condition for Write-Once Attributes",
      "Abstraction": "Base",
      "Description": "A write-once register in hardware design is programmable by an untrusted software component earlier than the trusted software component, resulting in a race condition issue.",
      "ExtendedDescription": "\n\nIntegrated circuits and hardware IP software programmable controls and settings are commonly stored in register circuits. These register contents have to be initialized at hardware reset to defined default values that are hard coded in the hardware description language (HDL) code of the hardware unit. A common security protection method used to protect register settings from modification by software is to make them write-once. This means the hardware implementation only allows writing to such registers once, and they become read-only after having been written once by software. This is useful to allow initial boot software to configure systems settings to secure values while blocking runtime software from modifying such hardware settings.\n\n\nImplementation issues in hardware design of such controls can expose such registers to a race condition security flaw. For example, consider a hardware design that has two different software/firmware modules executing in parallel. One module is trusted (module A) and another is untrusted (module B). In this design it could be possible for Module B to send write cycles to the write-once register before Module A. Since the field is write-once the programmed value from Module A will be ignored and the pre-empted value programmed by Module B will be used by hardware.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1224",
      "Name": "Improper Restriction of Write-Once Bit Fields",
      "Abstraction": "Base",
      "Description": "The hardware design control register \"sticky bits\" or write-once bit fields are improperly implemented, such that they can be reprogrammed by software.",
      "ExtendedDescription": "\n\nIntegrated circuits and hardware IP software programmable controls and settings are commonly stored in register circuits. These register contents have to be initialized at hardware reset to define default values that are hard coded in the hardware description language (HDL) code of the hardware unit. A common security protection method used to protect register settings from modification by software is to make the settings write-once or \"sticky.\" This allows writing to such registers only once, whereupon they become read-only. This is useful to allow initial boot software to configure systems settings to secure values while blocking runtime software from modifying such hardware settings.\n\n\nFailure to implement write-once restrictions in hardware design can expose such registers to being re-programmed by software and written multiple times. For example, write-once fields could be implemented to only be write-protected if they have been set to value \"1\", wherein they would work as \"write-1-once\" and not \"write-once\".\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1229",
      "Name": "Creation of Emergent Resource",
      "Abstraction": "Class",
      "Description": "The product manages resources or behaves in a way that indirectly creates a new, distinct resource that can be used by attackers in violation of the intended policy.",
      "ExtendedDescription": "\n\nA product is only expected to behave in a way that was specifically intended by the developer. Resource allocation and management is expected to be performed explicitly by the associated code. However, in systems with complex behavior, the product might indirectly produce new kinds of resources that were never intended in the original design. For example, a covert channel is a resource that was never explicitly intended by the developer, but it is useful to attackers. \"Parasitic computing,\" while not necessarily malicious in nature, effectively tricks a product into performing unintended computations on behalf of another party.\n",
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "123",
      "Name": "Write-what-where Condition",
      "Abstraction": "Base",
      "Description": "Any condition where the attacker has the ability to write an arbitrary value to an arbitrary location, often as the result of a buffer overflow.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-21668",
          "Description": "Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-21668"
        },
        {
          "Reference": "CVE-2022-0545",
          "Description": "Chain: 3D renderer has an integer overflow (CWE-190) leading to write-what-where condition (CWE-123) using a crafted image.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-0545"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1230",
      "Name": "Exposure of Sensitive Information Through Metadata",
      "Abstraction": "Base",
      "Description": "The product prevents direct access to a resource containing sensitive information, but it does not sufficiently limit access to metadata that is derived from the original, sensitive information.",
      "ExtendedDescription": "\n\nDevelopers might correctly prevent unauthorized access to a database or other resource containing sensitive information, but they might not consider that portions of the original information might also be recorded in metadata, search indices, statistical reports, or other resources. If these resources are not also restricted, then attackers might be able to extract some or all of the original information, or otherwise infer some details. For example, an attacker could specify search terms that are known to be unique to a particular person, or view metadata such as activity or creation dates in order to identify usage patterns.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1231",
      "Name": "Improper Prevention of Lock Bit Modification",
      "Abstraction": "Base",
      "Description": "The product uses a trusted lock bit for restricting access to registers, address regions, or other resources, but the product does not prevent the value of the lock bit from being modified after it has been set.",
      "ExtendedDescription": "\n\nIn integrated circuits and hardware intellectual property (IP) cores, device configuration controls are commonly programmed after a device power reset by a trusted firmware or software module (e.g., BIOS/bootloader) and then locked from any further modification.\n\n\nThis behavior is commonly implemented using a trusted lock bit. When set, the lock bit disables writes to a protected set of registers or address regions. Design or coding errors in the implementation of the lock bit protection feature may allow the lock bit to be modified or cleared by software after it has been set. Attackers might be able to unlock the system and features that the bit is intended to protect.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2017-6283",
          "Description": "chip reset clears critical read/write lock permissions for RSA function",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-6283"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1232",
      "Name": "Improper Lock Behavior After Power State Transition",
      "Abstraction": "Base",
      "Description": "Register lock bit protection disables changes to system configuration once the bit is set. Some of the protected registers or lock bits become programmable after power state transitions (e.g., Entry and wake from low power sleep modes) causing the system configuration to be changeable.",
      "ExtendedDescription": "\n\nDevices may allow device configuration controls which need to be programmed after device power reset via a trusted firmware or software module (commonly set by BIOS/bootloader) and then locked from any further modification. This action is commonly implemented using a programmable lock bit, which, when set, disables writes to a protected set of registers or address regions.\n\n\nAfter a power state transition, the lock bit is set to unlocked. Some common weaknesses that can exist in such a protection scheme are that the lock gets cleared, the values of the protected registers get reset, or the lock become programmable.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1233",
      "Name": "Security-Sensitive Hardware Controls with Missing Lock Bit Protection",
      "Abstraction": "Base",
      "Description": "The product uses a register lock bit protection mechanism, but it does not ensure that the lock bit prevents modification of system registers or controls that perform changes to important hardware system configuration.",
      "ExtendedDescription": "\n\nIntegrated circuits and hardware intellectual properties (IPs) might provide device configuration controls that need to be programmed after device power reset by a trusted firmware or software module, commonly set by BIOS/bootloader. After reset, there can be an expectation that the controls cannot be used to perform any further modification. This behavior is commonly implemented using a trusted lock bit, which can be set to disable writes to a protected set of registers or address regions. The lock protection is intended to prevent modification of certain system configuration (e.g., memory/memory protection unit configuration).\n\n\nHowever, if the lock bit does not effectively write-protect all system registers or controls that could modify the protected system configuration, then an adversary may be able to use software to access the registers/controls and modify the protected hardware configuration.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2018-9085",
          "Description": "Certain servers leave a write protection lock bit unset after boot, potentially allowing modification of parts of flash memory.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-9085"
        },
        {
          "Reference": "CVE-2014-8273",
          "Description": "Chain: chipset has a race condition (CWE-362) between when an interrupt handler detects an attempt to write-enable the BIOS (in violation of the lock bit), and when the handler resets the write-enable bit back to 0, allowing attackers to issue BIOS writes during the timing window [REF-1237].",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-8273"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1234",
      "Name": "Hardware Internal or Debug Modes Allow Override of Locks",
      "Abstraction": "Base",
      "Description": "System configuration protection may be bypassed during debug mode.",
      "ExtendedDescription": "\n\nDevice configuration controls are commonly programmed after a device power reset by a trusted firmware or software module (e.g., BIOS/bootloader) and then locked from any further modification. This is commonly implemented using a trusted lock bit, which when set, disables writes to a protected set of registers or address regions. The lock protection is intended to prevent modification of certain system configuration (e.g., memory/memory protection unit configuration). If debug features supported by hardware or internal modes/system states are supported in the hardware design, modification of the lock protection may be allowed allowing access and modification of configuration information.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1235",
      "Name": "Incorrect Use of Autoboxing and Unboxing for Performance Critical Operations",
      "Abstraction": "Base",
      "Description": "The code uses boxed primitives, which may introduce inefficiencies into performance-critical operations.",
      "ExtendedDescription": "\n\nLanguages such as Java and C# support automatic conversion through their respective compilers from primitive types into objects of the corresponding wrapper classes, and vice versa. For example, a compiler might convert an int to Integer (called autoboxing) or an Integer to int (called unboxing). This eliminates forcing the programmer to perform these conversions manually, which makes the code cleaner.\n\n\nHowever, this feature comes at a cost of performance and can lead to resource exhaustion and impact availability when used with generic collections. Therefore, they should not be used for scientific computing or other performance critical operations. They are only suited to support \"impedance mismatch\" between reference types and primitives.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1236",
      "Name": "Improper Neutralization of Formula Elements in a CSV File",
      "Abstraction": "Base",
      "Description": "The product saves user-provided information into a Comma-Separated Value (CSV) file, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as a command when the file is opened by a spreadsheet product.",
      "ExtendedDescription": "User-provided data is often saved to traditional databases. This data can be exported to a CSV file, which allows users to read the data using spreadsheet software such as Excel, Numbers, or Calc. This software interprets entries beginning with '=' as formulas, which are then executed by the spreadsheet software. The software's formula language often allows methods to access hyperlinks or the local command line, and frequently allows enough characters to invoke an entire script. Attackers can populate data fields which, when saved to a CSV file, may attempt information exfiltration or other malicious activity when automatically executed by the spreadsheet software.",
      "AlternateTerms": [
        {
          "Term": "CSV Injection"
        },
        {
          "Term": "Formula Injection"
        },
        {
          "Term": "Excel Macro Injection"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-12134",
          "Description": "Low privileged user can trigger CSV injection through a contact form field value",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-12134"
        },
        {
          "Reference": "CVE-2019-4521",
          "Description": "Cloud management product allows arbitrary command execution via CSV injection",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-4521"
        },
        {
          "Reference": "CVE-2019-17661",
          "Description": "CSV injection in content management system via formula code in a first or last name",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-17661"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "1239",
      "Name": "Improper Zeroization of Hardware Register",
      "Abstraction": "Variant",
      "Description": "The hardware product does not properly clear sensitive information from built-in registers when the user of the hardware block changes.",
      "ExtendedDescription": "Hardware logic operates on data stored in registers local to the hardware block. Most hardware IPs, including cryptographic accelerators, rely on registers to buffer I/O, store intermediate values, and interface with software. The result of this is that sensitive information, such as passwords or encryption keys, can exist in locations not transparent to the user of the hardware logic. When a different entity obtains access to the IP due to a change in operating mode or conditions, the new entity can extract information belonging to the previous user if no mechanisms are in place to clear register contents. It is important to clear information stored in the hardware if a physical attack on the product is detected, or if the user of the hardware block changes. The process of clearing register contents in a hardware IP is referred to as zeroization in standards for cryptographic hardware modules such as FIPS-140-2 [REF-267].",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "124",
      "Name": "Buffer Underwrite ('Buffer Underflow')",
      "Abstraction": "Base",
      "Description": "The product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
      "ExtendedDescription": "This typically occurs when a pointer or its index is decremented to a position before the buffer, when pointer arithmetic results in a position before the beginning of the valid memory location, or when a negative index is used.",
      "AlternateTerms": [
        {
          "Term": "buffer underrun",
          "Description": "Some prominent vendors and researchers use the term \"buffer underrun\". \"Buffer underflow\" is more commonly used, although both terms are also sometimes used to describe a buffer under-read (CWE-127)."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-24018",
          "Description": "buffer underwrite in firmware verification routine allows code execution via a crafted firmware image",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-24018"
        },
        {
          "Reference": "CVE-2002-2227",
          "Description": "Unchecked length of SSLv2 challenge value leads to buffer underflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2227"
        },
        {
          "Reference": "CVE-2007-4580",
          "Description": "Buffer underflow from a small size value with a large buffer (length parameter inconsistency, CWE-130)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4580"
        },
        {
          "Reference": "CVE-2007-1584",
          "Description": "Buffer underflow from an all-whitespace string, which causes a counter to be decremented before the buffer while looking for a non-whitespace character.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1584"
        },
        {
          "Reference": "CVE-2007-0886",
          "Description": "Buffer underflow resultant from encoded data that triggers an integer overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-0886"
        },
        {
          "Reference": "CVE-2006-6171",
          "Description": "Product sets an incorrect buffer size limit, leading to \"off-by-two\" buffer underflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6171"
        },
        {
          "Reference": "CVE-2006-4024",
          "Description": "Negative value is used in a memcpy() operation, leading to buffer underflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4024"
        },
        {
          "Reference": "CVE-2004-2620",
          "Description": "Buffer underflow due to mishandled special characters",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2620"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1240",
      "Name": "Use of a Cryptographic Primitive with a Risky Implementation",
      "Abstraction": "Base",
      "Description": "To fulfill the need for a cryptographic primitive, the product implements a cryptographic algorithm using a non-standard, unproven, or disallowed/non-compliant cryptographic implementation.",
      "ExtendedDescription": "\n\nCryptographic protocols and systems depend on cryptographic primitives (and associated algorithms) as their basic building blocks. Some common examples of primitives are digital signatures, one-way hash functions, ciphers, and public key cryptography; however, the notion of \"primitive\" can vary depending on point of view. See \"Terminology Notes\" for further explanation of some concepts.\n\n\nCryptographic primitives are defined to accomplish one very specific task in a precisely defined and mathematically reliable fashion. For example, suppose that for a specific cryptographic primitive (such as an encryption routine), the consensus is that the primitive can only be broken after trying out N different inputs (where the larger the value of N, the stronger the cryptography). For an encryption scheme like AES-256, one would expect N to be so large as to be infeasible to execute in a reasonable amount of time.\n\n\nIf a vulnerability is ever found that shows that one can break a cryptographic primitive in significantly less than the expected number of attempts, then that primitive is considered weakened (or sometimes in extreme cases, colloquially it is \"broken\"). As a result, anything using this cryptographic primitive would now be considered insecure or risky. Thus, even breaking or weakening a seemingly small cryptographic primitive has the potential to render the whole system vulnerable, due to its reliance on the primitive. A historical example can be found in TLS when using DES. One would colloquially call DES the cryptographic primitive for transport encryption in this version of TLS. In the past, DES was considered strong, because no weaknesses were found in it; importantly, DES has a key length of 56 bits. Trying N=2^56 keys was considered impractical for most actors. Unfortunately, attacking a system with 56-bit keys is now practical via brute force, which makes defeating DES encryption practical. It is now practical for an adversary to read any information sent under this version of TLS and use this information to attack the system. As a result, it can be claimed that this use of TLS is weak, and that any system depending on TLS with DES could potentially render the entire system vulnerable to attack.\n\n\nCryptographic primitives and associated algorithms are only considered safe after extensive research and review from experienced cryptographers from academia, industry, and government entities looking for any possible flaws. Furthermore, cryptographic primitives and associated algorithms are frequently reevaluated for safety when new mathematical and attack techniques are discovered. As a result and over time, even well-known cryptographic primitives can lose their compliance status with the discovery of novel attacks that might either defeat the algorithm or reduce its robustness significantly.\n\n\nIf ad-hoc cryptographic primitives are implemented, it is almost certain that the implementation will be vulnerable to attacks that are well understood by cryptographers, resulting in the exposure of sensitive information and other consequences.\n\n\nThis weakness is even more difficult to manage for hardware-implemented deployment of cryptographic algorithms. First, because hardware is not patchable as easily as software, any flaw discovered after release and production typically cannot be fixed without a recall of the product. Secondly, the hardware product is often expected to work for years, during which time computation power available to the attacker only increases. Therefore, for hardware implementations of cryptographic primitives, it is absolutely essential that only strong, proven cryptographic primitives are used.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-4778",
          "Description": "software uses MD5, which is less safe than the default SHA-256 used by related products",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-4778"
        },
        {
          "Reference": "CVE-2005-2946",
          "Description": "Default configuration of product uses MD5 instead of stronger algorithms that are available, simplifying forgery of certificates.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2946"
        },
        {
          "Reference": "CVE-2019-3907",
          "Description": "identity card uses MD5 hash of a salt and password",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-3907"
        },
        {
          "Reference": "CVE-2021-34687",
          "Description": "personal key is transmitted over the network using a substitution cipher",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-34687"
        },
        {
          "Reference": "CVE-2020-14254",
          "Description": "product does not disable TLS-RSA cipher suites, allowing decryption of traffic if TLS 2.0 and secure ciphers are not enabled.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-14254"
        },
        {
          "Reference": "CVE-2019-1543",
          "Description": "SSL/TLS library generates 16-byte nonces but reduces them to 12 byte nonces for the ChaCha20-Poly1305 cipher, converting them in a way that violates the cipher's requirements for unique nonces.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-1543"
        },
        {
          "Reference": "CVE-2017-9267",
          "Description": "LDAP interface allows use of weak ciphers",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-9267"
        },
        {
          "Reference": "CVE-2017-7971",
          "Description": "SCADA product allows \"use of outdated cipher suites\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-7971"
        },
        {
          "Reference": "CVE-2020-6616",
          "Description": "Chip implementing Bluetooth uses a low-entropy PRNG instead of a hardware RNG, allowing spoofing.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-6616"
        },
        {
          "Reference": "CVE-2019-1715",
          "Description": "security product has insufficient entropy in the DRBG, allowing collisions and private key discovery",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-1715"
        },
        {
          "Reference": "CVE-2014-4192",
          "Description": "Dual_EC_DRBG implementation in RSA toolkit does not correctly handle certain byte requests, simplifying plaintext recovery",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-4192"
        },
        {
          "Reference": "CVE-2007-6755",
          "Description": "Recommendation for Dual_EC_DRBG algorithm contains point Q constants that could simplify decryption",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-6755"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1241",
      "Name": "Use of Predictable Algorithm in Random Number Generator",
      "Abstraction": "Base",
      "Description": "The device uses an algorithm that is predictable and generates a pseudo-random number.",
      "ExtendedDescription": "\n\nPseudo-random number generator algorithms are predictable because their registers have a finite number of possible states, which eventually lead to repeating patterns. As a result, pseudo-random number generators (PRNGs) can compromise their randomness or expose their internal state to various attacks, such as reverse engineering or tampering. It is highly recommended to use hardware-based true random number generators (TRNGs) to ensure the security of encryption schemes. TRNGs generate unpredictable, unbiased, and independent random numbers because they employ physical phenomena, e.g., electrical noise, as sources to generate random numbers.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-3692",
          "Description": "PHP framework uses mt_rand() function (Marsenne Twister) when generating tokens",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-3692"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1242",
      "Name": "Inclusion of Undocumented Features or Chicken Bits",
      "Abstraction": "Base",
      "Description": "The device includes chicken bits or undocumented features that can create entry points for unauthorized actors.",
      "ExtendedDescription": "\n\nA common design practice is to use undocumented bits on a device that can be used to disable certain functional security features. These bits are commonly referred to as \"chicken bits\". They can facilitate quick identification and isolation of faulty components, features that negatively affect performance, or features that do not provide the required controllability for debug and test. Another way to achieve this is through implementation of undocumented features. An attacker might exploit these interfaces for unauthorized access.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1243",
      "Name": "Sensitive Non-Volatile Information Not Protected During Debug",
      "Abstraction": "Base",
      "Description": "Access to security-sensitive information stored in fuses is not limited during debug.",
      "ExtendedDescription": "\n\nSeveral security-sensitive values are programmed into fuses to be used during early-boot flows or later at runtime. Examples of these security-sensitive values include root keys, encryption keys, manufacturing-specific information, chip-manufacturer-specific information, and original-equipment-manufacturer (OEM) data. After the chip is powered on, these values are sensed from fuses and stored in temporary locations such as registers and local memories. These locations are typically access-control protected from untrusted agents capable of accessing them. Even to trusted agents, only read-access is provided. However, these locations are not blocked during debug operations, allowing a user to access this sensitive information.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1244",
      "Name": "Internal Asset Exposed to Unsafe Debug Access Level or State",
      "Abstraction": "Base",
      "Description": "The product uses physical debug or test\n        interfaces with support for multiple access levels, but it\n        assigns the wrong debug access level to an internal asset,\n        providing unintended access to the asset from untrusted debug\n        agents.",
      "ExtendedDescription": "\n\nDebug authorization can have multiple levels of access, defined such that different system internal assets are accessible based on the current authorized debug level. Other than debugger authentication (e.g., using passwords or challenges), the authorization can also be based on the system state or boot stage. For example, full system debug access might only be allowed early in boot after a system reset to ensure that previous session data is not accessible to the authenticated debugger.\n\n\nIf this protection mechanism does not ensure that internal assets have the correct debug access level during each boot stage or change in system state, an attacker could obtain sensitive information from the internal asset using a debugger.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-18827",
          "Description": "After ROM code execution, JTAG access is disabled. But before the ROM code is executed, JTAG access is possible, allowing a user full system access. This allows a user to modify the boot flow and successfully bypass the secure-boot process.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-18827"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1245",
      "Name": "Improper Finite State Machines (FSMs) in Hardware Logic",
      "Abstraction": "Base",
      "Description": "Faulty finite state machines (FSMs) in the hardware logic allow an attacker to put the system in an undefined state, to cause a denial of service (DoS) or gain privileges on the victim's system.",
      "ExtendedDescription": "\n\nThe functionality and security of the system heavily depend on the implementation of FSMs. FSMs can be used to indicate the current security state of the system. Lots of secure data operations and data transfers rely on the state reported by the FSM. Faulty FSM designs that do not account for all states, either through undefined states (left as don't cares) or through incorrect implementation, might lead an attacker to drive the system into an unstable state from which the system cannot recover without a reset, thus causing a DoS. Depending on what the FSM is used for, an attacker might also gain additional privileges to launch further attacks and compromise the security guarantees.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1246",
      "Name": "Improper Write Handling in Limited-write Non-Volatile Memories",
      "Abstraction": "Base",
      "Description": "The product does not implement or incorrectly implements wear leveling operations in limited-write non-volatile memories.",
      "ExtendedDescription": "\n\nNon-volatile memories such as NAND Flash, EEPROM, etc. have individually erasable segments, each of which can be put through a limited number of program/erase or write cycles. For example, the device can only endure a limited number of writes, after which the device becomes unreliable. In order to wear out the cells in a uniform manner, non-volatile memory and storage products based on the above-mentioned technologies implement a technique called wear leveling. Once a set threshold is reached, wear leveling maps writes of a logical block to a different physical block. This prevents a single physical block from prematurely failing due to a high concentration of writes. If wear leveling is improperly implemented, attackers may be able to programmatically cause the storage to become unreliable within a much shorter time than would normally be expected.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1247",
      "Name": "Improper Protection Against Voltage and Clock Glitches",
      "Abstraction": "Base",
      "Description": "The device does not contain or contains incorrectly implemented circuitry or sensors to detect and mitigate voltage and clock glitches and protect sensitive information or software contained on the device.",
      "ExtendedDescription": "\n\nA device might support features such as secure boot which are supplemented with hardware and firmware support. This involves establishing a chain of trust, starting with an immutable root of trust by checking the signature of the next stage (culminating with the OS and runtime software) against a golden value before transferring control. The intermediate stages typically set up the system in a secure state by configuring several access control settings. Similarly, security logic for exercising a debug or testing interface may be implemented in hardware, firmware, or both. A device needs to guard against fault attacks such as voltage glitches and clock glitches that an attacker may employ in an attempt to compromise the system.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-17391",
          "Description": "Lack of anti-glitch protections allows an attacker to launch a physical attack to bypass the secure boot and read protected eFuses.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-17391"
        },
        {
          "Reference": "CVE-2021-33478",
          "Description": "IP communication firmware allows access to a boot shell via certain impulses",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-33478"
        }
      ],
      "FunctionalAreas": [
        "Power",
        "Clock"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1248",
      "Name": "Semiconductor Defects in Hardware Logic with Security-Sensitive Implications",
      "Abstraction": "Base",
      "Description": "The security-sensitive hardware module contains semiconductor defects.",
      "ExtendedDescription": "\n\nA semiconductor device can fail for various reasons. While some are manufacturing and packaging defects, the rest are due to prolonged use or usage under extreme conditions. Some mechanisms that lead to semiconductor defects include encapsulation failure, die-attach failure, wire-bond failure, bulk-silicon defects, oxide-layer faults, aluminum-metal faults (including electromigration, corrosion of aluminum, etc.), and thermal/electrical stress. These defects manifest as faults on chip-internal signals or registers, have the effect of inputs, outputs, or intermediate signals being always 0 or always 1, and do not switch as expected. If such faults occur in security-sensitive hardware modules, the security objectives of the hardware module may be compromised.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1249",
      "Name": "Application-Level Admin Tool with Inconsistent View of Underlying Operating System",
      "Abstraction": "Base",
      "Description": "The product provides an application for administrators to manage parts of the underlying operating system, but the application does not accurately identify all of the relevant entities or resources that exist in the OS; that is, the application's model of the OS's state is inconsistent with the OS's actual state.",
      "ExtendedDescription": "\n\nMany products provide web-based applications or other interfaces for managing the underlying operating system. This is common with cloud, network access devices, home networking, and other systems. When the management tool does not accurately represent what is in the OS - such as user accounts - then the administrator might not see suspicious activities that would be noticed otherwise.\n\n\nFor example, numerous systems utilize a web front-end for administrative control. They also offer the ability to add, alter, and drop users with various privileges as it relates to the functionality of the system. A potential architectural weakness may exist where the user information reflected in the web interface does not mirror the users in the underlying operating system. Many web UI or REST APIs use the underlying operating system for authentication; the system's logic may also track an additional set of user capabilities within configuration files and datasets for authorization capabilities. When there is a discrepancy between the user information in the UI or REST API's interface system and the underlying operating system's user listing, this may introduce a weakness into the system. For example, if an attacker compromises the OS and adds a new user account - a \"ghost\" account - then the attacker could escape detection if the management tool does not list the newly-added account.\n\n\nThis discrepancy could be exploited in several ways:\n\n\n  - A rogue admin could insert a new account into a system that will persist if they are terminated or wish to take action on a system that cannot be directly associated with them.\n\n  - An attacker can leverage a separate command injection attack available through the web interface to insert a ghost account with shell privileges such as ssh.\n\n  - An attacker can leverage existing web interface APIs, manipulated in such a way that a new user is inserted into the operating system, and the user web account is either partially created or not at all.\n\n  - An attacker could create an admin account which is viewable by an administrator, use this account to create the ghost account, delete logs and delete the first created admin account.\n\nMany of these attacker scenarios can be realized by leveraging separate vulnerabilities related to XSS, command injection, authentication bypass, or logic flaws on the various systems. ",
      "AlternateTerms": [
        {
          "Term": "Ghost in the Shell"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "125",
      "Name": "Out-of-bounds Read",
      "Abstraction": "Base",
      "Diagram": "/data/images/CWE-125-Diagram.png",
      "Description": "The product reads data past the end, or before the beginning, of the intended buffer.",
      "AlternateTerms": [
        {
          "Term": "OOB read",
          "Description": "Shorthand for \"Out of bounds\" read"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-11899",
          "Description": "Out-of-bounds read in IP stack used in embedded systems, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-11899"
        },
        {
          "Reference": "CVE-2014-0160",
          "Description": "Chain: \"Heartbleed\" bug receives an inconsistent length parameter (CWE-130) enabling an out-of-bounds read (CWE-126), returning memory that could include private cryptographic keys and other sensitive data.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-0160"
        },
        {
          "Reference": "CVE-2021-40985",
          "Description": "HTML conversion package has a buffer under-read, allowing a crash",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-40985"
        },
        {
          "Reference": "CVE-2018-10887",
          "Description": "Chain: unexpected sign extension (CWE-194) leads to integer overflow (CWE-190), causing an out-of-bounds read (CWE-125)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-10887"
        },
        {
          "Reference": "CVE-2009-2523",
          "Description": "Chain: product does not handle when an input string is not NULL terminated (CWE-170), leading to buffer over-read (CWE-125) or heap-based buffer overflow (CWE-122).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2523"
        },
        {
          "Reference": "CVE-2018-16069",
          "Description": "Chain: series of floating-point precision errors (CWE-1339) in a web browser rendering engine causes out-of-bounds read (CWE-125), giving access to cross-origin data",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-16069"
        },
        {
          "Reference": "CVE-2004-0112",
          "Description": "out-of-bounds read due to improper length check",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0112"
        },
        {
          "Reference": "CVE-2004-0183",
          "Description": "packet with large number of specified elements cause out-of-bounds read.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0183"
        },
        {
          "Reference": "CVE-2004-0221",
          "Description": "packet with large number of specified elements cause out-of-bounds read.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0221"
        },
        {
          "Reference": "CVE-2004-0184",
          "Description": "out-of-bounds read, resultant from integer underflow",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0184"
        },
        {
          "Reference": "CVE-2004-1940",
          "Description": "large length value causes out-of-bounds read",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1940"
        },
        {
          "Reference": "CVE-2004-0421",
          "Description": "malformed image causes out-of-bounds read",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0421"
        },
        {
          "Reference": "CVE-2008-4113",
          "Description": "OS kernel trusts userland-supplied length value, allowing reading of sensitive information",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4113"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "1250",
      "Name": "Improper Preservation of Consistency Between Independent Representations of Shared State",
      "Abstraction": "Base",
      "Description": "The product has or supports multiple distributed components or sub-systems that are each required to keep their own local copy of shared data - such as state or cache - but the product does not ensure that all local copies remain consistent with each other.",
      "ExtendedDescription": "\n\nIn highly distributed environments, or on systems with distinct physical components that operate independently, there is often a need for each component to store and update its own local copy of key data such as state or cache, so that all components have the same \"view\" of the overall system and operate in a coordinated fashion. For example, users of a social media service or a massively multiplayer online game might be using their own personal computers while also interacting with different physical hosts in a globally distributed service, but all participants must be able to have the same \"view\" of the world. Alternately, a processor's Memory Management Unit (MMU) might have \"shadow\" MMUs to distribute its workload, and all shadow MMUs are expected to have the same accessible ranges of memory.\n\n\nIn such environments, it becomes critical for the product to ensure that this \"shared state\" is consistently modified across all distributed systems. If state is not consistently maintained across all systems, then critical transactions might take place out of order, or some users might not get the same data as other users. When this inconsistency affects correctness of operations, it can introduce vulnerabilities in mechanisms that depend on consistent state.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1251",
      "Name": "Mirrored Regions with Different Values",
      "Abstraction": "Base",
      "Description": "The product's architecture mirrors regions without ensuring that their contents always stay in sync.",
      "ExtendedDescription": "\n\nHaving mirrored regions with different values might result in the exposure of sensitive information or possibly system compromise.\n\n\nIn the interest of increased performance, one might need to duplicate a resource. A cache memory is a common example of this concept, which keeps a \"local\" copy of a data element in the high speed cache memory. Unfortunately, this speed improvement comes with a downside, since the product needs to ensure that the local copy always mirrors the original copy truthfully. If they get out of sync, the computational result is no longer true.\n\n\nDuring hardware design, memory is not the only item which gets mirrored. There are many other entities that get mirrored, as well: registers, memory regions, and, in some cases, even whole computational units. For example, within a multi-core processor, if all memory accesses for each and every core goes through a single Memory-Management Unit (MMU) then the MMU will become a performance bottleneck. In such cases, duplicating local MMUs that will serve only a subset of the cores rather than all of them may resolve the performance issue. These local copies are also called \"shadow copies\" or \"mirrored copies.\"\n\n\nIf the original resource never changed, local duplicate copies getting out of sync would never be an issue. However, the values of the original copy will sometimes change. When the original copy changes, the mirrored copies must also change, and change fast.\n\n\nThis situation of shadow-copy-possibly-out-of-sync-with-original-copy might occur as a result of multiple scenarios, including the following: \n\n\n  - After the values in the original copy change, due to some reason the original copy does not send the \"update\" request to its shadow copies.\n\n  - After the values in the original copy change, the original copy dutifully sends the \"update\" request to its shadow copies, but due to some reason the shadow copy does not \"execute\" this update request.\n\n  - After the values in the original copy change, the original copy sends the \"update\" request to its shadow copies, and the shadow copy executes this update request faithfully. However, during the small time period when the original copy has \"new\" values and the shadow copy is still holding the \"old\" values, an attacker can exploit the old values. Then it becomes a race condition between the attacker and the update process of who can reach the target, shadow copy first, and, if the attacker reaches first, the attacker wins.\n\n  - The attacker might send a \"spoofed\" update request to the target shadow copy, pretending that this update request is coming from the original copy. This spoofed request might cause the targeted shadow copy to update its values to some attacker-friendly values, while the original copies remain unchanged by the attacker.\n\n  - Suppose a situation where the original copy has a system of reverting back to its original value if it does not hear back from all the shadow copies that such copies have successfully completed the update request. In such a case, an attack might occur as follows: (1) the original copy might send an update request; (2) the shadow copy updates it; (3) the shadow copy sends back the successful completion message; (4) through a separate issue, the attacker is able to intercept the shadow copy's completion message. In this case, the original copy thinks that the update did not succeed, hence it reverts to its original value. Now there is a situation where the original copy has the \"old\" value, and the shadow copy has the \"new\" value.\n\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1252",
      "Name": "CPU Hardware Not Configured to Support Exclusivity of Write and Execute Operations",
      "Abstraction": "Base",
      "Description": "The CPU is not configured to provide hardware support for exclusivity of write and execute operations on memory. This allows an attacker to execute data from all of memory.",
      "ExtendedDescription": "\n\nCPUs provide a special bit that supports exclusivity of write and execute operations. This bit is used to segregate areas of memory to either mark them as code (instructions, which can be executed) or data (which should not be executed). In this way, if a user can write to a region of memory, the user cannot execute from that region and vice versa. This exclusivity provided by special hardware bit is leveraged by the operating system to protect executable space. While this bit is available in most modern processors by default, in some CPUs the exclusivity is implemented via a memory-protection unit (MPU) and memory-management unit (MMU) in which memory regions can be carved out with exact read, write, and execute permissions. However, if the CPU does not have an MMU/MPU, then there is no write exclusivity. Without configuring exclusivity of operations via segregated areas of memory, an attacker may be able to inject malicious code onto memory and later execute it.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1253",
      "Name": "Incorrect Selection of Fuse Values",
      "Abstraction": "Base",
      "Description": "The logic level used to set a system to a secure state relies on a fuse being unblown. An attacker can set the system to an insecure state merely by blowing the fuse.",
      "ExtendedDescription": "\n\nFuses are often used to store secret data, including security configuration data. When not blown, a fuse is considered to store a logic 0, and, when blown, it indicates a logic 1. Fuses are generally considered to be one-directional, i.e., once blown to logic 1, it cannot be reset to logic 0. However, if the logic used to determine system-security state (by leveraging the values sensed from the fuses) uses negative logic, an attacker might blow the fuse and drive the system to an insecure state.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1254",
      "Name": "Incorrect Comparison Logic Granularity",
      "Abstraction": "Base",
      "Description": "The product's comparison logic is performed over a series of steps rather than across the entire string in one operation. If there is a comparison logic failure on one of these steps, the operation may be vulnerable to a timing attack that can result in the interception of the process for nefarious purposes.",
      "ExtendedDescription": "\n\nComparison logic is used to compare a variety of objects including passwords, Message Authentication Codes (MACs), and responses to verification challenges. When comparison logic is implemented at a finer granularity (e.g., byte-by-byte comparison) and breaks in the case of a comparison failure, an attacker can exploit this implementation to identify when exactly the failure occurred. With multiple attempts, the attacker may be able to guesses the correct password/response to challenge and elevate their privileges.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-10482",
          "Description": "Smartphone OS uses comparison functions that are not in constant time, allowing side channels",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-10482"
        },
        {
          "Reference": "CVE-2019-10071",
          "Description": "Java-oriented framework compares HMAC signatures using String.equals() instead of a constant-time algorithm, causing timing discrepancies",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-10071"
        },
        {
          "Reference": "CVE-2014-0984",
          "Description": "Password-checking function in router terminates validation of a password entry when it encounters the first incorrect character, which allows remote attackers to obtain passwords via a brute-force attack that relies on timing differences in responses to incorrect password guesses, aka a timing side-channel attack.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-0984"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1255",
      "Name": "Comparison Logic is Vulnerable to Power Side-Channel Attacks",
      "Abstraction": "Variant",
      "Description": "A device's real time power consumption may be monitored during security token evaluation and the information gleaned may be used to determine the value of the reference token.",
      "ExtendedDescription": "\n\nThe power consumed by a device may be instrumented and monitored in real time. If the algorithm for evaluating security tokens is not sufficiently robust, the power consumption may vary by token entry comparison against the reference value. Further, if retries are unlimited, the power difference between a \"good\" entry and a \"bad\" entry may be observed and used to determine whether each entry itself is correct thereby allowing unauthorized parties to calculate the reference value.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-12788",
          "Description": "CMAC verification vulnerable to timing and power attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-12788"
        }
      ],
      "FunctionalAreas": [
        "Power"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1256",
      "Name": "Improper Restriction of Software Interfaces to Hardware Features",
      "Abstraction": "Base",
      "Description": "The product provides software-controllable\n\t\t\tdevice functionality for capabilities such as power and\n\t\t\tclock management, but it does not properly limit\n\t\t\tfunctionality that can lead to modification of\n\t\t\thardware memory or register bits, or the ability to\n\t\t\tobserve physical side channels.",
      "ExtendedDescription": "\n\nIt is frequently assumed that physical attacks such as fault injection and side-channel analysis require an attacker to have physical access to the target device. This assumption may be false if the device has improperly secured power management features, or similar features. For mobile devices, minimizing power consumption is critical, but these devices run a wide variety of applications with different performance requirements. Software-controllable mechanisms to dynamically scale device voltage and frequency and monitor power consumption are common features in today's chipsets, but they also enable attackers to mount fault injection and side-channel attacks without having physical access to the device.\n\n\nFault injection attacks involve strategic manipulation of bits in a device to achieve a desired effect such as skipping an authentication step, elevating privileges, or altering the output of a cryptographic operation. Manipulation of the device clock and voltage supply is a well-known technique to inject faults and is cheap to implement with physical device access. Poorly protected power management features allow these attacks to be performed from software. Other features, such as the ability to write repeatedly to DRAM at a rapid rate from unprivileged software, can result in bit flips in other memory locations (Rowhammer, [REF-1083]).\n\n\nSide channel analysis requires gathering measurement traces of physical quantities such as power consumption. Modern processors often include power metering capabilities in the hardware itself (e.g., Intel RAPL) which if not adequately protected enable attackers to gather measurements necessary for performing side-channel attacks from software.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-11157",
          "Description": "Plundervolt: Improper conditions check in voltage settings for some Intel(R) Processors may allow a privileged user to potentially enable escalation of privilege and/or information disclosure via local access [REF-1081].",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-11157"
        },
        {
          "Reference": "CVE-2020-8694",
          "Description": "PLATYPUS Attack: Insufficient access control in the Linux kernel driver for some Intel processors allows information disclosure.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8694"
        },
        {
          "Reference": "CVE-2020-8695",
          "Description": "Observable discrepancy in the RAPL interface for some Intel processors allows information disclosure.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8695"
        },
        {
          "Reference": "CVE-2020-12912",
          "Description": "AMD extension to a Linux service does not require privileged access to the RAPL interface, allowing side-channel attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-12912"
        },
        {
          "Reference": "CVE-2015-0565",
          "Description": "NaCl in 2015 allowed the CLFLUSH instruction, making Rowhammer attacks possible.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2015-0565"
        }
      ],
      "FunctionalAreas": [
        "Power",
        "Clock"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1257",
      "Name": "Improper Access Control Applied to Mirrored or Aliased Memory Regions",
      "Abstraction": "Base",
      "Description": "Aliased or mirrored memory regions in hardware designs may have inconsistent read/write permissions enforced by the hardware. A possible result is that an untrusted agent is blocked from accessing a memory region but is not blocked from accessing the corresponding aliased memory region.\n\t\t\t",
      "ExtendedDescription": "\n\nHardware product designs often need to implement memory protection features that enable privileged software to define isolated memory regions and access control (read/write) policies. Isolated memory regions can be defined on different memory spaces in a design (e.g. system physical address, virtual address, memory mapped IO).\n\n\nEach memory cell should be mapped and assigned a system address that the core software can use to read/write to that memory. It is possible to map the same memory cell to multiple system addresses such that read/write to any of the aliased system addresses would be decoded to the same memory cell.\n\n\nThis is commonly done in hardware designs for redundancy and simplifying address decoding logic. If one of the memory regions is corrupted or faulty, then that hardware can switch to using the data in the mirrored memory region. Memory aliases can also be created in the system address map if the address decoder unit ignores higher order address bits when mapping a smaller address region into the full system address.\n\n\nA common security weakness that can exist in such memory mapping is that aliased memory regions could have different read/write access protections enforced by the hardware such that an untrusted agent is blocked from accessing a memory address but is not blocked from accessing the corresponding aliased memory address. Such inconsistency can then be used to bypass the access protection of the primary memory block and read or modify the protected memory.\n\n\nAn untrusted agent could also possibly create memory aliases in the system address map for malicious purposes if it is able to change the mapping of an address region or modify memory region sizes.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1258",
      "Name": "Exposure of Sensitive System Information Due to Uncleared Debug Information",
      "Abstraction": "Base",
      "Description": "The hardware does not fully clear security-sensitive values, such as keys and intermediate values in cryptographic operations, when debug mode is entered.",
      "ExtendedDescription": "\n\nSecurity sensitive values, keys, intermediate steps of cryptographic operations, etc. are stored in temporary registers in the hardware. If these values are not cleared when debug mode is entered they may be accessed by a debugger allowing sensitive information to be accessible by untrusted parties.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-33080",
          "Description": "Uncleared debug information in memory accelerator for SSD product exposes sensitive system information",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-33080"
        },
        {
          "Reference": "CVE-2022-31162",
          "Description": "Rust library leaks Oauth client details in application debug logs",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-31162"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1259",
      "Name": "Improper Restriction of Security Token Assignment",
      "Abstraction": "Base",
      "Description": "The System-On-A-Chip (SoC) implements a Security Token mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Tokens are improperly protected.",
      "ExtendedDescription": "Systems-On-A-Chip (Integrated circuits and hardware engines) implement Security Tokens to differentiate and identify which actions originated from which agent. These actions may be one of the directives: 'read', 'write', 'program', 'reset', 'fetch', 'compute', etc. Security Tokens are assigned to every agent in the System that is capable of generating an action or receiving an action from another agent. Multiple Security Tokens may be assigned to an agent and may be unique based on the agent's trust level or allowed privileges. Since the Security Tokens are integral for the maintenance of security in an SoC, they need to be protected properly. A common weakness afflicting Security Tokens is improperly restricting the assignment to trusted components. Consequently, an improperly protected Security Token may be able to be programmed by a malicious agent (i.e., the Security Token is mutable) to spoof the action as if it originated from a trusted agent.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "126",
      "Name": "Buffer Over-read",
      "Abstraction": "Variant",
      "Description": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
      "ExtendedDescription": "This typically occurs when the pointer or its index is incremented to a position beyond the bounds of the buffer or when pointer arithmetic results in a position outside of the valid memory location to name a few. This may result in exposure of sensitive information or possibly a crash.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-1733",
          "Description": "Text editor has out-of-bounds read past end of line while indenting C code",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-1733"
        },
        {
          "Reference": "CVE-2014-0160",
          "Description": "Chain: \"Heartbleed\" bug receives an inconsistent length parameter (CWE-130) enabling an out-of-bounds read (CWE-126), returning memory that could include private cryptographic keys and other sensitive data.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-0160"
        },
        {
          "Reference": "CVE-2009-2523",
          "Description": "Chain: product does not handle when an input string is not NULL terminated, leading to buffer over-read or heap-based buffer overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2523"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1260",
      "Name": "Improper Handling of Overlap Between Protected Memory Ranges",
      "Abstraction": "Base",
      "Description": "The product allows address regions to overlap, which can result in the bypassing of intended memory protection.",
      "ExtendedDescription": "\n\nIsolated memory regions and access control (read/write) policies are used by hardware to protect privileged software. Software components are often allowed to change or remap memory region definitions in order to enable flexible and dynamically changeable memory management by system software.\n\n\nIf a software component running at lower privilege can program a memory address region to overlap with other memory regions used by software running at higher privilege, privilege escalation may be available to attackers. The memory protection unit (MPU) logic can incorrectly handle such an address overlap and allow the lower-privilege software to read or write into the protected memory region, resulting in privilege escalation attack. An address overlap weakness can also be used to launch a denial of service attack on the higher-privilege software memory regions.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2008-7096",
          "Description": "virtualization product allows compromise of hardware product by accessing certain remapping registers.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-7096"
        },
        {
          "Reference": "[REF-1100]",
          "Description": "processor design flaw allows ring 0 code to access more privileged rings by causing a register window to overlap a range of protected system RAM [REF-1100]",
          "Link": "https://github.com/xoreaxeaxeax/sinkhole/blob/master/us-15-Domas-TheMemorySinkhole-wp.pdf"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1261",
      "Name": "Improper Handling of Single Event Upsets",
      "Abstraction": "Base",
      "Description": "The hardware logic does not effectively handle when single-event upsets (SEUs) occur.",
      "ExtendedDescription": "\n\nTechnology trends such as CMOS-transistor down-sizing, use of new materials, and system-on-chip architectures continue to increase the sensitivity of systems to soft errors. These errors are random, and their causes might be internal (e.g., interconnect coupling) or external (e.g., cosmic radiation). These soft errors are not permanent in nature and cause temporary bit flips known as single-event upsets (SEUs). SEUs are induced errors in circuits caused when charged particles lose energy by ionizing the medium through which they pass, leaving behind a wake of electron-hole pairs that cause temporary failures. If these failures occur in security-sensitive modules in a chip, it might compromise the security guarantees of the chip. For instance, these temporary failures could be bit flips that change the privilege of a regular user to root.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1262",
      "Name": "Improper Access Control for Register Interface",
      "Abstraction": "Base",
      "Description": "The product uses memory-mapped I/O registers that act as an interface to hardware functionality from software, but there is improper access control to those registers.",
      "ExtendedDescription": "\n\nSoftware commonly accesses peripherals in a System-on-Chip (SoC) or other device through a memory-mapped register interface. Malicious software could tamper with any security-critical hardware data that is accessible directly or indirectly through the register interface, which could lead to a loss of confidentiality and integrity.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2014-2915",
          "Description": "virtualization product does not restrict access to debug and other processor registers in the hardware, allowing a crash of the host or guest OS",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-2915"
        },
        {
          "Reference": "CVE-2021-3011",
          "Description": "virtual interrupt controller in a virtualization product allows crash of host by writing a certain invalid value to a register, which triggers a fatal error instead of returning an error code",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-3011"
        },
        {
          "Reference": "CVE-2020-12446",
          "Description": "Driver exposes access to Model Specific Register (MSR) registers, allowing admin privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-12446"
        },
        {
          "Reference": "CVE-2015-2150",
          "Description": "Virtualization product does not restrict access to PCI command registers, allowing host crash from the guest.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2015-2150"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1263",
      "Name": "Improper Physical Access Control",
      "Abstraction": "Class",
      "Description": "The product is designed with access restricted to certain information, but it does not sufficiently protect against an unauthorized actor with physical access to these areas.",
      "ExtendedDescription": "Sections of a product intended to have restricted access may be inadvertently or intentionally rendered accessible when the implemented physical protections are insufficient. The specific requirements around how robust the design of the physical protection mechanism needs to be depends on the type of product being protected. Selecting the correct physical protection mechanism and properly enforcing it through implementation and manufacturing are critical to the overall physical security of the product.",
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "1264",
      "Name": "Hardware Logic with Insecure De-Synchronization between Control and Data Channels",
      "Abstraction": "Base",
      "Description": "The hardware logic for error handling and security checks can incorrectly forward data before the security check is complete.",
      "ExtendedDescription": "\n\nMany high-performance on-chip bus protocols and processor data-paths employ separate channels for control and data to increase parallelism and maximize throughput. Bugs in the hardware logic that handle errors and security checks can make it possible for data to be forwarded before the completion of the security checks. If the data can propagate to a location in the hardware observable to an attacker, loss of data confidentiality can occur. 'Meltdown' is a concrete example of how de-synchronization between data and permissions checking logic can violate confidentiality requirements. Data loaded from a page marked as privileged was returned to the cpu regardless of current privilege level for performance reasons. The assumption was that the cpu could later remove all traces of this data during the handling of the illegal memory access exception, but this assumption was proven false as traces of the secret data were not removed from the microarchitectural state.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2017-5754",
          "Description": "Systems with microprocessors utilizing speculative execution and indirect branch prediction may allow unauthorized disclosure of information to an attacker with local user access via a side-channel analysis of the data cache.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-5754"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1265",
      "Name": "Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls",
      "Abstraction": "Base",
      "Description": "During execution of non-reentrant code, the product performs a call that unintentionally produces a nested invocation of the non-reentrant code.",
      "ExtendedDescription": "In a complex product, a single function call may lead to many different possible code paths, some of which may involve deeply nested calls. It may be difficult to foresee all possible code paths that could emanate from a given function call. In some systems, an external actor can manipulate inputs to the system and thereby achieve a wide range of possible control flows. This is frequently a concern in products that execute scripts from untrusted sources. Examples of such products are web browsers and PDF readers. A weakness is present when one of the possible code paths resulting from a function call alters program state that the original caller assumes to be unchanged during the call.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2014-1772",
          "Description": "In this vulnerability, by registering a malicious onerror handler, an adversary can produce unexpected re-entrance of a CDOMRange object. [REF-1098]",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-1772"
        },
        {
          "Reference": "CVE-2018-8174",
          "Description": "This CVE covers several vulnerable scenarios enabled by abuse of the Class_Terminate feature in Microsoft VBScript. In one scenario, Class_Terminate is used to produce an undesirable re-entrance of ScriptingDictionary during execution of that object's destructor. In another scenario, a vulnerable condition results from a recursive entrance of a property setter method. This recursive invocation produces a second, spurious call to the Release method of a reference-counted object, causing a UAF when that object is freed prematurely. This vulnerability pattern has been popularized as \"Double Kill\". [REF-1099]",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-8174"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1266",
      "Name": "Improper Scrubbing of Sensitive Data from Decommissioned Device",
      "Abstraction": "Base",
      "Description": "The product does not properly provide a capability for the product administrator to remove sensitive data at the time the product is decommissioned.  A scrubbing capability could be missing, insufficient, or incorrect.",
      "ExtendedDescription": "\n\nWhen a product is decommissioned - i.e., taken out of service - best practices or regulatory requirements may require the administrator to remove or overwrite sensitive data first, i.e. \"scrubbing.\" Improper scrubbing of sensitive data from a decommissioned device leaves that data vulnerable to acquisition by a malicious actor. Sensitive data may include, but is not limited to, device/manufacturer proprietary information, user/device credentials, network configurations, and other forms of sensitive data.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1267",
      "Name": "Policy Uses Obsolete Encoding",
      "Abstraction": "Base",
      "Description": "The product uses an obsolete encoding mechanism to implement access controls.",
      "ExtendedDescription": "\n\nWithin a System-On-a-Chip (SoC), various circuits and hardware engines generate transactions for the purpose of accessing (read/write) assets or performing various actions (e.g., reset, fetch, compute, etc.). Among various types of message information, a typical transaction is comprised of source identity (identifying the originator of the transaction) and a destination identity (routing the transaction to the respective entity). Sometimes the transactions are qualified with a Security Token. This Security Token helps the destination agent decide on the set of allowed actions (e.g., access to an asset for reads and writes). A policy encoder is used to map the bus transactions to Security Tokens that in turn are used as access-controls/protection mechanisms. A common weakness involves using an encoding which is no longer trusted, i.e., an obsolete encoding.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1268",
      "Name": "Policy Privileges are not Assigned Consistently Between Control and Data Agents",
      "Abstraction": "Base",
      "Description": "The product's hardware-enforced access control for a particular resource improperly accounts for privilege discrepancies between control and write policies.\n\t\t\t   ",
      "ExtendedDescription": "\n\nIntegrated circuits and hardware engines may provide access to resources (device-configuration, encryption keys, etc.) belonging to trusted firmware or software modules (commonly set by a BIOS or a bootloader). These accesses are typically controlled and limited by the hardware. Hardware design access control is sometimes implemented using a policy. A policy defines which entity or agent may or may not be allowed to perform an action. When a system implements multiple levels of policies, a control policy may allow direct access to a resource as well as changes to the policies themselves.\n\n\nResources that include agents in their control policy but not in their write policy could unintentionally allow an untrusted agent to insert itself in the write policy register. Inclusion in the write policy register could allow a malicious or misbehaving agent write access to resources. This action could result in security compromises including leaked information, leaked encryption keys, or modification of device configuration.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1269",
      "Name": "Product Released in Non-Release Configuration",
      "Abstraction": "Base",
      "Description": "The product released to market is released in pre-production or manufacturing configuration.",
      "ExtendedDescription": "\n\nProducts in the pre-production or manufacturing stages are configured to have many debug hooks and debug capabilities, including but not limited to:\n\n\n  - Ability to override/bypass various cryptographic checks (including authentication, authorization, and integrity)\n\n  - Ability to read/write/modify/dump internal state (including registers and memory)\n\n  - Ability to change system configurations\n\n  - Ability to run hidden or private commands that are not allowed during production (as they expose IP).\n\nThe above is by no means an exhaustive list, but it alludes to the greater capability and the greater state of vulnerability of a product during it's preproduction or manufacturing state.\n\nComplexity increases when multiple parties are involved in executing the tests before the final production version. For example, a chipmaker might fabricate a chip and run its own preproduction tests, following which the chip would be delivered to the Original Equipment Manufacturer (OEM), who would now run a second set of different preproduction tests on the same chip. Only after both of these sets of activities are complete, can the overall manufacturing phase be called \"complete\" and have the \"Manufacturing Complete\" fuse blown. However, if the OEM forgets to blow the Manufacturing Complete fuse, then the system remains in the manufacturing stage, rendering the system both exposed and vulnerable.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-13945",
          "Description": "Regarding SSA-686531, a hardware based manufacturing access on S7-1200 and S7-200 SMART has occurred. A vulnerability has been identified in SIMATIC S7-1200 CPU family (incl. SIPLUS variants) (All versions), SIMATIC S7-200 SMART CPU family (All versions). There is an access mode used during manufacturing of S7-1200 CPUs that allows additional diagnostic functionality. The security vulnerability could be exploited by an attacker with physical access to the UART interface during boot process. At the time of advisory publication, no public exploitation of this security vulnerability was known.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-13945"
        },
        {
          "Reference": "CVE-2018-4251",
          "Description": "Laptops with Intel chipsets were found to be running in Manufacturing Mode. After this information was reported to the OEM, the vulnerability (CVE-2018-4251) was patched disallowing access to the interface.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-4251"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "127",
      "Name": "Buffer Under-read",
      "Abstraction": "Variant",
      "Description": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations prior to the targeted buffer.",
      "ExtendedDescription": "This typically occurs when the pointer or its index is decremented to a position before the buffer, when pointer arithmetic results in a position before the beginning of the valid memory location, or when a negative index is used. This may result in exposure of sensitive information or possibly a crash.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-40985",
          "Description": "HTML conversion package has a buffer under-read, allowing a crash",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-40985"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1270",
      "Name": "Generation of Incorrect Security Tokens",
      "Abstraction": "Base",
      "Description": "The product implements a Security Token mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Tokens generated in the system are incorrect.",
      "ExtendedDescription": "\n\nSystems-On-a-Chip (SoC) (Integrated circuits and hardware engines) implement Security Tokens to differentiate and identify actions originated from various agents. These actions could be \"read\", \"write\", \"program\", \"reset\", \"fetch\", \"compute\", etc. Security Tokens are generated and assigned to every agent on the SoC that is either capable of generating an action or receiving an action from another agent. Every agent could be assigned a unique, Security Token based on its trust level or privileges. Incorrectly generated Security Tokens could result in the same token used for multiple agents or multiple tokens being used for the same agent. This condition could result in a Denial-of-Service (DoS) or the execution of an action that in turn could result in privilege escalation or unintended access.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1271",
      "Name": "Uninitialized Value on Reset for Registers Holding Security Settings",
      "Abstraction": "Base",
      "Description": "Security-critical logic is not set to a known value on reset.",
      "ExtendedDescription": "\n\nWhen the device is first brought out of reset, the state of registers will be indeterminate if they have not been initialized by the logic. Before the registers are initialized, there will be a window during which the device is in an insecure state and may be vulnerable to attack.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1272",
      "Name": "Sensitive Information Uncleared Before Debug/Power State Transition",
      "Abstraction": "Base",
      "Description": "The product performs a power or debug state transition, but it does not clear sensitive information that should no longer be accessible due to changes to information access restrictions.",
      "ExtendedDescription": "\n\nA device or system frequently employs many power and sleep states during its normal operation (e.g., normal power, additional power, low power, hibernate, deep sleep, etc.). A device also may be operating within a debug condition. State transitions can happen from one power or debug state to another. If there is information available in the previous state which should not be available in the next state and is not properly removed before the transition into the next state, sensitive information may leak from the system.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-12926",
          "Description": "Product software does not set a flag as per TPM specifications, thereby preventing a failed authorization attempt from being recorded after a loss of power.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-12926"
        }
      ],
      "FunctionalAreas": [
        "Power"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1273",
      "Name": "Device Unlock Credential Sharing",
      "Abstraction": "Base",
      "Description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.",
      "ExtendedDescription": "\n\n\"Unlocking a device\" often means activating certain unadvertised debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \"locked\" in the production part. Unless the device gets unlocked by supplying the proper credentials, the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are all employed by the same company, the risk of compromise of the credentials is greatly reduced. However, the risk is greater when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1274",
      "Name": "Improper Access Control for Volatile Memory Containing Boot Code",
      "Abstraction": "Base",
      "Description": "The product conducts a secure-boot process that transfers bootloader code from Non-Volatile Memory (NVM) into Volatile Memory (VM), but it does not have sufficient access control or other protections for the Volatile Memory.",
      "ExtendedDescription": "\n\nAdversaries could bypass the secure-boot process and execute their own untrusted, malicious boot code.\n\n\nAs a part of a secure-boot process, the read-only-memory (ROM) code for a System-on-Chip (SoC) or other system fetches bootloader code from Non-Volatile Memory (NVM) and stores the code in Volatile Memory (VM), such as dynamic, random-access memory (DRAM) or static, random-access memory (SRAM). The NVM is usually external to the SoC, while the VM is internal to the SoC. As the code is transferred from NVM to VM, it is authenticated by the SoC's ROM code.\n\n\nIf the volatile-memory-region protections or access controls are insufficient to prevent modifications from an adversary or untrusted agent, the secure boot may be bypassed or replaced with the execution of an adversary's code.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-2267",
          "Description": "Locked memory regions may be modified through other interfaces in a secure-boot-loader image due to improper access control.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-2267"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1275",
      "Name": "Sensitive Cookie with Improper SameSite Attribute",
      "Abstraction": "Variant",
      "Description": "The SameSite attribute for sensitive cookies is not set, or an insecure value is used.",
      "ExtendedDescription": "The SameSite attribute controls how cookies are sent for cross-domain requests. This attribute may have three values: 'Lax', 'Strict', or 'None'. If the 'None' value is used, a website may create a cross-domain POST HTTP request to another website, and the browser automatically adds cookies to this request. This may lead to Cross-Site-Request-Forgery (CSRF) attacks if there are no additional protections in place (such as Anti-CSRF tokens).",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-24045",
          "Description": "Web application for a room automation system has client-side JavaScript that sets a sensitive cookie without the SameSite security attribute, allowing the cookie to be sniffed",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-24045"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1276",
      "Name": "Hardware Child Block Incorrectly Connected to Parent System",
      "Abstraction": "Base",
      "Description": "Signals between a hardware IP and the parent system design are incorrectly connected causing security risks.",
      "ExtendedDescription": "\n\nIndividual hardware IP must communicate with the parent system in order for the product to function correctly and as intended. If implemented incorrectly, while not causing any apparent functional issues, may cause security issues. For example, if the IP should only be reset by a system-wide hard reset, but instead the reset input is connected to a software-triggered debug mode reset (which is also asserted during a hard reset), integrity of data inside the IP can be violated.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1277",
      "Name": "Firmware Not Updateable",
      "Abstraction": "Base",
      "Description": "The product does not provide its\n\t\t\tusers with the ability to update or patch its\n\t\t\tfirmware to address any vulnerabilities or\n\t\t\tweaknesses that may be present.",
      "ExtendedDescription": "Without the ability to patch or update firmware, consumers will be left vulnerable to exploitation of any known vulnerabilities, or any vulnerabilities that are discovered in the future. This can expose consumers to permanent risk throughout the entire lifetime of the device, which could be years or decades. Some external protective measures and mitigations might be employed to aid in preventing or reducing the risk of malicious attack, but the root weakness cannot be corrected.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-9054",
          "Description": "Chain: network-attached storage (NAS) device has a critical OS command injection (CWE-78) vulnerability that is actively exploited to place IoT devices into a botnet, but some products are \"end-of-support\" and cannot be patched (CWE-1277). [REF-1097]",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-9054"
        },
        {
          "Reference": "[REF-1095]",
          "Description": "A hardware \"smart lock\" has weak key generation that allows attackers to steal the key by BLE sniffing, but the device's firmware cannot be upgraded and hence remains vulnerable [REF-1095].",
          "Link": "https://www.theregister.com/2019/12/11/f_secure_keywe/"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1278",
      "Name": "Missing Protection Against Hardware Reverse Engineering Using Integrated Circuit (IC) Imaging Techniques",
      "Abstraction": "Base",
      "Description": "Information stored in hardware may be recovered by an attacker with the capability to capture and analyze images of the integrated circuit using techniques such as scanning electron microscopy.",
      "ExtendedDescription": "\n\nThe physical structure of a device, viewed at high enough magnification, can reveal the information stored inside. Typical steps in IC reverse engineering involve removing the chip packaging (decapsulation) then using various imaging techniques ranging from high resolution x-ray microscopy to invasive techniques involving removing IC layers and imaging each layer using a scanning electron microscope.\n\n\nThe goal of such activities is to recover secret keys, unique device identifiers, and proprietary code and circuit designs embedded in hardware that the attacker has been unsuccessful at accessing through other means. These secrets may be stored in non-volatile memory or in the circuit netlist. Memory technologies such as masked ROM allow easier to extraction of secrets than One-time Programmable (OTP) memory.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1279",
      "Name": "Cryptographic Operations are run Before Supporting Units are Ready",
      "Abstraction": "Base",
      "Description": "Performing cryptographic operations without ensuring that the supporting inputs are ready to supply valid data may compromise the cryptographic result.",
      "ExtendedDescription": "Many cryptographic hardware units depend upon other hardware units to supply information to them to produce a securely encrypted result. For example, a cryptographic unit that depends on an external random-number-generator (RNG) unit for entropy must wait until the RNG unit is producing random numbers. If a cryptographic unit retrieves a private encryption key from a fuse unit, the fuse unit must be up and running before a key may be supplied.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "128",
      "Name": "Wrap-around Error",
      "Abstraction": "Base",
      "Description": "Wrap around errors occur whenever a value is incremented past the maximum value for its type and therefore \"wraps around\" to a very small, negative, or undefined value.",
      "BackgroundDetails": [
        "Due to how addition is performed by computers, if a primitive is incremented past the maximum value possible for its storage space, the system will not recognize this, and therefore increment each bit as if it still had extra space. Because of how negative numbers are represented in binary, primitives interpreted as signed may \"wrap\" to very large negative values."
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1280",
      "Name": "Access Control Check Implemented After Asset is Accessed",
      "Abstraction": "Base",
      "Description": "A product's hardware-based access control check occurs after the asset has been accessed.",
      "ExtendedDescription": "\n\nThe product implements a hardware-based access control check. The asset should be accessible only after the check is successful. If, however, this operation is not atomic and the asset is accessed before the check is complete, the security of the system may be compromised.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1281",
      "Name": "Sequence of Processor Instructions Leads to Unexpected Behavior",
      "Abstraction": "Base",
      "Description": "Specific combinations of processor instructions lead to undesirable behavior such as locking the processor until a hard reset performed.",
      "ExtendedDescription": "\n\nIf the instruction set architecture (ISA) and processor logic are not designed carefully and tested thoroughly, certain combinations of instructions may lead to locking the processor or other unexpected and undesirable behavior. Upon encountering unimplemented instruction opcodes or illegal instruction operands, the processor should throw an exception and carry on without negatively impacting security. However, specific combinations of legal and illegal instructions may cause unexpected behavior with security implications such as allowing unprivileged programs to completely lock the CPU. \n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-26339",
          "Description": "A bug in AMD CPU's core logic allows a potential DoS by using a specific x86 instruction sequence to hang the processor",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-26339"
        },
        {
          "Reference": "CVE-1999-1476",
          "Description": "A bug in some Intel Pentium processors allow DoS (hang) via an invalid \"CMPXCHG8B\" instruction, causing a deadlock",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1476"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1282",
      "Name": "Assumed-Immutable Data is Stored in Writable Memory",
      "Abstraction": "Base",
      "Description": "Immutable data, such as a first-stage bootloader, device identifiers, and \"write-once\" configuration settings are stored in writable memory that can be re-programmed or updated in the field.",
      "ExtendedDescription": "\n\nSecurity services such as secure boot, authentication of code and data, and device attestation all require assets such as the first stage bootloader, public keys, golden hash digests, etc. which are implicitly trusted. Storing these assets in read-only memory (ROM), fuses, or one-time programmable (OTP) memory provides strong integrity guarantees and provides a root of trust for securing the rest of the system. Security is lost if assets assumed to be immutable can be modified.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1283",
      "Name": "Mutable Attestation or Measurement Reporting Data",
      "Abstraction": "Base",
      "Description": "The register contents used for attestation or measurement reporting data to verify boot flow are modifiable by an adversary.",
      "ExtendedDescription": "\n\nA System-on-Chip (SoC) implements secure boot or verified boot. During this boot flow, the SoC often measures the code that it authenticates. The measurement is usually done by calculating the one-way hash of the code binary and extending it to the previous hash. The hashing algorithm should be a Secure One-Way hash function. The final hash, i.e., the value obtained after the completion of the boot flow, serves as the measurement data used in reporting or in attestation. The calculated hash is often stored in registers that can later be read by the party of interest to determine tampering of the boot flow. A common weakness is that the contents in these registers are modifiable by an adversary, thus spoofing the measurement.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1284",
      "Name": "Improper Validation of Specified Quantity in Input",
      "Abstraction": "Base",
      "Description": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
      "ExtendedDescription": "\n\nSpecified quantities include size, length, frequency, price, rate, number of operations, time, and others. Code may rely on specified quantities to allocate resources, perform calculations, control iteration, etc. When the quantity is not properly validated, then attackers can specify malicious quantities to cause excessive resource allocation, trigger unexpected failures, enable buffer overflows, etc.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-21668",
          "Description": "Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-21668"
        },
        {
          "Reference": "CVE-2008-1440",
          "Description": "lack of validation of length field leads to infinite loop",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1440"
        },
        {
          "Reference": "CVE-2008-2374",
          "Description": "lack of validation of string length fields allows memory consumption or buffer over-read",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2374"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "1285",
      "Name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "Abstraction": "Base",
      "Description": "The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.",
      "ExtendedDescription": "\n\nOften, indexable resources such as memory buffers or files can be accessed using a specific position, index, or offset, such as an index for an array or a position for a file. When untrusted input is not properly validated before it is used as an index, attackers could access (or attempt to access) unauthorized portions of these resources. This could be used to cause buffer overflows, excessive resource allocation, or trigger unexpected failures. \n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-0369",
          "Description": "large ID in packet used as array index",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0369"
        },
        {
          "Reference": "CVE-2001-1009",
          "Description": "negative array index as argument to POP LIST command",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1009"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1286",
      "Name": "Improper Validation of Syntactic Correctness of Input",
      "Abstraction": "Base",
      "Description": "The product receives input that is expected to be well-formed - i.e., to comply with a certain syntax - but it does not validate or incorrectly validates that the input complies with the syntax.",
      "ExtendedDescription": "\n\nOften, complex inputs are expected to follow a particular syntax, which is either assumed by the input itself, or declared within metadata such as headers. The syntax could be for data exchange formats, markup languages, or even programming languages. When untrusted input is not properly validated for the expected syntax, attackers could cause parsing failures, trigger unexpected errors, or expose latent vulnerabilities that might not be directly exploitable if the input had conformed to the syntax.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2016-4029",
          "Description": "Chain: incorrect validation of intended decimal-based IP address format (CWE-1286) enables parsing of octal or hexadecimal formats (CWE-1389), allowing bypass of an SSRF protection mechanism (CWE-918).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2016-4029"
        },
        {
          "Reference": "CVE-2007-5893",
          "Description": "HTTP request with missing protocol version number leads to crash",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5893"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1287",
      "Name": "Improper Validation of Specified Type of Input",
      "Abstraction": "Base",
      "Description": "The product receives input that is expected to be of a certain type, but it does not validate or incorrectly validates that the input is actually of the expected type.",
      "ExtendedDescription": "\n\nWhen input does not comply with the expected type, attackers could trigger unexpected errors, cause incorrect actions to take place, or exploit latent vulnerabilities that would not be possible if the input conformed with the expected type.\n\n\nThis weakness can appear in type-unsafe programming languages, or in programming languages that support casting or conversion of an input to another type.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2024-37032",
          "Description": "Large language model (LLM) management tool does not validate the format of a digest value (CWE-1287) from a private, untrusted model registry, enabling relative path traversal (CWE-23), a.k.a. Probllama",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2024-37032"
        },
        {
          "Reference": "CVE-2008-2223",
          "Description": "SQL injection through an ID that was supposed to be numeric.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2223"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1288",
      "Name": "Improper Validation of Consistency within Input",
      "Abstraction": "Base",
      "Description": "The product receives a complex input with multiple elements or fields that must be consistent with each other, but it does not validate or incorrectly validates that the input is actually consistent.",
      "ExtendedDescription": "\n\nSome input data can be structured with multiple elements or fields that must be consistent with each other, e.g. a number-of-items field that is followed by the expected number of elements. When such complex inputs are inconsistent, attackers could trigger unexpected errors, cause incorrect actions to take place, or exploit latent vulnerabilities.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2018-16733",
          "Description": "product does not validate that the start block appears before the end block",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-16733"
        },
        {
          "Reference": "CVE-2006-3790",
          "Description": "size field that is inconsistent with packet size leads to buffer over-read",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-3790"
        },
        {
          "Reference": "CVE-2008-4114",
          "Description": "system crash with offset value that is inconsistent with packet size",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4114"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1289",
      "Name": "Improper Validation of Unsafe Equivalence in Input",
      "Abstraction": "Base",
      "Description": "The product receives an input value that is used as a resource identifier or other type of reference, but it does not validate or incorrectly validates that the input is equivalent to a potentially-unsafe value.",
      "ExtendedDescription": "\n\nAttackers can sometimes bypass input validation schemes by finding inputs that appear to be safe, but will be dangerous when processed at a lower layer or by a downstream component. For example, a simple XSS protection mechanism might try to validate that an input has no \"<script>\" tags using case-sensitive matching, but since HTML is case-insensitive when processed by web browsers, an attacker could inject \"<ScrIpT>\" and trigger XSS.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-39155",
          "Description": "Chain: A microservice integration and management platform compares the hostname in the HTTP Host header in a case-sensitive way (CWE-178, CWE-1289), allowing bypass of the authorization policy (CWE-863) using a hostname with mixed case or other variations.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-39155"
        },
        {
          "Reference": "CVE-2020-11053",
          "Description": "Chain: Go-based Oauth2 reverse proxy can send the authenticated user to another site at the end of the authentication flow. A redirect URL with HTML-encoded whitespace characters can bypass the validation (CWE-1289) to redirect to a malicious site (CWE-601)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-11053"
        },
        {
          "Reference": "CVE-2005-0269",
          "Description": "File extension check in forum software only verifies extensions that contain all lowercase letters, which allows remote attackers to upload arbitrary files via file extensions that include uppercase letters.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0269"
        },
        {
          "Reference": "CVE-2001-1238",
          "Description": "Task Manager does not allow local users to end processes with uppercase letters named (1) winlogon.exe, (2) csrss.exe, (3) smss.exe and (4) services.exe via the Process tab which could allow local users to install Trojan horses that cannot be stopped.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1238"
        },
        {
          "Reference": "CVE-2004-2214",
          "Description": "HTTP server allows bypass of access restrictions using URIs with mixed case.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2214"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "129",
      "Name": "Improper Validation of Array Index",
      "Abstraction": "Variant",
      "Description": "The product uses untrusted input when calculating or using an array index, but the product does not validate or incorrectly validates the index to ensure the index references a valid position within the array.",
      "AlternateTerms": [
        {
          "Term": "out-of-bounds array index"
        },
        {
          "Term": "index-out-of-range"
        },
        {
          "Term": "array index underflow"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-0369",
          "Description": "large ID in packet used as array index",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0369"
        },
        {
          "Reference": "CVE-2001-1009",
          "Description": "negative array index as argument to POP LIST command",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1009"
        },
        {
          "Reference": "CVE-2003-0721",
          "Description": "Integer signedness error leads to negative array index",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0721"
        },
        {
          "Reference": "CVE-2004-1189",
          "Description": "product does not properly track a count and a maximum number, which can lead to resultant array index overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1189"
        },
        {
          "Reference": "CVE-2007-5756",
          "Description": "Chain: device driver for packet-capturing software allows access to an unintended IOCTL with resultant array index error.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5756"
        },
        {
          "Reference": "CVE-2005-2456",
          "Description": "Chain: array index error (CWE-129) leads to deadlock (CWE-833)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2456"
        }
      ],
      "AffectedResources": [
        "Memory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "1290",
      "Name": "Incorrect Decoding of Security Identifiers ",
      "Abstraction": "Base",
      "Description": "The product implements a decoding mechanism to decode certain bus-transaction signals to security identifiers. If the decoding is implemented incorrectly, then untrusted agents can now gain unauthorized access to the asset.",
      "ExtendedDescription": "\n\nIn a System-On-Chip (SoC), various integrated circuits and hardware engines generate transactions such as to access (reads/writes) assets or perform certain actions (e.g., reset, fetch, compute, etc.). Among various types of message information, a typical transaction is comprised of source identity (to identify the originator of the transaction) and a destination identity (to route the transaction to the respective entity). Sometimes the transactions are qualified with a security identifier. The security identifier helps the destination agent decide on the set of allowed actions (e.g., access an asset for read and writes). A decoder decodes the bus transactions to map security identifiers into necessary access-controls/protections.\n\n\nA common weakness that can exist in this scenario is incorrect decoding because an untrusted agent's security identifier is decoded into a trusted agent's security identifier. Thus, an untrusted agent previously without access to an asset can now gain access to the asset.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1291",
      "Name": "Public Key Re-Use for Signing both Debug and Production Code",
      "Abstraction": "Base",
      "Description": "The same public key is used for signing both debug and production code.",
      "ExtendedDescription": "\n\nA common usage of public-key cryptography is to verify the integrity and authenticity of another entity (for example a firmware binary). If a company wants to ensure that its firmware runs only on its own hardware, before the firmware runs, an encrypted hash of the firmware image will be decrypted with the public key and then verified against the now-computed hash of the firmware image. This means that the public key forms the root of trust, which necessitates that the public key itself must be protected and used properly.\n\n\nDuring the development phase, debug firmware enables many hardware debug hooks, debug modes, and debug messages for testing. Those debug facilities provide significant, additional views about the firmware's capability and, in some cases, additional capability into the chip or SoC. If compromised, these capabilities could be exploited by an attacker to take full control of the system.\n\n\nOnce the product exits the manufacturing stage and enters production, it is good practice to use a different public key. Debug firmware images are known to leak. With the debug key being reused as the production key, the debug image will also work on the production image. Thus, it will open all the internal, debug capabilities to the attacker.\n\n\nIf a different public key is used for the production image, even if the attacker gains access to the debug firmware image, they will not be able to run it on a production machine. Thus, damage will be limited to the intellectual property leakage resulting from the debug image.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1292",
      "Name": "Incorrect Conversion of Security Identifiers",
      "Abstraction": "Base",
      "Description": "The product implements a conversion mechanism to map certain bus-transaction signals to security identifiers. However, if the conversion is incorrectly implemented, untrusted agents can gain unauthorized access to the asset.",
      "ExtendedDescription": "\n\nIn a System-On-Chip (SoC), various integrated circuits and hardware engines generate transactions such as to access (reads/writes) assets or perform certain actions (e.g., reset, fetch, compute, etc.). Among various types of message information, a typical transaction is comprised of source identity (to identify the originator of the transaction) and a destination identity (to route the transaction to the respective entity). Sometimes the transactions are qualified with a security identifier. This security identifier helps the destination agent decide on the set of allowed actions (e.g., access an asset for read and writes).\n\n\nA typical bus connects several leader and follower agents. Some follower agents implement bus protocols differently from leader agents. A protocol conversion happens at a bridge to seamlessly connect different protocols on the bus. One example is a system that implements a leader with the Advanced High-performance Bus (AHB) protocol and a follower with the Open-Core Protocol (OCP). A bridge AHB-to-OCP is needed to translate the transaction from one form to the other.\n\n\nA common weakness that can exist in this scenario is that this conversion between protocols is implemented incorrectly, whereupon an untrusted agent may gain unauthorized access to an asset.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1293",
      "Name": "Missing Source Correlation of Multiple Independent Data",
      "Abstraction": "Base",
      "Description": "The product relies on one source of data, preventing the ability to detect if an adversary has compromised a data source.",
      "ExtendedDescription": "\n\nTo operate successfully, a product sometimes has to implicitly trust the integrity of an information source. When information is implicitly signed, one can ensure that the data was not tampered in transit. This does not ensure that the information source was not compromised when responding to a request. By requesting information from multiple sources, one can check if all of the data is the same. If they are not, the system should report the information sources that respond with a different or minority value as potentially compromised. If there are not enough answers to provide a majority or plurality of responses, the system should report all of the sources as potentially compromised. As the seriousness of the impact of incorrect integrity increases, so should the number of independent information sources that would need to be queried.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1294",
      "Name": "Insecure Security Identifier Mechanism",
      "Abstraction": "Class",
      "Description": "The System-on-Chip (SoC) implements a Security Identifier mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Identifiers are not correctly implemented.",
      "ExtendedDescription": "\n\nSystems-On-Chip (Integrated circuits and hardware engines) implement Security Identifiers to differentiate/identify actions originated from various agents. These actions could be 'read', 'write', 'program', 'reset', 'fetch', 'compute', etc. Security identifiers are generated and assigned to every agent in the System (SoC) that is either capable of generating an action or receiving an action from another agent. Every agent could be assigned a unique, Security Identifier based on its trust level or privileges.\n\n\nA broad class of flaws can exist in the Security Identifier process, including but not limited to missing security identifiers, improper conversion of security identifiers, incorrect generation of security identifiers, etc.\n",
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "1295",
      "Name": "Debug Messages Revealing Unnecessary Information",
      "Abstraction": "Base",
      "Description": "The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.",
      "ExtendedDescription": "\n\nDebug messages are messages that help troubleshoot an issue by revealing the internal state of the system. For example, debug data in design can be exposed through internal memory array dumps or boot logs through interfaces like UART via TAP commands, scan chain, etc. Thus, the more information contained in a debug message, the easier it is to debug. However, there is also the risk of revealing information that could help an attacker either decipher a vulnerability, and/or gain a better understanding of the system. Thus, this extra information could lower the \"security by obscurity\" factor. While \"security by obscurity\" alone is insufficient, it can help as a part of \"Defense-in-depth\". \n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-25476",
          "Description": "Digital Rights Management (DRM) capability for mobile platform leaks pointer information, simplifying ASLR bypass",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-25476"
        },
        {
          "Reference": "CVE-2020-24491",
          "Description": "Processor generates debug message that contains sensitive information (\"addresses of memory transactions\").",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-24491"
        },
        {
          "Reference": "CVE-2017-18326",
          "Description": "modem debug messages include cryptographic keys",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-18326"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1296",
      "Name": "Incorrect Chaining or Granularity of Debug Components",
      "Abstraction": "Base",
      "Description": "The product's debug components contain incorrect chaining or granularity of debug components.",
      "ExtendedDescription": "\n\nFor debugging and troubleshooting a chip, several hardware design elements are often implemented, including:\n\n\n  - Various Test Access Ports (TAPs) allow boundary scan commands to be executed.\n\n  - For scanning the internal components of a chip, there are scan cells that allow the chip to be used as a \"stimulus and response\" mechanism.\n\n  - Chipmakers might create custom methods to observe the internal components of their chips by placing various tracing hubs within their chip and creating hierarchical or interconnected structures among those hubs.\n\nLogic errors during design or synthesis could misconfigure the interconnection of the debug components, which could allow unintended access permissions.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2017-18347",
          "Description": "Incorrect access control in RDP Level 1 on STMicroelectronics STM32F0 series devices allows physically present attackers to extract the device's protected firmware via a special sequence of Serial Wire Debug (SWD) commands because there is a race condition between full initialization of the SWD interface and the setup of flash protection.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-18347"
        },
        {
          "Reference": "CVE-2020-1791",
          "Description": "There is an improper authorization vulnerability in several smartphones. The system has a logic-judging error, and, under certain scenarios, a successful exploit could allow the attacker to switch to third desktop after a series of operations in ADB mode. (Vulnerability ID: HWPSIRT-2019-10114).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-1791"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1297",
      "Name": "Unprotected Confidential Information on Device is Accessible by OSAT Vendors",
      "Abstraction": "Base",
      "Description": "The product does not adequately protect confidential information on the device from being accessed by Outsourced Semiconductor Assembly and Test (OSAT) vendors.",
      "ExtendedDescription": "\n\nIn contrast to complete vertical integration of architecting, designing, manufacturing, assembling, and testing chips all within a single organization, an organization can choose to simply architect and design a chip before outsourcing the rest of the process to OSAT entities (e.g., external foundries and test houses). In the latter example, the device enters an OSAT facility in a much more vulnerable pre-production stage where many debug and test modes are accessible. Therefore, the chipmaker must place a certain level of trust with the OSAT. To counter this, the chipmaker often requires the OSAT partner to enter into restrictive non-disclosure agreements (NDAs). Nonetheless, OSAT vendors likely have many customers, which increases the risk of accidental sharing of information. There may also be a security vulnerability in the information technology (IT) system of the OSAT facility. Alternatively, a malicious insider at the OSAT facility may carry out an insider attack. Considering these factors, it behooves the chipmaker to minimize any confidential information in the device that may be accessible to the OSAT vendor.\n\n\nLogic errors during design or synthesis could misconfigure the interconnection of the debug components, which could provide improper authorization to sensitive information.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1298",
      "Name": "Hardware Logic Contains Race Conditions",
      "Abstraction": "Base",
      "Description": "A race condition in the hardware logic results in undermining security guarantees of the system.",
      "ExtendedDescription": "\n\nA race condition in logic circuits typically occurs when a logic gate gets inputs from signals that have traversed different paths while originating from the same source. Such inputs to the gate can change at slightly different times in response to a change in the source signal. This results in a timing error or a glitch (temporary or permanent) that causes the output to change to an unwanted state before settling back to the desired state. If such timing errors occur in access control logic or finite state machines that are implemented in security sensitive flows, an attacker might exploit them to circumvent existing protections.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1299",
      "Name": "Missing Protection Mechanism for Alternate Hardware Interface",
      "Abstraction": "Base",
      "Description": "The lack of protections on alternate paths to access\n                control-protected assets (such as unprotected shadow registers\n                and other external facing unguarded interfaces) allows an\n                attacker to bypass existing protections to the asset that are\n\t\tonly performed against the primary path.",
      "ExtendedDescription": "\n\nAn asset inside a chip might have access-control protections through one interface. However, if all paths to the asset are not protected, an attacker might compromise the asset through alternate paths. These alternate paths could be through shadow or mirror registers inside the IP core, or could be paths from other external-facing interfaces to the IP core or SoC.\n\n\nConsider an SoC with various interfaces such as UART, SMBUS, PCIe, USB, etc. If access control is implemented for SoC internal registers only over the PCIe interface, then an attacker could still modify the SoC internal registers through alternate paths by coming through interfaces such as UART, SMBUS, USB, etc. \n\n\nAlternatively, attackers might be able to bypass existing protections by exploiting unprotected, shadow registers. Shadow registers and mirror registers typically refer to registers that can be accessed from multiple addresses. Writing to or reading from the aliased/mirrored address has the same effect as writing to the address of the main register. They are typically implemented within an IP core or SoC to temporarily hold certain data. These data will later be updated to the main register, and both registers will be in synch. If the shadow registers are not access-protected, attackers could simply initiate transactions to the shadow registers and compromise system security. \n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-38399",
          "Description": "Missing protection mechanism on serial connection allows for arbitrary OS command execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-38399"
        },
        {
          "Reference": "CVE-2020-9285",
          "Description": "Mini-PCI Express slot does not restrict direct memory access.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-9285"
        },
        {
          "Reference": "CVE-2020-8004",
          "Description": "When the internal flash is protected by blocking access on the Data Bus (DBUS), it can still be indirectly accessed through the Instruction Bus (IBUS).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8004"
        },
        {
          "Reference": "CVE-2017-18293",
          "Description": "When GPIO is protected by blocking access to corresponding GPIO resource registers, protection can be bypassed by writing to the corresponding banked GPIO registers instead.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-18293"
        },
        {
          "Reference": "CVE-2020-15483",
          "Description": "monitor device allows access to physical UART debug port without authentication",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-15483"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "13",
      "Name": "ASP.NET Misconfiguration: Password in Configuration File",
      "Abstraction": "Variant",
      "Description": "Storing a plaintext password in a configuration file allows anyone who can read the file access to the password-protected resource making them an easy target for attackers.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "130",
      "Name": "Improper Handling of Length Parameter Inconsistency",
      "Abstraction": "Base",
      "Description": "The product parses a formatted message or structure, but it does not handle or incorrectly handles a length field that is inconsistent with the actual length of the associated data.",
      "ExtendedDescription": "If an attacker can manipulate the length parameter associated with an input such that it is inconsistent with the actual length of the input, this can be leveraged to cause the target application to behave in unexpected, and possibly, malicious ways. One of the possible motives for doing so is to pass in arbitrarily large input to the application. Another possible motivation is the modification of application state by including invalid data for subsequent properties of the application. Such weaknesses commonly lead to attacks such as buffer overflows and execution of arbitrary code.",
      "AlternateTerms": [
        {
          "Term": "length manipulation"
        },
        {
          "Term": "length tampering"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2014-0160",
          "Description": "Chain: \"Heartbleed\" bug receives an inconsistent length parameter (CWE-130) enabling an out-of-bounds read (CWE-126), returning memory that could include private cryptographic keys and other sensitive data.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-0160"
        },
        {
          "Reference": "CVE-2009-2299",
          "Description": "Web application firewall consumes excessive memory when an HTTP request contains a large Content-Length value but no POST data.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2299"
        },
        {
          "Reference": "CVE-2001-0825",
          "Description": "Buffer overflow in internal string handling routine allows remote attackers to execute arbitrary commands via a length argument of zero or less, which disables the length check.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0825"
        },
        {
          "Reference": "CVE-2001-1186",
          "Description": "Web server allows remote attackers to cause a denial of service via an HTTP request with a content-length value that is larger than the size of the request, which prevents server from timing out the connection.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1186"
        },
        {
          "Reference": "CVE-2001-0191",
          "Description": "Service does not properly check the specified length of a cookie, which allows remote attackers to execute arbitrary commands via a buffer overflow, or brute force authentication by using a short cookie length.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0191"
        },
        {
          "Reference": "CVE-2003-0429",
          "Description": "Traffic analyzer allows remote attackers to cause a denial of service and possibly execute arbitrary code via invalid IPv4 or IPv6 prefix lengths, possibly triggering a buffer overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0429"
        },
        {
          "Reference": "CVE-2000-0655",
          "Description": "Chat client allows remote attackers to cause a denial of service or execute arbitrary commands via a JPEG image containing a comment with an illegal field length of 1.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0655"
        },
        {
          "Reference": "CVE-2004-0492",
          "Description": "Server allows remote attackers to cause a denial of service and possibly execute arbitrary code via a negative Content-Length HTTP header field causing a heap-based buffer overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0492"
        },
        {
          "Reference": "CVE-2004-0201",
          "Description": "Help program allows remote attackers to execute arbitrary commands via a heap-based buffer overflow caused by a .CHM file with a large length field",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0201"
        },
        {
          "Reference": "CVE-2003-0825",
          "Description": "Name services does not properly validate the length of certain packets, which allows attackers to cause a denial of service and possibly execute arbitrary code. Can overlap zero-length issues",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0825"
        },
        {
          "Reference": "CVE-2004-0095",
          "Description": "Policy manager allows remote attackers to cause a denial of service (memory consumption and crash) and possibly execute arbitrary code via an HTTP POST request with an invalid Content-Length value.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0095"
        },
        {
          "Reference": "CVE-2004-0826",
          "Description": "Heap-based buffer overflow in library allows remote attackers to execute arbitrary code via a modified record length field in an SSLv2 client hello message.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0826"
        },
        {
          "Reference": "CVE-2004-0808",
          "Description": "When domain logons are enabled, server allows remote attackers to cause a denial of service via a SAM_UAS_CHANGE request with a length value that is larger than the number of structures that are provided.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0808"
        },
        {
          "Reference": "CVE-2002-1357",
          "Description": "Multiple SSH2 servers and clients do not properly handle packets or data elements with incorrect length specifiers, which may allow remote attackers to cause a denial of service or possibly execute arbitrary code.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1357"
        },
        {
          "Reference": "CVE-2004-0774",
          "Description": "Server allows remote attackers to cause a denial of service (CPU and memory exhaustion) via a POST request with a Content-Length header set to -1.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0774"
        },
        {
          "Reference": "CVE-2004-0989",
          "Description": "Multiple buffer overflows in xml library that may allow remote attackers to execute arbitrary code via long URLs.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0989"
        },
        {
          "Reference": "CVE-2004-0568",
          "Description": "Application does not properly validate the length of a value that is saved in a session file, which allows remote attackers to execute arbitrary code via a malicious session file (.ht), web site, or Telnet URL contained in an e-mail message, triggering a buffer overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0568"
        },
        {
          "Reference": "CVE-2003-0327",
          "Description": "Server allows remote attackers to cause a denial of service via a remote password array with an invalid length, which triggers a heap-based buffer overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0327"
        },
        {
          "Reference": "CVE-2003-0345",
          "Description": "Product allows remote attackers to cause a denial of service and possibly execute arbitrary code via an SMB packet that specifies a smaller buffer length than is required.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0345"
        },
        {
          "Reference": "CVE-2004-0430",
          "Description": "Server allows remote attackers to execute arbitrary code via a LoginExt packet for a Cleartext Password User Authentication Method (UAM) request with a PathName argument that includes an AFPName type string that is longer than the associated length field.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0430"
        },
        {
          "Reference": "CVE-2005-0064",
          "Description": "PDF viewer allows remote attackers to execute arbitrary code via a PDF file with a large /Encrypt /Length keyLength value.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0064"
        },
        {
          "Reference": "CVE-2004-0413",
          "Description": "SVN client trusts the length field of SVN protocol URL strings, which allows remote attackers to cause a denial of service and possibly execute arbitrary code via an integer overflow that leads to a heap-based buffer overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0413"
        },
        {
          "Reference": "CVE-2004-0940",
          "Description": "Is effectively an accidental double increment of a counter that prevents a length check conditional from exiting a loop.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0940"
        },
        {
          "Reference": "CVE-2002-1235",
          "Description": "Length field of a request not verified.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1235"
        },
        {
          "Reference": "CVE-2005-3184",
          "Description": "Buffer overflow by modifying a length value.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3184"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1300",
      "Name": "Improper Protection of Physical Side Channels",
      "Abstraction": "Base",
      "Description": "The device does not contain sufficient protection\n\tmechanisms to prevent physical side channels from exposing\n\tsensitive information due to patterns in physically observable\n\tphenomena such as variations in power consumption,\n\telectromagnetic emissions (EME), or acoustic emissions.",
      "ExtendedDescription": "\n\nAn adversary could monitor and measure physical phenomena to detect patterns and make inferences, even if it is not possible to extract the information in the digital domain.\n\n\nPhysical side channels have been well-studied for decades in the context of breaking implementations of cryptographic algorithms or other attacks against security features. These side channels may be easily observed by an adversary with physical access to the device, or using a tool that is in close proximity. If the adversary can monitor hardware operation and correlate its data processing with power, EME, and acoustic measurements, the adversary might be able to recover of secret keys and data.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-35888",
          "Description": "Power side-channels leak secret information from processor",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-35888"
        },
        {
          "Reference": "CVE-2021-3011",
          "Description": "electromagnetic-wave side-channel in security-related microcontrollers allows extraction of private key",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-3011"
        },
        {
          "Reference": "CVE-2019-14353",
          "Description": "Crypto hardware wallet's power consumption relates to total number of pixels illuminated, creating a side channel in the USB connection that allows attackers to determine secrets displayed such as PIN numbers and passwords",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-14353"
        },
        {
          "Reference": "CVE-2020-27211",
          "Description": "Chain: microcontroller system-on-chip contains uses a register value stored in flash to set product protection state on the memory bus but does not contain protection against fault injection (CWE-1319), which leads to an incorrect initialization of the memory bus (CWE-1419) leading the product to be in an unprotected state.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-27211"
        },
        {
          "Reference": "CVE-2013-4576",
          "Description": "message encryption software uses certain instruction sequences that allows RSA key extraction using a chosen-ciphertext attack and acoustic cryptanalysis",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2013-4576"
        },
        {
          "Reference": "CVE-2020-28368",
          "Description": "virtualization product allows recovery of AES keys from the guest OS using a side channel attack against a power/energy monitoring interface.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-28368"
        },
        {
          "Reference": "CVE-2019-18673",
          "Description": "power consumption varies based on number of pixels being illuminated in a display, allowing reading of secrets such as the PIN by using the USB interface to measure power consumption",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-18673"
        }
      ],
      "FunctionalAreas": [
        "Power"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1301",
      "Name": "Insufficient or Incomplete Data Removal within Hardware Component",
      "Abstraction": "Base",
      "Description": "The product's data removal process does not completely delete all data and potentially sensitive information within hardware components.",
      "ExtendedDescription": "\n\nPhysical properties of hardware devices, such as remanence of magnetic media, residual charge of ROMs/RAMs, or screen burn-in may still retain sensitive data after a data removal process has taken place and power is removed.\n\n\nRecovering data after erasure or overwriting is possible due to a phenomenon called data remanence. For example, if the same value is written repeatedly to a memory location, the corresponding memory cells can become physically altered to a degree such that even after the original data is erased that data can still be recovered through physical characterization of the memory cells.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-8575",
          "Description": "Firmware Data Deletion Vulnerability in which a base station factory reset might not delete all user information. The impact of this enables a new owner of a used device that has been \"factory-default reset\" with a vulnerable firmware version can still retrieve, at least, the previous owner's wireless network name, and the previous owner's wireless security (such as WPA2) key. This issue was addressed with improved, data deletion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-8575"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1302",
      "Name": "Missing Source Identifier in Entity Transactions on a System-On-Chip (SOC)",
      "Abstraction": "Base",
      "Description": "The product implements a security identifier mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. A transaction is sent without a security identifier.",
      "ExtendedDescription": "\n\nIn a System-On-Chip (SoC), various integrated circuits and hardware engines generate transactions such as to access (reads/writes) assets or perform certain actions (e.g., reset, fetch, compute). A typical transaction is comprised of source identity (to identify the originator of the transaction) and a destination identity (to route the transaction to the respective entity) in addition to much more information in the message. Sometimes the transactions are qualified with a Security Identifier. This Security Identifier helps the destination agent decide on the set of allowed or disallowed actions.\n\n\nA weakness that can exist in such transaction schemes is that the source agent does not consistently include the necessary Security Identifier with the transaction. If the Security Identifier is missing, the destination agent might drop the message (resulting in an inadvertent Denial-of-Service (DoS)) or take inappropriate action by default in its attempt to execute the transaction, resulting in privilege escalation or provision of unintended access.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1303",
      "Name": "Non-Transparent Sharing of Microarchitectural Resources",
      "Abstraction": "Base",
      "Description": "Hardware structures shared across execution contexts (e.g., caches and branch predictors) can violate the expected architecture isolation between contexts.",
      "ExtendedDescription": "\n\nModern processors use techniques such as out-of-order execution, speculation, prefetching, data forwarding, and caching to increase performance. Details about the implementation of these techniques are hidden from the programmer's view. This is problematic when the hardware implementation of these techniques results in resources being shared across supposedly isolated contexts. Contention for shared resources between different contexts opens covert channels that allow malicious programs executing in one context to recover information from another context.\n\n\nSome examples of shared micro-architectural resources that have been used to leak information between contexts are caches, branch prediction logic, and load or store buffers. Speculative and out-of-order execution provides an attacker with increased control over which data is leaked through the covert channel.\n\n\nIf the extent of resource sharing between contexts in the design microarchitecture is undocumented, it is extremely difficult to ensure system assets are protected against disclosure.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1304",
      "Name": "Improperly Preserved Integrity of Hardware Configuration State During a Power Save/Restore Operation",
      "Abstraction": "Base",
      "Description": "The product performs a power save/restore\n            operation, but it does not ensure that the integrity of\n            the configuration state is maintained and/or verified between\n\t    the beginning and ending of the operation.",
      "ExtendedDescription": "\n\nBefore powering down, the Intellectual Property (IP) saves current state (S) to persistent storage such as flash or always-on memory in order to optimize the restore operation. During this process, an attacker with access to the persistent storage may alter (S) to a configuration that could potentially modify privileges, disable protections, and/or cause damage to the hardware. If the IP does not validate the configuration state stored in persistent memory, upon regaining power or becoming operational again, the IP could be compromised through the activation of an unwanted/harmful configuration. \n",
      "FunctionalAreas": [
        "Power"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "131",
      "Name": "Incorrect Calculation of Buffer Size",
      "Abstraction": "Base",
      "Description": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-17087",
          "Description": "Chain: integer truncation (CWE-197) causes small buffer allocation (CWE-131) leading to out-of-bounds write (CWE-787) in kernel pool, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-17087"
        },
        {
          "Reference": "CVE-2004-1363",
          "Description": "substitution overflow: buffer overflow using environment variables that are expanded after the length check is performed",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1363"
        },
        {
          "Reference": "CVE-2004-0747",
          "Description": "substitution overflow: buffer overflow using expansion of environment variables",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0747"
        },
        {
          "Reference": "CVE-2005-2103",
          "Description": "substitution overflow: buffer overflow using a large number of substitution strings",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2103"
        },
        {
          "Reference": "CVE-2005-3120",
          "Description": "transformation overflow: product adds extra escape characters to incoming data, but does not account for them in the buffer length",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3120"
        },
        {
          "Reference": "CVE-2003-0899",
          "Description": "transformation overflow: buffer overflow when expanding \">\" to \"&gt;\", etc.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0899"
        },
        {
          "Reference": "CVE-2001-0334",
          "Description": "expansion overflow: buffer overflow using wildcards",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0334"
        },
        {
          "Reference": "CVE-2001-0248",
          "Description": "expansion overflow: long pathname + glob = overflow",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0248"
        },
        {
          "Reference": "CVE-2001-0249",
          "Description": "expansion overflow: long pathname + glob = overflow",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0249"
        },
        {
          "Reference": "CVE-2002-0184",
          "Description": "special characters in argument are not properly expanded",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0184"
        },
        {
          "Reference": "CVE-2004-0434",
          "Description": "small length value leads to heap overflow",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0434"
        },
        {
          "Reference": "CVE-2002-1347",
          "Description": "multiple variants",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1347"
        },
        {
          "Reference": "CVE-2005-0490",
          "Description": "needs closer investigation, but probably expansion-based",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0490"
        },
        {
          "Reference": "CVE-2004-0940",
          "Description": "needs closer investigation, but probably expansion-based",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0940"
        },
        {
          "Reference": "CVE-2008-0599",
          "Description": "Chain: Language interpreter calculates wrong buffer size (CWE-131) by using \"size = ptr ? X : Y\" instead of \"size = (ptr ? X : Y)\" expression.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0599"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "1310",
      "Name": "Missing Ability to Patch ROM Code",
      "Abstraction": "Base",
      "Description": "Missing an ability to patch ROM code may leave a System or System-on-Chip (SoC) in a vulnerable state.",
      "ExtendedDescription": "\n\nA System or System-on-Chip (SoC) that implements a boot process utilizing security mechanisms such as Root-of-Trust (RoT) typically starts by executing code from a Read-only-Memory (ROM) component. The code in ROM is immutable, hence any security vulnerabilities discovered in the ROM code can never be fixed for the systems that are already in use.\n\n\nA common weakness is that the ROM does not have the ability to patch if security vulnerabilities are uncovered after the system gets shipped. This leaves the system in a vulnerable state where an adversary can compromise the SoC.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1311",
      "Name": "Improper Translation of Security Attributes by Fabric Bridge",
      "Abstraction": "Base",
      "Description": "The bridge incorrectly translates security attributes from either trusted to untrusted or from untrusted to trusted when converting from one fabric protocol to another.",
      "ExtendedDescription": "\n\nA bridge allows IP blocks supporting different fabric protocols to be integrated into the system. Fabric end-points or interfaces usually have dedicated signals to transport security attributes. For example, HPROT signals in AHB, AxPROT signals in AXI, and MReqInfo and SRespInfo signals in OCP.\n\n\nThe values on these signals are used to indicate the security attributes of the transaction. These include the immutable hardware identity of the controller initiating the transaction, privilege level, and type of transaction (e.g., read/write, cacheable/non-cacheable, posted/non-posted).\n\n\nA weakness can arise if the bridge IP block, which translates the signals from the protocol used in the IP block endpoint to the protocol used by the central bus, does not properly translate the security attributes. As a result, the identity of the initiator could be translated from untrusted to trusted or vice-versa. This could result in access-control bypass, privilege escalation, or denial of service.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1312",
      "Name": "Missing Protection for Mirrored Regions in On-Chip Fabric Firewall",
      "Abstraction": "Base",
      "Description": "The firewall in an on-chip fabric protects the main addressed region, but it does not protect any mirrored memory or memory-mapped-IO (MMIO) regions.",
      "ExtendedDescription": "\n\nFew fabrics mirror memory and address ranges, where mirrored regions contain copies of the original data. This redundancy is used to achieve fault tolerance. Whatever protections the fabric firewall implements for the original region should also apply to the mirrored regions. If not, an attacker could bypass existing read/write protections by reading from/writing to the mirrored regions to leak or corrupt the original data.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1313",
      "Name": "Hardware Allows Activation of Test or Debug Logic at Runtime",
      "Abstraction": "Base",
      "Description": "During runtime, the hardware allows for test or debug logic (feature) to be activated, which allows for changing the state of the hardware. This feature can alter the intended behavior of the system and allow for alteration and leakage of sensitive data by an adversary.",
      "ExtendedDescription": "\n\nAn adversary can take advantage of test or debug logic that is made accessible through the hardware during normal operation to modify the intended behavior of the system. For example, an accessible Test/debug mode may allow read/write access to any system data. Using error injection (a common test/debug feature) during a transmit/receive operation on a bus, data may be modified to produce an unintended message. Similarly, confidentiality could be compromised by such features allowing access to secrets.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-33150",
          "Description": "Hardware processor allows activation of test or debug logic at runtime.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-33150"
        },
        {
          "Reference": "CVE-2021-0146",
          "Description": "Processor allows the activation of test or debug logic at runtime, allowing escalation of privileges",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-0146"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1314",
      "Name": "Missing Write Protection for Parametric Data Values",
      "Abstraction": "Base",
      "Description": "The device does not write-protect the parametric data values for sensors that scale the sensor value, allowing untrusted software to manipulate the apparent result and potentially damage hardware or cause operational failure.",
      "ExtendedDescription": "\n\nVarious sensors are used by hardware to detect any devices operating outside of the design limits. The threshold limit values are set by hardware fuses or trusted software such as the BIOS. These limits may be related to thermal, power, voltage, current, and frequency. Hardware mechanisms may be used to protect against alteration of the threshold limit values by untrusted software.\n\n\nThe limit values are generally programmed in standard units for the type of value being read. However, the hardware-sensor blocks may report the settings in different units depending upon sensor design and operation. The raw sensor output value is converted to the desired units using a scale conversion based on the parametric data programmed into the sensor. The final converted value is then compared with the previously programmed limits.\n\n\nWhile the limit values are usually protected, the sensor parametric data values may not be. By changing the parametric data, safe operational limits may be bypassed.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2017-8252",
          "Description": "Kernel can inject faults in computations during the execution of TrustZone leading to information disclosure in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer Electronics Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon IoT, Snapdragon Mobile, Snapdragon Voice and Music, Snapdragon Wearables, Snapdragon Wired Infrastructure and Networking.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-8252"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1315",
      "Name": "Improper Setting of Bus Controlling Capability in Fabric End-point",
      "Abstraction": "Base",
      "Description": "The bus controller enables bits in the fabric end-point to allow responder devices to control transactions on the fabric.",
      "ExtendedDescription": "\n\nTo support reusability, certain fabric interfaces and end points provide a configurable register bit that allows IP blocks connected to the controller to access other peripherals connected to the fabric. This allows the end point to be used with devices that function as a controller or responder. If this bit is set by default in hardware, or if firmware incorrectly sets it later, a device intended to be a responder on a fabric is now capable of controlling transactions to other devices and might compromise system security.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1316",
      "Name": "Fabric-Address Map Allows Programming of Unwarranted Overlaps of Protected and Unprotected Ranges",
      "Abstraction": "Base",
      "Description": "The address map of the on-chip fabric has protected and unprotected regions overlapping, allowing an attacker to bypass access control to the overlapping portion of the protected region.",
      "ExtendedDescription": "\n\nVarious ranges can be defined in the system-address map, either in the memory or in Memory-Mapped-IO (MMIO) space. These ranges are usually defined using special range registers that contain information, such as base address and size. Address decoding is the process of determining for which range the incoming transaction is destined. To ensure isolation, ranges containing secret data are access-control protected.\n\n\nOccasionally, these ranges could overlap. The overlap could either be intentional (e.g. due to a limited number of range registers or limited choice in choosing size of the range) or unintentional (e.g. introduced by errors). Some hardware designs allow dynamic remapping of address ranges assigned to peripheral MMIO ranges. In such designs, intentional address overlaps can be created through misconfiguration by malicious software. When protected and unprotected ranges overlap, an attacker could send a transaction and potentially compromise the protections in place, violating the principle of least privilege. \n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2009-4419",
          "Description": "Attacker can modify MCHBAR register to overlap with an attacker-controlled region, which modification prevents the SENTER instruction from properly applying VT-d protection while a Measured Launch Environment is being launched.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-4419"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1317",
      "Name": "Improper Access Control in Fabric Bridge",
      "Abstraction": "Base",
      "Description": "The product uses a fabric bridge for transactions between two Intellectual Property (IP) blocks, but the bridge does not properly perform the expected privilege, identity, or other access control checks between those IP blocks.",
      "ExtendedDescription": "\n\nIn hardware designs, different IP blocks are connected through interconnect-bus fabrics (e.g. AHB and OCP). Within a System on Chip (SoC), the IP block subsystems could be using different bus protocols. In such a case, the IP blocks are then linked to the central bus (and to other IP blocks) through a fabric bridge. Bridges are used as bus-interconnect-routing modules that link different protocols or separate, different segments of the overall SoC interconnect.\n\n\nFor overall system security, it is important that the access-control privileges associated with any fabric transaction are consistently maintained and applied, even when they are routed or translated by a fabric bridge. A bridge that is connected to a fabric without security features forwards transactions to the slave without checking the privilege level of the master and results in a weakness in SoC access-control security. The same weakness occurs if a bridge does not check the hardware identity of the transaction received from the slave interface of the bridge.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-6260",
          "Description": "Baseboard Management Controller (BMC) device implements Advanced High-performance Bus (AHB) bridges that do not require authentication for arbitrary read and write access to the BMC's physical address space from the host, and possibly the network [REF-1138].",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-6260"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1318",
      "Name": "Missing Support for Security Features in On-chip Fabrics or Buses",
      "Abstraction": "Base",
      "Description": " On-chip fabrics or buses either do not support or are not configured to support privilege separation or other security features, such as access control. ",
      "ExtendedDescription": "\n\nCertain on-chip fabrics and buses, especially simple and low-power buses, do not support security features. Apart from data transfer and addressing ports, some fabrics and buses do not have any interfaces to transfer privilege, immutable identity, or any other security attribute coming from the bus master. Similarly, they do not have dedicated signals to transport security-sensitive data from slave to master, such as completions for certain types of transactions. Few other on-chip fabrics and buses support security features and define specific interfaces/signals for transporting security attributes from master to slave or vice-versa. However, including these signals is not mandatory and could be left unconfigured when generating the register-transfer-level (RTL) description for the fabric. Such fabrics or buses should not be used to transport any security attribute coming from the bus master. In general, peripherals with security assets should not be connected to such buses before the transaction from the bus master reaches the bus, unless some form of access control is performed at a fabric bridge or another intermediate module.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1319",
      "Name": "Improper Protection against Electromagnetic Fault Injection (EM-FI)",
      "Abstraction": "Base",
      "Description": "The device is susceptible to electromagnetic fault injection attacks, causing device internal information to be compromised or security mechanisms to be bypassed.",
      "ExtendedDescription": "\n\nElectromagnetic fault injection may allow an attacker to locally and dynamically modify the signals (both internal and external) of an integrated circuit. EM-FI attacks consist of producing a local, transient magnetic field near the device, inducing current in the device wires. A typical EMFI setup is made up of a pulse injection circuit that generates a high current transient in an EMI coil, producing an abrupt magnetic pulse which couples to the target producing faults in the device, which can lead to:\n\n\n  - Bypassing security mechanisms such as secure JTAG or Secure Boot\n\n  - Leaking device information\n\n  - Modifying program flow\n\n  - Perturbing secure hardware modules (e.g. random number generators)\n\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-27211",
          "Description": "Chain: microcontroller system-on-chip uses a register value stored in flash to set product protection state on the memory bus and does not contain protection against fault injection (CWE-1319) which leads to an incorrect initialization of the memory bus (CWE-1419) causing the product to be in an unprotected state.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-27211"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1320",
      "Name": "Improper Protection for Outbound Error Messages and Alert Signals",
      "Abstraction": "Base",
      "Description": "Untrusted agents can disable alerts about signal conditions exceeding limits or the response mechanism that handles such alerts.\n\t\t\t",
      "ExtendedDescription": "\n\nHardware sensors are used to detect whether a device is operating within design limits. The threshold values for these limits are set by hardware fuses or trusted software such as a BIOS. Modification of these limits may be protected by hardware mechanisms.\n\n\nWhen device sensors detect out of bound conditions, alert signals may be generated for remedial action, which may take the form of device shutdown or throttling.\n\n\nWarning signals that are not properly secured may be disabled or used to generate spurious alerts, causing degraded performance or denial-of-service (DoS). These alerts may be masked by untrusted software. Examples of these alerts involve thermal and power sensor alerts.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1321",
      "Name": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component that specifies attributes that are to be initialized or updated in an object, but it does not properly control modifications of attributes of the object prototype.",
      "ExtendedDescription": "\n\nBy adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the product depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf).\n\n\nThis weakness is usually exploited by using a special attribute of objects called proto, constructor or prototype. Such attributes give access to the object prototype. This weakness is often found in code that assigns object attributes based on user input, or merges or clones objects recursively.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2018-3721",
          "Description": "Prototype pollution by merging objects.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-3721"
        },
        {
          "Reference": "CVE-2019-10744",
          "Description": "Prototype pollution by setting default values to object attributes recursively.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-10744"
        },
        {
          "Reference": "CVE-2019-11358",
          "Description": "Prototype pollution by merging objects recursively.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-11358"
        },
        {
          "Reference": "CVE-2020-8203",
          "Description": "Prototype pollution by setting object attributes based on dot-separated path.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8203"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "1322",
      "Name": "Use of Blocking Code in Single-threaded, Non-blocking Context",
      "Abstraction": "Base",
      "Description": "The product uses a non-blocking model that relies on a single threaded process\n\t\t\tfor features such as scalability, but it contains code that can block when it is invoked.",
      "ExtendedDescription": "\n\nWhen an attacker can directly invoke the blocking code, or the blocking code can be affected by environmental conditions that can be influenced by an attacker, then this can lead to a denial of service by causing unexpected hang or freeze of the code. Examples of blocking code might be an expensive computation or calling blocking library calls, such as those that perform exclusive file operations or require a successful network operation.\n\n\nDue to limitations in multi-thread models, single-threaded models are used to overcome the resource constraints that are caused by using many threads. In such a model, all code should generally be non-blocking. If blocking code is called, then the event loop will effectively be stopped, which can be undesirable or dangerous. Such models are used in Python asyncio, Vert.x, and Node.js, or other custom event loop code.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1323",
      "Name": "Improper Management of Sensitive Trace Data",
      "Abstraction": "Base",
      "Description": "Trace data collected from several sources on the\n                System-on-Chip (SoC) is stored in unprotected locations or\n                transported to untrusted agents.",
      "ExtendedDescription": "\n\nTo facilitate verification of complex System-on-Chip (SoC) designs, SoC integrators add specific IP blocks that trace the SoC's internal signals in real-time. This infrastructure enables observability of the SoC's internal behavior, validation of its functional design, and detection of hardware and software bugs. Such tracing IP blocks collect traces from several sources on the SoC including the CPU, crypto coprocessors, and on-chip fabrics. Traces collected from these sources are then aggregated inside trace IP block and forwarded to trace sinks, such as debug-trace ports that facilitate debugging by external hardware and software debuggers.\n\n\nSince these traces are collected from several security-sensitive sources, they must be protected against untrusted debuggers. If they are stored in unprotected memory, an untrusted software debugger can access these traces and extract secret information. Additionally, if security-sensitive traces are not tagged as secure, an untrusted hardware debugger might access them to extract confidential information.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1325",
      "Name": "Improperly Controlled Sequential Memory Allocation",
      "Abstraction": "Base",
      "Description": "The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.",
      "ExtendedDescription": "\n\nWhile the product might limit the amount of memory that is allocated in a single operation for a single object (such as a malloc of an array), if an attacker can cause multiple objects to be allocated in separate operations, then this might cause higher total memory consumption than the developer intended, leading to a denial of service.\n",
      "AlternateTerms": [
        {
          "Term": "Stack Exhaustion",
          "Description": "When a weakness allocates excessive memory on the stack, it is often described as \"stack exhaustion,\" which is a technical impact of the weakness. This technical impact is often encountered as a consequence of CWE-789 and/or CWE-1325."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-36049",
          "Description": "JavaScript-based packet decoder uses concatenation of many small strings, causing out-of-memory (OOM) condition",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-36049"
        },
        {
          "Reference": "CVE-2019-20176",
          "Description": "Product allocates a new buffer on the stack for each file in a directory, allowing stack exhaustion",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-20176"
        },
        {
          "Reference": "CVE-2013-1591",
          "Description": "Chain: an integer overflow (CWE-190) in the image size calculation causes an infinite loop (CWE-835) which sequentially allocates buffers without limits (CWE-1325) until the stack is full.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2013-1591"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1326",
      "Name": "Missing Immutable Root of Trust in Hardware",
      "Abstraction": "Base",
      "Description": "A missing immutable root of trust in the hardware results in the ability to bypass secure boot or execute untrusted or adversarial boot code.",
      "ExtendedDescription": "\n\nA System-on-Chip (SoC) implements secure boot by verifying or authenticating signed boot code. The signing of the code is achieved by an entity that the SoC trusts. Before executing the boot code, the SoC verifies that the code or the public key with which the code has been signed has not been tampered with. The other data upon which the SoC depends are system-hardware settings in fuses such as whether \"Secure Boot is enabled\". These data play a crucial role in establishing a Root of Trust (RoT) to execute secure-boot flows.\n\n\nOne of the many ways RoT is achieved is by storing the code and data in memory or fuses. This memory should be immutable, i.e., once the RoT is programmed/provisioned in memory, that memory should be locked and prevented from further programming or writes. If the memory contents (i.e., RoT) are mutable, then an adversary can modify the RoT to execute their choice of code, resulting in a compromised secure boot.\n\n\nNote that, for components like ROM, secure patching/update features should be supported to allow authenticated and authorized updates in the field. \n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1327",
      "Name": "Binding to an Unrestricted IP Address",
      "Abstraction": "Base",
      "Description": "The product assigns the address 0.0.0.0 for a database server, a cloud service/instance, or any computing resource that communicates remotely.",
      "ExtendedDescription": "\n\nWhen a server binds to the address 0.0.0.0, it allows connections from every IP address on the local machine, effectively exposing the server to every possible network. This might be much broader access than intended by the developer or administrator, who might only be expecting the server to be reachable from a single interface/network.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-21947",
          "Description": "Desktop manager for Kubernetes and container management binds a service to 0.0.0.0, allowing users on the network to make requests to a dashboard API.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-21947"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1328",
      "Name": "Security Version Number Mutable to Older Versions",
      "Abstraction": "Base",
      "Description": "Security-version number in hardware is mutable, resulting in the ability to downgrade (roll-back) the boot firmware to vulnerable code versions.",
      "ExtendedDescription": "\n\nA System-on-Chip (SoC) implements secure boot or verified boot. It might support a security version number, which prevents downgrading the current firmware to a vulnerable version. Once downgraded to a previous version, an adversary can launch exploits on the SoC and thus compromise the security of the SoC. These downgrade attacks are also referred to as roll-back attacks.\n\n\nThe security version number must be stored securely and persistently across power-on resets. A common weakness is that the security version number is modifiable by an adversary, allowing roll-back or downgrade attacks or, under certain circumstances, preventing upgrades (i.e. Denial-of-Service on upgrades). In both cases, the SoC is in a vulnerable state.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1329",
      "Name": "Reliance on Component That is Not Updateable",
      "Abstraction": "Base",
      "Description": "The product contains a component that cannot be updated or patched in order to remove vulnerabilities or significant bugs.",
      "ExtendedDescription": "\n\n If the component is discovered to contain a vulnerability or critical bug, but the issue cannot be fixed using an update or patch, then the product's owner will not be able to protect against the issue. The only option might be replacement of the product, which could be too financially or operationally expensive for the product owner. As a result, the inability to patch or update can leave the product open to attacker exploitation or critical operation failures. This weakness can be especially difficult to manage when using ROM, firmware, or similar components that traditionally have had limited or no update capabilities. \n\n\n In industries such as healthcare, \"legacy\" devices can be operated for decades. As a US task force report [REF-1197] notes, \"the inability to update or replace equipment has both large and small health care delivery organizations struggle with numerous unsupported legacy systems that cannot easily be replaced (hardware, software, and operating systems) with large numbers of vulnerabilities and few modern countermeasures.\" \n\n\n While hardware can be prone to this weakness, software systems can also be affected, such as when a third-party driver or library is no longer actively maintained or supported but is still critical for the required functionality.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-9054",
          "Description": "Chain: network-attached storage (NAS) device has a critical OS command injection (CWE-78) vulnerability that is actively exploited to place IoT devices into a botnet, but some products are \"end-of-support\" and cannot be patched (CWE-1277). [REF-1097]",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-9054"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1330",
      "Name": "Remanent Data Readable after Memory Erase",
      "Abstraction": "Variant",
      "Description": "Confidential information stored in memory circuits is readable or recoverable after being cleared or erased.",
      "ExtendedDescription": "\n\nData remanence occurs when stored, memory content is not fully lost after a memory-clear or -erase operation. Confidential memory contents can still be readable through data remanence in the hardware.\n\n\nData remanence can occur because of performance optimization or memory organization during 'clear' or 'erase' operations, like a design that allows the memory-organization metadata (e.g., file pointers) to be erased without erasing the actual memory content. To protect against this weakness, memory devices will often support different commands for optimized memory erase and explicit secure erase.\n\n\nData remanence can also happen because of the physical properties of memory circuits in use. For example, static, random-access-memory (SRAM) and dynamic, random-access-memory (DRAM) data retention is based on the charge retained in the memory cell, which depends on factors such as power supply, refresh rates, and temperature.\n\n\nOther than explicit erase commands, self-encrypting, secure-memory devices can also support secure erase through cryptographic erase commands. In such designs, only the decryption keys for encrypted data stored on the device are erased. That is, the stored data are always remnant in the media after a cryptographic erase. However, only the encrypted data can be extracted. Thus, protection against data recovery in such designs relies on the strength of the encryption algorithm.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-8575",
          "Description": "Firmware Data Deletion Vulnerability in which a base station factory reset might not delete all user information. The impact of this enables a new owner of a used device that has been \"factory-default reset\" with a vulnerable firmware version can still retrieve, at least, the previous owner's wireless network name, and the previous owner's wireless security (such as WPA2) key. This issue was addressed with improved, data deletion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-8575"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1331",
      "Name": "Improper Isolation of Shared Resources in Network On Chip (NoC)",
      "Abstraction": "Base",
      "Description": "The Network On Chip (NoC) does not isolate or incorrectly isolates its on-chip-fabric and internal resources such that they are shared between trusted and untrusted agents, creating timing channels.",
      "ExtendedDescription": "\n\nTypically, network on chips (NoC) have many internal resources that are shared between packets from different trust domains. These resources include internal buffers, crossbars and switches, individual ports, and channels. The sharing of resources causes contention and introduces interference between differently trusted domains, which poses a security threat via a timing channel, allowing attackers to infer data that belongs to a trusted agent. This may also result in introducing network interference, resulting in degraded throughput and latency.\n",
      "BackgroundDetails": [
        "\n\n\"Network-on-chip\" (NoC) is a commonly-used term used for hardware interconnect fabrics used by multicore Systems-on-Chip (SoC). Communication between modules on the chip uses packet-based methods, with improved efficiency and scalability compared to bus architectures [REF-1241].\n"
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-33096",
          "Description": "Improper isolation of shared resource in a network-on-chip leads to denial of service",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-33096"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1332",
      "Name": "Improper Handling of Faults that Lead to Instruction Skips",
      "Abstraction": "Base",
      "Description": "The device is missing or incorrectly implements circuitry or sensors that detect and mitigate the skipping of security-critical CPU instructions when they occur.",
      "ExtendedDescription": "\n\nThe operating conditions of hardware may change in ways that cause unexpected behavior to occur, including the skipping of security-critical CPU instructions. Generally, this can occur due to electrical disturbances or when the device operates outside of its expected conditions.\n\n\nIn practice, application code may contain conditional branches that are security-sensitive (e.g., accepting or rejecting a user-provided password). These conditional branches are typically implemented by a single conditional branch instruction in the program binary which, if skipped, may lead to effectively flipping the branch condition - i.e., causing the wrong security-sensitive branch to be taken. This affects processes such as firmware authentication, password verification, and other security-sensitive decision points.\n\n\nAttackers can use fault injection techniques to alter the operating conditions of hardware so that security-critical instructions are skipped more frequently or more reliably than they would in a \"natural\" setting.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-15894",
          "Description": "fault injection attack bypasses the verification mode, potentially allowing arbitrary code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-15894"
        }
      ],
      "FunctionalAreas": [
        "Power"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1333",
      "Name": "Inefficient Regular Expression Complexity",
      "Abstraction": "Base",
      "Description": "The product uses a regular expression with an inefficient, possibly exponential worst-case computational complexity that consumes excessive CPU cycles.",
      "ExtendedDescription": "Some regular expression engines have a feature called \"backtracking\". If the token cannot match, the engine \"backtracks\" to a position that may result in a different token that can match.\n Backtracking becomes a weakness if all of these conditions are met:\n\n\n  - The number of possible backtracking attempts are exponential relative to the length of the input.\n\n  - The input can fail to match the regular expression.\n\n  - The input can be long enough.\n\n Attackers can create crafted inputs that intentionally cause the regular expression to use excessive backtracking in a way that causes the CPU consumption to spike. ",
      "AlternateTerms": [
        {
          "Term": "ReDoS",
          "Description": "ReDoS is an abbreviation of \"Regular expression Denial of Service\"."
        },
        {
          "Term": "Regular Expression Denial of Service",
          "Description": "While this term is attack-focused, this is commonly used to describe the weakness."
        },
        {
          "Term": "Catastrophic backtracking",
          "Description": "This term is used to describe the behavior of the regular expression as a negative technical impact."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-5243",
          "Description": "server allows ReDOS with crafted User-Agent strings, due to overlapping capture groups that cause excessive backtracking.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-5243"
        },
        {
          "Reference": "CVE-2021-21317",
          "Description": "npm package for user-agent parser prone to ReDoS due to overlapping capture groups",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-21317"
        },
        {
          "Reference": "CVE-2019-16215",
          "Description": "Markdown parser uses inefficient regex when processing a message, allowing users to cause CPU consumption and delay preventing processing of other messages.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-16215"
        },
        {
          "Reference": "CVE-2019-6785",
          "Description": "Long string in a version control product allows DoS due to an inefficient regex.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-6785"
        },
        {
          "Reference": "CVE-2019-12041",
          "Description": "Javascript code allows ReDoS via a long string due to excessive backtracking.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-12041"
        },
        {
          "Reference": "CVE-2015-8315",
          "Description": "ReDoS when parsing time.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2015-8315"
        },
        {
          "Reference": "CVE-2015-8854",
          "Description": "ReDoS when parsing documents.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2015-8854"
        },
        {
          "Reference": "CVE-2017-16021",
          "Description": "ReDoS when validating URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-16021"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "1334",
      "Name": "Unauthorized Error Injection Can Degrade Hardware Redundancy",
      "Abstraction": "Base",
      "Description": "An unauthorized agent can inject errors into a redundant block to deprive the system of redundancy or put the system in a degraded operating mode.",
      "ExtendedDescription": "\n\nTo ensure the performance and functional reliability of certain components, hardware designers can implement hardware blocks for redundancy in the case that others fail. This redundant block can be prevented from performing as intended if the design allows unauthorized agents to inject errors into it. In this way, a path with injected errors may become unavailable to serve as a redundant channel. This may put the system into a degraded mode of operation which could be exploited by a subsequent attack.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1335",
      "Name": "Incorrect Bitwise Shift of Integer",
      "Abstraction": "Base",
      "Description": "An integer value is specified to be shifted by a negative amount or an amount greater than or equal to the number of bits contained in the value causing an unexpected or indeterminate result.",
      "ExtendedDescription": "\n\nSpecifying a value to be shifted by a negative amount is undefined in various languages. Various computer architectures implement this action in different ways. The compilers and interpreters when generating code to accomplish a shift generally do not do a check for this issue.\n\n\nSpecifying an over-shift, a shift greater than or equal to the number of bits contained in a value to be shifted, produces a result which varies by architecture and compiler. In some languages, this action is specifically listed as producing an undefined result.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2009-4307",
          "Description": "An unexpected large value in the ext4 filesystem causes an overshift condition resulting in a divide by zero.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-4307"
        },
        {
          "Reference": "CVE-2012-2100",
          "Description": "An unexpected large value in the ext4 filesystem causes an overshift condition resulting in a divide by zero - fix of CVE-2009-4307.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-2100"
        },
        {
          "Reference": "CVE-2020-8835",
          "Description": "An overshift in a kernel allowed out of bounds reads and writes resulting in a root takeover.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8835"
        },
        {
          "Reference": "CVE-2015-1607",
          "Description": "Program is not properly handling signed bitwise left-shifts causing an overlapping memcpy memory range error.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2015-1607"
        },
        {
          "Reference": "CVE-2016-9842",
          "Description": "Compression function improperly executes a signed left shift of a negative integer.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2016-9842"
        },
        {
          "Reference": "CVE-2018-18445",
          "Description": "Some kernels improperly handle right shifts of 32 bit numbers in a 64 bit register.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-18445"
        },
        {
          "Reference": "CVE-2013-4206",
          "Description": "Putty has an incorrectly sized shift value resulting in an overshift.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2013-4206"
        },
        {
          "Reference": "CVE-2018-20788",
          "Description": "LED driver overshifts under certain conditions resulting in a DoS.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-20788"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1336",
      "Name": "Improper Neutralization of Special Elements Used in a Template Engine",
      "Abstraction": "Base",
      "Description": "The product uses a template engine to insert or process externally-influenced input, but it does not neutralize or incorrectly neutralizes special elements or syntax that can be interpreted as template expressions or other code directives when processed by the engine.",
      "ExtendedDescription": "\n\nMany web applications use template engines that allow developers to insert externally-influenced values into free text or messages in order to generate a full web page, document, message, etc. Such engines include Twig, Jinja2, Pug, Java Server Pages, FreeMarker, Velocity, ColdFusion, Smarty, and many others - including PHP itself. Some CMS (Content Management Systems) also use templates.\n\n\nTemplate engines often have their own custom command or expression language. If an attacker can influence input into a template before it is processed, then the attacker can invoke arbitrary expressions, i.e. perform injection attacks. For example, in some template languages, an attacker could inject the expression \"{{7*7}}\" and determine if the output returns \"49\" instead. The syntax varies depending on the language.\n\n\nIn some cases, XSS-style attacks can work, which can obscure the root cause if the developer does not closely investigate the root cause of the error.\n\n\nTemplate engines can be used on the server or client, so both \"sides\" could be affected by injection. The mechanisms of attack or the affected technologies might be different, but the mistake is fundamentally the same.\n",
      "AlternateTerms": [
        {
          "Term": "Server-Side Template Injection / SSTI",
          "Description": "This term is used for injection into template engines being used by a server."
        },
        {
          "Term": "Client-Side Template Injection / CSTI",
          "Description": "This term is used for injection into template engines being used by a client."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2024-34359",
          "Description": "Chain: Python bindings for LLM library do not use a sandboxed environment when parsing a template and constructing a prompt, allowing jinja2 Server Side Template Injection and code execution - one variant of a \"prompt injection\" attack.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2024-34359"
        },
        {
          "Reference": "CVE-2017-16783",
          "Description": "server-side template injection in content management server",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-16783"
        },
        {
          "Reference": "CVE-2020-9437",
          "Description": "authentication / identity management product has client-side template injection",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-9437"
        },
        {
          "Reference": "CVE-2020-12790",
          "Description": "Server-Side Template Injection using a Twig template",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-12790"
        },
        {
          "Reference": "CVE-2021-21244",
          "Description": "devops platform allows SSTI",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-21244"
        },
        {
          "Reference": "CVE-2020-4027",
          "Description": "bypass of Server-Side Template Injection protection mechanism with macros in Velocity templates",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-4027"
        },
        {
          "Reference": "CVE-2020-26282",
          "Description": "web browser proxy server allows Java EL expressions from Server-Side Template Injection",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-26282"
        },
        {
          "Reference": "CVE-2020-1961",
          "Description": "SSTI involving mail templates and JEXL expressions",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-1961"
        },
        {
          "Reference": "CVE-2019-19999",
          "Description": "product does not use a \"safe\" setting for a FreeMarker configuration, allowing SSTI",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-19999"
        },
        {
          "Reference": "CVE-2018-20465",
          "Description": "product allows read of sensitive database username/password variables using server-side template injection",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-20465"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1338",
      "Name": "Improper Protections Against Hardware Overheating",
      "Abstraction": "Base",
      "Description": "A hardware device is missing or has inadequate protection features to prevent overheating.",
      "ExtendedDescription": "\n\nHardware, electrical circuits, and semiconductor silicon have thermal side effects, such that some of the energy consumed by the device gets dissipated as heat and increases the temperature of the device. For example, in semiconductors, higher-operating frequency of silicon results in higher power dissipation and heat. The leakage current in CMOS circuits increases with temperature, and this creates positive feedback that can result in thermal runaway and damage the device permanently.\n\n\nAny device lacking protections such as thermal sensors, adequate platform cooling, or thermal insulation is susceptible to attacks by malicious software that might deliberately operate the device in modes that result in overheating. This can be used as an effective denial of service (DoS) or permanent denial of service (PDoS) attack.\n\n\nDepending on the type of hardware device and its expected usage, such thermal overheating can also cause safety hazards and reliability issues. Note that battery failures can also cause device overheating but the mitigations and examples included in this submission cannot reliably protect against a battery failure. \n\n\nThere can be similar weaknesses with lack of protection from attacks based on overvoltage or overcurrent conditions. However, thermal heat is generated by hardware operation and the device should implement protection from overheating.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1339",
      "Name": "Insufficient Precision or Accuracy of a Real Number",
      "Abstraction": "Base",
      "Description": "The product processes a real number with an implementation in which the number's representation does not preserve required accuracy and precision in its fractional part, causing an incorrect result.",
      "ExtendedDescription": "\n\nWhen a security decision or calculation requires highly precise, accurate numbers such as financial calculations or prices, then small variations in the number could be exploited by an attacker. \n\n\nThere are multiple ways to store the fractional part of a real number in a computer. In all of these cases, there is a limit to the accuracy of recording a fraction. If the fraction can be represented in a fixed number of digits (binary or decimal), there might not be enough digits assigned to represent the number. In other cases the number cannot be represented in a fixed number of digits due to repeating in decimal or binary notation (e.g. 0.333333...) or due to a transcendental number such as \u03a0 or \u221a2. Rounding of numbers can lead to situations where the computer results do not adequately match the result of sufficiently accurate math. \n",
      "BackgroundDetails": [
        "There are three major ways to store real numbers in computers. Each method is described along with the limitations of how they store their numbers. \n\n  - Fixed: Some implementations use a fixed number of binary bits to represent both the integer and the fraction. In the demonstrative example about Muller's Recurrence, the fraction 108.0 - ((815.0 - 1500.0 / z) / y) cannot be represented in 8 binary digits. The numeric accuracy within languages such as PL/1, COBOL and Ada is expressed in decimal digits rather than binary digits. In SQL and most databases, the length of the integer and the fraction are specified by the programmer in decimal. In the language C, fixed reals are implemented according to ISO/IEC TR18037\n\n  - Floating: The number is stored in a version of scientific notation with a fixed length for the base and the significand. This allows flexibility for more accuracy when the integer portion is smaller. When dealing with large integers, the fractional accuracy is less. Languages such as PL/1, COBOL and Ada set the accuracy by decimal digit representation rather than using binary digits. Python also implements decimal floating-point numbers using the IEEE 754-2008 encoding method.\n\n  - Ratio: The number is stored as the ratio of two integers. These integers also have their limits. These integers can be stored in a fixed number of bits or in a vector of digits. While the vector of digits method provides for very large integers, they cannot truly represent a repeating or transcendental number as those numbers do not ever have a fixed length.\n\n"
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2018-16069",
          "Description": "Chain: series of floating-point precision errors (CWE-1339) in a web browser rendering engine causes out-of-bounds read (CWE-125), giving access to cross-origin data",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-16069"
        },
        {
          "Reference": "CVE-2017-7619",
          "Description": "Chain: rounding error in floating-point calculations (CWE-1339) in image processor leads to infinite loop (CWE-835)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-7619"
        },
        {
          "Reference": "CVE-2021-29529",
          "Description": "Chain: machine-learning product can have a heap-based buffer overflow (CWE-122) when some integer-oriented bounds are calculated by using ceiling() and floor() on floating point values (CWE-1339)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-29529"
        },
        {
          "Reference": "CVE-2008-2108",
          "Description": "Chain: insufficient precision (CWE-1339) in random-number generator causes some zero bits to be reliably generated, reducing the amount of entropy (CWE-331)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2108"
        },
        {
          "Reference": "CVE-2006-6499",
          "Description": "Chain: web browser crashes due to infinite loop - \"bad looping logic [that relies on] floating point math [CWE-1339] to exit the loop [CWE-835]\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6499"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "134",
      "Name": "Use of Externally-Controlled Format String",
      "Abstraction": "Base",
      "Description": "The product uses a function that accepts a format string as an argument, but the format string originates from an external source.",
      "ExtendedDescription": "\n\nWhen an attacker can modify an externally-controlled format string, this can lead to buffer overflows, denial of service, or data representation problems.\n\n\nIt should be noted that in some circumstances, such as internationalization, the set of format strings is externally controlled by design. If the source of these format strings is trusted (e.g. only contained in library files that are only modifiable by the system administrator), then the external control might not itself pose a vulnerability.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1825",
          "Description": "format string in Perl program",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1825"
        },
        {
          "Reference": "CVE-2001-0717",
          "Description": "format string in bad call to syslog function",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0717"
        },
        {
          "Reference": "CVE-2002-0573",
          "Description": "format string in bad call to syslog function",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0573"
        },
        {
          "Reference": "CVE-2002-1788",
          "Description": "format strings in NNTP server responses",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1788"
        },
        {
          "Reference": "CVE-2006-2480",
          "Description": "Format string vulnerability exploited by triggering errors or warnings, as demonstrated via format string specifiers in a .bmp filename.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2480"
        },
        {
          "Reference": "CVE-2007-2027",
          "Description": "Chain: untrusted search path enabling resultant format string by loading malicious internationalization messages",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-2027"
        }
      ],
      "FunctionalAreas": [
        "Logging",
        "Error Handling",
        "String Processing"
      ],
      "AffectedResources": [
        "Memory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "1341",
      "Name": "Multiple Releases of Same Resource or Handle",
      "Abstraction": "Base",
      "Description": "The product attempts to close or release a resource or handle more than once, without any successful open between the close operations.",
      "ExtendedDescription": "\n\nCode typically requires \"opening\" handles or references to resources such as memory, files, devices, socket connections, services, etc. When the code is finished with using the resource, it is typically expected to \"close\" or \"release\" the resource, which indicates to the environment (such as the OS) that the resource can be re-assigned or reused by unrelated processes or actors - or in some cases, within the same process. API functions or other abstractions are often used to perform this release, such as free() or delete() within C/C++, or file-handle close() operations that are used in many languages.\n\n\nUnfortunately, the implementation or design of such APIs might expect the developer to be responsible for ensuring that such APIs are only called once per release of the resource. If the developer attempts to release the same resource/handle more than once, then the API's expectations are not met, resulting in undefined and/or insecure behavior. This could lead to consequences such as memory corruption, data corruption, execution path corruption, or other consequences.\n\n\nNote that while the implementation for most (if not all) resource reservation allocations involve a unique identifier/pointer/symbolic reference, then if this identifier is reused, checking the identifier for resource closure may result in a false state of openness and closing of the wrong resource. For this reason, reuse of identifiers is discouraged.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-13351",
          "Description": "file descriptor double close can cause the wrong file to be associated with a file descriptor.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-13351"
        },
        {
          "Reference": "CVE-2006-5051",
          "Description": "Chain: Signal handler contains too much functionality (CWE-828), introducing a race condition that leads to a double free (CWE-415).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-5051"
        },
        {
          "Reference": "CVE-2004-0772",
          "Description": "Double free resultant from certain error conditions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0772"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1342",
      "Name": "Information Exposure through Microarchitectural State after Transient Execution",
      "Abstraction": "Base",
      "Description": "The processor does not properly clear microarchitectural state after incorrect microcode assists or speculative execution, resulting in transient execution.",
      "ExtendedDescription": "\n\nIn many processor architectures an exception, mis-speculation, or microcode assist results in a flush operation to clear results that are no longer required. This action prevents these results from influencing architectural state that is intended to be visible from software. However, traces of this transient execution may remain in microarchitectural buffers, resulting in a change in microarchitectural state that can expose sensitive information to an attacker using side-channel analysis. For example, Load Value Injection (LVI) [REF-1202] can exploit direct injection of erroneous values into intermediate load and store buffers.\n\n\nSeveral conditions may need to be fulfilled for a successful attack:\n\n\n  1. incorrect transient execution that results in remanence of sensitive information;\n\n  1. attacker has the ability to provoke microarchitectural exceptions;\n\n  1. operations and structures in victim code that can be exploited must be identified.\n\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-0551",
          "Description": "Load value injection in some processors utilizing speculative execution may allow an authenticated user to enable information disclosure via a side-channel with local access.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-0551"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "135",
      "Name": "Incorrect Calculation of Multi-Byte String Length",
      "Abstraction": "Base",
      "Description": "The product does not correctly calculate the length of strings that can contain wide or multi-byte characters.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1351",
      "Name": "Improper Handling of Hardware Behavior in Exceptionally Cold Environments",
      "Abstraction": "Base",
      "Description": "A hardware device, or the firmware running on it, is\n                missing or has incorrect protection features to maintain\n                goals of security primitives when the device is cooled below\n                standard operating temperatures.",
      "ExtendedDescription": "\n\nThe hardware designer may improperly anticipate hardware behavior when exposed to exceptionally cold conditions. As a result they may introduce a weakness by not accounting for the modified behavior of critical components when in extreme environments.\n\n\nAn example of a change in behavior is that power loss won't clear/reset any volatile state when cooled below standard operating temperatures. This may result in a weakness when the starting state of the volatile memory is being relied upon for a security decision. For example, a Physical Unclonable Function (PUF) may be supplied as a security primitive to improve confidentiality, authenticity, and integrity guarantees. However, when the PUF is paired with DRAM, SRAM, or another temperature sensitive entropy source, the system designer may introduce weakness by failing to account for the chosen entropy source's behavior at exceptionally low temperatures. In the case of DRAM and SRAM, when power is cycled at low temperatures, the device will not contain the bitwise biasing caused by inconsistencies in manufacturing and will instead contain the data from previous boot. Should the PUF primitive be used in a cryptographic construction which does not account for full adversary control of PUF seed data, weakness would arise.\n\n\nThis weakness does not cover \"Cold Boot Attacks\" wherein RAM or other external storage is super cooled and read externally by an attacker.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1357",
      "Name": "Reliance on Insufficiently Trustworthy Component",
      "Abstraction": "Class",
      "Description": "The product is built from multiple separate components, but it uses a component that is not sufficiently trusted to meet expectations for security, reliability, updateability, and maintainability.",
      "ExtendedDescription": "\n\nMany modern hardware and software products are built by combining multiple smaller components together into one larger entity, often during the design or architecture phase. For example, a hardware component might be built by a separate supplier, or the product might use an open-source software library from a third party.\n\n\nRegardless of the source, each component should be sufficiently trusted to ensure correct, secure operation of the product. If a component is not trustworthy, it can produce significant risks for the overall product, such as vulnerabilities that cannot be patched fast enough (if at all); hidden functionality such as malware; inability to update or replace the component if needed for security purposes; hardware components built from parts that do not meet specifications in ways that can lead to weaknesses; etc. Note that a component might not be trustworthy even if it is owned by the product vendor, such as a software component whose source code is lost and was built by developers who left the company, or a component that was developed by a separate company that was acquired and brought into the product's own company.\n\n\nNote that there can be disagreement as to whether a component is sufficiently trustworthy, since trust is ultimately subjective. Different stakeholders (e.g., customers, vendors, governments) have various threat models and ways to assess trust, and design/architecture choices might make tradeoffs between security, reliability, safety, privacy, cost, and other characteristics.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-9054",
          "Description": "Chain: network-attached storage (NAS) device has a critical OS command injection (CWE-78) vulnerability that is actively exploited to place IoT devices into a botnet, but some products are \"end-of-support\" and cannot be patched (CWE-1277). [REF-1097]",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-9054"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "138",
      "Name": "Improper Neutralization of Special Elements",
      "Abstraction": "Class",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.",
      "ExtendedDescription": "Most languages and protocols have their own special elements such as characters and reserved words. These special elements can carry control implications. If product does not prevent external control or influence over the inclusion of such special elements, the control flow of the program may be altered from what was intended. For example, both Unix and Windows interpret the symbol < (\"less than\") as meaning \"read input from a file\".",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-0677",
          "Description": "Read arbitrary files from mail client by providing a special MIME header that is internally used to store pathnames for attachments.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0677"
        },
        {
          "Reference": "CVE-2000-0703",
          "Description": "Setuid program does not cleanse special escape sequence before sending data to a mail program, causing the mail program to process those sequences.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0703"
        },
        {
          "Reference": "CVE-2003-0020",
          "Description": "Multi-channel issue. Terminal escape sequences not filtered from log files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0020"
        },
        {
          "Reference": "CVE-2003-0083",
          "Description": "Multi-channel issue. Terminal escape sequences not filtered from log files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0083"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "1384",
      "Name": "Improper Handling of Physical or Environmental Conditions",
      "Abstraction": "Class",
      "Description": "The product does not properly handle unexpected physical or environmental conditions that occur naturally or are artificially induced.",
      "ExtendedDescription": "\n\nHardware products are typically only guaranteed to behave correctly within certain physical limits or environmental conditions. Such products cannot necessarily control the physical or external conditions to which they are subjected. However, the inability to handle such conditions can undermine a product's security. For example, an unexpected physical or environmental condition may cause the flipping of a bit that is used for an authentication decision. This unexpected condition could occur naturally or be induced artificially by an adversary.\n\n\nPhysical or environmental conditions of concern are:\n\n\n  -  **Atmospheric characteristics: ** extreme temperature ranges, etc.\n\n  -  **Interference: ** electromagnetic interference (EMI), radio frequency interference (RFI), etc.\n\n  -  **Assorted light sources: ** white light, ultra-violet light (UV), lasers, infrared (IR), etc.\n\n  -  **Power variances: ** under-voltages, over-voltages, under-current, over-current, etc.\n\n  -  **Clock variances: ** glitching, overclocking, clock stretching, etc.\n\n  -  **Component aging and degradation** \n\n  -  **Materials manipulation: ** focused ion beams (FIB), etc.\n\n  -  **Exposure to radiation: ** x-rays, cosmic radiation, etc.\n\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-17391",
          "Description": "Lack of anti-glitch protections allows an attacker to launch a physical attack to bypass the secure boot and read protected eFuses.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-17391"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "1385",
      "Name": "Missing Origin Validation in WebSockets",
      "Abstraction": "Variant",
      "Description": "The product uses a WebSocket, but it does not properly verify that the source of data or communication is valid.",
      "ExtendedDescription": "\n\nWebSockets provide a bi-directional low latency communication (near real-time) between a client and a server. WebSockets are different than HTTP in that the connections are long-lived, as the channel will remain open until the client or the server is ready to send the message, whereas in HTTP, once the response occurs (which typically happens immediately), the transaction completes. \n\n\nA WebSocket can leverage the existing HTTP protocol over ports 80 and 443, but it is not limited to HTTP. WebSockets can make cross-origin requests that are not restricted by browser-based protection mechanisms such as the Same Origin Policy (SOP) or Cross-Origin Resource Sharing (CORS). Without explicit origin validation, this makes CSRF attacks more powerful.\n",
      "AlternateTerms": [
        {
          "Term": "Cross-Site WebSocket hijacking (CSWSH)",
          "Description": "this term is used for attacks that exploit this weakness"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-25095",
          "Description": "web console for SIEM product does not check Origin header, allowing Cross Site WebSocket Hijacking (CSWH)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-25095"
        },
        {
          "Reference": "CVE-2018-6651",
          "Description": "Chain: gaming client attempts to validate the Origin header, but only uses a substring, allowing Cross-Site WebSocket hijacking by forcing requests from an origin whose hostname is a substring of the valid origin.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-6651"
        },
        {
          "Reference": "CVE-2018-14730",
          "Description": "WebSocket server does not check the origin of requests, allowing attackers to steal developer's code using a ws://127.0.0.1:3123/ connection.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-14730"
        },
        {
          "Reference": "CVE-2018-14731",
          "Description": "WebSocket server does not check the origin of requests, allowing attackers to steal developer's code using a ws://127.0.0.1/ connection to a randomized port number.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-14731"
        },
        {
          "Reference": "CVE-2018-14732",
          "Description": "WebSocket server does not check the origin of requests, allowing attackers to steal developer's code using a ws://127.0.0.1:8080/ connection.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-14732"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1386",
      "Name": "Insecure Operation on Windows Junction / Mount Point",
      "Abstraction": "Base",
      "Description": "The product opens a file or directory, but it does not properly prevent the name from being associated with a junction or mount point to a destination that is outside of the intended control sphere.",
      "ExtendedDescription": "\n\nDepending on the intended action being performed, this could allow an attacker to cause the product to read, write, delete, or otherwise operate on unauthorized files.\n\n\nIn Windows, NTFS5 allows for file system objects called reparse points. Applications can create a hard link from one directory to another directory, called a junction point. They can also create a mapping from a directory to a drive letter, called a mount point. If a file is used by a privileged program, but it can be replaced with a hard link to a sensitive file (e.g., AUTOEXEC.BAT), an attacker could excalate privileges. When the process opens the file, the attacker can assume the privileges of that process, tricking the privileged process to read, modify, or delete the sensitive file, preventing the program from accurately processing data. Note that one can also point to registries and semaphores.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-26426",
          "Description": "Privileged service allows attackers to delete unauthorized files using a directory junction, leading to arbitrary code execution as SYSTEM.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-26426"
        },
        {
          "Reference": "CVE-2020-0863",
          "Description": "By creating a mount point and hard links, an attacker can abuse a service to allow users arbitrary file read permissions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-0863"
        },
        {
          "Reference": "CVE-2019-1161",
          "Description": "Chain: race condition (CWE-362) in anti-malware product allows deletion of files by creating a junction (CWE-1386) and using hard links during the time window in which a temporary file is created and deleted.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-1161"
        },
        {
          "Reference": "CVE-2014-0568",
          "Description": "Escape from sandbox for document reader by using a mountpoint [REF-1264]",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-0568"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1389",
      "Name": "Incorrect Parsing of Numbers with Different Radices",
      "Abstraction": "Base",
      "Description": "The product parses numeric input assuming base 10 (decimal) values, but it does not account for inputs that use a different base number (radix).",
      "ExtendedDescription": "\n\nFrequently, a numeric input that begins with \"0\" is treated as octal, or \"0x\" causes it to be treated as hexadecimal, e.g. by the inet_addr() function. For example, \"023\" (octal) is 35 decimal, or \"0x31\" is 49 decimal. Other bases may be used as well. If the developer assumes decimal-only inputs, the code could produce incorrect numbers when the inputs are parsed using a different base. This can result in unexpected and/or dangerous behavior. For example, a \"0127.0.0.1\" IP address is parsed as octal due to the leading \"0\", whose numeric value would be the same as 87.0.0.1 (decimal), where the developer likely expected to use 127.0.0.1.\n\n\nThe consequences vary depending on the surrounding code in which this weakness occurs, but they can include bypassing network-based access control using unexpected IP addresses or netmasks, or causing apparently-symbolic identifiers to be processed as if they are numbers. In web applications, this can enable bypassing of SSRF restrictions.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-29662",
          "Description": "Chain: Use of zero-prepended IP addresses in Perl-based IP validation module can lead to an access control bypass.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-29662"
        },
        {
          "Reference": "CVE-2021-28918",
          "Description": "Chain: Use of zero-prepended IP addresses in a product that manages IP blocks can lead to an SSRF.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-28918"
        },
        {
          "Reference": "CVE-2021-29921",
          "Description": "Chain: Use of zero-prepended IP addresses in a Python standard library package can lead to an SSRF.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-29921"
        },
        {
          "Reference": "CVE-2021-29923",
          "Description": "Chain: Use of zero-prepended IP addresses in the net Golang library can lead to an access control bypass.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-29923"
        },
        {
          "Reference": "CVE-2021-29424",
          "Description": "Chain: Use of zero-prepended IP addresses in Perl netmask module allows bypass of IP-based access control.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-29424"
        },
        {
          "Reference": "CVE-2016-4029",
          "Description": "Chain: incorrect validation of intended decimal-based IP address format (CWE-1286) enables parsing of octal or hexadecimal formats (CWE-1389), allowing bypass of an SSRF protection mechanism (CWE-918).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2016-4029"
        },
        {
          "Reference": "CVE-2020-13776",
          "Description": "Mishandling of hex-valued usernames leads to unexpected decimal conversion and privilege escalation in the systemd Linux suite.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-13776"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1390",
      "Name": "Weak Authentication",
      "Abstraction": "Class",
      "Description": "The product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.",
      "ExtendedDescription": "\n\nAttackers may be able to bypass weak authentication faster and/or with less effort than expected.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-30034",
          "Description": "Chain: Web UI for a Python RPC framework does not use regex anchors to validate user login emails (CWE-777), potentially allowing bypass of OAuth (CWE-1390).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30034"
        },
        {
          "Reference": "CVE-2022-35248",
          "Description": "Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-35248"
        },
        {
          "Reference": "CVE-2021-3116",
          "Description": "Chain: Python-based HTTP Proxy server uses the wrong boolean operators (CWE-480) causing an incorrect comparison (CWE-697) that identifies an authN failure if all three conditions are met instead of only one, allowing bypass of the proxy authentication (CWE-1390)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-3116"
        },
        {
          "Reference": "CVE-2022-29965",
          "Description": "Distributed Control System (DCS) uses a deterministic algorithm to generate utility passwords",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29965"
        },
        {
          "Reference": "CVE-2022-29959",
          "Description": "Initialization file contains credentials that can be decoded using a \"simple string transformation\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29959"
        },
        {
          "Reference": "CVE-2020-8994",
          "Description": "UART interface for AI speaker uses empty password for root shell",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8994"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "1391",
      "Name": "Use of Weak Credentials",
      "Abstraction": "Class",
      "Description": "The product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.",
      "ExtendedDescription": "\n\nBy design, authentication protocols try to ensure that attackers must perform brute force attacks if they do not know the credentials such as a key or password. However, when these credentials are easily predictable or even fixed (as with default or hard-coded passwords and keys), then the attacker can defeat the mechanism without relying on brute force.\n\n\nCredentials may be weak for different reasons, such as:\n\n\n  - Hard-coded (i.e., static and unchangeable by the administrator)\n\n  - Default (i.e., the same static value across different deployments/installations, but able to be changed by the administrator)\n\n  - Predictable (i.e., generated in a way that produces unique credentials across deployments/installations, but can still be guessed with reasonable efficiency)\n\nEven if a new, unique credential is intended to be generated for each product installation, if the generation is predictable, then that may also simplify guessing attacks.",
      "ObservedExamples": [
        {
          "Reference": "[REF-1374]",
          "Description": "Chain: JavaScript-based cryptocurrency library can fall back to the insecure Math.random() function instead of reporting a failure (CWE-392), thus reducing the entropy (CWE-332) and leading to generation of non-unique cryptographic keys for Bitcoin wallets (CWE-1391)",
          "Link": "https://www.unciphered.com/blog/randstorm-you-cant-patch-a-house-of-cards"
        },
        {
          "Reference": "CVE-2022-30270",
          "Description": "Remote Terminal Unit (RTU) uses default credentials for some SSH accounts",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30270"
        },
        {
          "Reference": "CVE-2022-29965",
          "Description": "Distributed Control System (DCS) uses a deterministic algorithm to generate utility passwords",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29965"
        },
        {
          "Reference": "CVE-2022-30271",
          "Description": "Remote Terminal Unit (RTU) uses a hard-coded SSH private key that is likely to be used in typical deployments",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30271"
        },
        {
          "Reference": "CVE-2021-38759",
          "Description": "microcontroller board has default password, allowing admin access",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-38759"
        },
        {
          "Reference": "CVE-2021-41192",
          "Description": "data visualization/sharing package uses default secret keys or cookie values if they are not specified in environment variables",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-41192"
        },
        {
          "Reference": "CVE-2020-8994",
          "Description": "UART interface for AI speaker uses empty password for root shell",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8994"
        },
        {
          "Reference": "CVE-2020-27020",
          "Description": "password manager does not generate cryptographically strong passwords, allowing prediction of passwords using guessable details such as time of generation",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-27020"
        },
        {
          "Reference": "CVE-2020-8632",
          "Description": "password generator for cloud application has small length value, making it easier for brute-force guessing",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8632"
        },
        {
          "Reference": "CVE-2020-5365",
          "Description": "network-attached storage (NAS) system has predictable default passwords for a diagnostics/support account",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-5365"
        },
        {
          "Reference": "CVE-2020-5248",
          "Description": "IT asset management app has a default encryption key that is the same across installations",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-5248"
        },
        {
          "Reference": "CVE-2012-3503",
          "Description": "Installation script has a hard-coded secret token value, allowing attackers to bypass authentication",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-3503"
        },
        {
          "Reference": "CVE-2010-2306",
          "Description": "Intrusion Detection System (IDS) uses the same static, private SSL keys for multiple devices and installations, allowing decryption of SSL traffic",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2306"
        },
        {
          "Reference": "CVE-2001-0618",
          "Description": "Residential gateway uses the last 5 digits of the 'Network Name' or SSID as the default WEP key, which allows attackers to get the key by sniffing the SSID, which is sent in the clear",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0618"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "1392",
      "Name": "Use of Default Credentials",
      "Abstraction": "Base",
      "Description": "The product uses default credentials (such as passwords or cryptographic keys) for potentially critical functionality.",
      "ExtendedDescription": "It is common practice for products to be designed to use default keys, passwords, or other mechanisms for authentication. The rationale is to simplify the manufacturing process or the system administrator's task of installation and deployment into an enterprise. However, if admins do not change the defaults, it is easier for attackers to bypass authentication quickly across multiple organizations.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-30270",
          "Description": "Remote Terminal Unit (RTU) uses default credentials for some SSH accounts",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30270"
        },
        {
          "Reference": "CVE-2021-41192",
          "Description": "data visualization/sharing package uses default secret keys or cookie values if they are not specified in environment variables",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-41192"
        },
        {
          "Reference": "CVE-2021-38759",
          "Description": "microcontroller board has default password",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-38759"
        },
        {
          "Reference": "CVE-2010-2306",
          "Description": "Intrusion Detection System (IDS) uses the same static, private SSL keys for multiple devices and installations, allowing decryption of SSL traffic",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2306"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1393",
      "Name": "Use of Default Password",
      "Abstraction": "Base",
      "Description": "The product uses default passwords for potentially critical functionality.",
      "ExtendedDescription": "It is common practice for products to be designed to use default passwords for authentication. The rationale is to simplify the manufacturing process or the system administrator's task of installation and deployment into an enterprise. However, if admins do not change the defaults, then it makes it easier for attackers to quickly bypass authentication across multiple organizations. There are many lists of default passwords and default-password scanning tools that are easily available from the World Wide Web.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-30270",
          "Description": "Remote Terminal Unit (RTU) uses default credentials for some SSH accounts",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30270"
        },
        {
          "Reference": "CVE-2022-2336",
          "Description": "OPC Unified Architecture (OPC UA) industrial automation product has a default password",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-2336"
        },
        {
          "Reference": "CVE-2021-38759",
          "Description": "microcontroller board has default password",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-38759"
        },
        {
          "Reference": "CVE-2021-44480",
          "Description": "children's smart watch has default passwords allowing attackers to send SMS commands and listen to the device's surroundings",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-44480"
        },
        {
          "Reference": "CVE-2020-11624",
          "Description": "surveillance camera has default password for the admin account",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-11624"
        },
        {
          "Reference": "CVE-2018-15719",
          "Description": "medical dental records product installs a MySQL database with a blank default password",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-15719"
        },
        {
          "Reference": "CVE-2014-9736",
          "Description": "healthcare system for archiving patient images has default passwords for key management and storage databases",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-9736"
        },
        {
          "Reference": "CVE-2000-1209",
          "Description": "database product installs admin account with default null password, allowing privileges, as exploited by various worms",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1209"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1394",
      "Name": "Use of Default Cryptographic Key",
      "Abstraction": "Base",
      "Description": "The product uses a default cryptographic key for potentially critical functionality.",
      "ExtendedDescription": "It is common practice for products to be designed to use default keys. The rationale is to simplify the manufacturing process or the system administrator's task of installation and deployment into an enterprise. However, if admins do not change the defaults, it is easier for attackers to bypass authentication quickly across multiple organizations.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2018-3825",
          "Description": "cloud cluster management product has a default master encryption key",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-3825"
        },
        {
          "Reference": "CVE-2016-1561",
          "Description": "backup storage product has a default SSH public key in the authorized_keys file, allowing root access",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2016-1561"
        },
        {
          "Reference": "CVE-2010-2306",
          "Description": "Intrusion Detection System (IDS) uses the same static, private SSL keys for multiple devices and installations, allowing decryption of SSL traffic",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2306"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1395",
      "Name": "Dependency on Vulnerable Third-Party Component",
      "Abstraction": "Class",
      "Description": "The product has a dependency on a third-party component that contains one or more known vulnerabilities.",
      "ExtendedDescription": "\n\nMany products are large enough or complex enough that part of their functionality uses libraries, modules, or other intellectual property developed by third parties who are not the product creator. For example, even an entire operating system might be from a third-party supplier in some hardware products. Whether open or closed source, these components may contain publicly known vulnerabilities that could be exploited by adversaries to compromise the product.\n",
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "14",
      "Name": "Compiler Removal of Code to Clear Buffers",
      "Abstraction": "Variant",
      "Description": "Sensitive memory is cleared according to the source code, but compiler optimizations leave the memory untouched when it is not read from again, aka \"dead store removal.\"",
      "ExtendedDescription": "\n\nThis compiler optimization error occurs when:\n\n\n  1. Secret data are stored in memory.\n\n  1. The secret data are scrubbed from memory by overwriting its contents.\n\n  1. The source code is compiled using an optimizing compiler, which identifies and removes the function that overwrites the contents as a dead store because the memory is not used subsequently.\n\n",
      "AffectedResources": [
        "Memory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "140",
      "Name": "Improper Neutralization of Delimiters",
      "Abstraction": "Base",
      "Description": "The product does not neutralize or incorrectly neutralizes delimiters.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2003-0307",
          "Description": "Attacker inserts field separator into input to specify admin privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0307"
        },
        {
          "Reference": "CVE-2000-0293",
          "Description": "Multiple internal space, insufficient quoting - program does not use proper delimiter between values.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0293"
        },
        {
          "Reference": "CVE-2001-0527",
          "Description": "Attacker inserts carriage returns and \"|\" field separator characters to add new user/privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0527"
        },
        {
          "Reference": "CVE-2002-0267",
          "Description": "Linebreak in field of PHP script allows admin privileges when written to data file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0267"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "141",
      "Name": "Improper Neutralization of Parameter/Argument Delimiters",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as parameter or argument delimiters when they are sent to a downstream component.",
      "ExtendedDescription": "As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2003-0307",
          "Description": "Attacker inserts field separator into input to specify admin privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0307"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1419",
      "Name": "Incorrect Initialization of Resource",
      "Abstraction": "Class",
      "Description": "The product attempts to initialize a resource but does not correctly do so, which might leave the resource in an unexpected, incorrect, or insecure state when it is accessed.",
      "ExtendedDescription": "\n\nThis can have security implications when the associated resource is expected to have certain properties or values. Examples include a variable that determines whether a user has been authenticated or not, or a register or fuse value that determines the security state of the product.\n\n\nFor software, this weakness can frequently occur when implicit initialization is used, meaning the resource is not explicitly set to a specific value. For example, in C, memory is not necessarily cleared when it is allocated on the stack, and many scripting languages use a default empty, null value, or zero value when a variable is not explicitly initialized.\n\n\nFor hardware, this weakness frequently appears with reset values and fuses. After a product reset, hardware may initialize registers incorrectly. During different phases of a product lifecycle, fuses may be set to incorrect values. Even if fuses are set to correct values, the lines to the fuse could be broken or there might be hardware on the fuse line that alters the fuse value to be incorrect.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-27211",
          "Description": "Chain: microcontroller system-on-chip uses a register value stored in flash to set product protection state on the memory bus and does not contain protection against fault injection (CWE-1319) which leads to an incorrect initialization of the memory bus (CWE-1419) causing the product to be in an unprotected state.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-27211"
        },
        {
          "Reference": "CVE-2023-25815",
          "Description": "chain: a change in an underlying package causes the gettext function to use implicit initialization with a hard-coded path (CWE-1419) under the user-writable C:\\ drive, introducing an untrusted search path element (CWE-427) that enables spoofing of messages.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2023-25815"
        },
        {
          "Reference": "CVE-2022-43468",
          "Description": "WordPress module sets internal variables based on external inputs, allowing false reporting of the number of views",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-43468"
        },
        {
          "Reference": "CVE-2022-36349",
          "Description": "insecure default variable initialization in BIOS firmware for a hardware board allows DoS",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-36349"
        },
        {
          "Reference": "CVE-2015-7763",
          "Description": "distributed filesystem only initializes part of the variable-length padding for a packet, allowing attackers to read sensitive information from previously-sent packets in the same memory location",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2015-7763"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "142",
      "Name": "Improper Neutralization of Value Delimiters",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as value delimiters when they are sent to a downstream component.",
      "ExtendedDescription": "As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-0293",
          "Description": "Multiple internal space, insufficient quoting - program does not use proper delimiter between values.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0293"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1420",
      "Name": "Exposure of Sensitive Information during Transient Execution",
      "Abstraction": "Base",
      "Description": "A processor event or prediction may allow incorrect operations (or correct operations with incorrect data) to execute transiently, potentially exposing data over a covert channel.",
      "ExtendedDescription": "\n\nWhen operations execute but do not commit to the processor's architectural state, this is commonly referred to as transient execution. This behavior can occur when the processor mis-predicts an outcome (such as a branch target), or when a processor event (such as an exception or microcode assist, etc.) is handled after younger operations have already executed. Operations that execute transiently may exhibit observable discrepancies (CWE-203) in covert channels [REF-1400] such as data caches. Observable discrepancies of this kind can be detected and analyzed using timing or power analysis techniques, which may allow an attacker to infer information about the operations that executed transiently. For example, the attacker may be able to infer confidential data that was accessed or used by those operations.\n\n\nTransient execution weaknesses may be exploited using one of two methods. In the first method, the attacker generates a code sequence that exposes data through a covert channel when it is executed transiently (the attacker must also be able to trigger transient execution). Some transient execution weaknesses can only expose data that is accessible within the attacker's processor context. For example, an attacker executing code in a software sandbox may be able to use a transient execution weakness to expose data within the same address space, but outside of the attacker's sandbox. Other transient execution weaknesses can expose data that is architecturally inaccessible, that is, data protected by hardware-enforced boundaries such as page tables or privilege rings. These weaknesses are the subject of CWE-1421.\n\n\nIn the second exploitation method, the attacker first identifies a code sequence in a victim program that, when executed transiently, can expose data that is architecturally accessible within the victim's processor context. For instance, the attacker may search the victim program for code sequences that resemble a bounds-check bypass sequence (see Demonstrative Example 1). If the attacker can trigger a mis-prediction of the conditional branch and influence the index of the out-of-bounds array access, then the attacker may be able to infer the value of out-of-bounds data by monitoring observable discrepancies in a covert channel.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2017-5753",
          "Description": "Microarchitectural conditional branch predictors may allow operations to execute transiently after a misprediction, potentially exposing data over a covert channel.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-5753"
        },
        {
          "Reference": "CVE-2021-0089",
          "Description": "A machine clear triggered by self-modifying code may allow incorrect operations to execute transiently, potentially exposing data over a covert channel.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-0089"
        },
        {
          "Reference": "CVE-2022-0002",
          "Description": "Microarchitectural indirect branch predictors may allow incorrect operations to execute transiently after a misprediction, potentially exposing data over a covert channel.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-0002"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "1421",
      "Name": "Exposure of Sensitive Information in Shared Microarchitectural Structures during Transient Execution",
      "Abstraction": "Base",
      "Description": "\n\t\t\tA processor event may allow transient operations to access\n\t\t\tarchitecturally restricted data (for example, in another address\n\t\t\tspace) in a shared microarchitectural structure (for example, a CPU\n\t\t\tcache), potentially exposing the data over a covert channel.\n\t\t  ",
      "ExtendedDescription": "\n\nMany commodity processors have Instruction Set Architecture (ISA) features that protect software components from one another. These features can include memory segmentation, virtual memory, privilege rings, trusted execution environments, and virtual machines, among others. For example, virtual memory provides each process with its own address space, which prevents processes from accessing each other's private data. Many of these features can be used to form hardware-enforced security boundaries between software components.\n\n\nMany commodity processors also share microarchitectural resources that cache (temporarily store) data, which may be confidential. These resources may be shared across processor contexts, including across SMT threads, privilege rings, or others.\n\n\nWhen transient operations allow access to ISA-protected data in a shared microarchitectural resource, this might violate users' expectations of the ISA feature that is bypassed. For example, if transient operations can access a victim's private data in a shared microarchitectural resource, then the operations' microarchitectural side effects may correspond to the accessed data. If an attacker can trigger these transient operations and observe their side effects through a covert channel [REF-1400], then the attacker may be able to infer the victim's private data. Private data could include sensitive program data, OS/VMM data, page table data (such as memory addresses), system configuration data (see Demonstrative Example 3), or any other data that the attacker does not have the required privileges to access.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2017-5715",
          "Description": "A fault may allow transient user-mode operations to access kernel data cached in the L1D, potentially exposing the data over a covert channel.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-5715"
        },
        {
          "Reference": "CVE-2018-3615",
          "Description": "A fault may allow transient non-enclave operations to access SGX enclave data cached in the L1D, potentially exposing the data over a covert channel.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-3615"
        },
        {
          "Reference": "CVE-2019-1135",
          "Description": "A TSX Asynchronous Abort may allow transient operations to access architecturally restricted data, potentially exposing the data over a covert channel.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-1135"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1422",
      "Name": "Exposure of Sensitive Information caused by Incorrect Data Forwarding during Transient Execution",
      "Abstraction": "Base",
      "Description": "A processor event or prediction may allow incorrect or stale data to\n\t\t  be forwarded to transient operations, potentially exposing data over a\n\t\t  covert channel.",
      "ExtendedDescription": "\n\nSoftware may use a variety of techniques to preserve the confidentiality of private data that is accessible within the current processor context. For example, the memory safety and type safety properties of some high-level programming languages help to prevent software written in those languages from exposing private data. As a second example, software sandboxes may co-locate multiple users' software within a single process. The processor's Instruction Set Architecture (ISA) may permit one user's software to access another user's data (because the software shares the same address space), but the sandbox prevents these accesses by using software techniques such as bounds checking.\n\n\nIf incorrect or stale data can be forwarded (for example, from a cache) to transient operations, then the operations' microarchitectural side effects may correspond to the data. If an attacker can trigger these transient operations and observe their side effects through a covert channel, then the attacker may be able to infer the data. For example, an attacker process may induce transient execution in a victim process that causes the victim to inadvertently access and then expose its private data via a covert channel. In the software sandbox example, an attacker sandbox may induce transient execution in its own code, allowing it to transiently access and expose data in a victim sandbox that shares the same address space.\n\n\nConsequently, weaknesses that arise from incorrect/stale data forwarding might violate users' expectations of software-based memory safety and isolation techniques. If the data forwarding behavior is not properly documented by the hardware vendor, this might violate the software vendor's expectation of how the hardware should behave.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-0551",
          "Description": "A fault, microcode assist, or abort may allow transient load operations to forward malicious stale data to dependent operations executed by a victim, causing the victim to unintentionally access and potentially expose its own data over a covert channel.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-0551"
        },
        {
          "Reference": "CVE-2020-8698",
          "Description": "A fast store forwarding predictor may allow store operations to forward incorrect data to transient load operations, potentially exposing data over a covert channel.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8698"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "1423",
      "Name": "Exposure of Sensitive Information caused by Shared Microarchitectural Predictor State that Influences Transient Execution",
      "Abstraction": "Base",
      "Description": "Shared microarchitectural predictor state may allow code to influence\n\t\t\t\ttransient execution across a hardware boundary, potentially exposing\n\t\t\t\tdata that is accessible beyond the boundary over a covert channel.\n\t\t\t",
      "ExtendedDescription": "\n\nMany commodity processors have Instruction Set Architecture (ISA) features that protect software components from one another. These features can include memory segmentation, virtual memory, privilege rings, trusted execution environments, and virtual machines, among others. For example, virtual memory provides each process with its own address space, which prevents processes from accessing each other's private data. Many of these features can be used to form hardware-enforced security boundaries between software components.\n\n\nWhen separate software components (for example, two processes) share microarchitectural predictor state across a hardware boundary, code in one component may be able to influence microarchitectural predictor behavior in another component. If the predictor can cause transient execution, the shared predictor state may allow an attacker to influence transient execution in a victim, and in a manner that could allow the attacker to infer private data from the victim by monitoring observable discrepancies (CWE-203) in a covert channel [REF-1400].\n\n\nPredictor state may be shared when the processor transitions from one component to another (for example, when a process makes a system call to enter the kernel). Many commodity processors have features which prevent microarchitectural predictions that occur before a boundary from influencing predictions that occur after the boundary.\n\n\nPredictor state may also be shared between hardware threads, for example, sibling hardware threads on a processor that supports simultaneous multithreading (SMT). This sharing may be benign if the hardware threads are simultaneously executing in the same software component, or it could expose a weakness if one sibling is a malicious software component, and the other sibling is a victim software component. Processors that share microarchitectural predictors between hardware threads may have features which prevent microarchitectural predictions that occur on one hardware thread from influencing predictions that occur on another hardware thread.\n\n\nFeatures that restrict predictor state sharing across transitions or between hardware threads may be always-on, on by default, or may require opt-in from software.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2017-5754",
          "Description": "(Branch Target Injection, BTI, Spectre v2). Shared microarchitectural indirect branch predictor state may allow code to influence transient execution across a process, VM, or privilege boundary, potentially exposing data that is accessible beyond the boundary.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-5754"
        },
        {
          "Reference": "CVE-2022-0001",
          "Description": "(Branch History Injection, BHI, Spectre-BHB). Shared branch history state may allow user-mode code to influence transient execution in the kernel, potentially exposing kernel data over a covert channel.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-0001"
        },
        {
          "Reference": "CVE-2021-33149",
          "Description": "(RSB underflow, Retbleed). Shared return stack buffer state may allow code that executes before a prediction barrier to influence transient execution after the prediction barrier, potentially exposing data that is accessible beyond the barrier over a covert channel.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-33149"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed",
        "Suggestions": [
          {
            "CweID": "1420",
            "Comment": "If a weakness involves a microarchitectural predictor whose state is not shared across processor contexts, then CWE-1420 may be more appropriate for the mapping task."
          }
        ]
      },
      "1003_view": "No"
    },
    {
      "ID": "1426",
      "Name": "Improper Validation of Generative AI Output",
      "Abstraction": "Base",
      "Description": "The product invokes a generative AI/ML\n\t\t\tcomponent whose behaviors and outputs cannot be directly\n\t\t\tcontrolled, but the product does not validate or\n\t\t\tinsufficiently validates the outputs to ensure that they\n\t\t\talign with the intended security, content, or privacy\n\t\t\tpolicy.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2024-3402",
          "Description": "chain: GUI for ChatGPT API performs input validation but does not properly \"sanitize\" or validate model output data (CWE-1426), leading to XSS (CWE-79).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2024-3402"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged",
        "Suggestions": [
          {
            "CweID": "77",
            "Comment": "Command Injection. Use this CWE for most cases of 'prompt injection' attacks in which additional prompts are added to input to, or output from, the model. If OS command injection, consider CWE-78."
          },
          {
            "CweID": "94",
            "Comment": "Code Injection. Use this CWE for cases in which output from genAI components is directly fed into components that parse and execute code."
          },
          {
            "CweID": "116",
            "Comment": "Improper Encoding or Escaping of Output. Use this CWE when the product is expected to encode or escape genAI outputs."
          }
        ]
      },
      "1003_view": "No"
    },
    {
      "ID": "143",
      "Name": "Improper Neutralization of Record Delimiters",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as record delimiters when they are sent to a downstream component.",
      "ExtendedDescription": "As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-1982",
          "Description": "Carriage returns in subject field allow adding new records to data file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1982"
        },
        {
          "Reference": "CVE-2001-0527",
          "Description": "Attacker inserts carriage returns and \"|\" field separator characters to add new user/privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0527"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "144",
      "Name": "Improper Neutralization of Line Delimiters",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as line delimiters when they are sent to a downstream component.",
      "ExtendedDescription": "As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0267",
          "Description": "Linebreak in field of PHP script allows admin privileges when written to data file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0267"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "145",
      "Name": "Improper Neutralization of Section Delimiters",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as section delimiters when they are sent to a downstream component.",
      "ExtendedDescription": "\n\nAs data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.\n\n\nOne example of a section delimiter is the boundary string in a multipart MIME message. In many cases, doubled line delimiters can serve as a section delimiter.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "146",
      "Name": "Improper Neutralization of Expression/Command Delimiters",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as expression or command delimiters when they are sent to a downstream component.",
      "ExtendedDescription": "As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "147",
      "Name": "Improper Neutralization of Input Terminators",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as input terminators when they are sent to a downstream component.",
      "ExtendedDescription": "For example, a \".\" in SMTP signifies the end of mail message data, whereas a null character can be used for the end of a string.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-0319",
          "Description": "MFV. mail server does not properly identify terminator string to signify end of message, causing corruption, possibly in conjunction with off-by-one error.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0319"
        },
        {
          "Reference": "CVE-2000-0320",
          "Description": "MFV. mail server does not properly identify terminator string to signify end of message, causing corruption, possibly in conjunction with off-by-one error.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0320"
        },
        {
          "Reference": "CVE-2001-0996",
          "Description": "Mail server does not quote end-of-input terminator if it appears in the middle of a message.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0996"
        },
        {
          "Reference": "CVE-2002-0001",
          "Description": "Improperly terminated comment or phrase allows commands.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0001"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "148",
      "Name": "Improper Neutralization of Input Leaders",
      "Abstraction": "Variant",
      "Description": "The product does not properly handle when a leading character or sequence (\"leader\") is missing or malformed, or if multiple leaders are used when only one should be allowed.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "149",
      "Name": "Improper Neutralization of Quoting Syntax",
      "Abstraction": "Variant",
      "Description": "Quotes injected into a product can be used to compromise a system. As data are parsed, an injected/absent/duplicate/malformed use of quotes may cause the process to take unexpected actions.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-0956",
          "Description": "Database allows remote attackers to cause a denial of service (application crash) via a MATCH AGAINST query with an opening double quote but no closing double quote.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0956"
        },
        {
          "Reference": "CVE-2003-1016",
          "Description": "MIE. MFV too? bypass AV/security with fields that should not be quoted, duplicate quotes, missing leading/trailing quotes.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1016"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "15",
      "Name": "External Control of System or Configuration Setting",
      "Abstraction": "Base",
      "Description": "One or more system settings or configuration elements can be externally controlled by a user.",
      "ExtendedDescription": "Allowing external control of system settings can disrupt service or cause an application to behave in unexpected, and potentially malicious ways.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "150",
      "Name": "Improper Neutralization of Escape, Meta, or Control Sequences",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.",
      "ExtendedDescription": "As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0542",
          "Description": "The mail program processes special \"~\" escape sequence even when not in interactive mode.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0542"
        },
        {
          "Reference": "CVE-2000-0703",
          "Description": "Setuid program does not filter escape sequences before calling mail program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0703"
        },
        {
          "Reference": "CVE-2002-0986",
          "Description": "Mail function does not filter control characters from arguments, allowing mail message content to be modified.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0986"
        },
        {
          "Reference": "CVE-2003-0020",
          "Description": "Multi-channel issue. Terminal escape sequences not filtered from log files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0020"
        },
        {
          "Reference": "CVE-2003-0083",
          "Description": "Multi-channel issue. Terminal escape sequences not filtered from log files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0083"
        },
        {
          "Reference": "CVE-2003-0021",
          "Description": "Terminal escape sequences not filtered by terminals when displaying files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0021"
        },
        {
          "Reference": "CVE-2003-0022",
          "Description": "Terminal escape sequences not filtered by terminals when displaying files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0022"
        },
        {
          "Reference": "CVE-2003-0023",
          "Description": "Terminal escape sequences not filtered by terminals when displaying files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0023"
        },
        {
          "Reference": "CVE-2003-0063",
          "Description": "Terminal escape sequences not filtered by terminals when displaying files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0063"
        },
        {
          "Reference": "CVE-2000-0476",
          "Description": "Terminal escape sequences not filtered by terminals when displaying files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0476"
        },
        {
          "Reference": "CVE-2001-1556",
          "Description": "MFV. (multi-channel). Injection of control characters into log files that allow information hiding when using raw Unix programs to read the files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1556"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "151",
      "Name": "Improper Neutralization of Comment Delimiters",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as comment delimiters when they are sent to a downstream component.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0001",
          "Description": "Mail client command execution due to improperly terminated comment in address list.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0001"
        },
        {
          "Reference": "CVE-2004-0162",
          "Description": "MIE. RFC822 comment fields may be processed as other fields by clients.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0162"
        },
        {
          "Reference": "CVE-2004-1686",
          "Description": "Well-placed comment bypasses security warning.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1686"
        },
        {
          "Reference": "CVE-2005-1909",
          "Description": "Information hiding using a manipulation involving injection of comment code into product. Note: these vulnerabilities are likely vulnerable to more general XSS problems, although a regexp might allow \">!--\" while denying most other tags.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1909"
        },
        {
          "Reference": "CVE-2005-1969",
          "Description": "Information hiding using a manipulation involving injection of comment code into product. Note: these vulnerabilities are likely vulnerable to more general XSS problems, although a regexp might allow \"<!--\" while denying most other tags.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1969"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "152",
      "Name": "Improper Neutralization of Macro Symbols",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as macro symbols when they are sent to a downstream component.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0770",
          "Description": "Server trusts client to expand macros, allows macro characters to be expanded to trigger resultant information exposure.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0770"
        },
        {
          "Reference": "CVE-2008-2018",
          "Description": "Attacker can obtain sensitive information from a database by using a comment containing a macro, which inserts the data during expansion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2018"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "153",
      "Name": "Improper Neutralization of Substitution Characters",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as substitution characters when they are sent to a downstream component.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0770",
          "Description": "Server trusts client to expand macros, allows macro characters to be expanded to trigger resultant information exposure.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0770"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "154",
      "Name": "Improper Neutralization of Variable Name Delimiters",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as variable name delimiters when they are sent to a downstream component.",
      "ExtendedDescription": "As data is parsed, an injected delimiter may cause the process to take unexpected actions that result in an attack. Example: \"$\" for an environment variable.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-0129",
          "Description": "\"%\" variable is expanded by wildcard function into disallowed commands.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0129"
        },
        {
          "Reference": "CVE-2002-0770",
          "Description": "Server trusts client to expand macros, allows macro characters to be expanded to trigger resultant information exposure.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0770"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "155",
      "Name": "Improper Neutralization of Wildcards or Matching Symbols",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as wildcards or matching symbols when they are sent to a downstream component.",
      "ExtendedDescription": "As data is parsed, an injected element may cause the process to take unexpected actions.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0433",
          "Description": "Bypass file restrictions using wildcard character.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0433"
        },
        {
          "Reference": "CVE-2002-1010",
          "Description": "Bypass file restrictions using wildcard character.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1010"
        },
        {
          "Reference": "CVE-2001-0334",
          "Description": "Wildcards generate long string on expansion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0334"
        },
        {
          "Reference": "CVE-2004-1962",
          "Description": "SQL injection involving \"/**/\" sequences.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1962"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "156",
      "Name": "Improper Neutralization of Whitespace",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as whitespace when they are sent to a downstream component.",
      "ExtendedDescription": "This can include space, tab, etc.",
      "AlternateTerms": [
        {
          "Term": "White space"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0637",
          "Description": "MIE. virus protection bypass with RFC violations involving extra whitespace, or missing whitespace.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0637"
        },
        {
          "Reference": "CVE-2004-0942",
          "Description": "CPU consumption with MIME headers containing lines with many space characters, probably due to algorithmic complexity (RESOURCE.AMP.ALG).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0942"
        },
        {
          "Reference": "CVE-2003-1015",
          "Description": "MIE. whitespace interpreted differently by mail clients.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1015"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "157",
      "Name": "Failure to Sanitize Paired Delimiters",
      "Abstraction": "Variant",
      "Description": "The product does not properly handle the characters that are used to mark the beginning and ending of a group of entities, such as parentheses, brackets, and braces.",
      "ExtendedDescription": "\n\nPaired delimiters might include:\n\n\n  - < and > angle brackets\n\n  - ( and ) parentheses\n\n  - { and } braces\n\n  - [ and ] square brackets\n\n  - \" \" double quotes\n\n  - ' ' single quotes\n\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-0956",
          "Description": "Crash via missing paired delimiter (open double-quote but no closing double-quote).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0956"
        },
        {
          "Reference": "CVE-2000-1165",
          "Description": "Crash via message without closing \">\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1165"
        },
        {
          "Reference": "CVE-2005-2933",
          "Description": "Buffer overflow via mailbox name with an opening double quote but missing a closing double quote, causing a larger copy than expected.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2933"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "158",
      "Name": "Improper Neutralization of Null Byte or NUL Character",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes NUL characters or null bytes when they are sent to a downstream component.",
      "ExtendedDescription": "As data is parsed, an injected NUL character or null byte may cause the product to believe the input is terminated earlier than it actually is, or otherwise cause the input to be misinterpreted. This could then be used to inject potentially dangerous input that occurs after the null byte or otherwise bypass validation routines and other protection mechanisms.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2008-1284",
          "Description": "NUL byte in theme name causes directory traversal impact to be worse",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1284"
        },
        {
          "Reference": "CVE-2005-2008",
          "Description": "Source code disclosure using trailing null.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2008"
        },
        {
          "Reference": "CVE-2005-3293",
          "Description": "Source code disclosure using trailing null.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3293"
        },
        {
          "Reference": "CVE-2005-2061",
          "Description": "Trailing null allows file include.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2061"
        },
        {
          "Reference": "CVE-2002-1774",
          "Description": "Null character in MIME header allows detection bypass.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1774"
        },
        {
          "Reference": "CVE-2000-0149",
          "Description": "Web server allows remote attackers to view the source code for CGI programs via a null character (%00) at the end of a URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0149"
        },
        {
          "Reference": "CVE-2000-0671",
          "Description": "Web server earlier allows allows remote attackers to bypass access restrictions, list directory contents, and read source code by inserting a null character (%00) in the URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0671"
        },
        {
          "Reference": "CVE-2001-0738",
          "Description": "Logging system allows an attacker to cause a denial of service (hang) by causing null bytes to be placed in log messages.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0738"
        },
        {
          "Reference": "CVE-2001-1140",
          "Description": "Web server allows source code for executable programs to be read via a null character (%00) at the end of a request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1140"
        },
        {
          "Reference": "CVE-2002-1031",
          "Description": "Protection mechanism for limiting file access can be bypassed using a null character (%00) at the end of the directory name.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1031"
        },
        {
          "Reference": "CVE-2002-1025",
          "Description": "Application server allows remote attackers to read JSP source code via an encoded null byte in an HTTP GET request, which causes the server to send the .JSP file unparsed.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1025"
        },
        {
          "Reference": "CVE-2003-0768",
          "Description": "XSS protection mechanism only checks for sequences with an alphabetical character following a (<), so a non-alphabetical or null character (%00) following a < may be processed.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0768"
        },
        {
          "Reference": "CVE-2004-0189",
          "Description": "Decoding function in proxy allows regular expression bypass in ACLs via URLs with null characters.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0189"
        },
        {
          "Reference": "CVE-2005-3153",
          "Description": "Null byte bypasses PHP regexp check (interaction error).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3153"
        },
        {
          "Reference": "CVE-2005-4155",
          "Description": "Null byte bypasses PHP regexp check (interaction error).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-4155"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "159",
      "Name": "Improper Handling of Invalid Use of Special Elements",
      "Abstraction": "Class",
      "Description": "The product does not properly filter, remove, quote, or otherwise manage the invalid use of special elements in user-controlled input, which could cause adverse effect on its behavior and integrity.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1362",
          "Description": "Crash via message type without separator character",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1362"
        },
        {
          "Reference": "CVE-2000-0116",
          "Description": "Extra \"<\" in front of SCRIPT tag bypasses XSS prevention.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0116"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "160",
      "Name": "Improper Neutralization of Leading Special Elements",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes leading special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
      "ExtendedDescription": "As data is parsed, improperly handled leading special elements may cause the process to take unexpected actions that result in an attack.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1345",
          "Description": "Multiple FTP clients write arbitrary files via absolute paths in server responses",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1345"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "161",
      "Name": "Improper Neutralization of Multiple Leading Special Elements",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes multiple leading special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
      "ExtendedDescription": "As data is parsed, improperly handled multiple leading special elements may cause the process to take unexpected actions that result in an attack.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1238",
          "Description": "Server allows remote attackers to bypass access restrictions for files via an HTTP request with a sequence of multiple / (slash) characters such as http://www.example.com///file/.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1238"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "162",
      "Name": "Improper Neutralization of Trailing Special Elements",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes trailing special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
      "ExtendedDescription": "As data is parsed, improperly handled trailing special elements may cause the process to take unexpected actions that result in an attack.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-0847",
          "Description": "web framework for .NET allows remote attackers to bypass authentication for .aspx files in restricted directories via a request containing a (1) \"\\\" (backslash) or (2) \"%5C\" (encoded backslash)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0847"
        },
        {
          "Reference": "CVE-2002-1451",
          "Description": "Trailing space (\"+\" in query string) leads to source code disclosure.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1451"
        },
        {
          "Reference": "CVE-2001-0446",
          "Description": "Application server allows remote attackers to read source code for .jsp files by appending a / to the requested URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0446"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "163",
      "Name": "Improper Neutralization of Multiple Trailing Special Elements",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes multiple trailing special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
      "ExtendedDescription": "As data is parsed, improperly handled multiple trailing special elements may cause the process to take unexpected actions that result in an attack.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1078",
          "Description": "Directory listings in web server using multiple trailing slash",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1078"
        },
        {
          "Reference": "CVE-2004-0281",
          "Description": "Multiple trailing dot allows directory listing",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0281"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "164",
      "Name": "Improper Neutralization of Internal Special Elements",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes internal special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
      "ExtendedDescription": "As data is parsed, improperly handled internal special elements may cause the process to take unexpected actions that result in an attack.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "165",
      "Name": "Improper Neutralization of Multiple Internal Special Elements",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes multiple internal special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
      "ExtendedDescription": "As data is parsed, improperly handled multiple internal special elements may cause the process to take unexpected actions that result in an attack.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "166",
      "Name": "Improper Handling of Missing Special Element",
      "Abstraction": "Base",
      "Description": "The product receives input from an upstream component, but it does not handle or incorrectly handles when an expected special element is missing.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1362",
          "Description": "Crash via message type without separator character",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1362"
        },
        {
          "Reference": "CVE-2002-0729",
          "Description": "Missing special character (separator) causes crash",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0729"
        },
        {
          "Reference": "CVE-2002-1532",
          "Description": "HTTP GET without \\r\\n\\r\\n CRLF sequences causes product to wait indefinitely and prevents other users from accessing it",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1532"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "167",
      "Name": "Improper Handling of Additional Special Element",
      "Abstraction": "Base",
      "Description": "The product receives input from an upstream component, but it does not handle or incorrectly handles when an additional unexpected special element is provided.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-0116",
          "Description": "Extra \"<\" in front of SCRIPT tag bypasses XSS prevention.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0116"
        },
        {
          "Reference": "CVE-2001-1157",
          "Description": "Extra \"<\" in front of SCRIPT tag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1157"
        },
        {
          "Reference": "CVE-2002-2086",
          "Description": "\"<script\" - probably a cleansing error",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2086"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "168",
      "Name": "Improper Handling of Inconsistent Special Elements",
      "Abstraction": "Base",
      "Description": "The product does not properly handle input in which an inconsistency exists between two or more special characters or reserved words.",
      "ExtendedDescription": "An example of this problem would be if paired characters appear in the wrong order, or if the special characters are not properly nested.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "170",
      "Name": "Improper Null Termination",
      "Abstraction": "Base",
      "Description": "The product does not terminate or incorrectly terminates a string or array with a null character or equivalent terminator.",
      "ExtendedDescription": "Null termination errors frequently occur in two different ways. An off-by-one error could cause a null to be written out of bounds, leading to an overflow. Or, a program could use a strncpy() function call incorrectly, which prevents a null terminator from being added at all. Other scenarios are possible.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-0312",
          "Description": "Attacker does not null-terminate argv[] when invoking another program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0312"
        },
        {
          "Reference": "CVE-2003-0777",
          "Description": "Interrupted step causes resultant lack of null termination.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0777"
        },
        {
          "Reference": "CVE-2004-1072",
          "Description": "Fault causes resultant lack of null termination, leading to buffer expansion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1072"
        },
        {
          "Reference": "CVE-2001-1389",
          "Description": "Multiple vulnerabilities related to improper null termination.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1389"
        },
        {
          "Reference": "CVE-2003-0143",
          "Description": "Product does not null terminate a message buffer after snprintf-like call, leading to overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0143"
        },
        {
          "Reference": "CVE-2009-2523",
          "Description": "Chain: product does not handle when an input string is not NULL terminated (CWE-170), leading to buffer over-read (CWE-125) or heap-based buffer overflow (CWE-122).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2523"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "172",
      "Name": "Encoding Error",
      "Abstraction": "Class",
      "Description": "The product does not properly encode or decode the data, resulting in unexpected values.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-1315",
          "Description": "Forum software improperly URL decodes the highlight parameter when extracting text to highlight, which allows remote attackers to execute arbitrary PHP code by double-encoding the highlight value so that special characters are inserted into the result.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1315"
        },
        {
          "Reference": "CVE-2004-1939",
          "Description": "XSS protection mechanism attempts to remove \"/\" that could be used to close tags, but it can be bypassed using double encoded slashes (%252F)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1939"
        },
        {
          "Reference": "CVE-2001-0709",
          "Description": "Server allows a remote attacker to obtain source code of ASP files via a URL encoded with Unicode.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0709"
        },
        {
          "Reference": "CVE-2005-2256",
          "Description": "Hex-encoded path traversal variants - \"%2e%2e\", \"%2e%2e%2f\", \"%5c%2e%2e\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2256"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "173",
      "Name": "Improper Handling of Alternate Encoding",
      "Abstraction": "Variant",
      "Description": "The product does not properly handle when an input uses an alternate encoding that is valid for the control sphere to which the input is being sent.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "174",
      "Name": "Double Decoding of the Same Data",
      "Abstraction": "Variant",
      "Description": "The product decodes the same input twice, which can limit the effectiveness of any protection mechanism that occurs in between the decoding operations.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-1315",
          "Description": "Forum software improperly URL decodes the highlight parameter when extracting text to highlight, which allows remote attackers to execute arbitrary PHP code by double-encoding the highlight value so that special characters are inserted into the result.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1315"
        },
        {
          "Reference": "CVE-2004-1939",
          "Description": "XSS protection mechanism attempts to remove \"/\" that could be used to close tags, but it can be bypassed using double encoded slashes (%252F)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1939"
        },
        {
          "Reference": "CVE-2001-0333",
          "Description": "Directory traversal using double encoding.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0333"
        },
        {
          "Reference": "CVE-2004-1938",
          "Description": "\"%2527\" (double-encoded single quote) used in SQL injection.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1938"
        },
        {
          "Reference": "CVE-2005-1945",
          "Description": "Double hex-encoded data.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1945"
        },
        {
          "Reference": "CVE-2005-0054",
          "Description": "Browser executes HTML at higher privileges via URL with hostnames that are double hex encoded, which are decoded twice to generate a malicious hostname.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0054"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "175",
      "Name": "Improper Handling of Mixed Encoding",
      "Abstraction": "Variant",
      "Description": "The product does not properly handle when the same input uses several different (mixed) encodings.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "176",
      "Name": "Improper Handling of Unicode Encoding",
      "Abstraction": "Variant",
      "Description": "The product does not properly handle when an input contains Unicode encoding.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-0884",
          "Description": "Server allows remote attackers to read documents outside of the web root, and possibly execute arbitrary commands, via malformed URLs that contain Unicode encoded characters.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0884"
        },
        {
          "Reference": "CVE-2001-0709",
          "Description": "Server allows a remote attacker to obtain source code of ASP files via a URL encoded with Unicode.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0709"
        },
        {
          "Reference": "CVE-2001-0669",
          "Description": "Overlaps interaction error.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0669"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "177",
      "Name": "Improper Handling of URL Encoding (Hex Encoding)",
      "Abstraction": "Variant",
      "Description": "The product does not properly handle when all or part of an input has been URL encoded.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-0900",
          "Description": "Hex-encoded path traversal variants - \"%2e%2e\", \"%2e%2e%2f\", \"%5c%2e%2e\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0900"
        },
        {
          "Reference": "CVE-2005-2256",
          "Description": "Hex-encoded path traversal variants - \"%2e%2e\", \"%2e%2e%2f\", \"%5c%2e%2e\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2256"
        },
        {
          "Reference": "CVE-2004-2121",
          "Description": "Hex-encoded path traversal variants - \"%2e%2e\", \"%2e%2e%2f\", \"%5c%2e%2e\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2121"
        },
        {
          "Reference": "CVE-2004-0280",
          "Description": "\"%20\" (encoded space)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0280"
        },
        {
          "Reference": "CVE-2003-0424",
          "Description": "\"%20\" (encoded space)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0424"
        },
        {
          "Reference": "CVE-2001-0693",
          "Description": "\"%20\" (encoded space)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0693"
        },
        {
          "Reference": "CVE-2001-0778",
          "Description": "\"%20\" (encoded space)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0778"
        },
        {
          "Reference": "CVE-2002-1831",
          "Description": "Crash via hex-encoded space \"%20\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1831"
        },
        {
          "Reference": "CVE-2000-0671",
          "Description": "\"%00\" (encoded null)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0671"
        },
        {
          "Reference": "CVE-2004-0189",
          "Description": "\"%00\" (encoded null)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0189"
        },
        {
          "Reference": "CVE-2002-1291",
          "Description": "\"%00\" (encoded null)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1291"
        },
        {
          "Reference": "CVE-2002-1031",
          "Description": "\"%00\" (encoded null)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1031"
        },
        {
          "Reference": "CVE-2001-1140",
          "Description": "\"%00\" (encoded null)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1140"
        },
        {
          "Reference": "CVE-2004-0760",
          "Description": "\"%00\" (encoded null)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0760"
        },
        {
          "Reference": "CVE-2002-1025",
          "Description": "\"%00\" (encoded null)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1025"
        },
        {
          "Reference": "CVE-2002-1213",
          "Description": "\"%2f\" (encoded slash)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1213"
        },
        {
          "Reference": "CVE-2004-0072",
          "Description": "\"%5c\" (encoded backslash) and \"%2e\" (encoded dot) sequences",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0072"
        },
        {
          "Reference": "CVE-2004-0847",
          "Description": "\"%5c\" (encoded backslash)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0847"
        },
        {
          "Reference": "CVE-2002-1575",
          "Description": "\"%0a\" (overlaps CRLF)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1575"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "178",
      "Name": "Improper Handling of Case Sensitivity",
      "Abstraction": "Base",
      "Description": "The product does not properly account for differences in case sensitivity when accessing or determining the properties of a resource, leading to inconsistent results.",
      "ExtendedDescription": "\n\nImproperly handled case sensitive data can lead to several possible consequences, including:\n\n\n  - case-insensitive passwords reducing the size of the key space, making brute force attacks easier\n\n  - bypassing filters or access controls using alternate names\n\n  - multiple interpretation errors using alternate names.\n\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-0499",
          "Description": "Application server allows attackers to bypass execution of a jsp page and read the source code using an upper case JSP extension in the request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0499"
        },
        {
          "Reference": "CVE-2000-0497",
          "Description": "The server is case sensitive, so filetype handlers treat .jsp and .JSP as different extensions. JSP source code may be read because .JSP defaults to the filetype \"text\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0497"
        },
        {
          "Reference": "CVE-2000-0498",
          "Description": "The server is case sensitive, so filetype handlers treat .jsp and .JSP as different extensions. JSP source code may be read because .JSP defaults to the filetype \"text\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0498"
        },
        {
          "Reference": "CVE-2001-0766",
          "Description": "A URL that contains some characters whose case is not matched by the server's filters may bypass access restrictions because the case-insensitive file system will then handle the request after it bypasses the case sensitive filter.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0766"
        },
        {
          "Reference": "CVE-2001-0795",
          "Description": "Server allows remote attackers to obtain source code of CGI scripts via URLs that contain MS-DOS conventions such as (1) upper case letters or (2) 8.3 file names.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0795"
        },
        {
          "Reference": "CVE-2001-1238",
          "Description": "Task Manager does not allow local users to end processes with uppercase letters named (1) winlogon.exe, (2) csrss.exe, (3) smss.exe and (4) services.exe via the Process tab which could allow local users to install Trojan horses that cannot be stopped.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1238"
        },
        {
          "Reference": "CVE-2003-0411",
          "Description": "chain: Code was ported from a case-sensitive Unix platform to a case-insensitive Windows platform where filetype handlers treat .jsp and .JSP as different extensions. JSP source code may be read because .JSP defaults to the filetype \"text\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0411"
        },
        {
          "Reference": "CVE-2002-0485",
          "Description": "Leads to interpretation error",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0485"
        },
        {
          "Reference": "CVE-1999-0239",
          "Description": "Directories may be listed because lower case web requests are not properly handled by the server.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0239"
        },
        {
          "Reference": "CVE-2005-0269",
          "Description": "File extension check in forum software only verifies extensions that contain all lowercase letters, which allows remote attackers to upload arbitrary files via file extensions that include uppercase letters.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0269"
        },
        {
          "Reference": "CVE-2004-1083",
          "Description": "Web server restricts access to files in a case sensitive manner, but the filesystem accesses files in a case insensitive manner, which allows remote attackers to read privileged files using alternate capitalization.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1083"
        },
        {
          "Reference": "CVE-2002-2119",
          "Description": "Case insensitive passwords lead to search space reduction.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2119"
        },
        {
          "Reference": "CVE-2004-2214",
          "Description": "HTTP server allows bypass of access restrictions using URIs with mixed case.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2214"
        },
        {
          "Reference": "CVE-2004-2154",
          "Description": "Mixed upper/lowercase allows bypass of ACLs.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2154"
        },
        {
          "Reference": "CVE-2005-4509",
          "Description": "Bypass malicious script detection by using tokens that aren't case sensitive.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-4509"
        },
        {
          "Reference": "CVE-2002-1820",
          "Description": "Mixed case problem allows \"admin\" to have \"Admin\" rights (alternate name property).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1820"
        },
        {
          "Reference": "CVE-2007-3365",
          "Description": "Chain: uppercase file extensions causes web server to return script source code instead of executing the script.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3365"
        },
        {
          "Reference": "CVE-2021-39155",
          "Description": "Chain: A microservice integration and management platform compares the hostname in the HTTP Host header in a case-sensitive way (CWE-178, CWE-1289), allowing bypass of the authorization policy (CWE-863) using a hostname with mixed case or other variations.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-39155"
        }
      ],
      "FunctionalAreas": [
        "File Processing"
      ],
      "AffectedResources": [
        "File or Directory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "179",
      "Name": "Incorrect Behavior Order: Early Validation",
      "Abstraction": "Base",
      "Description": "The product validates input before applying protection mechanisms that modify the input, which could allow an attacker to bypass the validation via dangerous inputs that only arise after the modification.",
      "ExtendedDescription": "Product needs to validate data at the proper time, after data has been canonicalized and cleansed. Early validation is susceptible to various manipulations that result in dangerous inputs that are produced by canonicalization and cleansing.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0433",
          "Description": "Product allows remote attackers to view restricted files via an HTTP request containing a \"*\" (wildcard or asterisk) character.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0433"
        },
        {
          "Reference": "CVE-2003-0332",
          "Description": "Product modifies the first two letters of a filename extension after performing a security check, which allows remote attackers to bypass authentication via a filename with a .ats extension instead of a .hts extension.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0332"
        },
        {
          "Reference": "CVE-2002-0802",
          "Description": "Database consumes an extra character when processing a character that cannot be converted, which could remove an escape character from the query and make the application subject to SQL injection attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0802"
        },
        {
          "Reference": "CVE-2000-0191",
          "Description": "Overlaps \"fakechild/../realchild\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0191"
        },
        {
          "Reference": "CVE-2004-2363",
          "Description": "Product checks URI for \"<\" and other literal characters, but does it before hex decoding the URI, so \"%3E\" and other sequences are allowed.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2363"
        },
        {
          "Reference": "CVE-2002-0934",
          "Description": "Directory traversal vulnerability allows remote attackers to read or modify arbitrary files via invalid characters between two . (dot) characters, which are filtered and result in a \"..\" sequence.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0934"
        },
        {
          "Reference": "CVE-2003-0282",
          "Description": "Directory traversal vulnerability allows attackers to overwrite arbitrary files via invalid characters between two . (dot) characters, which are filtered and result in a \"..\" sequence.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0282"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "180",
      "Name": "Incorrect Behavior Order: Validate Before Canonicalize",
      "Abstraction": "Variant",
      "Description": "The product validates input before it is canonicalized, which prevents the product from detecting data that becomes invalid after the canonicalization step.",
      "ExtendedDescription": "This can be used by an attacker to bypass the validation and launch attacks that expose weaknesses that would otherwise be prevented, such as injection.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0433",
          "Description": "Product allows remote attackers to view restricted files via an HTTP request containing a \"*\" (wildcard or asterisk) character.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0433"
        },
        {
          "Reference": "CVE-2003-0332",
          "Description": "Product modifies the first two letters of a filename extension after performing a security check, which allows remote attackers to bypass authentication via a filename with a .ats extension instead of a .hts extension.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0332"
        },
        {
          "Reference": "CVE-2002-0802",
          "Description": "Database consumes an extra character when processing a character that cannot be converted, which could remove an escape character from the query and make the application subject to SQL injection attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0802"
        },
        {
          "Reference": "CVE-2000-0191",
          "Description": "Overlaps \"fakechild/../realchild\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0191"
        },
        {
          "Reference": "CVE-2004-2363",
          "Description": "Product checks URI for \"<\" and other literal characters, but does it before hex decoding the URI, so \"%3E\" and other sequences are allowed.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2363"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "181",
      "Name": "Incorrect Behavior Order: Validate Before Filter",
      "Abstraction": "Variant",
      "Description": "The product validates data before it has been filtered, which prevents the product from detecting data that becomes invalid after the filtering step.",
      "ExtendedDescription": "This can be used by an attacker to bypass the validation and launch attacks that expose weaknesses that would otherwise be prevented, such as injection.",
      "AlternateTerms": [
        {
          "Term": "Validate-before-cleanse"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0934",
          "Description": "Directory traversal vulnerability allows remote attackers to read or modify arbitrary files via invalid characters between two . (dot) characters, which are filtered and result in a \"..\" sequence.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0934"
        },
        {
          "Reference": "CVE-2003-0282",
          "Description": "Directory traversal vulnerability allows attackers to overwrite arbitrary files via invalid characters between two . (dot) characters, which are filtered and result in a \"..\" sequence.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0282"
        }
      ],
      "FunctionalAreas": [
        "Protection Mechanism"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "182",
      "Name": "Collapse of Data into Unsafe Value",
      "Abstraction": "Base",
      "Description": "The product filters data in a way that causes it to be reduced or \"collapsed\" into an unsafe value that violates an expected security property.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-0815",
          "Description": "\"/.////\" in pathname collapses to absolute path.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0815"
        },
        {
          "Reference": "CVE-2005-3123",
          "Description": "\"/.//..//////././\" is collapsed into \"/.././\" after \"..\" and \"//\" sequences are removed.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3123"
        },
        {
          "Reference": "CVE-2002-0325",
          "Description": "\".../...//\" collapsed to \"...\" due to removal of \"./\" in web server.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0325"
        },
        {
          "Reference": "CVE-2002-0784",
          "Description": "chain: HTTP server protects against \"..\" but allows \".\" variants such as \"////./../.../\". If the server removes \"/..\" sequences, the result would collapse into an unsafe value \"////../\" (CWE-182).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0784"
        },
        {
          "Reference": "CVE-2005-2169",
          "Description": "MFV. Regular expression intended to protect against directory traversal reduces \".../...//\" to \"../\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2169"
        },
        {
          "Reference": "CVE-2001-1157",
          "Description": "XSS protection mechanism strips a <script> sequence that is nested in another <script> sequence.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1157"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "183",
      "Name": "Permissive List of Allowed Inputs",
      "Abstraction": "Base",
      "Description": "The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are explicitly allowed by policy because the inputs are assumed to be safe, but the list is too permissive - that is, it allows an input that is unsafe, leading to resultant weaknesses.",
      "AlternateTerms": [
        {
          "Term": "Allowlist / Allow List",
          "Description": "This is used by CWE and CAPEC instead of other commonly-used terms. Its counterpart is denylist."
        },
        {
          "Term": "Safelist / Safe List",
          "Description": "This is often used by security tools such as firewalls, email or web gateways, proxies, etc."
        },
        {
          "Term": "Whitelist / White List",
          "Description": "This term is frequently used, but usage has been declining as organizations have started to adopt other terms."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-12799",
          "Description": "chain: bypass of untrusted deserialization issue (CWE-502) by using an assumed-trusted class (CWE-183)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-12799"
        },
        {
          "Reference": "CVE-2019-10458",
          "Description": "sandbox bypass using a method that is on an allowlist",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-10458"
        },
        {
          "Reference": "CVE-2017-1000095",
          "Description": "sandbox bypass using unsafe methods that are on an allowlist",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-1000095"
        },
        {
          "Reference": "CVE-2019-10458",
          "Description": "CI/CD pipeline feature has unsafe elements in allowlist, allowing bypass of script restrictions",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-10458"
        },
        {
          "Reference": "CVE-2017-1000095",
          "Description": "Default allowlist includes unsafe methods, allowing bypass of sandbox",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-1000095"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "184",
      "Name": "Incomplete List of Disallowed Inputs",
      "Abstraction": "Base",
      "Description": "The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete, leading to resultant weaknesses.",
      "ExtendedDescription": "Developers often try to protect their products against malicious input by performing tests against inputs that are known to be bad, such as special characters that can invoke new commands. However, such lists often only account for the most well-known bad inputs. Attackers may be able to find other malicious inputs that were not expected by the developer, allowing them to bypass the intended protection mechanism.",
      "AlternateTerms": [
        {
          "Term": "Denylist / Deny List",
          "Description": "This is used by CWE and CAPEC instead of other commonly-used terms. Its counterpart is allowlist."
        },
        {
          "Term": "Blocklist / Block List",
          "Description": "This is often used by security tools such as firewalls, email or web gateways, proxies, etc."
        },
        {
          "Term": "Blacklist / Black List",
          "Description": "This term is frequently used, but usage has been declining as organizations have started to adopt other terms."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2024-4315",
          "Description": "Chain: API for text generation using Large Language Models (LLMs) does not include the \"\\\" Windows folder separator in its denylist (CWE-184) when attempting to prevent Local File Inclusion via path traversal (CWE-22), allowing deletion of arbitrary files on Windows systems.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2024-4315"
        },
        {
          "Reference": "CVE-2008-2309",
          "Description": "product uses a denylist to identify potentially dangerous content, allowing attacker to bypass a warning",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2309"
        },
        {
          "Reference": "CVE-2005-2782",
          "Description": "PHP remote file inclusion in web application that filters \"http\" and \"https\" URLs, but not \"ftp\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2782"
        },
        {
          "Reference": "CVE-2004-0542",
          "Description": "Programming language does not filter certain shell metacharacters in Windows environment.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0542"
        },
        {
          "Reference": "CVE-2004-0595",
          "Description": "XSS filter doesn't filter null characters before looking for dangerous tags, which are ignored by web browsers. MIE and validate-before-cleanse.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0595"
        },
        {
          "Reference": "CVE-2005-3287",
          "Description": "Web-based mail product doesn't restrict dangerous extensions such as ASPX on a web server, even though others are prohibited.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3287"
        },
        {
          "Reference": "CVE-2004-2351",
          "Description": "Resultant XSS when only <script> and <style> are checked.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2351"
        },
        {
          "Reference": "CVE-2005-2959",
          "Description": "Privileged program does not clear sensitive environment variables that are used by bash. Overlaps multiple interpretation error.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2959"
        },
        {
          "Reference": "CVE-2005-1824",
          "Description": "SQL injection protection scheme does not quote the \"\\\" special character.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1824"
        },
        {
          "Reference": "CVE-2005-2184",
          "Description": "Detection of risky filename extensions prevents users from automatically executing .EXE files, but .LNK is accepted, allowing resultant Windows symbolic link.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2184"
        },
        {
          "Reference": "CVE-2007-1343",
          "Description": "Product uses list of protected variables, but accidentally omits one dangerous variable, allowing external modification",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1343"
        },
        {
          "Reference": "CVE-2007-5727",
          "Description": "Chain: product only removes SCRIPT tags (CWE-184), enabling XSS (CWE-79)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5727"
        },
        {
          "Reference": "CVE-2006-4308",
          "Description": "Chain: product only checks for use of \"javascript:\" tag (CWE-184), allowing XSS (CWE-79) using other tags",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4308"
        },
        {
          "Reference": "CVE-2007-3572",
          "Description": "Chain: OS command injection (CWE-78) enabled by using an unexpected character that is not explicitly disallowed (CWE-184)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3572"
        },
        {
          "Reference": "CVE-2002-0661",
          "Description": "\"\\\" not in list of disallowed values for web server, allowing path traversal attacks when the server is run on Windows and other OSes.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0661"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "185",
      "Name": "Incorrect Regular Expression",
      "Abstraction": "Class",
      "Description": "The product specifies a regular expression in a way that causes data to be improperly matched or compared.",
      "ExtendedDescription": "When the regular expression is used in protection mechanisms such as filtering or validation, this may allow an attacker to bypass the intended restrictions on the incoming data.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-2109",
          "Description": "Regexp isn't \"anchored\" to the beginning or end, which allows spoofed values that have trusted values as substrings.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2109"
        },
        {
          "Reference": "CVE-2005-1949",
          "Description": "Regexp for IP address isn't anchored at the end, allowing appending of shell metacharacters.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1949"
        },
        {
          "Reference": "CVE-2001-1072",
          "Description": "Bypass access restrictions via multiple leading slash, which causes a regular expression to fail.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1072"
        },
        {
          "Reference": "CVE-2000-0115",
          "Description": "Local user DoS via invalid regular expressions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0115"
        },
        {
          "Reference": "CVE-2002-1527",
          "Description": "chain: Malformed input generates a regular expression error that leads to information exposure.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1527"
        },
        {
          "Reference": "CVE-2005-1061",
          "Description": "Certain strings are later used in a regexp, leading to a resultant crash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1061"
        },
        {
          "Reference": "CVE-2005-2169",
          "Description": "MFV. Regular expression intended to protect against directory traversal reduces \".../...//\" to \"../\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2169"
        },
        {
          "Reference": "CVE-2005-0603",
          "Description": "Malformed regexp syntax leads to information exposure in error message.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0603"
        },
        {
          "Reference": "CVE-2005-1820",
          "Description": "Code injection due to improper quoting of regular expression.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1820"
        },
        {
          "Reference": "CVE-2005-3153",
          "Description": "Null byte bypasses PHP regexp check.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3153"
        },
        {
          "Reference": "CVE-2005-4155",
          "Description": "Null byte bypasses PHP regexp check.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-4155"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "186",
      "Name": "Overly Restrictive Regular Expression",
      "Abstraction": "Base",
      "Description": "A regular expression is overly restrictive, which prevents dangerous values from being detected.",
      "ExtendedDescription": "This weakness is not about regular expression complexity. Rather, it is about a regular expression that does not match all values that are intended. Consider the use of a regexp to identify acceptable values or to spot unwanted terms. An overly restrictive regexp misses some potentially security-relevant values leading to either false positives *or* false negatives, depending on how the regexp is being used within the code. Consider the expression /[0-8]/ where the intention was /[0-9]/. This expression is not \"complex\" but the value \"9\" is not matched when maybe the programmer planned to check for it.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-1604",
          "Description": "MIE. \".php.ns\" bypasses \".php$\" regexp but is still parsed as PHP by Apache. (manipulates an equivalence property under Apache)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1604"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "187",
      "Name": "Partial String Comparison",
      "Abstraction": "Variant",
      "Description": "The product performs a comparison that only examines a portion of a factor before determining whether there is a match, such as a substring, leading to resultant weaknesses.",
      "ExtendedDescription": "For example, an attacker might succeed in authentication by providing a small password that matches the associated portion of the larger, correct password.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2014-6394",
          "Description": "Product does not prevent access to restricted directories due to partial string comparison with a public directory",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-6394"
        },
        {
          "Reference": "CVE-2004-1012",
          "Description": "Argument parser of an IMAP server treats a partial command \"body[p\" as if it is \"body.peek\", leading to index error and out-of-bounds corruption.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1012"
        },
        {
          "Reference": "CVE-2004-0765",
          "Description": "Web browser only checks the hostname portion of a certificate when the hostname portion of the URI is not a fully qualified domain name (FQDN), which allows remote attackers to spoof trusted certificates.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0765"
        },
        {
          "Reference": "CVE-2002-1374",
          "Description": "One-character password by attacker checks only against first character of real password.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1374"
        },
        {
          "Reference": "CVE-2000-0979",
          "Description": "One-character password by attacker checks only against first character of real password.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0979"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "188",
      "Name": "Reliance on Data/Memory Layout",
      "Abstraction": "Base",
      "Description": "The product makes invalid assumptions about how protocol data or memory is organized at a lower level, resulting in unintended program behavior.",
      "ExtendedDescription": "\n\nWhen changing platforms or protocol versions, in-memory organization of data may change in unintended ways. For example, some architectures may place local variables A and B right next to each other with A on top; some may place them next to each other with B on top; and others may add some padding to each. The padding size may vary to ensure that each variable is aligned to a proper word size.\n\n\nIn protocol implementations, it is common to calculate an offset relative to another field to pick out a specific piece of data. Exceptional conditions, often involving new protocol versions, may add corner cases that change the data layout in an unusual way. The result can be that an implementation accesses an unintended field in the packet, treating data of one type as data of another type.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "190",
      "Name": "Integer Overflow or Wraparound",
      "Abstraction": "Base",
      "Diagram": "/data/images/CWE-190-Diagram.png",
      "Description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
      "AlternateTerms": [
        {
          "Term": "Overflow",
          "Description": "The terms \"overflow\" and \"wraparound\" are used interchangeably by some people, but they can have more precise distinctions by others. See Terminology Notes."
        },
        {
          "Term": "Wraparound",
          "Description": "The terms \"overflow\" and \"wraparound\" are used interchangeably by some people, but they can have more precise distinctions by others. See Terminology Notes."
        },
        {
          "Term": "wrap, wrap-around, wrap around",
          "Description": "Alternate spellings of \"wraparound\""
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-43537",
          "Description": "Chain: in a web browser, an unsigned 64-bit integer is forcibly cast to a 32-bit integer (CWE-681) and potentially leading to an integer overflow (CWE-190). If an integer overflow occurs, this can cause heap memory corruption (CWE-122)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-43537"
        },
        {
          "Reference": "CVE-2022-21668",
          "Description": "Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-21668"
        },
        {
          "Reference": "CVE-2022-0545",
          "Description": "Chain: 3D renderer has an integer overflow (CWE-190) leading to write-what-where condition (CWE-123) using a crafted image.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-0545"
        },
        {
          "Reference": "CVE-2021-30860",
          "Description": "Chain: improper input validation (CWE-20) leads to integer overflow (CWE-190) in mobile OS, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-30860"
        },
        {
          "Reference": "CVE-2021-30663",
          "Description": "Chain: improper input validation (CWE-20) leads to integer overflow (CWE-190) in mobile OS, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-30663"
        },
        {
          "Reference": "CVE-2018-10887",
          "Description": "Chain: unexpected sign extension (CWE-194) leads to integer overflow (CWE-190), causing an out-of-bounds read (CWE-125)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-10887"
        },
        {
          "Reference": "CVE-2019-1010006",
          "Description": "Chain: compiler optimization (CWE-733) removes or modifies code used to detect integer overflow (CWE-190), allowing out-of-bounds write (CWE-787).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-1010006"
        },
        {
          "Reference": "CVE-2010-1866",
          "Description": "Chain: integer overflow (CWE-190) causes a negative signed value, which later bypasses a maximum-only check (CWE-839), leading to heap-based buffer overflow (CWE-122).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-1866"
        },
        {
          "Reference": "CVE-2010-2753",
          "Description": "Chain: integer overflow leads to use-after-free",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2753"
        },
        {
          "Reference": "CVE-2005-1513",
          "Description": "Chain: integer overflow in securely-coded mail program leads to buffer overflow. In 2005, this was regarded as unrealistic to exploit, but in 2020, it was rediscovered to be easier to exploit due to evolutions of the technology.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1513"
        },
        {
          "Reference": "CVE-2002-0391",
          "Description": "Integer overflow via a large number of arguments.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0391"
        },
        {
          "Reference": "CVE-2002-0639",
          "Description": "Integer overflow in OpenSSH as listed in the demonstrative examples.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0639"
        },
        {
          "Reference": "CVE-2005-1141",
          "Description": "Image with large width and height leads to integer overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1141"
        },
        {
          "Reference": "CVE-2005-0102",
          "Description": "Length value of -1 leads to allocation of 0 bytes and resultant heap overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0102"
        },
        {
          "Reference": "CVE-2004-2013",
          "Description": "Length value of -1 leads to allocation of 0 bytes and resultant heap overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2013"
        },
        {
          "Reference": "CVE-2017-1000121",
          "Description": "chain: unchecked message size metadata allows integer overflow (CWE-190) leading to buffer overflow (CWE-119).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-1000121"
        },
        {
          "Reference": "CVE-2013-1591",
          "Description": "Chain: an integer overflow (CWE-190) in the image size calculation causes an infinite loop (CWE-835) which sequentially allocates buffers without limits (CWE-1325) until the stack is full.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2013-1591"
        }
      ],
      "FunctionalAreas": [
        "Number Processing",
        "Memory Management",
        "Counters"
      ],
      "MappingNotes": {
        "Usage": "Allowed",
        "Suggestions": [
          {
            "CweID": "191",
            "Comment": "Integer Underflow (Wrap or Wraparound). Consider CWE-191 when the result is less than the minimum value that can be represented (sometimes called \"underflows\")."
          }
        ]
      },
      "1003_view": "Yes"
    },
    {
      "ID": "191",
      "Name": "Integer Underflow (Wrap or Wraparound)",
      "Abstraction": "Base",
      "Description": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
      "ExtendedDescription": "This can happen in signed and unsigned cases.",
      "AlternateTerms": [
        {
          "Term": "Integer underflow",
          "Description": "\n\n\"Integer underflow\" is sometimes used to identify signedness errors in which an originally positive number becomes negative as a result of subtraction. However, there are cases of bad subtraction in which unsigned integers are involved, so it's not always a signedness issue.\n\n\n\"Integer underflow\" is occasionally used to describe array index errors in which the index is negative.\n"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-0816",
          "Description": "Integer underflow in firewall via malformed packet.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0816"
        },
        {
          "Reference": "CVE-2004-1002",
          "Description": "Integer underflow by packet with invalid length.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1002"
        },
        {
          "Reference": "CVE-2005-0199",
          "Description": "Long input causes incorrect length calculation.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0199"
        },
        {
          "Reference": "CVE-2005-1891",
          "Description": "Malformed icon causes integer underflow in loop counter variable.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1891"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "192",
      "Name": "Integer Coercion Error",
      "Abstraction": "Variant",
      "Description": "Integer coercion refers to a set of flaws pertaining to the type casting, extension, or truncation of primitive data types.",
      "ExtendedDescription": "Several flaws fall under the category of integer coercion errors. For the most part, these errors in and of themselves result only in availability and data integrity issues. However, in some circumstances, they may result in other, more complicated security related flaws, such as buffer overflow conditions.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-2639",
          "Description": "Chain: integer coercion error (CWE-192) prevents a return value from indicating an error, leading to out-of-bounds write (CWE-787)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-2639"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "193",
      "Name": "Off-by-one Error",
      "Abstraction": "Base",
      "Description": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
      "AlternateTerms": [
        {
          "Term": "off-by-five",
          "Description": "An \"off-by-five\" error was reported for sudo in 2002 (CVE-2002-0184), but that is more like a \"length calculation\" error."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2003-0252",
          "Description": "Off-by-one error allows remote attackers to cause a denial of service and possibly execute arbitrary code via requests that do not contain newlines.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0252"
        },
        {
          "Reference": "CVE-2001-1391",
          "Description": "Off-by-one vulnerability in driver allows users to modify kernel memory.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1391"
        },
        {
          "Reference": "CVE-2002-0083",
          "Description": "Off-by-one error allows local users or remote malicious servers to gain privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0083"
        },
        {
          "Reference": "CVE-2002-0653",
          "Description": "Off-by-one buffer overflow in function usd by server allows local users to execute arbitrary code as the server user via .htaccess files with long entries.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0653"
        },
        {
          "Reference": "CVE-2002-0844",
          "Description": "Off-by-one buffer overflow in version control system allows local users to execute arbitrary code.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0844"
        },
        {
          "Reference": "CVE-1999-1568",
          "Description": "Off-by-one error in FTP server allows a remote attacker to cause a denial of service (crash) via a long PORT command.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1568"
        },
        {
          "Reference": "CVE-2004-0346",
          "Description": "Off-by-one buffer overflow in FTP server allows local users to gain privileges via a 1024 byte RETR command.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0346"
        },
        {
          "Reference": "CVE-2004-0005",
          "Description": "Multiple buffer overflows in chat client allow remote attackers to cause a denial of service and possibly execute arbitrary code.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0005"
        },
        {
          "Reference": "CVE-2003-0356",
          "Description": "Multiple off-by-one vulnerabilities in product allow remote attackers to cause a denial of service and possibly execute arbitrary code.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0356"
        },
        {
          "Reference": "CVE-2001-1496",
          "Description": "Off-by-one buffer overflow in server allows remote attackers to cause a denial of service and possibly execute arbitrary code.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1496"
        },
        {
          "Reference": "CVE-2004-0342",
          "Description": "This is an interesting example that might not be an off-by-one.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0342"
        },
        {
          "Reference": "CVE-2001-0609",
          "Description": "An off-by-one enables a terminating null to be overwritten, which causes 2 strings to be merged and enable a format string.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0609"
        },
        {
          "Reference": "CVE-2002-1745",
          "Description": "Off-by-one error allows source code disclosure of files with 4 letter extensions that match an accepted 3-letter extension.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1745"
        },
        {
          "Reference": "CVE-2002-1816",
          "Description": "Off-by-one buffer overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1816"
        },
        {
          "Reference": "CVE-2002-1721",
          "Description": "Off-by-one error causes an snprintf call to overwrite a critical internal variable with a null value.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1721"
        },
        {
          "Reference": "CVE-2003-0466",
          "Description": "Off-by-one error in function used in many products leads to a buffer overflow during pathname management, as demonstrated using multiple commands in an FTP server.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0466"
        },
        {
          "Reference": "CVE-2003-0625",
          "Description": "Off-by-one error allows read of sensitive memory via a malformed request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0625"
        },
        {
          "Reference": "CVE-2006-4574",
          "Description": "Chain: security monitoring product has an off-by-one error that leads to unexpected length values, triggering an assertion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4574"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "194",
      "Name": "Unexpected Sign Extension",
      "Abstraction": "Variant",
      "Description": "The product performs an operation on a number that causes it to be sign extended when it is transformed into a larger data type. When the original number is negative, this can produce unexpected values that lead to resultant weaknesses.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2018-10887",
          "Description": "Chain: unexpected sign extension (CWE-194) leads to integer overflow (CWE-190), causing an out-of-bounds read (CWE-125)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-10887"
        },
        {
          "Reference": "CVE-1999-0234",
          "Description": "Sign extension error produces -1 value that is treated as a command separator, enabling OS command injection.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0234"
        },
        {
          "Reference": "CVE-2003-0161",
          "Description": "Product uses \"char\" type for input character. When char is implemented as a signed type, ASCII value 0xFF (255), a sign extension produces a -1 value that is treated as a program-specific separator value, effectively disabling a length check and leading to a buffer overflow. This is also a multiple interpretation error.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0161"
        },
        {
          "Reference": "CVE-2007-4988",
          "Description": "chain: signed short width value in image processor is sign extended during conversion to unsigned int, which leads to integer overflow and heap-based buffer overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4988"
        },
        {
          "Reference": "CVE-2006-1834",
          "Description": "chain: signedness error allows bypass of a length check; later sign extension makes exploitation easier.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-1834"
        },
        {
          "Reference": "CVE-2005-2753",
          "Description": "Sign extension when manipulating Pascal-style strings leads to integer overflow and improper memory copy.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2753"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "195",
      "Name": "Signed to Unsigned Conversion Error",
      "Abstraction": "Variant",
      "Description": "The product uses a signed primitive and performs a cast to an unsigned primitive, which can produce an unexpected value if the value of the signed primitive can not be represented using an unsigned primitive.",
      "ExtendedDescription": "\n\nIt is dangerous to rely on implicit casts between signed and unsigned numbers because the result can take on an unexpected value and violate assumptions made by the program.\n\n\nOften, functions will return negative values to indicate a failure. When the result of a function is to be used as a size parameter, using these negative return values can have unexpected results. For example, if negative size values are passed to the standard memory copy or allocation functions they will be implicitly cast to a large unsigned value. This may lead to an exploitable buffer overflow or underflow condition.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-4268",
          "Description": "Chain: integer signedness error (CWE-195) passes signed comparison, leading to heap overflow (CWE-122)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4268"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "196",
      "Name": "Unsigned to Signed Conversion Error",
      "Abstraction": "Variant",
      "Description": "The product uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value if the value of the unsigned primitive can not be represented using a signed primitive.",
      "ExtendedDescription": "Although less frequent an issue than signed-to-unsigned conversion, unsigned-to-signed conversion can be the perfect precursor to dangerous buffer underwrite conditions that allow attackers to move down the stack where they otherwise might not have access in a normal buffer overflow condition. Buffer underwrites occur frequently when large unsigned values are cast to signed values, and then used as indexes into a buffer or for pointer arithmetic.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "197",
      "Name": "Numeric Truncation Error",
      "Abstraction": "Base",
      "Description": "Truncation errors occur when a primitive is cast to a primitive of a smaller size and data is lost in the conversion.",
      "ExtendedDescription": "When a primitive is cast to a smaller primitive, the high order bits of the large value are lost in the conversion, potentially resulting in an unexpected value that is not equal to the original value. This value may be required as an index into a buffer, a loop iterator, or simply necessary state data. In any case, the value cannot be trusted and the system will be in an undefined state. While this method may be employed viably to isolate the low bits of a value, this usage is rare, and truncation usually implies that an implementation error has occurred.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-17087",
          "Description": "Chain: integer truncation (CWE-197) causes small buffer allocation (CWE-131) leading to out-of-bounds write (CWE-787) in kernel pool, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-17087"
        },
        {
          "Reference": "CVE-2009-0231",
          "Description": "Integer truncation of length value leads to heap-based buffer overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0231"
        },
        {
          "Reference": "CVE-2008-3282",
          "Description": "Size of a particular type changes for 64-bit platforms, leading to an integer truncation in document processor causes incorrect index to be generated.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3282"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "198",
      "Name": "Use of Incorrect Byte Ordering",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not account for byte ordering (e.g. big-endian and little-endian) when processing the input, causing an incorrect number or value to be used.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "20",
      "Name": "Improper Input Validation",
      "Abstraction": "Class",
      "Description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
      "ExtendedDescription": "\n\nInput validation is a frequently-used technique for checking potentially dangerous inputs in order to ensure that the inputs are safe for processing within the code, or when communicating with other components. When software does not validate input properly, an attacker is able to craft the input in a form that is not expected by the rest of the application. This will lead to parts of the system receiving unintended input, which may result in altered control flow, arbitrary control of a resource, or arbitrary code execution.\n\n\nInput validation is not the only technique for processing input, however. Other techniques attempt to transform potentially-dangerous input into something safe, such as filtering (CWE-790) - which attempts to remove dangerous inputs - or encoding/escaping (CWE-116), which attempts to ensure that the input is not misinterpreted when it is included in output to another component. Other techniques exist as well (see CWE-138 for more examples.)\n\n\nInput validation can be applied to:\n\n\n  - raw data - strings, numbers, parameters, file contents, etc.\n\n  - metadata - information about the raw data, such as headers or size\n\nData can be simple or structured. Structured data can be composed of many nested layers, composed of combinations of metadata and raw data, with other simple or structured data.\n\nMany properties of raw data or metadata may need to be validated upon entry into the code, such as:\n\n\n  - specified quantities such as size, length, frequency, price, rate, number of operations, time, etc.\n\n  - implied or derived quantities, such as the actual size of a file instead of a specified size\n\n  - indexes, offsets, or positions into more complex data structures\n\n  - symbolic keys or other elements into hash tables, associative arrays, etc.\n\n  - well-formedness, i.e. syntactic correctness - compliance with expected syntax \n\n  - lexical token correctness - compliance with rules for what is treated as a token\n\n  - specified or derived type - the actual type of the input (or what the input appears to be)\n\n  - consistency - between individual data elements, between raw data and metadata, between references, etc.\n\n  - conformance to domain-specific rules, e.g. business logic \n\n  - equivalence - ensuring that equivalent inputs are treated the same\n\n  - authenticity, ownership, or other attestations about the input, e.g. a cryptographic signature to prove the source of the data\n\nImplied or derived properties of data must often be calculated or inferred by the code itself. Errors in deriving properties may be considered a contributing factor to improper input validation. \n\nNote that \"input validation\" has very different meanings to different people, or within different classification schemes. Caution must be used when referencing this CWE entry or mapping to it. For example, some weaknesses might involve inadvertently giving control to an attacker over an input when they should not be able to provide an input at all, but sometimes this is referred to as input validation.\n\n\nFinally, it is important to emphasize that the distinctions between input validation and output escaping are often blurred, and developers must be careful to understand the difference, including how input validation is not always sufficient to prevent vulnerabilities, especially when less stringent data types must be supported, such as free-form text. Consider a SQL injection scenario in which a person's last name is inserted into a query. The name \"O'Reilly\" would likely pass the validation step since it is a common last name in the English language. However, this valid name cannot be directly inserted into the database because it contains the \"'\" apostrophe character, which would need to be escaped or otherwise transformed. In this case, removing the apostrophe might reduce the risk of SQL injection, but it would produce incorrect behavior because the wrong name would be recorded.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2024-37032",
          "Description": "Large language model (LLM) management tool does not validate the format of a digest value (CWE-1287) from a private, untrusted model registry, enabling relative path traversal (CWE-23), a.k.a. Probllama",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2024-37032"
        },
        {
          "Reference": "CVE-2022-45918",
          "Description": "Chain: a learning management tool debugger uses external input to locate previous session logs (CWE-73) and does not properly validate the given path (CWE-20), allowing for filesystem path traversal using \"../\" sequences (CWE-24)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-45918"
        },
        {
          "Reference": "CVE-2021-30860",
          "Description": "Chain: improper input validation (CWE-20) leads to integer overflow (CWE-190) in mobile OS, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-30860"
        },
        {
          "Reference": "CVE-2021-30663",
          "Description": "Chain: improper input validation (CWE-20) leads to integer overflow (CWE-190) in mobile OS, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-30663"
        },
        {
          "Reference": "CVE-2021-22205",
          "Description": "Chain: backslash followed by a newline can bypass a validation step (CWE-20), leading to eval injection (CWE-95), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-22205"
        },
        {
          "Reference": "CVE-2021-21220",
          "Description": "Chain: insufficient input validation (CWE-20) in browser allows heap corruption (CWE-787), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-21220"
        },
        {
          "Reference": "CVE-2020-9054",
          "Description": "Chain: improper input validation (CWE-20) in username parameter, leading to OS command injection (CWE-78), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-9054"
        },
        {
          "Reference": "CVE-2020-3452",
          "Description": "Chain: security product has improper input validation (CWE-20) leading to directory traversal (CWE-22), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-3452"
        },
        {
          "Reference": "CVE-2020-3161",
          "Description": "Improper input validation of HTTP requests in IP phone, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-3161"
        },
        {
          "Reference": "CVE-2020-3580",
          "Description": "Chain: improper input validation (CWE-20) in firewall product leads to XSS (CWE-79), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-3580"
        },
        {
          "Reference": "CVE-2021-37147",
          "Description": "Chain: caching proxy server has improper input validation (CWE-20) of headers, allowing HTTP response smuggling (CWE-444) using an \"LF line ending\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-37147"
        },
        {
          "Reference": "CVE-2008-5305",
          "Description": "Eval injection in Perl program using an ID that should only contain hyphens and numbers.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5305"
        },
        {
          "Reference": "CVE-2008-2223",
          "Description": "SQL injection through an ID that was supposed to be numeric.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2223"
        },
        {
          "Reference": "CVE-2008-3477",
          "Description": "lack of input validation in spreadsheet program leads to buffer overflows, integer overflows, array index errors, and memory corruption.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3477"
        },
        {
          "Reference": "CVE-2008-3843",
          "Description": "insufficient validation enables XSS",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3843"
        },
        {
          "Reference": "CVE-2008-3174",
          "Description": "driver in security product allows code execution due to insufficient validation",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3174"
        },
        {
          "Reference": "CVE-2007-3409",
          "Description": "infinite loop from DNS packet with a label that points to itself",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3409"
        },
        {
          "Reference": "CVE-2006-6870",
          "Description": "infinite loop from DNS packet with a label that points to itself",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6870"
        },
        {
          "Reference": "CVE-2008-1303",
          "Description": "missing parameter leads to crash",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1303"
        },
        {
          "Reference": "CVE-2007-5893",
          "Description": "HTTP request with missing protocol version number leads to crash",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5893"
        },
        {
          "Reference": "CVE-2006-6658",
          "Description": "request with missing parameters leads to information exposure",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6658"
        },
        {
          "Reference": "CVE-2008-4114",
          "Description": "system crash with offset value that is inconsistent with packet size",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4114"
        },
        {
          "Reference": "CVE-2006-3790",
          "Description": "size field that is inconsistent with packet size leads to buffer over-read",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-3790"
        },
        {
          "Reference": "CVE-2008-2309",
          "Description": "product uses a denylist to identify potentially dangerous content, allowing attacker to bypass a warning",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2309"
        },
        {
          "Reference": "CVE-2008-3494",
          "Description": "security bypass via an extra header",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3494"
        },
        {
          "Reference": "CVE-2008-3571",
          "Description": "empty packet triggers reboot",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3571"
        },
        {
          "Reference": "CVE-2006-5525",
          "Description": "incomplete denylist allows SQL injection",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-5525"
        },
        {
          "Reference": "CVE-2008-1284",
          "Description": "NUL byte in theme name causes directory traversal impact to be worse",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1284"
        },
        {
          "Reference": "CVE-2008-0600",
          "Description": "kernel does not validate an incoming pointer before dereferencing it",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0600"
        },
        {
          "Reference": "CVE-2008-1738",
          "Description": "anti-virus product has insufficient input validation of hooked SSDT functions, allowing code execution",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1738"
        },
        {
          "Reference": "CVE-2008-1737",
          "Description": "anti-virus product allows DoS via zero-length field",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1737"
        },
        {
          "Reference": "CVE-2008-3464",
          "Description": "driver does not validate input from userland to the kernel",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3464"
        },
        {
          "Reference": "CVE-2008-2252",
          "Description": "kernel does not validate parameters sent in from userland, allowing code execution",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2252"
        },
        {
          "Reference": "CVE-2008-2374",
          "Description": "lack of validation of string length fields allows memory consumption or buffer over-read",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2374"
        },
        {
          "Reference": "CVE-2008-1440",
          "Description": "lack of validation of length field leads to infinite loop",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1440"
        },
        {
          "Reference": "CVE-2008-1625",
          "Description": "lack of validation of input to an IOCTL allows code execution",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1625"
        },
        {
          "Reference": "CVE-2008-3177",
          "Description": "zero-length attachment causes crash",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3177"
        },
        {
          "Reference": "CVE-2007-2442",
          "Description": "zero-length input causes free of uninitialized pointer",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-2442"
        },
        {
          "Reference": "CVE-2008-5563",
          "Description": "crash via a malformed frame structure",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5563"
        },
        {
          "Reference": "CVE-2008-5285",
          "Description": "infinite loop from a long SMTP request",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5285"
        },
        {
          "Reference": "CVE-2008-3812",
          "Description": "router crashes with a malformed packet",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3812"
        },
        {
          "Reference": "CVE-2008-3680",
          "Description": "packet with invalid version number leads to NULL pointer dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3680"
        },
        {
          "Reference": "CVE-2008-3660",
          "Description": "crash via multiple \".\" characters in file extension",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3660"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged",
        "Suggestions": [
          {
            "CweID": "1284",
            "Comment": "Specified Quantity"
          },
          {
            "CweID": "1285",
            "Comment": "Specified Index, Position, or Offset"
          },
          {
            "CweID": "1286",
            "Comment": "Syntactic Correctness"
          },
          {
            "CweID": "1287",
            "Comment": "Specified Type"
          },
          {
            "CweID": "1288",
            "Comment": "Consistency within Input"
          },
          {
            "CweID": "1289",
            "Comment": "Unsafe Equivalence"
          },
          {
            "CweID": "116",
            "Comment": "Improper Encoding or Escaping of Output"
          }
        ]
      },
      "1003_view": "Yes"
    },
    {
      "ID": "200",
      "Name": "Exposure of Sensitive Information to an Unauthorized Actor",
      "Abstraction": "Class",
      "Description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
      "ExtendedDescription": "\n\nThere are many different kinds of mistakes that introduce information exposures. The severity of the error can range widely, depending on the context in which the product operates, the type of sensitive information that is revealed, and the benefits it may provide to an attacker. Some kinds of sensitive information include:\n\n\n  - private, personal information, such as personal messages, financial data, health records, geographic location, or contact details\n\n  - system status and environment, such as the operating system and installed packages\n\n  - business secrets and intellectual property\n\n  - network status and configuration\n\n  - the product's own code or internal state\n\n  - metadata, e.g. logging of connections or message headers\n\n  - indirect information, such as a discrepancy between two internal operations that can be observed by an outsider\n\nInformation might be sensitive to different parties, each of which may have their own expectations for whether the information should be protected. These parties include:\n\n  - the product's own users\n\n  - people or organizations whose information is created or used by the product, even if they are not direct product users\n\n  - the product's administrators, including the admins of the system(s) and/or networks on which the product operates\n\n  - the developer\n\nInformation exposures can occur in different ways:\n\n  - the code  **explicitly inserts**  sensitive information into resources or messages that are intentionally made accessible to unauthorized actors, but should not contain the information - i.e., the information should have been \"scrubbed\" or \"sanitized\"\n\n  - a different weakness or mistake  **indirectly inserts**  the sensitive information into resources, such as a web script error revealing the full system path of the program.\n\n  - the code manages resources that intentionally contain sensitive information, but the resources are  **unintentionally made accessible**  to unauthorized actors. In this case, the information exposure is resultant - i.e., a different weakness enabled the access to the information in the first place.\n\nIt is common practice to describe any loss of confidentiality as an \"information exposure,\" but this can lead to overuse of CWE-200 in CWE mapping. From the CWE perspective, loss of confidentiality is a technical impact that can arise from dozens of different weaknesses, such as insecure file permissions or out-of-bounds read. CWE-200 and its lower-level descendants are intended to cover the mistakes that occur in behaviors that explicitly manage, store, transfer, or cleanse sensitive information.",
      "AlternateTerms": [
        {
          "Term": "Information Disclosure",
          "Description": "This term is frequently used in vulnerability advisories to describe a consequence or technical impact, for any vulnerability that has a loss of confidentiality. Often, CWE-200 can be misused to represent the loss of confidentiality, even when the mistake - i.e., the weakness - is not directly related to the mishandling of the information itself, such as an out-of-bounds read that accesses sensitive memory contents; here, the out-of-bounds read is the primary weakness, not the disclosure of the memory. In addition, this phrase is also used frequently in policies and legal documents, but it does not refer to any disclosure of security-relevant information."
        },
        {
          "Term": "Information Leak",
          "Description": "This is a frequently used term, however the \"leak\" term has multiple uses within security. In some cases it deals with the accidental exposure of information from a different weakness, but in other cases (such as \"memory leak\"), this deals with improper tracking of resources, which can lead to exhaustion. As a result, CWE is actively avoiding usage of the \"leak\" term."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-31162",
          "Description": "Rust library leaks Oauth client details in application debug logs",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-31162"
        },
        {
          "Reference": "CVE-2021-25476",
          "Description": "Digital Rights Management (DRM) capability for mobile platform leaks pointer information, simplifying ASLR bypass",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-25476"
        },
        {
          "Reference": "CVE-2001-1483",
          "Description": "Enumeration of valid usernames based on inconsistent responses",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1483"
        },
        {
          "Reference": "CVE-2001-1528",
          "Description": "Account number enumeration via inconsistent responses.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1528"
        },
        {
          "Reference": "CVE-2004-2150",
          "Description": "User enumeration via discrepancies in error messages.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2150"
        },
        {
          "Reference": "CVE-2005-1205",
          "Description": "Telnet protocol allows servers to obtain sensitive environment information from clients.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1205"
        },
        {
          "Reference": "CVE-2002-1725",
          "Description": "Script calls phpinfo(), revealing system configuration to web user",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1725"
        },
        {
          "Reference": "CVE-2002-0515",
          "Description": "Product sets a different TTL when a port is being filtered than when it is not being filtered, which allows remote attackers to identify filtered ports by comparing TTLs.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0515"
        },
        {
          "Reference": "CVE-2004-0778",
          "Description": "Version control system allows remote attackers to determine the existence of arbitrary files and directories via the -X command for an alternate history file, which causes different error messages to be returned.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0778"
        },
        {
          "Reference": "CVE-2000-1117",
          "Description": "Virtual machine allows malicious web site operators to determine the existence of files on the client by measuring delays in the execution of the getSystemResource method.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1117"
        },
        {
          "Reference": "CVE-2003-0190",
          "Description": "Product immediately sends an error message when a user does not exist, which allows remote attackers to determine valid usernames via a timing attack.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0190"
        },
        {
          "Reference": "CVE-2008-2049",
          "Description": "POP3 server reveals a password in an error message after multiple APOP commands are sent. Might be resultant from another weakness.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2049"
        },
        {
          "Reference": "CVE-2007-5172",
          "Description": "Program reveals password in error message if attacker can trigger certain database errors.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5172"
        },
        {
          "Reference": "CVE-2008-4638",
          "Description": "Composite: application running with high privileges (CWE-250) allows user to specify a restricted file to process, which generates a parsing error that leaks the contents of the file (CWE-209).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4638"
        },
        {
          "Reference": "CVE-2007-1409",
          "Description": "Direct request to library file in web application triggers pathname leak in error message.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1409"
        },
        {
          "Reference": "CVE-2005-0603",
          "Description": "Malformed regexp syntax leads to information exposure in error message.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0603"
        },
        {
          "Reference": "CVE-2004-2268",
          "Description": "Password exposed in debug information.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2268"
        },
        {
          "Reference": "CVE-2003-1078",
          "Description": "FTP client with debug option enabled shows password to the screen.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1078"
        },
        {
          "Reference": "CVE-2022-0708",
          "Description": "Collaboration platform does not clear team emails in a response, allowing leak of email addresses",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-0708"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "201",
      "Name": "Insertion of Sensitive Information Into Sent Data",
      "Abstraction": "Base",
      "Description": "The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.",
      "ExtendedDescription": "Sensitive information could include data that is sensitive in and of itself (such as credentials or private messages), or otherwise useful in the further exploitation of the system (such as internal file system structure).",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-0708",
          "Description": "Collaboration platform does not clear team emails in a response, allowing leak of email addresses",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-0708"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "202",
      "Name": "Exposure of Sensitive Information Through Data Queries",
      "Abstraction": "Base",
      "Description": "When trying to keep information confidential, an attacker can often infer some of the information by using statistics.",
      "ExtendedDescription": "In situations where data should not be tied to individual users, but a large number of users should be able to make queries that \"scrub\" the identity of users, it may be possible to get information about a user -- e.g., by specifying search terms that are known to be unique to that user.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-41935",
          "Description": "Wiki product allows an adversary to discover filenames via a series of queries starting with one letter and then iteratively extending the match.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-41935"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "203",
      "Name": "Observable Discrepancy",
      "Abstraction": "Base",
      "Description": "The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not.",
      "ExtendedDescription": "Discrepancies can take many forms, and variations may be detectable in timing, control flow, communications such as replies or requests, or general behavior. These discrepancies can reveal information about the product's operation or internal state to an unauthorized actor. In some cases, discrepancies can be used by attackers to form a side channel.",
      "AlternateTerms": [
        {
          "Term": "Side Channel Attack",
          "Description": "Observable Discrepancies are at the root of side channel attacks."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-8695",
          "Description": "Observable discrepancy in the RAPL interface for some Intel processors allows information disclosure.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8695"
        },
        {
          "Reference": "CVE-2019-14353",
          "Description": "Crypto hardware wallet's power consumption relates to total number of pixels illuminated, creating a side channel in the USB connection that allows attackers to determine secrets displayed such as PIN numbers and passwords",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-14353"
        },
        {
          "Reference": "CVE-2019-10071",
          "Description": "Java-oriented framework compares HMAC signatures using String.equals() instead of a constant-time algorithm, causing timing discrepancies",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-10071"
        },
        {
          "Reference": "CVE-2002-2094",
          "Description": "This, and others, use \"..\" attacks and monitor error responses, so there is overlap with directory traversal.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2094"
        },
        {
          "Reference": "CVE-2001-1483",
          "Description": "Enumeration of valid usernames based on inconsistent responses",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1483"
        },
        {
          "Reference": "CVE-2001-1528",
          "Description": "Account number enumeration via inconsistent responses.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1528"
        },
        {
          "Reference": "CVE-2004-2150",
          "Description": "User enumeration via discrepancies in error messages.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2150"
        },
        {
          "Reference": "CVE-2005-1650",
          "Description": "User enumeration via discrepancies in error messages.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1650"
        },
        {
          "Reference": "CVE-2004-0294",
          "Description": "Bulletin Board displays different error messages when a user exists or not, which makes it easier for remote attackers to identify valid users and conduct a brute force password guessing attack.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0294"
        },
        {
          "Reference": "CVE-2004-0243",
          "Description": "Operating System, when direct remote login is disabled, displays a different message if the password is correct, which allows remote attackers to guess the password via brute force methods.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0243"
        },
        {
          "Reference": "CVE-2002-0514",
          "Description": "Product allows remote attackers to determine if a port is being filtered because the response packet TTL is different than the default TTL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0514"
        },
        {
          "Reference": "CVE-2002-0515",
          "Description": "Product sets a different TTL when a port is being filtered than when it is not being filtered, which allows remote attackers to identify filtered ports by comparing TTLs.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0515"
        },
        {
          "Reference": "CVE-2002-0208",
          "Description": "Product modifies TCP/IP stack and ICMP error messages in unusual ways that show the product is in use.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0208"
        },
        {
          "Reference": "CVE-2004-2252",
          "Description": "Behavioral infoleak by responding to SYN-FIN packets.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2252"
        },
        {
          "Reference": "CVE-2001-1387",
          "Description": "Product may generate different responses than specified by the administrator, possibly leading to an information leak.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1387"
        },
        {
          "Reference": "CVE-2004-0778",
          "Description": "Version control system allows remote attackers to determine the existence of arbitrary files and directories via the -X command for an alternate history file, which causes different error messages to be returned.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0778"
        },
        {
          "Reference": "CVE-2004-1428",
          "Description": "FTP server generates an error message if the user name does not exist instead of prompting for a password, which allows remote attackers to determine valid usernames.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1428"
        },
        {
          "Reference": "CVE-2003-0078",
          "Description": "SSL implementation does not perform a MAC computation if an incorrect block cipher padding is used, which causes an information leak (timing discrepancy) that may make it easier to launch cryptographic attacks that rely on distinguishing between padding and MAC verification errors, possibly leading to extraction of the original plaintext, aka the \"Vaudenay timing attack.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0078"
        },
        {
          "Reference": "CVE-2000-1117",
          "Description": "Virtual machine allows malicious web site operators to determine the existence of files on the client by measuring delays in the execution of the getSystemResource method.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1117"
        },
        {
          "Reference": "CVE-2003-0637",
          "Description": "Product uses a shorter timeout for a non-existent user than a valid user, which makes it easier for remote attackers to guess usernames and conduct brute force password guessing.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0637"
        },
        {
          "Reference": "CVE-2003-0190",
          "Description": "Product immediately sends an error message when a user does not exist, which allows remote attackers to determine valid usernames via a timing attack.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0190"
        },
        {
          "Reference": "CVE-2004-1602",
          "Description": "FTP server responds in a different amount of time when a given username exists, which allows remote attackers to identify valid usernames by timing the server response.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1602"
        },
        {
          "Reference": "CVE-2005-0918",
          "Description": "Browser allows remote attackers to determine the existence of arbitrary files by setting the src property to the target filename and using Javascript to determine if the web page immediately stops loading, which indicates whether the file exists or not.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0918"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "204",
      "Name": "Observable Response Discrepancy",
      "Abstraction": "Base",
      "Description": "The product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere.",
      "ExtendedDescription": "This issue frequently occurs during authentication, where a difference in failed-login messages could allow an attacker to determine if the username is valid or not. These exposures can be inadvertent (bug) or intentional (design).",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-2094",
          "Description": "This, and others, use \"..\" attacks and monitor error responses, so there is overlap with directory traversal.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2094"
        },
        {
          "Reference": "CVE-2001-1483",
          "Description": "Enumeration of valid usernames based on inconsistent responses",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1483"
        },
        {
          "Reference": "CVE-2001-1528",
          "Description": "Account number enumeration via inconsistent responses.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1528"
        },
        {
          "Reference": "CVE-2004-2150",
          "Description": "User enumeration via discrepancies in error messages.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2150"
        },
        {
          "Reference": "CVE-2005-1650",
          "Description": "User enumeration via discrepancies in error messages.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1650"
        },
        {
          "Reference": "CVE-2004-0294",
          "Description": "Bulletin Board displays different error messages when a user exists or not, which makes it easier for remote attackers to identify valid users and conduct a brute force password guessing attack.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0294"
        },
        {
          "Reference": "CVE-2004-0243",
          "Description": "Operating System, when direct remote login is disabled, displays a different message if the password is correct, which allows remote attackers to guess the password via brute force methods.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0243"
        },
        {
          "Reference": "CVE-2002-0514",
          "Description": "Product allows remote attackers to determine if a port is being filtered because the response packet TTL is different than the default TTL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0514"
        },
        {
          "Reference": "CVE-2002-0515",
          "Description": "Product sets a different TTL when a port is being filtered than when it is not being filtered, which allows remote attackers to identify filtered ports by comparing TTLs.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0515"
        },
        {
          "Reference": "CVE-2001-1387",
          "Description": "Product may generate different responses than specified by the administrator, possibly leading to an information leak.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1387"
        },
        {
          "Reference": "CVE-2004-0778",
          "Description": "Version control system allows remote attackers to determine the existence of arbitrary files and directories via the -X command for an alternate history file, which causes different error messages to be returned.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0778"
        },
        {
          "Reference": "CVE-2004-1428",
          "Description": "FTP server generates an error message if the user name does not exist instead of prompting for a password, which allows remote attackers to determine valid usernames.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1428"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "205",
      "Name": "Observable Behavioral Discrepancy",
      "Abstraction": "Base",
      "Description": "The product's behaviors indicate important differences that may be observed by unauthorized actors in a way that reveals (1) its internal state or decision process, or (2) differences from other products with equivalent functionality.",
      "ExtendedDescription": "Ideally, a product should provide as little information about its internal operations as possible. Otherwise, attackers could use knowledge of these internal operations to simplify or optimize their attack. In some cases, behavioral discrepancies can be used by attackers to form a side channel.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0208",
          "Description": "Product modifies TCP/IP stack and ICMP error messages in unusual ways that show the product is in use.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0208"
        },
        {
          "Reference": "CVE-2004-2252",
          "Description": "Behavioral infoleak by responding to SYN-FIN packets.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2252"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "206",
      "Name": "Observable Internal Behavioral Discrepancy",
      "Abstraction": "Variant",
      "Description": "The product performs multiple behaviors that are combined to produce a single result, but the individual behaviors are observable separately in a way that allows attackers to reveal internal state or internal decision points.",
      "ExtendedDescription": "Ideally, a product should provide as little information as possible to an attacker. Any hints that the attacker may be making progress can then be used to simplify or optimize the attack. For example, in a login procedure that requires a username and password, ultimately there is only one decision: success or failure. However, internally, two separate actions are performed: determining if the username exists, and checking if the password is correct. If the product behaves differently based on whether the username exists or not, then the attacker only needs to concentrate on the password.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-2031",
          "Description": "File existence via infoleak monitoring whether \"onerror\" handler fires or not.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2031"
        },
        {
          "Reference": "CVE-2005-2025",
          "Description": "Valid groupname enumeration via behavioral infoleak (sends response if valid, doesn't respond if not).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2025"
        },
        {
          "Reference": "CVE-2001-1497",
          "Description": "Behavioral infoleak in GUI allows attackers to distinguish between alphanumeric and non-alphanumeric characters in a password, thus reducing the search space.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1497"
        },
        {
          "Reference": "CVE-2003-0190",
          "Description": "Product immediately sends an error message when user does not exist instead of waiting until the password is provided, allowing username enumeration.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0190"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "207",
      "Name": "Observable Behavioral Discrepancy With Equivalent Products",
      "Abstraction": "Variant",
      "Description": "The product operates in an environment in which its existence or specific identity should not be known, but it behaves differently than other products with equivalent functionality, in a way that is observable to an attacker.",
      "ExtendedDescription": "For many kinds of products, multiple products may be available that perform the same functionality, such as a web server, network interface, or intrusion detection system. Attackers often perform \"fingerprinting,\" which uses discrepancies in order to identify which specific product is in use. Once the specific product has been identified, the attacks can be made more customized and efficient. Often, an organization might intentionally allow the specific product to be identifiable. However, in some environments, the ability to identify a distinct product is unacceptable, and it is expected that every product would behave in exactly the same way. In these more restricted environments, a behavioral difference might pose an unacceptable risk if it makes it easier to identify the product's vendor, model, configuration, version, etc.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0208",
          "Description": "Product modifies TCP/IP stack and ICMP error messages in unusual ways that show the product is in use.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0208"
        },
        {
          "Reference": "CVE-2004-2252",
          "Description": "Behavioral infoleak by responding to SYN-FIN packets.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2252"
        },
        {
          "Reference": "CVE-2000-1142",
          "Description": "Honeypot generates an error with a \"pwd\" command in a particular directory, allowing attacker to know they are in a honeypot system.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1142"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "208",
      "Name": "Observable Timing Discrepancy",
      "Abstraction": "Base",
      "Description": "Two separate operations in a product require different amounts of time to complete, in a way that is observable to an actor and reveals security-relevant information about the state of the product, such as whether a particular operation was successful or not.",
      "ExtendedDescription": "In security-relevant contexts, even small variations in timing can be exploited by attackers to indirectly infer certain details about the product's internal operations. For example, in some cryptographic algorithms, attackers can use timing differences to infer certain properties about a private key, making the key easier to guess. Timing discrepancies effectively form a timing side channel.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-10071",
          "Description": "Java-oriented framework compares HMAC signatures using String.equals() instead of a constant-time algorithm, causing timing discrepancies",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-10071"
        },
        {
          "Reference": "CVE-2019-10482",
          "Description": "Smartphone OS uses comparison functions that are not in constant time, allowing side channels",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-10482"
        },
        {
          "Reference": "CVE-2014-0984",
          "Description": "Password-checking function in router terminates validation of a password entry when it encounters the first incorrect character, which allows remote attackers to obtain passwords via a brute-force attack that relies on timing differences in responses to incorrect password guesses, aka a timing side-channel attack.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-0984"
        },
        {
          "Reference": "CVE-2003-0078",
          "Description": "SSL implementation does not perform a MAC computation if an incorrect block cipher padding is used, which causes an information leak (timing discrepancy) that may make it easier to launch cryptographic attacks that rely on distinguishing between padding and MAC verification errors, possibly leading to extraction of the original plaintext, aka the \"Vaudenay timing attack.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0078"
        },
        {
          "Reference": "CVE-2000-1117",
          "Description": "Virtual machine allows malicious web site operators to determine the existence of files on the client by measuring delays in the execution of the getSystemResource method.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1117"
        },
        {
          "Reference": "CVE-2003-0637",
          "Description": "Product uses a shorter timeout for a non-existent user than a valid user, which makes it easier for remote attackers to guess usernames and conduct brute force password guessing.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0637"
        },
        {
          "Reference": "CVE-2003-0190",
          "Description": "Product immediately sends an error message when a user does not exist, which allows remote attackers to determine valid usernames via a timing attack.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0190"
        },
        {
          "Reference": "CVE-2004-1602",
          "Description": "FTP server responds in a different amount of time when a given username exists, which allows remote attackers to identify valid usernames by timing the server response.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1602"
        },
        {
          "Reference": "CVE-2005-0918",
          "Description": "Browser allows remote attackers to determine the existence of arbitrary files by setting the src property to the target filename and using Javascript to determine if the web page immediately stops loading, which indicates whether the file exists or not.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0918"
        }
      ],
      "FunctionalAreas": [
        "Cryptography",
        "Authentication"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "209",
      "Name": "Generation of Error Message Containing Sensitive Information",
      "Abstraction": "Base",
      "Description": "The product generates an error message that includes sensitive information about its environment, users, or associated data.",
      "ExtendedDescription": "\n\nThe sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more serious attacks. The error message may be created in different ways:\n\n\n  - self-generated: the source code explicitly constructs the error message and delivers it\n\n  - externally-generated: the external environment, such as a language interpreter, handles the error and constructs its own message, whose contents are not under direct control by the programmer\n\nAn attacker may use the contents of error messages to help launch another, more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of \"..\" sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2008-2049",
          "Description": "POP3 server reveals a password in an error message after multiple APOP commands are sent. Might be resultant from another weakness.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2049"
        },
        {
          "Reference": "CVE-2007-5172",
          "Description": "Program reveals password in error message if attacker can trigger certain database errors.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5172"
        },
        {
          "Reference": "CVE-2008-4638",
          "Description": "Composite: application running with high privileges (CWE-250) allows user to specify a restricted file to process, which generates a parsing error that leaks the contents of the file (CWE-209).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4638"
        },
        {
          "Reference": "CVE-2008-1579",
          "Description": "Existence of user names can be determined by requesting a nonexistent blog and reading the error message.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1579"
        },
        {
          "Reference": "CVE-2007-1409",
          "Description": "Direct request to library file in web application triggers pathname leak in error message.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1409"
        },
        {
          "Reference": "CVE-2008-3060",
          "Description": "Malformed input to login page causes leak of full path when IMAP call fails.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3060"
        },
        {
          "Reference": "CVE-2005-0603",
          "Description": "Malformed regexp syntax leads to information exposure in error message.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0603"
        },
        {
          "Reference": "CVE-2017-9615",
          "Description": "verbose logging stores admin credentials in a world-readablelog file",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-9615"
        },
        {
          "Reference": "CVE-2018-1999036",
          "Description": "SSH password for private key stored in build log",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-1999036"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "210",
      "Name": "Self-generated Error Message Containing Sensitive Information",
      "Abstraction": "Base",
      "Description": "The product identifies an error condition and creates its own diagnostic or error messages that contain sensitive information.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-1745",
          "Description": "Infoleak of sensitive information in error message (physical access required).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1745"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "211",
      "Name": "Externally-Generated Error Message Containing Sensitive Information",
      "Abstraction": "Base",
      "Description": "The product performs an operation that triggers an external diagnostic or error message that is not directly generated or controlled by the product, such as an error generated by the programming language interpreter that a software application uses. The error can contain sensitive system information.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-1581",
          "Description": "chain: product does not protect against direct request of an include file, leading to resultant path disclosure when the include file does not successfully execute.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1581"
        },
        {
          "Reference": "CVE-2004-1579",
          "Description": "Single \"'\" inserted into SQL query leads to invalid SQL query execution, triggering full path disclosure. Possibly resultant from more general SQL injection issue.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1579"
        },
        {
          "Reference": "CVE-2005-0459",
          "Description": "chain: product does not protect against direct request of a library file, leading to resultant path disclosure when the file does not successfully execute.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0459"
        },
        {
          "Reference": "CVE-2005-0443",
          "Description": "invalid parameter triggers a failure to find an include file, leading to infoleak in error message.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0443"
        },
        {
          "Reference": "CVE-2005-0433",
          "Description": "Various invalid requests lead to information leak in verbose error messages describing the failure to instantiate a class, open a configuration file, or execute an undefined function.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0433"
        },
        {
          "Reference": "CVE-2004-1101",
          "Description": "Improper handling of filename request with trailing \"/\" causes multiple consequences, including information leak in Visual Basic error message.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1101"
        }
      ],
      "FunctionalAreas": [
        "Error Handling"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "212",
      "Name": "Improper Removal of Sensitive Information Before Storage or Transfer",
      "Abstraction": "Base",
      "Description": "The product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.",
      "ExtendedDescription": "\n\nResources that may contain sensitive data include documents, packets, messages, databases, etc. While this data may be useful to an individual user or small set of users who share the resource, it may need to be removed before the resource can be shared outside of the trusted group. The process of removal is sometimes called cleansing or scrubbing.\n\n\nFor example, a product for editing documents might not remove sensitive data such as reviewer comments or the local pathname where the document is stored. Or, a proxy might not remove an internal IP address from headers before making an outgoing request to an Internet site.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-3733",
          "Description": "Cryptography library does not clear heap memory before release",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-3733"
        },
        {
          "Reference": "CVE-2005-0406",
          "Description": "Some image editors modify a JPEG image, but the original EXIF thumbnail image is left intact within the JPEG. (Also an interaction error).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0406"
        },
        {
          "Reference": "CVE-2002-0704",
          "Description": "NAT feature in firewall leaks internal IP addresses in ICMP error messages.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0704"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "213",
      "Name": "Exposure of Sensitive Information Due to Incompatible Policies",
      "Abstraction": "Base",
      "Description": "The product's intended functionality exposes information to certain actors in accordance with the developer's security policy, but this information is regarded as sensitive according to the intended security policies of other stakeholders such as the product's administrator, users, or others whose information is being processed.",
      "ExtendedDescription": "\n\nWhen handling information, the developer must consider whether the information is regarded as sensitive by different stakeholders, such as users or administrators. Each stakeholder effectively has its own intended security policy that the product is expected to uphold. When a developer does not treat that information as sensitive, this can introduce a vulnerability that violates the expectations of the product's users.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1725",
          "Description": "Script calls phpinfo()",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1725"
        },
        {
          "Reference": "CVE-2004-0033",
          "Description": "Script calls phpinfo()",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0033"
        },
        {
          "Reference": "CVE-2003-1181",
          "Description": "Script calls phpinfo()",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1181"
        },
        {
          "Reference": "CVE-2004-1422",
          "Description": "Script calls phpinfo()",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1422"
        },
        {
          "Reference": "CVE-2004-1590",
          "Description": "Script calls phpinfo()",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1590"
        },
        {
          "Reference": "CVE-2003-1038",
          "Description": "Product lists DLLs and full pathnames.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1038"
        },
        {
          "Reference": "CVE-2005-1205",
          "Description": "Telnet protocol allows servers to obtain sensitive environment information from clients.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1205"
        },
        {
          "Reference": "CVE-2005-0488",
          "Description": "Telnet protocol allows servers to obtain sensitive environment information from clients.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0488"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "214",
      "Name": "Invocation of Process Using Visible Sensitive Information",
      "Abstraction": "Base",
      "Description": "A process is invoked with sensitive command-line arguments, environment variables, or other elements that can be seen by other processes on the operating system.",
      "ExtendedDescription": "Many operating systems allow a user to list information about processes that are owned by other users. Other users could see information such as command line arguments or environment variable settings. When this data contains sensitive information such as credentials, it might allow other users to launch an attack against the product or related resources.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-1387",
          "Description": "password passed on command line",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1387"
        },
        {
          "Reference": "CVE-2005-2291",
          "Description": "password passed on command line",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2291"
        },
        {
          "Reference": "CVE-2001-1565",
          "Description": "username/password on command line allows local users to view via \"ps\" or other process listing programs",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1565"
        },
        {
          "Reference": "CVE-2004-1948",
          "Description": "Username/password on command line allows local users to view via \"ps\" or other process listing programs.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1948"
        },
        {
          "Reference": "CVE-1999-1270",
          "Description": "PGP passphrase provided as command line argument.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1270"
        },
        {
          "Reference": "CVE-2004-1058",
          "Description": "Kernel race condition allows reading of environment variables of a process that is still spawning.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1058"
        },
        {
          "Reference": "CVE-2021-32638",
          "Description": "Code analysis product passes access tokens as a command-line parameter or through an environment variable, making them visible to other processes via the ps command.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-32638"
        }
      ],
      "AffectedResources": [
        "System Process"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "215",
      "Name": "Insertion of Sensitive Information Into Debugging Code",
      "Abstraction": "Base",
      "Description": "The product inserts sensitive information into debugging code, which could expose this information if the debugging code is not disabled in production.",
      "ExtendedDescription": "When debugging, it may be necessary to report detailed information to the programmer. However, if the debugging code is not disabled when the product is operating in a production environment, then this sensitive information may be exposed to attackers.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-2268",
          "Description": "Password exposed in debug information.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2268"
        },
        {
          "Reference": "CVE-2002-0918",
          "Description": "CGI script includes sensitive information in debug messages when an error is triggered.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0918"
        },
        {
          "Reference": "CVE-2003-1078",
          "Description": "FTP client with debug option enabled shows password to the screen.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1078"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "219",
      "Name": "Storage of File with Sensitive Data Under Web Root",
      "Abstraction": "Variant",
      "Description": "The product stores sensitive data under the web document root with insufficient access control, which might make it accessible to untrusted parties.",
      "ExtendedDescription": "Besides public-facing web pages and code, products may store sensitive data, code that is not directly invoked, or other files under the web document root of the web server. If the server is not configured or otherwise used to prevent direct access to those files, then attackers may obtain this sensitive data.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-1835",
          "Description": "Data file under web root.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1835"
        },
        {
          "Reference": "CVE-2005-2217",
          "Description": "Data file under web root.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2217"
        },
        {
          "Reference": "CVE-2002-1449",
          "Description": "Username/password in data file under web root.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1449"
        },
        {
          "Reference": "CVE-2002-0943",
          "Description": "Database file under web root.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0943"
        },
        {
          "Reference": "CVE-2005-1645",
          "Description": "database file under web root.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1645"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "22",
      "Name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
      "Abstraction": "Base",
      "Diagram": "/data/images/CWE-22-Diagram.png",
      "Description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
      "ExtendedDescription": "\n\nMany file operations are intended to take place within a restricted directory. By using special elements such as \"..\" and \"/\" separators, attackers can escape outside of the restricted location to access files or directories that are elsewhere on the system. One of the most common special elements is the \"../\" sequence, which in most modern operating systems is interpreted as the parent directory of the current location. This is referred to as relative path traversal. Path traversal also covers the use of absolute pathnames such as \"/usr/local/bin\" to access unexpected files. This is referred to as absolute path traversal.\n",
      "AlternateTerms": [
        {
          "Term": "Directory traversal"
        },
        {
          "Term": "Path traversal",
          "Description": "\"Path traversal\" is preferred over \"directory traversal,\" but both terms are attack-focused."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2024-37032",
          "Description": "Large language model (LLM) management tool does not validate the format of a digest value (CWE-1287) from a private, untrusted model registry, enabling relative path traversal (CWE-23), a.k.a. Probllama",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2024-37032"
        },
        {
          "Reference": "CVE-2024-4315",
          "Description": "Chain: API for text generation using Large Language Models (LLMs) does not include the \"\\\" Windows folder separator in its denylist (CWE-184) when attempting to prevent Local File Inclusion via path traversal (CWE-22), allowing deletion of arbitrary files on Windows systems.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2024-4315"
        },
        {
          "Reference": "CVE-2022-45918",
          "Description": "Chain: a learning management tool debugger uses external input to locate previous session logs (CWE-73) and does not properly validate the given path (CWE-20), allowing for filesystem path traversal using \"../\" sequences (CWE-24)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-45918"
        },
        {
          "Reference": "CVE-2019-20916",
          "Description": "Python package manager does not correctly restrict the filename specified in a Content-Disposition header, allowing arbitrary file read using path traversal sequences such as \"../\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-20916"
        },
        {
          "Reference": "CVE-2022-31503",
          "Description": "Python package constructs filenames using an unsafe os.path.join call on untrusted input, allowing absolute path traversal because os.path.join resets the pathname to an absolute path that is specified as part of the input.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-31503"
        },
        {
          "Reference": "CVE-2022-24877",
          "Description": "directory traversal in Go-based Kubernetes operator app allows accessing data from the controller's pod file system via ../ sequences in a yaml file",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-24877"
        },
        {
          "Reference": "CVE-2021-21972",
          "Description": "Chain: Cloud computing virtualization platform does not require authentication for upload of a tar format file (CWE-306), then uses .. path traversal sequences (CWE-23) in the file to access unexpected files, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-21972"
        },
        {
          "Reference": "CVE-2020-4053",
          "Description": "a Kubernetes package manager written in Go allows malicious plugins to inject path traversal sequences into a plugin archive (\"Zip slip\") to copy a file outside the intended directory",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-4053"
        },
        {
          "Reference": "CVE-2020-3452",
          "Description": "Chain: security product has improper input validation (CWE-20) leading to directory traversal (CWE-22), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-3452"
        },
        {
          "Reference": "CVE-2019-10743",
          "Description": "Go-based archive library allows extraction of files to locations outside of the target folder with \"../\" path traversal sequences in filenames in a zip file, aka \"Zip Slip\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-10743"
        },
        {
          "Reference": "CVE-2010-0467",
          "Description": "Newsletter module allows reading arbitrary files using \"../\" sequences.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-0467"
        },
        {
          "Reference": "CVE-2006-7079",
          "Description": "Chain: PHP app uses extract for register_globals compatibility layer (CWE-621), enabling path traversal (CWE-22)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-7079"
        },
        {
          "Reference": "CVE-2009-4194",
          "Description": "FTP server allows deletion of arbitrary files using \"..\" in the DELE command.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-4194"
        },
        {
          "Reference": "CVE-2009-4053",
          "Description": "FTP server allows creation of arbitrary directories using \"..\" in the MKD command.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-4053"
        },
        {
          "Reference": "CVE-2009-0244",
          "Description": "FTP service for a Bluetooth device allows listing of directories, and creation or reading of files using \"..\" sequences.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0244"
        },
        {
          "Reference": "CVE-2009-4013",
          "Description": "Software package maintenance program allows overwriting arbitrary files using \"../\" sequences.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-4013"
        },
        {
          "Reference": "CVE-2009-4449",
          "Description": "Bulletin board allows attackers to determine the existence of files using the avatar.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-4449"
        },
        {
          "Reference": "CVE-2009-4581",
          "Description": "PHP program allows arbitrary code execution using \"..\" in filenames that are fed to the include() function.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-4581"
        },
        {
          "Reference": "CVE-2010-0012",
          "Description": "Overwrite of files using a .. in a Torrent file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-0012"
        },
        {
          "Reference": "CVE-2010-0013",
          "Description": "Chat program allows overwriting files using a custom smiley request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-0013"
        },
        {
          "Reference": "CVE-2008-5748",
          "Description": "Chain: external control of values for user's desired language and theme enables path traversal.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5748"
        },
        {
          "Reference": "CVE-2009-1936",
          "Description": "Chain: library file sends a redirect if it is directly requested but continues to execute, allowing remote file inclusion and path traversal.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1936"
        }
      ],
      "FunctionalAreas": [
        "File Processing"
      ],
      "AffectedResources": [
        "File or Directory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "220",
      "Name": "Storage of File With Sensitive Data Under FTP Root",
      "Abstraction": "Variant",
      "Description": "The product stores sensitive data under the FTP server root with insufficient access control, which might make it accessible to untrusted parties.",
      "BackgroundDetails": [
        "Various Unix FTP servers require a password file that is under the FTP root, due to use of chroot."
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "221",
      "Name": "Information Loss or Omission",
      "Abstraction": "Class",
      "Description": "The product does not record, or improperly records, security-relevant information that leads to an incorrect decision or hampers later analysis.",
      "ExtendedDescription": "This can be resultant, e.g. a buffer overflow might trigger a crash before the product can log the event.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-2227",
          "Description": "Web browser's filename selection dialog only shows the beginning portion of long filenames, which can trick users into launching executables with dangerous extensions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2227"
        },
        {
          "Reference": "CVE-2003-0412",
          "Description": "application server does not log complete URI of a long request (truncation).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0412"
        },
        {
          "Reference": "CVE-1999-1029",
          "Description": "Login attempts are not recorded if the user disconnects before the maximum number of tries.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1029"
        },
        {
          "Reference": "CVE-2002-0725",
          "Description": "Attacker performs malicious actions on a hard link to a file, obscuring the real target file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0725"
        },
        {
          "Reference": "CVE-1999-1055",
          "Description": "Product does not warn user when document contains certain dangerous functions or macros.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1055"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "222",
      "Name": "Truncation of Security-relevant Information",
      "Abstraction": "Base",
      "Description": "The product truncates the display, recording, or processing of security-relevant information in a way that can obscure the source or nature of an attack.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-0585",
          "Description": "Web browser truncates long sub-domains or paths, facilitating phishing.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0585"
        },
        {
          "Reference": "CVE-2004-2032",
          "Description": "Bypass URL filter via a long URL with a large number of trailing hex-encoded space characters.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2032"
        },
        {
          "Reference": "CVE-2003-0412",
          "Description": "application server does not log complete URI of a long request (truncation).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0412"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "223",
      "Name": "Omission of Security-relevant Information",
      "Abstraction": "Base",
      "Description": "The product does not record or display information that would be important for identifying the source or nature of an attack, or determining if an action is safe.",
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-1029",
          "Description": "Login attempts are not recorded if the user disconnects before the maximum number of tries.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1029"
        },
        {
          "Reference": "CVE-2002-1839",
          "Description": "Sender's IP address not recorded in outgoing e-mail.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1839"
        },
        {
          "Reference": "CVE-2000-0542",
          "Description": "Failed authentication attempts are not recorded if later attempt succeeds.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0542"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "224",
      "Name": "Obscured Security-relevant Information by Alternate Name",
      "Abstraction": "Base",
      "Description": "The product records security-relevant information according to an alternate name of the affected entity, instead of the canonical name.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0725",
          "Description": "Attacker performs malicious actions on a hard link to a file, obscuring the real target file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0725"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "226",
      "Name": "Sensitive Information in Resource Not Removed Before Reuse",
      "Abstraction": "Base",
      "Description": "The product releases a resource such as memory or a file so that it can be made available for reuse, but it does not clear or \"zeroize\" the information contained in the resource before the product performs a critical state transition or makes the resource available for reuse by other entities.",
      "ExtendedDescription": "\n\nWhen resources are released, they can be made available for reuse. For example, after memory is de-allocated, an operating system may make the memory available to another process, or disk space may be reallocated when a file is deleted. As removing information requires time and additional resources, operating systems do not usually clear the previously written information.\n\n\nEven when the resource is reused by the same process, this weakness can arise when new data is not as large as the old data, which leaves portions of the old data still available. Equivalent errors can occur in other situations where the length of data is variable but the associated data structure is not. If memory is not cleared after use, the information may be read by less trustworthy parties when the memory is reallocated.\n\n\nThis weakness can apply in hardware, such as when a device or system switches between power, sleep, or debug states during normal operation, or when execution changes to different users or privilege levels.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-3733",
          "Description": "Cryptography library does not clear heap memory before release",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-3733"
        },
        {
          "Reference": "CVE-2003-0001",
          "Description": "Ethernet NIC drivers do not pad frames with null bytes, leading to infoleak from malformed packets.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0001"
        },
        {
          "Reference": "CVE-2003-0291",
          "Description": "router does not clear information from DHCP packets that have been previously used",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0291"
        },
        {
          "Reference": "CVE-2005-1406",
          "Description": "Products do not fully clear memory buffers when less data is stored into the buffer than previous.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1406"
        },
        {
          "Reference": "CVE-2005-1858",
          "Description": "Products do not fully clear memory buffers when less data is stored into the buffer than previous.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1858"
        },
        {
          "Reference": "CVE-2005-3180",
          "Description": "Products do not fully clear memory buffers when less data is stored into the buffer than previous.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3180"
        },
        {
          "Reference": "CVE-2005-3276",
          "Description": "Product does not clear a data structure before writing to part of it, yielding information leak of previously used memory.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3276"
        },
        {
          "Reference": "CVE-2002-2077",
          "Description": "Memory not properly cleared before reuse.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2077"
        }
      ],
      "FunctionalAreas": [
        "Memory Management",
        "Networking"
      ],
      "AffectedResources": [
        "Memory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "228",
      "Name": "Improper Handling of Syntactically Invalid Structure",
      "Abstraction": "Class",
      "Description": "The product does not handle or incorrectly handles input that is not syntactically well-formed with respect to the associated specification.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-0270",
          "Description": "Anti-virus product has assert error when line length is non-numeric.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0270"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "229",
      "Name": "Improper Handling of Values",
      "Abstraction": "Base",
      "Description": "The product does not properly handle when the expected number of values for parameters, fields, or arguments is not provided in input, or if those values are undefined.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "23",
      "Name": "Relative Path Traversal",
      "Abstraction": "Base",
      "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as \"..\" that can resolve to a location that is outside of that directory.",
      "ExtendedDescription": "This allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.",
      "AlternateTerms": [
        {
          "Term": "Zip Slip",
          "Description": "\"Zip slip\" is an attack that uses file archives (e.g., ZIP, tar, rar, etc.) that contain filenames with path traversal sequences that cause the files to be written outside of the directory under which the archive is expected to be extracted [REF-1282]. It is most commonly used for relative path traversal (CWE-23) and link following (CWE-59)."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2024-37032",
          "Description": "Large language model (LLM) management tool does not validate the format of a digest value (CWE-1287) from a private, untrusted model registry, enabling relative path traversal (CWE-23), a.k.a. Probllama",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2024-37032"
        },
        {
          "Reference": "CVE-2022-45918",
          "Description": "Chain: a learning management tool debugger uses external input to locate previous session logs (CWE-73) and does not properly validate the given path (CWE-20), allowing for filesystem path traversal using \"../\" sequences (CWE-24)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-45918"
        },
        {
          "Reference": "CVE-2019-20916",
          "Description": "Python package manager does not correctly restrict the filename specified in a Content-Disposition header, allowing arbitrary file read using path traversal sequences such as \"../\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-20916"
        },
        {
          "Reference": "CVE-2022-24877",
          "Description": "directory traversal in Go-based Kubernetes operator app allows accessing data from the controller's pod file system via ../ sequences in a yaml file",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-24877"
        },
        {
          "Reference": "CVE-2020-4053",
          "Description": "a Kubernetes package manager written in Go allows malicious plugins to inject path traversal sequences into a plugin archive (\"Zip slip\") to copy a file outside the intended directory",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-4053"
        },
        {
          "Reference": "CVE-2021-21972",
          "Description": "Chain: Cloud computing virtualization platform does not require authentication for upload of a tar format file (CWE-306), then uses .. path traversal sequences (CWE-23) in the file to access unexpected files, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-21972"
        },
        {
          "Reference": "CVE-2019-10743",
          "Description": "Go-based archive library allows extraction of files to locations outside of the target folder with \"../\" path traversal sequences in filenames in a zip file, aka \"Zip Slip\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-10743"
        },
        {
          "Reference": "CVE-2002-0298",
          "Description": "Server allows remote attackers to cause a denial of service via certain HTTP GET requests containing a %2e%2e (encoded dot-dot), several \"/../\" sequences, or several \"../\" in a URI.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0298"
        },
        {
          "Reference": "CVE-2002-0661",
          "Description": "\"\\\" not in denylist for web server, allowing path traversal attacks when the server is run in Windows and other OSes.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0661"
        },
        {
          "Reference": "CVE-2002-0946",
          "Description": "Arbitrary files may be read files via ..\\ (dot dot) sequences in an HTTP request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0946"
        },
        {
          "Reference": "CVE-2002-1042",
          "Description": "Directory traversal vulnerability in search engine for web server allows remote attackers to read arbitrary files via \"..\\\" sequences in queries.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1042"
        },
        {
          "Reference": "CVE-2002-1209",
          "Description": "Directory traversal vulnerability in FTP server allows remote attackers to read arbitrary files via \"..\\\" sequences in a GET request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1209"
        },
        {
          "Reference": "CVE-2002-1178",
          "Description": "Directory traversal vulnerability in servlet allows remote attackers to execute arbitrary commands via \"..\\\" sequences in an HTTP request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1178"
        },
        {
          "Reference": "CVE-2002-1987",
          "Description": "Protection mechanism checks for \"/..\" but doesn't account for Windows-specific \"\\..\" allowing read of arbitrary files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1987"
        },
        {
          "Reference": "CVE-2005-2142",
          "Description": "Directory traversal vulnerability in FTP server allows remote authenticated attackers to list arbitrary directories via a \"\\..\" sequence in an LS command.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2142"
        },
        {
          "Reference": "CVE-2002-0160",
          "Description": "The administration function in Access Control Server allows remote attackers to read HTML, Java class, and image files outside the web root via a \"..\\..\" sequence in the URL to port 2002.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0160"
        },
        {
          "Reference": "CVE-2001-0467",
          "Description": "\"\\...\" in web server",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0467"
        },
        {
          "Reference": "CVE-2001-0963",
          "Description": "\"...\" in cd command in FTP server",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0963"
        },
        {
          "Reference": "CVE-2001-1193",
          "Description": "\"...\" in cd command in FTP server",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1193"
        },
        {
          "Reference": "CVE-2001-1131",
          "Description": "\"...\" in cd command in FTP server",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1131"
        },
        {
          "Reference": "CVE-2001-0480",
          "Description": "read of arbitrary files and directories using GET or CD with \"...\" in Windows-based FTP server.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0480"
        },
        {
          "Reference": "CVE-2002-0288",
          "Description": "read files using \".\" and Unicode-encoded \"/\" or \"\\\" characters in the URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0288"
        },
        {
          "Reference": "CVE-2003-0313",
          "Description": "Directory listing of web server using \"...\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0313"
        },
        {
          "Reference": "CVE-2005-1658",
          "Description": "Triple dot",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1658"
        },
        {
          "Reference": "CVE-2000-0240",
          "Description": "read files via \"/........../\" in URL",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0240"
        },
        {
          "Reference": "CVE-2000-0773",
          "Description": "read files via \"....\" in web server",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0773"
        },
        {
          "Reference": "CVE-1999-1082",
          "Description": "read files via \"......\" in web server (doubled triple dot?)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1082"
        },
        {
          "Reference": "CVE-2004-2121",
          "Description": "read files via \"......\" in web server (doubled triple dot?)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2121"
        },
        {
          "Reference": "CVE-2001-0491",
          "Description": "multiple attacks using \"..\", \"...\", and \"....\" in different commands",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0491"
        },
        {
          "Reference": "CVE-2001-0615",
          "Description": "\"...\" or \"....\" in chat server",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0615"
        },
        {
          "Reference": "CVE-2005-2169",
          "Description": "chain: \".../...//\" bypasses protection mechanism using regexp's that remove \"../\" resulting in collapse into an unsafe value \"../\" (CWE-182) and resultant path traversal.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2169"
        },
        {
          "Reference": "CVE-2005-0202",
          "Description": "\".../....///\" bypasses regexp's that remove \"./\" and \"../\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0202"
        },
        {
          "Reference": "CVE-2004-1670",
          "Description": "Mail server allows remote attackers to create arbitrary directories via a \"..\" or rename arbitrary files via a \"....//\" in user supplied parameters.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1670"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "230",
      "Name": "Improper Handling of Missing Values",
      "Abstraction": "Variant",
      "Description": "The product does not handle or incorrectly handles when a parameter, field, or argument name is specified, but the associated value is missing, i.e. it is empty, blank, or null.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0422",
          "Description": "Blank Host header triggers resultant infoleak.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0422"
        },
        {
          "Reference": "CVE-2000-1006",
          "Description": "Blank \"charset\" attribute in MIME header triggers crash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1006"
        },
        {
          "Reference": "CVE-2004-1504",
          "Description": "Blank parameter causes external error infoleak.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1504"
        },
        {
          "Reference": "CVE-2005-2053",
          "Description": "Blank parameter causes external error infoleak.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2053"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "231",
      "Name": "Improper Handling of Extra Values",
      "Abstraction": "Variant",
      "Description": "The product does not handle or incorrectly handles when more values are provided than expected.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "232",
      "Name": "Improper Handling of Undefined Values",
      "Abstraction": "Variant",
      "Description": "The product does not handle or incorrectly handles when a value is not defined or supported for the associated parameter, field, or argument name.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-1003",
          "Description": "Client crash when server returns unknown driver type.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1003"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "233",
      "Name": "Improper Handling of Parameters",
      "Abstraction": "Base",
      "Description": "The product does not properly handle when the expected number of parameters, fields, or arguments is not provided in input, or if those parameters are undefined.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "234",
      "Name": "Failure to Handle Missing Parameter",
      "Abstraction": "Variant",
      "Description": "If too few arguments are sent to a function, the function will still pop the expected number of arguments from the stack. Potentially, a variable number of arguments could be exhausted in a function as well.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-0276",
          "Description": "Server earlier allows remote attackers to cause a denial of service (crash) via an HTTP request with a sequence of \"%\" characters and a missing Host field.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0276"
        },
        {
          "Reference": "CVE-2002-1488",
          "Description": "Chat client allows remote malicious IRC servers to cause a denial of service (crash) via a PART message with (1) a missing channel or (2) a channel that the user is not in.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1488"
        },
        {
          "Reference": "CVE-2002-1169",
          "Description": "Proxy allows remote attackers to cause a denial of service (crash) via an HTTP request to helpout.exe with a missing HTTP version numbers.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1169"
        },
        {
          "Reference": "CVE-2000-0521",
          "Description": "Web server allows disclosure of CGI source code via an HTTP request without the version number.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0521"
        },
        {
          "Reference": "CVE-2001-0590",
          "Description": "Application server allows a remote attacker to read the source code to arbitrary 'jsp' files via a malformed URL request which does not end with an HTTP protocol specification.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0590"
        },
        {
          "Reference": "CVE-2003-0239",
          "Description": "Chat software allows remote attackers to cause a denial of service via malformed GIF89a headers that do not contain a GCT (Global Color Table) or an LCT (Local Color Table) after an Image Descriptor.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0239"
        },
        {
          "Reference": "CVE-2002-1023",
          "Description": "Server allows remote attackers to cause a denial of service (crash) via an HTTP GET request without a URI.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1023"
        },
        {
          "Reference": "CVE-2002-1236",
          "Description": "CGI crashes when called without any arguments.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1236"
        },
        {
          "Reference": "CVE-2003-0422",
          "Description": "CGI crashes when called without any arguments.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0422"
        },
        {
          "Reference": "CVE-2002-1531",
          "Description": "Crash in HTTP request without a Content-Length field.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1531"
        },
        {
          "Reference": "CVE-2002-1077",
          "Description": "Crash in HTTP request without a Content-Length field.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1077"
        },
        {
          "Reference": "CVE-2002-1358",
          "Description": "Empty elements/strings in protocol test suite affect many SSH2 servers/clients.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1358"
        },
        {
          "Reference": "CVE-2003-0477",
          "Description": "FTP server crashes in PORT command without an argument.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0477"
        },
        {
          "Reference": "CVE-2002-0107",
          "Description": "Resultant infoleak in web server via GET requests without HTTP/1.0 version string.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0107"
        },
        {
          "Reference": "CVE-2002-0596",
          "Description": "GET request with empty parameter leads to error message infoleak (path disclosure).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0596"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "235",
      "Name": "Improper Handling of Extra Parameters",
      "Abstraction": "Variant",
      "Description": "The product does not handle or incorrectly handles when the number of parameters, fields, or arguments with the same name exceeds the expected amount.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2003-1014",
          "Description": "MIE. multiple gateway/security products allow restriction bypass using multiple MIME fields with the same name, which are interpreted differently by clients.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1014"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "236",
      "Name": "Improper Handling of Undefined Parameters",
      "Abstraction": "Variant",
      "Description": "The product does not handle or incorrectly handles when a particular parameter, field, or argument name is not defined or supported by the product.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1488",
          "Description": "Crash in IRC client via PART message from a channel the user is not in.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1488"
        },
        {
          "Reference": "CVE-2001-0650",
          "Description": "Router crash or bad route modification using BGP updates with invalid transitive attribute.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0650"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "237",
      "Name": "Improper Handling of Structural Elements",
      "Abstraction": "Base",
      "Description": "The product does not handle or incorrectly handles inputs that are related to complex structures.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "238",
      "Name": "Improper Handling of Incomplete Structural Elements",
      "Abstraction": "Variant",
      "Description": "The product does not handle or incorrectly handles when a particular structural element is not completely specified.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "239",
      "Name": "Failure to Handle Incomplete Element",
      "Abstraction": "Variant",
      "Description": "The product does not properly handle when a particular element is not completely specified.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1532",
          "Description": "HTTP GET without \\r\\n\\r\\n CRLF sequences causes product to wait indefinitely and prevents other users from accessing it.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1532"
        },
        {
          "Reference": "CVE-2003-0195",
          "Description": "Partial request is not timed out.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0195"
        },
        {
          "Reference": "CVE-2005-2526",
          "Description": "MFV. CPU exhaustion in printer via partial printing request then early termination of connection.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2526"
        },
        {
          "Reference": "CVE-2002-1906",
          "Description": "CPU consumption by sending incomplete HTTP requests and leaving the connections open.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1906"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "24",
      "Name": "Path Traversal: '../filedir'",
      "Abstraction": "Variant",
      "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"../\" sequences that can resolve to a location that is outside of that directory.",
      "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nThe \"../\" manipulation is the canonical manipulation for operating systems that use \"/\" as directory separators, such as UNIX- and Linux-based systems. In some cases, it is useful for bypassing protection schemes in environments for which \"/\" is supported but not the primary separator, such as Windows, which uses \"\\\" but can also accept \"/\".\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-45918",
          "Description": "Chain: a learning management tool debugger uses external input to locate previous session logs (CWE-73) and does not properly validate the given path (CWE-20), allowing for filesystem path traversal using \"../\" sequences (CWE-24)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-45918"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "240",
      "Name": "Improper Handling of Inconsistent Structural Elements",
      "Abstraction": "Base",
      "Description": "The product does not handle or incorrectly handles when two or more structural elements should be consistent, but are not.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2014-0160",
          "Description": "Chain: \"Heartbleed\" bug receives an inconsistent length parameter (CWE-130) enabling an out-of-bounds read (CWE-126), returning memory that could include private cryptographic keys and other sensitive data.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-0160"
        },
        {
          "Reference": "CVE-2009-2299",
          "Description": "Web application firewall consumes excessive memory when an HTTP request contains a large Content-Length value but no POST data.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2299"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "241",
      "Name": "Improper Handling of Unexpected Data Type",
      "Abstraction": "Base",
      "Description": "The product does not handle or incorrectly handles when a particular element is not the expected type, e.g. it expects a digit (0-9) but is provided with a letter (A-Z).",
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-1156",
          "Description": "FTP server crash via PORT command with non-numeric character.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1156"
        },
        {
          "Reference": "CVE-2004-0270",
          "Description": "Anti-virus product has assert error when line length is non-numeric.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0270"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "242",
      "Name": "Use of Inherently Dangerous Function",
      "Abstraction": "Base",
      "Description": "The product calls a function that can never be guaranteed to work safely.",
      "ExtendedDescription": "Certain functions behave in dangerous ways regardless of how they are used. Functions in this category were often implemented without taking security concerns into account. The gets() function is unsafe because it does not perform bounds checking on the size of its input. An attacker can easily send arbitrarily-sized input to gets() and overflow the destination buffer. Similarly, the >> operator is unsafe to use when reading into a statically-allocated character array because it does not perform bounds checking on the size of its input. An attacker can easily send arbitrarily-sized input to the >> operator and overflow the destination buffer.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-4004",
          "Description": "FTP client uses inherently insecure gets() function and is setuid root on some systems, allowing buffer overflow",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4004"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "243",
      "Name": "Creation of chroot Jail Without Changing Working Directory",
      "Abstraction": "Variant",
      "Description": "The product uses the chroot() system call to create a jail, but does not change the working directory afterward. This does not prevent access to files outside of the jail.",
      "ExtendedDescription": "Improper use of chroot() may allow attackers to escape from the chroot jail. The chroot() function call does not change the process's current working directory, so relative paths may still refer to file system resources outside of the chroot jail after chroot() has been called.",
      "BackgroundDetails": [
        "The chroot() system call allows a process to change its perception of the root directory of the file system. After properly invoking chroot(), a process cannot access any files outside the directory tree defined by the new root directory. Such an environment is called a chroot jail and is commonly used to prevent the possibility that a processes could be subverted and used to access unauthorized files. For instance, many FTP servers run in chroot jails to prevent an attacker who discovers a new vulnerability in the server from being able to download the password file or other sensitive files on the system."
      ],
      "AffectedResources": [
        "File or Directory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "244",
      "Name": "Improper Clearing of Heap Memory Before Release ('Heap Inspection')",
      "Abstraction": "Variant",
      "Description": "Using realloc() to resize buffers that store sensitive information can leave the sensitive information exposed to attack, because it is not removed from memory.",
      "ExtendedDescription": "When sensitive data such as a password or an encryption key is not removed from memory, it could be exposed to an attacker using a \"heap inspection\" attack that reads the sensitive data using memory dumps or other methods. The realloc() function is commonly used to increase the size of a block of allocated memory. This operation often requires copying the contents of the old memory block into a new and larger block. This operation leaves the contents of the original block intact but inaccessible to the program, preventing the program from being able to scrub sensitive data from memory. If an attacker can later examine the contents of a memory dump, the sensitive data could be exposed.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-3733",
          "Description": "Cryptography library does not clear heap memory before release",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-3733"
        }
      ],
      "AffectedResources": [
        "Memory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "245",
      "Name": "J2EE Bad Practices: Direct Management of Connections",
      "Abstraction": "Variant",
      "Description": "The J2EE application directly manages connections, instead of using the container's connection management facilities.",
      "ExtendedDescription": "The J2EE standard forbids the direct management of connections. It requires that applications use the container's resource management facilities to obtain connections to resources. Every major web application container provides pooled database connection management as part of its resource management framework. Duplicating this functionality in an application is difficult and error prone, which is part of the reason it is forbidden under the J2EE standard.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "246",
      "Name": "J2EE Bad Practices: Direct Use of Sockets",
      "Abstraction": "Variant",
      "Description": "The J2EE application directly uses sockets instead of using framework method calls.",
      "ExtendedDescription": "\n\nThe J2EE standard permits the use of sockets only for the purpose of communication with legacy systems when no higher-level protocol is available. Authoring your own communication protocol requires wrestling with difficult security issues.\n\n\nWithout significant scrutiny by a security expert, chances are good that a custom communication protocol will suffer from security problems. Many of the same issues apply to a custom implementation of a standard protocol. While there are usually more resources available that address security concerns related to implementing a standard protocol, these resources are also available to attackers.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "248",
      "Name": "Uncaught Exception",
      "Abstraction": "Base",
      "Description": "An exception is thrown from a function, but it is not caught.",
      "ExtendedDescription": "When an exception is not caught, it may cause the program to crash or expose sensitive information.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2023-41151",
          "Description": "SDK for OPC Unified Architecture (OPC UA) server has uncaught exception when a socket is blocked for writing but the server tries to send an error",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2023-41151"
        },
        {
          "Reference": "CVE-2023-21087",
          "Description": "Java code in a smartphone OS can encounter a \"boot loop\" due to an uncaught exception",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2023-21087"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "25",
      "Name": "Path Traversal: '/../filedir'",
      "Abstraction": "Variant",
      "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"/../\" sequences that can resolve to a location that is outside of that directory.",
      "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nSometimes a program checks for \"../\" at the beginning of the input, so a \"/../\" can bypass that check.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-20775",
          "Description": "A cloud management tool allows attackers to bypass the restricted shell using path traversal sequences like \"/../\" in the USER environment variable.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-20775"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "250",
      "Name": "Execution with Unnecessary Privileges",
      "Abstraction": "Base",
      "Description": "The product performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.",
      "ExtendedDescription": "\n\nNew weaknesses can be exposed because running with extra privileges, such as root or Administrator, can disable the normal security checks being performed by the operating system or surrounding environment. Other pre-existing weaknesses can turn into security vulnerabilities if they occur while operating at raised privileges.\n\n\nPrivilege management functions can behave in some less-than-obvious ways, and they have different quirks on different platforms. These inconsistencies are particularly pronounced if you are transitioning from one non-root user to another. Signal handlers and spawned processes run at the privilege of the owning process, so if a process is running as root when a signal fires or a sub-process is executed, the signal handler or sub-process will operate with root privileges.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-4217",
          "Description": "FTP client program on a certain OS runs with setuid privileges and has a buffer overflow. Most clients do not need extra privileges, so an overflow is not a vulnerability for those clients.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4217"
        },
        {
          "Reference": "CVE-2008-1877",
          "Description": "Program runs with privileges and calls another program with the same privileges, which allows read of arbitrary files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1877"
        },
        {
          "Reference": "CVE-2007-5159",
          "Description": "OS incorrectly installs a program with setuid privileges, allowing users to gain privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5159"
        },
        {
          "Reference": "CVE-2008-4638",
          "Description": "Composite: application running with high privileges (CWE-250) allows user to specify a restricted file to process, which generates a parsing error that leaks the contents of the file (CWE-209).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4638"
        },
        {
          "Reference": "CVE-2008-0162",
          "Description": "Program does not drop privileges before calling another program, allowing code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0162"
        },
        {
          "Reference": "CVE-2008-0368",
          "Description": "setuid root program allows creation of arbitrary files through command line argument.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0368"
        },
        {
          "Reference": "CVE-2007-3931",
          "Description": "Installation script installs some programs as setuid when they shouldn't be.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3931"
        },
        {
          "Reference": "CVE-2020-3812",
          "Description": "mail program runs as root but does not drop its privileges before attempting to access a file. Attacker can use a symlink from their home directory to a directory only readable by root, then determine whether the file exists based on the response.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-3812"
        },
        {
          "Reference": "CVE-2003-0908",
          "Description": "Product launches Help functionality while running with raised privileges, allowing command execution using Windows message to access \"open file\" dialog.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0908"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "252",
      "Name": "Unchecked Return Value",
      "Abstraction": "Base",
      "Description": "The product does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.",
      "ExtendedDescription": "Two common programmer assumptions are \"this function call can never fail\" and \"it doesn't matter if this function call fails\". If an attacker can force the function to fail or otherwise return a value that is not expected, then the subsequent program logic could lead to a vulnerability, because the product is not in a state that the programmer assumes. For example, if the program calls a function to drop privileges but does not check the return code to ensure that privileges were successfully dropped, then the program will continue to operate with the higher privileges.",
      "BackgroundDetails": [
        "Many functions will return some value about the success of their actions. This will alert the program whether or not to handle any errors caused by that function."
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-17533",
          "Description": "Chain: unchecked return value (CWE-252) of some functions for policy enforcement leads to authorization bypass (CWE-862)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-17533"
        },
        {
          "Reference": "CVE-2020-6078",
          "Description": "Chain: The return value of a function returning a pointer is not checked for success (CWE-252) resulting in the later use of an uninitialized variable (CWE-456) and a null pointer dereference (CWE-476)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-6078"
        },
        {
          "Reference": "CVE-2019-15900",
          "Description": "Chain: sscanf() call is used to check if a username and group exists, but the return value of sscanf() call is not checked (CWE-252), causing an uninitialized variable to be checked (CWE-457), returning success to allow authorization bypass for executing a privileged (CWE-863).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-15900"
        },
        {
          "Reference": "CVE-2007-3798",
          "Description": "Unchecked return value leads to resultant integer overflow and code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3798"
        },
        {
          "Reference": "CVE-2006-4447",
          "Description": "Program does not check return value when invoking functions to drop privileges, which could leave users with higher privileges than expected by forcing those functions to fail.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4447"
        },
        {
          "Reference": "CVE-2006-2916",
          "Description": "Program does not check return value when invoking functions to drop privileges, which could leave users with higher privileges than expected by forcing those functions to fail.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2916"
        },
        {
          "Reference": "CVE-2008-5183",
          "Description": "chain: unchecked return value can lead to NULL dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5183"
        },
        {
          "Reference": "CVE-2010-0211",
          "Description": "chain: unchecked return value (CWE-252) leads to free of invalid, uninitialized pointer (CWE-824).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-0211"
        },
        {
          "Reference": "CVE-2017-6964",
          "Description": "Linux-based device mapper encryption program does not check the return value of setuid and setgid allowing attackers to execute code with unintended privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-6964"
        },
        {
          "Reference": "CVE-2002-1372",
          "Description": "Chain: Return values of file/socket operations are not checked (CWE-252), allowing resultant consumption of file descriptors (CWE-772).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1372"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "253",
      "Name": "Incorrect Check of Function Return Value",
      "Abstraction": "Base",
      "Description": "The product incorrectly checks a return value from a function, which prevents it from detecting errors or exceptional conditions.",
      "ExtendedDescription": "Important and common functions will return some value about the success of its actions. This will alert the program whether or not to handle any errors caused by that function.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2023-49286",
          "Description": "Chain: function in web caching proxy does not correctly check a return value (CWE-253) leading to a reachable assertion (CWE-617)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2023-49286"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "256",
      "Name": "Plaintext Storage of a Password",
      "Abstraction": "Base",
      "Description": "Storing a password in plaintext may result in a system compromise.",
      "ExtendedDescription": "Password management issues occur when a password is stored in plaintext in an application's properties, configuration file, or memory. Storing a plaintext password in a configuration file allows anyone who can read the file access to the password-protected resource. In some contexts, even storage of a plaintext password in memory is considered a security risk if the password is not cleared immediately after it is used.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-30275",
          "Description": "Remote Terminal Unit (RTU) uses a driver that relies on a password stored in plaintext.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30275"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "257",
      "Name": "Storing Passwords in a Recoverable Format",
      "Abstraction": "Base",
      "Description": "The storage of passwords in a recoverable format makes them subject to password reuse attacks by malicious users. In fact, it should be noted that recoverable encrypted passwords provide no significant benefit over plaintext passwords since they are subject not only to reuse by malicious attackers but also by malicious insiders. If a system administrator can recover a password directly, or use a brute force search on the available information, the administrator can use the password on other accounts.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-30018",
          "Description": "A messaging platform serializes all elements of User/Group objects, making private information available to adversaries",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30018"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "258",
      "Name": "Empty Password in Configuration File",
      "Abstraction": "Variant",
      "Description": "Using an empty string as a password is insecure.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-26117",
          "Description": "Network access control (NAC) product has a configuration file with an empty password",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-26117"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "259",
      "Name": "Use of Hard-coded Password",
      "Abstraction": "Variant",
      "Description": "The product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.",
      "ExtendedDescription": "\n\nA hard-coded password typically leads to a significant authentication failure that can be difficult for the system administrator to detect. Once detected, it can be difficult to fix, so the administrator may be forced into disabling the product entirely. There are two main variations:\n\n```\n\t\tInbound: the product contains an authentication mechanism that checks for a hard-coded password.\n\t\tOutbound: the product connects to another system or component, and it contains hard-coded password for connecting to that component.\n```\nIn the Inbound variant, a default administration account is created, and a simple password is hard-coded into the product and associated with that account. This hard-coded password is the same for each installation of the product, and it usually cannot be changed or disabled by system administrators without manually modifying the program, or otherwise patching the product. If the password is ever discovered or published (a common occurrence on the Internet), then anybody with knowledge of this password can access the product. Finally, since all installations of the product will have the same password, even across different organizations, this enables massive attacks such as worms to take place.\n\nThe Outbound variant applies to front-end systems that authenticate with a back-end service. The back-end service may require a fixed password which can be easily discovered. The programmer may simply hard-code those back-end credentials into the front-end product. Any user of that program may be able to extract the password. Client-side systems with hard-coded passwords pose even more of a threat, since the extraction of a password from a binary is usually very simple.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-29964",
          "Description": "Distributed Control System (DCS) has hard-coded passwords for local shell access",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29964"
        },
        {
          "Reference": "CVE-2021-37555",
          "Description": "Telnet service for IoT feeder for dogs and cats has hard-coded password [REF-1288]",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-37555"
        },
        {
          "Reference": "CVE-2021-35033",
          "Description": "Firmware for a WiFi router uses a hard-coded password for a BusyBox shell, allowing bypass of authentication through the UART port",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-35033"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "26",
      "Name": "Path Traversal: '/dir/../filename'",
      "Abstraction": "Variant",
      "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"/dir/../filename\" sequences that can resolve to a location that is outside of that directory.",
      "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nThe '/dir/../filename' manipulation is useful for bypassing some path traversal protection schemes. Sometimes a program only checks for \"../\" at the beginning of the input, so a \"/../\" can bypass that check.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "260",
      "Name": "Password in Configuration File",
      "Abstraction": "Base",
      "Description": "The product stores a password in a configuration file that might be accessible to actors who do not know the password.",
      "ExtendedDescription": "This can result in compromise of the system for which the password is used. An attacker could gain access to this file and learn the stored password or worse yet, change the password to one of their choosing.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-38665",
          "Description": "A continuous delivery pipeline management tool stores an unencypted password in a configuration file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-38665"
        }
      ],
      "AffectedResources": [
        "File or Directory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "261",
      "Name": "Weak Encoding for Password",
      "Abstraction": "Base",
      "Description": "Obscuring a password with a trivial encoding does not protect the password.",
      "ExtendedDescription": "Password management issues occur when a password is stored in plaintext in an application's properties or configuration file. A programmer can attempt to remedy the password management problem by obscuring the password with an encoding function, such as base 64 encoding, but this effort does not adequately protect the password.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "262",
      "Name": "Not Using Password Aging",
      "Abstraction": "Base",
      "Description": "The product does not have a mechanism in place for managing password aging.",
      "ExtendedDescription": "\n\nPassword aging (or password rotation) is a policy that forces users to change their passwords after a defined time period passes, such as every 30 or 90 days. Without mechanisms such as aging, users might not change their passwords in a timely manner.\n\n\nNote that while password aging was once considered an important security feature, it has since fallen out of favor by many, because it is not as effective against modern threats compared to other mechanisms such as slow hashes. In addition, forcing frequent changes can unintentionally encourage users to select less-secure passwords. However, password aging is still in use due to factors such as compliance requirements, e.g., Payment Card Industry Data Security Standard (PCI DSS).\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "263",
      "Name": "Password Aging with Long Expiration",
      "Abstraction": "Base",
      "Description": "The product supports password aging, but the expiration period is too long.",
      "ExtendedDescription": "\n\nPassword aging (or password rotation) is a policy that forces users to change their passwords after a defined time period passes, such as every 30 or 90 days. A long expiration provides more time for attackers to conduct password cracking before users are forced to change to a new password.\n\n\nNote that while password aging was once considered an important security feature, it has since fallen out of favor by many, because it is not as effective against modern threats compared to other mechanisms such as slow hashes. In addition, forcing frequent changes can unintentionally encourage users to select less-secure passwords. However, password aging is still in use due to factors such as compliance requirements, e.g., Payment Card Industry Data Security Standard (PCI DSS).\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "266",
      "Name": "Incorrect Privilege Assignment",
      "Abstraction": "Base",
      "Description": "A product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.",
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-1193",
          "Description": "untrusted user placed in unix \"wheel\" group",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1193"
        },
        {
          "Reference": "CVE-2005-2741",
          "Description": "Product allows users to grant themselves certain rights that can be used to escalate privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2741"
        },
        {
          "Reference": "CVE-2005-2496",
          "Description": "Product uses group ID of a user instead of the group, causing it to run with different privileges. This is resultant from some other unknown issue.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2496"
        },
        {
          "Reference": "CVE-2004-0274",
          "Description": "Product mistakenly assigns a particular status to an entity, leading to increased privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0274"
        }
      ],
      "AffectedResources": [
        "System Process"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "267",
      "Name": "Privilege Defined With Unsafe Actions",
      "Abstraction": "Base",
      "Description": "A particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1981",
          "Description": "Roles have access to dangerous procedures (Accessible entities).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1981"
        },
        {
          "Reference": "CVE-2002-1671",
          "Description": "Untrusted object/method gets access to clipboard (Accessible entities).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1671"
        },
        {
          "Reference": "CVE-2004-2204",
          "Description": "Gain privileges using functions/tags that should be restricted (Accessible entities).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2204"
        },
        {
          "Reference": "CVE-2000-0315",
          "Description": "Traceroute program allows unprivileged users to modify source address of packet (Accessible entities).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0315"
        },
        {
          "Reference": "CVE-2004-0380",
          "Description": "Bypass domain restrictions using a particular file that references unsafe URI schemes (Accessible entities).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0380"
        },
        {
          "Reference": "CVE-2002-1154",
          "Description": "Script does not restrict access to an update command, leading to resultant disk consumption and filled error logs (Accessible entities).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1154"
        },
        {
          "Reference": "CVE-2002-1145",
          "Description": "\"public\" database user can use stored procedure to modify data controlled by the database owner (Unsafe privileged actions).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1145"
        },
        {
          "Reference": "CVE-2000-0506",
          "Description": "User with capability can prevent setuid program from dropping privileges (Unsafe privileged actions).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0506"
        },
        {
          "Reference": "CVE-2002-2042",
          "Description": "Allows attachment to and modification of privileged processes (Unsafe privileged actions).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2042"
        },
        {
          "Reference": "CVE-2000-1212",
          "Description": "User with privilege can edit raw underlying object using unprotected method (Unsafe privileged actions).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1212"
        },
        {
          "Reference": "CVE-2005-1742",
          "Description": "Inappropriate actions allowed by a particular role(Unsafe privileged actions).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1742"
        },
        {
          "Reference": "CVE-2001-1480",
          "Description": "Untrusted entity allowed to access the system clipboard (Unsafe privileged actions).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1480"
        },
        {
          "Reference": "CVE-2001-1551",
          "Description": "Extra Linux capability allows bypass of system-specified restriction (Unsafe privileged actions).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1551"
        },
        {
          "Reference": "CVE-2001-1166",
          "Description": "User with debugging rights can read entire process (Unsafe privileged actions).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1166"
        },
        {
          "Reference": "CVE-2005-1816",
          "Description": "Non-root admins can add themselves or others to the root admin group (Unsafe privileged actions).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1816"
        },
        {
          "Reference": "CVE-2005-2173",
          "Description": "Users can change certain properties of objects to perform otherwise unauthorized actions (Unsafe privileged actions).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2173"
        },
        {
          "Reference": "CVE-2005-2027",
          "Description": "Certain debugging commands not restricted to just the administrator, allowing registry modification and infoleak (Unsafe privileged actions).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2027"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "268",
      "Name": "Privilege Chaining",
      "Abstraction": "Base",
      "Description": "Two distinct privileges, roles, capabilities, or rights can be combined in a way that allows an entity to perform unsafe actions that would not be allowed without that combination.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-1736",
          "Description": "Chaining of user rights.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1736"
        },
        {
          "Reference": "CVE-2002-1772",
          "Description": "Gain certain rights via privilege chaining in alternate channel.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1772"
        },
        {
          "Reference": "CVE-2005-1973",
          "Description": "Application is allowed to assign extra permissions to itself.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1973"
        },
        {
          "Reference": "CVE-2003-0640",
          "Description": "\"operator\" user can overwrite usernames and passwords to gain admin privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0640"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "269",
      "Name": "Improper Privilege Management",
      "Abstraction": "Class",
      "Diagram": "/data/images/CWE-269-Diagram.png",
      "Description": "The product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-1555",
          "Description": "Terminal privileges are not reset when a user logs out.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1555"
        },
        {
          "Reference": "CVE-2001-1514",
          "Description": "Does not properly pass security context to child processes in certain cases, allows privilege escalation.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1514"
        },
        {
          "Reference": "CVE-2001-0128",
          "Description": "Does not properly compute roles.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0128"
        },
        {
          "Reference": "CVE-1999-1193",
          "Description": "untrusted user placed in unix \"wheel\" group",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1193"
        },
        {
          "Reference": "CVE-2005-2741",
          "Description": "Product allows users to grant themselves certain rights that can be used to escalate privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2741"
        },
        {
          "Reference": "CVE-2005-2496",
          "Description": "Product uses group ID of a user instead of the group, causing it to run with different privileges. This is resultant from some other unknown issue.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2496"
        },
        {
          "Reference": "CVE-2004-0274",
          "Description": "Product mistakenly assigns a particular status to an entity, leading to increased privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0274"
        },
        {
          "Reference": "CVE-2007-4217",
          "Description": "FTP client program on a certain OS runs with setuid privileges and has a buffer overflow. Most clients do not need extra privileges, so an overflow is not a vulnerability for those clients.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4217"
        },
        {
          "Reference": "CVE-2007-5159",
          "Description": "OS incorrectly installs a program with setuid privileges, allowing users to gain privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5159"
        },
        {
          "Reference": "CVE-2008-4638",
          "Description": "Composite: application running with high privileges (CWE-250) allows user to specify a restricted file to process, which generates a parsing error that leaks the contents of the file (CWE-209).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4638"
        },
        {
          "Reference": "CVE-2007-3931",
          "Description": "Installation script installs some programs as setuid when they shouldn't be.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3931"
        },
        {
          "Reference": "CVE-2002-1981",
          "Description": "Roles have access to dangerous procedures (Accessible entities).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1981"
        },
        {
          "Reference": "CVE-2002-1671",
          "Description": "Untrusted object/method gets access to clipboard (Accessible entities).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1671"
        },
        {
          "Reference": "CVE-2000-0315",
          "Description": "Traceroute program allows unprivileged users to modify source address of packet (Accessible entities).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0315"
        },
        {
          "Reference": "CVE-2000-0506",
          "Description": "User with capability can prevent setuid program from dropping privileges (Unsafe privileged actions).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0506"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "27",
      "Name": "Path Traversal: 'dir/../../filename'",
      "Abstraction": "Variant",
      "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize multiple internal \"../\" sequences that can resolve to a location that is outside of that directory.",
      "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nThe 'directory/../../filename' manipulation is useful for bypassing some path traversal protection schemes. Sometimes a program only removes one \"../\" sequence, so multiple \"../\" can bypass that check. Alternately, this manipulation could be used to bypass a check for \"../\" at the beginning of the pathname, moving up more than one directory level.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0298",
          "Description": "Server allows remote attackers to cause a denial of service via certain HTTP GET requests containing a %2e%2e (encoded dot-dot), several \"/../\" sequences, or several \"../\" in a URI.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0298"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "270",
      "Name": "Privilege Context Switching Error",
      "Abstraction": "Base",
      "Description": "The product does not properly manage privileges while it is switching between different contexts that have different privileges or spheres of control.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1688",
          "Description": "Web browser cross domain problem when user hits \"back\" button.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1688"
        },
        {
          "Reference": "CVE-2003-1026",
          "Description": "Web browser cross domain problem when user hits \"back\" button.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1026"
        },
        {
          "Reference": "CVE-2002-1770",
          "Description": "Cross-domain issue - third party product passes code to web browser, which executes it in unsafe zone.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1770"
        },
        {
          "Reference": "CVE-2005-2263",
          "Description": "Run callback in different security context after it has been changed from untrusted to trusted. * note that \"context switch before actions are completed\" is one type of problem that happens frequently, espec. in browsers.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2263"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "271",
      "Name": "Privilege Dropping / Lowering Errors",
      "Abstraction": "Class",
      "Description": "The product does not drop privileges before passing control of a resource to an actor that does not have those privileges.",
      "ExtendedDescription": "In some contexts, a system executing with elevated permissions will hand off a process/file/etc. to another process or user. If the privileges of an entity are not reduced, then elevated privileges are spread throughout a system and possibly to an attacker.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-1213",
          "Description": "Program does not drop privileges after acquiring the raw socket.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1213"
        },
        {
          "Reference": "CVE-2001-0559",
          "Description": "Setuid program does not drop privileges after a parsing error occurs, then calls another program to handle the error.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0559"
        },
        {
          "Reference": "CVE-2001-0787",
          "Description": "Does not drop privileges in related groups when lowering privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0787"
        },
        {
          "Reference": "CVE-2002-0080",
          "Description": "Does not drop privileges in related groups when lowering privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0080"
        },
        {
          "Reference": "CVE-2001-1029",
          "Description": "Does not drop privileges before determining access to certain files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1029"
        },
        {
          "Reference": "CVE-1999-0813",
          "Description": "Finger daemon does not drop privileges when executing programs on behalf of the user being fingered.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0813"
        },
        {
          "Reference": "CVE-1999-1326",
          "Description": "FTP server does not drop privileges if a connection is aborted during file transfer.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1326"
        },
        {
          "Reference": "CVE-2000-0172",
          "Description": "Program only uses seteuid to drop privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0172"
        },
        {
          "Reference": "CVE-2004-2504",
          "Description": "Windows program running as SYSTEM does not drop privileges before executing other programs (many others like this, especially involving the Help facility).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2504"
        },
        {
          "Reference": "CVE-2004-0213",
          "Description": "Utility Manager launches winhlp32.exe while running with raised privileges, which allows local users to gain system privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0213"
        },
        {
          "Reference": "CVE-2004-0806",
          "Description": "Setuid program does not drop privileges before executing program specified in an environment variable.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0806"
        },
        {
          "Reference": "CVE-2004-0828",
          "Description": "Setuid program does not drop privileges before processing file specified on command line.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0828"
        },
        {
          "Reference": "CVE-2004-2070",
          "Description": "Service on Windows does not drop privileges before using \"view file\" option, allowing code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2070"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "272",
      "Name": "Least Privilege Violation",
      "Abstraction": "Base",
      "Description": "The elevated privilege level required to perform operations such as chroot() should be dropped immediately after the operation is performed.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "273",
      "Name": "Improper Check for Dropped Privileges",
      "Abstraction": "Base",
      "Description": "The product attempts to drop privileges but does not check or incorrectly checks to see if the drop succeeded.",
      "ExtendedDescription": "If the drop fails, the product will continue to run with the raised privileges, which might provide additional access to unprivileged users.",
      "BackgroundDetails": [
        "In Windows based environments that have access control, impersonation is used so that access checks can be performed on a client identity by a server with higher privileges. By impersonating the client, the server is restricted to client-level security -- although in different threads it may have much higher privileges."
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2006-4447",
          "Description": "Program does not check return value when invoking functions to drop privileges, which could leave users with higher privileges than expected by forcing those functions to fail.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4447"
        },
        {
          "Reference": "CVE-2006-2916",
          "Description": "Program does not check return value when invoking functions to drop privileges, which could leave users with higher privileges than expected by forcing those functions to fail.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2916"
        }
      ],
      "AffectedResources": [
        "System Process"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "274",
      "Name": "Improper Handling of Insufficient Privileges",
      "Abstraction": "Base",
      "Description": "The product does not handle or incorrectly handles when it has insufficient privileges to perform an operation, leading to resultant weaknesses.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-1564",
          "Description": "System limits are not properly enforced after privileges are dropped.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1564"
        },
        {
          "Reference": "CVE-2005-3286",
          "Description": "Firewall crashes when it can't read a critical memory block that was protected by a malicious process.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3286"
        },
        {
          "Reference": "CVE-2005-1641",
          "Description": "Does not give admin sufficient privileges to overcome otherwise legitimate user actions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1641"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "276",
      "Name": "Incorrect Default Permissions",
      "Abstraction": "Base",
      "Description": "During installation, installed file permissions are set to allow anyone to modify those files.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-1941",
          "Description": "Executables installed world-writable.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1941"
        },
        {
          "Reference": "CVE-2002-1713",
          "Description": "Home directories installed world-readable.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1713"
        },
        {
          "Reference": "CVE-2001-1550",
          "Description": "World-writable log files allow information loss; world-readable file has cleartext passwords.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1550"
        },
        {
          "Reference": "CVE-2002-1711",
          "Description": "World-readable directory.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1711"
        },
        {
          "Reference": "CVE-2002-1844",
          "Description": "Windows product uses insecure permissions when installing on Solaris (genesis: port error).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1844"
        },
        {
          "Reference": "CVE-2001-0497",
          "Description": "Insecure permissions for a shared secret key file. Overlaps cryptographic problem.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0497"
        },
        {
          "Reference": "CVE-1999-0426",
          "Description": "Default permissions of a device allow IP spoofing.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0426"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "277",
      "Name": "Insecure Inherited Permissions",
      "Abstraction": "Variant",
      "Description": "A product defines a set of insecure permissions that are inherited by objects that are created by the program.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-1841",
          "Description": "User's umask is used when creating temp files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1841"
        },
        {
          "Reference": "CVE-2002-1786",
          "Description": "Insecure umask for core dumps [is the umask preserved or assigned?].",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1786"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "278",
      "Name": "Insecure Preserved Inherited Permissions",
      "Abstraction": "Variant",
      "Description": "A product inherits a set of insecure permissions for an object, e.g. when copying from an archive file, without user awareness or involvement.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-1724",
          "Description": "Does not obey specified permissions when exporting.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1724"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "279",
      "Name": "Incorrect Execution-Assigned Permissions",
      "Abstraction": "Variant",
      "Description": "While it is executing, the product sets the permissions of an object in a way that violates the intended permissions that have been specified by the user.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0265",
          "Description": "Log files opened read/write.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0265"
        },
        {
          "Reference": "CVE-2003-0876",
          "Description": "Log files opened read/write.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0876"
        },
        {
          "Reference": "CVE-2002-1694",
          "Description": "Log files opened read/write.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1694"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "28",
      "Name": "Path Traversal: '..\\filedir'",
      "Abstraction": "Variant",
      "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"..\\\" sequences that can resolve to a location that is outside of that directory.",
      "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nThe '..\\' manipulation is the canonical manipulation for operating systems that use \"\\\" as directory separators, such as Windows. However, it is also useful for bypassing path traversal protection schemes that only assume that the \"/\" separator is valid.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0661",
          "Description": "\"\\\" not in denylist for web server, allowing path traversal attacks when the server is run in Windows and other OSes.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0661"
        },
        {
          "Reference": "CVE-2002-0946",
          "Description": "Arbitrary files may be read files via ..\\ (dot dot) sequences in an HTTP request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0946"
        },
        {
          "Reference": "CVE-2002-1042",
          "Description": "Directory traversal vulnerability in search engine for web server allows remote attackers to read arbitrary files via \"..\\\" sequences in queries.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1042"
        },
        {
          "Reference": "CVE-2002-1209",
          "Description": "Directory traversal vulnerability in FTP server allows remote attackers to read arbitrary files via \"..\\\" sequences in a GET request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1209"
        },
        {
          "Reference": "CVE-2002-1178",
          "Description": "Directory traversal vulnerability in servlet allows remote attackers to execute arbitrary commands via \"..\\\" sequences in an HTTP request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1178"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "280",
      "Name": "Improper Handling of Insufficient Permissions or Privileges ",
      "Abstraction": "Base",
      "Description": "The product does not handle or incorrectly handles when it has insufficient privileges to access resources or functionality as specified by their permissions. This may cause it to follow unexpected code paths that may leave the product in an invalid state.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2003-0501",
          "Description": "Special file system allows attackers to prevent ownership/permission change of certain entries by opening the entries before calling a setuid program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0501"
        },
        {
          "Reference": "CVE-2004-0148",
          "Description": "FTP server places a user in the root directory when the user's permissions prevent access to the their own home directory.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0148"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "281",
      "Name": "Improper Preservation of Permissions",
      "Abstraction": "Base",
      "Description": "The product does not preserve permissions or incorrectly preserves permissions when copying, restoring, or sharing objects, which can cause them to have less restrictive permissions than intended.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-2323",
          "Description": "Incorrect ACLs used when restoring backups from directories that use symbolic links.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2323"
        },
        {
          "Reference": "CVE-2001-1515",
          "Description": "Automatic modification of permissions inherited from another file system.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1515"
        },
        {
          "Reference": "CVE-2005-1920",
          "Description": "Permissions on backup file are created with defaults, possibly less secure than original file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1920"
        },
        {
          "Reference": "CVE-2001-0195",
          "Description": "File is made world-readable when being cloned.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0195"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "282",
      "Name": "Improper Ownership Management",
      "Abstraction": "Class",
      "Description": "The product assigns the wrong ownership, or does not properly verify the ownership, of an object or resource.",
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-1125",
          "Description": "Program runs setuid root but relies on a configuration file owned by a non-root user.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1125"
        }
      ],
      "AffectedResources": [
        "File or Directory"
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "283",
      "Name": "Unverified Ownership",
      "Abstraction": "Base",
      "Description": "The product does not properly verify that a critical resource is owned by the proper entity.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-0178",
          "Description": "Program does not verify the owner of a UNIX socket that is used for sending a password.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0178"
        },
        {
          "Reference": "CVE-2004-2012",
          "Description": "Owner of special device not checked, allowing root.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2012"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "284",
      "Name": "Improper Access Control",
      "Abstraction": "Pillar",
      "Description": "The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.",
      "ExtendedDescription": "\n\nAccess control involves the use of several protection mechanisms such as:\n\n\n  - Authentication (proving the identity of an actor)\n\n  - Authorization (ensuring that a given actor can access a resource), and\n\n  - Accountability (tracking of activities that were performed)\n\nWhen any mechanism is not applied or otherwise fails, attackers can compromise the security of the product by gaining privileges, reading sensitive information, executing commands, evading detection, etc.\n\nThere are two distinct behaviors that can introduce access control weaknesses:\n\n\n  - Specification: incorrect privileges, permissions, ownership, etc. are explicitly specified for either the user or the resource (for example, setting a password file to be world-writable, or giving administrator capabilities to a guest user). This action could be performed by the program or the administrator.\n\n  - Enforcement: the mechanism contains errors that prevent it from properly enforcing the specified access control requirements (e.g., allowing the user to specify their own privileges, or allowing a syntactically-incorrect ACL to produce insecure settings). This problem occurs within the program itself, in that it does not actually enforce the intended security policy that the administrator specifies.\n\n",
      "AlternateTerms": [
        {
          "Term": "Authorization",
          "Description": "The terms \"access control\" and \"authorization\" are often used interchangeably, although many people have distinct definitions. The CWE usage of \"access control\" is intended as a general term for the various mechanisms that restrict which users can access which resources, and \"authorization\" is more narrowly defined. It is unlikely that there will be community consensus on the use of these terms."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-24985",
          "Description": "A form hosting website only checks the session authentication status for a single form, making it possible to bypass authentication when there are multiple forms",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-24985"
        },
        {
          "Reference": "CVE-2022-29238",
          "Description": "Access-control setting in web-based document collaboration tool is not properly implemented by the code, which prevents listing hidden directories but does not prevent direct requests to files in those directories.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29238"
        },
        {
          "Reference": "CVE-2022-23607",
          "Description": "Python-based HTTP library did not scope cookies to a particular domain such that \"supercookies\" could be sent to any domain on redirect",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-23607"
        },
        {
          "Reference": "CVE-2021-21972",
          "Description": "Chain: Cloud computing virtualization platform does not require authentication for upload of a tar format file (CWE-306), then uses .. path traversal sequences (CWE-23) in the file to access unexpected files, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-21972"
        },
        {
          "Reference": "CVE-2021-37415",
          "Description": "IT management product does not perform authentication for some REST API requests, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-37415"
        },
        {
          "Reference": "CVE-2021-35033",
          "Description": "Firmware for a WiFi router uses a hard-coded password for a BusyBox shell, allowing bypass of authentication through the UART port",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-35033"
        },
        {
          "Reference": "CVE-2020-10263",
          "Description": "Bluetooth speaker does not require authentication for the debug functionality on the UART port, allowing root shell access",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-10263"
        },
        {
          "Reference": "CVE-2020-13927",
          "Description": "Default setting in workflow management product allows all API requests without authentication, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-13927"
        },
        {
          "Reference": "CVE-2010-4624",
          "Description": "Bulletin board applies restrictions on number of images during post creation, but does not enforce this on editing.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-4624"
        }
      ],
      "AffectedResources": [
        "File or Directory"
      ],
      "MappingNotes": {
        "Usage": "Discouraged",
        "Suggestions": [
          {
            "CweID": "862",
            "Comment": "Missing Authorization"
          },
          {
            "CweID": "863",
            "Comment": "Incorrect Authorization"
          },
          {
            "CweID": "732",
            "Comment": "Incorrect Permission Assignment for Critical Resource"
          },
          {
            "CweID": "306",
            "Comment": "Missing Authentication"
          },
          {
            "CweID": "1390",
            "Comment": "Weak Authentication"
          },
          {
            "CweID": "923",
            "Comment": "Improper Restriction of Communication Channel to Intended Endpoints"
          }
        ]
      },
      "1003_view": "No"
    },
    {
      "ID": "285",
      "Name": "Improper Authorization",
      "Abstraction": "Class",
      "Description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
      "ExtendedDescription": "\n\nAssuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.\n\n\nWhen access control checks are not applied consistently - or not at all - users are able to access data or perform actions that they should not be allowed to perform. This can lead to a wide range of problems, including information exposures, denial of service, and arbitrary code execution.\n",
      "BackgroundDetails": [
        "An access control list (ACL) represents who/what has permissions to a given object. Different operating systems implement (ACLs) in different ways. In UNIX, there are three types of permissions: read, write, and execute. Users are divided into three classes for file access: owner, group owner, and all other users where each class has a separate set of rights. In Windows NT, there are four basic types of permissions for files: \"No access\", \"Read access\", \"Change access\", and \"Full control\". Windows NT extends the concept of three types of users in UNIX to include a list of users and groups along with their associated permissions. A user can create an object (file) and assign specified permissions to that object."
      ],
      "AlternateTerms": [
        {
          "Term": "AuthZ",
          "Description": "\"AuthZ\" is typically used as an abbreviation of \"authorization\" within the web application security community. It is distinct from \"AuthN\" (or, sometimes, \"AuthC\") which is an abbreviation of \"authentication.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-24730",
          "Description": "Go-based continuous deployment product does not check that a user has certain privileges to update or create an app, allowing adversaries to read sensitive repository information",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-24730"
        },
        {
          "Reference": "CVE-2009-3168",
          "Description": "Web application does not restrict access to admin scripts, allowing authenticated users to reset administrative passwords.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3168"
        },
        {
          "Reference": "CVE-2009-2960",
          "Description": "Web application does not restrict access to admin scripts, allowing authenticated users to modify passwords of other users.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2960"
        },
        {
          "Reference": "CVE-2009-3597",
          "Description": "Web application stores database file under the web root with insufficient access control (CWE-219), allowing direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3597"
        },
        {
          "Reference": "CVE-2009-2282",
          "Description": "Terminal server does not check authorization for guest access.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2282"
        },
        {
          "Reference": "CVE-2009-3230",
          "Description": "Database server does not use appropriate privileges for certain sensitive operations.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3230"
        },
        {
          "Reference": "CVE-2009-2213",
          "Description": "Gateway uses default \"Allow\" configuration for its authorization settings.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2213"
        },
        {
          "Reference": "CVE-2009-0034",
          "Description": "Chain: product does not properly interpret a configuration option for a system group, allowing users to gain privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0034"
        },
        {
          "Reference": "CVE-2008-6123",
          "Description": "Chain: SNMP product does not properly parse a configuration option for which hosts are allowed to connect, allowing unauthorized IP addresses to connect.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-6123"
        },
        {
          "Reference": "CVE-2008-5027",
          "Description": "System monitoring software allows users to bypass authorization by creating custom forms.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5027"
        },
        {
          "Reference": "CVE-2008-7109",
          "Description": "Chain: reliance on client-side security (CWE-602) allows attackers to bypass authorization using a custom client.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-7109"
        },
        {
          "Reference": "CVE-2008-3424",
          "Description": "Chain: product does not properly handle wildcards in an authorization policy list, allowing unintended access.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3424"
        },
        {
          "Reference": "CVE-2009-3781",
          "Description": "Content management system does not check access permissions for private files, allowing others to view those files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3781"
        },
        {
          "Reference": "CVE-2008-4577",
          "Description": "ACL-based protection mechanism treats negative access rights as if they are positive, allowing bypass of intended restrictions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4577"
        },
        {
          "Reference": "CVE-2008-6548",
          "Description": "Product does not check the ACL of a page accessed using an \"include\" directive, allowing attackers to read unauthorized files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-6548"
        },
        {
          "Reference": "CVE-2007-2925",
          "Description": "Default ACL list for a DNS server does not set certain ACLs, allowing unauthorized DNS queries.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-2925"
        },
        {
          "Reference": "CVE-2006-6679",
          "Description": "Product relies on the X-Forwarded-For HTTP header for authorization, allowing unintended access by spoofing the header.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6679"
        },
        {
          "Reference": "CVE-2005-3623",
          "Description": "OS kernel does not check for a certain privilege before setting ACLs for files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3623"
        },
        {
          "Reference": "CVE-2005-2801",
          "Description": "Chain: file-system code performs an incorrect comparison (CWE-697), preventing default ACLs from being properly applied.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2801"
        },
        {
          "Reference": "CVE-2001-1155",
          "Description": "Chain: product does not properly check the result of a reverse DNS lookup because of operator precedence (CWE-783), allowing bypass of DNS-based access restrictions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1155"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged",
        "Suggestions": [
          {
            "CweID": "862",
            "Comment": "Missing Authorization"
          },
          {
            "CweID": "863",
            "Comment": "Incorrect Authorization"
          },
          {
            "CweID": "732",
            "Comment": "Incorrect Permission Assignment for Critical Resource"
          }
        ]
      },
      "1003_view": "No"
    },
    {
      "ID": "286",
      "Name": "Incorrect User Management",
      "Abstraction": "Class",
      "Description": "The product does not properly manage a user within its environment.",
      "ExtendedDescription": "Users can be assigned to the wrong group (class) of permissions resulting in unintended access rights to sensitive objects.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-36109",
          "Description": "Containerization product does not record a user's supplementary group ID, allowing bypass of group restrictions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-36109"
        },
        {
          "Reference": "CVE-1999-1193",
          "Description": "Operating system assigns user to privileged wheel group, allowing the user to gain root privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1193"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "287",
      "Name": "Improper Authentication",
      "Abstraction": "Class",
      "Diagram": "/data/images/CWE-287-Diagram.png",
      "Description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
      "AlternateTerms": [
        {
          "Term": "authentification",
          "Description": "An alternate term is \"authentification\", which appears to be most commonly used by people from non-English-speaking countries."
        },
        {
          "Term": "AuthN",
          "Description": "\"AuthN\" is typically used as an abbreviation of \"authentication\" within the web application security community. It is also distinct from \"AuthZ,\" which is an abbreviation of \"authorization.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization."
        },
        {
          "Term": "AuthC",
          "Description": "\"AuthC\" is used as an abbreviation of \"authentication,\" but it appears to used less frequently than \"AuthN.\""
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-35248",
          "Description": "Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-35248"
        },
        {
          "Reference": "CVE-2022-36436",
          "Description": "Python-based authentication proxy does not enforce password authentication during the initial handshake, allowing the client to bypass authentication by specifying a 'None' authentication type.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-36436"
        },
        {
          "Reference": "CVE-2022-30034",
          "Description": "Chain: Web UI for a Python RPC framework does not use regex anchors to validate user login emails (CWE-777), potentially allowing bypass of OAuth (CWE-1390).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30034"
        },
        {
          "Reference": "CVE-2022-29951",
          "Description": "TCP-based protocol in Programmable Logic Controller (PLC) has no authentication.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29951"
        },
        {
          "Reference": "CVE-2022-29952",
          "Description": "Condition Monitor uses a protocol that does not require authentication.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29952"
        },
        {
          "Reference": "CVE-2022-30313",
          "Description": "Safety Instrumented System uses proprietary TCP protocols with no authentication.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30313"
        },
        {
          "Reference": "CVE-2022-30317",
          "Description": "Distributed Control System (DCS) uses a protocol that has no authentication.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30317"
        },
        {
          "Reference": "CVE-2022-33139",
          "Description": "SCADA system only uses client-side authentication, allowing adversaries to impersonate other users.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-33139"
        },
        {
          "Reference": "CVE-2021-3116",
          "Description": "Chain: Python-based HTTP Proxy server uses the wrong boolean operators (CWE-480) causing an incorrect comparison (CWE-697) that identifies an authN failure if all three conditions are met instead of only one, allowing bypass of the proxy authentication (CWE-1390)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-3116"
        },
        {
          "Reference": "CVE-2021-21972",
          "Description": "Chain: Cloud computing virtualization platform does not require authentication for upload of a tar format file (CWE-306), then uses .. path traversal sequences (CWE-23) in the file to access unexpected files, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-21972"
        },
        {
          "Reference": "CVE-2021-37415",
          "Description": "IT management product does not perform authentication for some REST API requests, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-37415"
        },
        {
          "Reference": "CVE-2021-35033",
          "Description": "Firmware for a WiFi router uses a hard-coded password for a BusyBox shell, allowing bypass of authentication through the UART port",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-35033"
        },
        {
          "Reference": "CVE-2020-10263",
          "Description": "Bluetooth speaker does not require authentication for the debug functionality on the UART port, allowing root shell access",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-10263"
        },
        {
          "Reference": "CVE-2020-13927",
          "Description": "Default setting in workflow management product allows all API requests without authentication, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-13927"
        },
        {
          "Reference": "CVE-2021-35395",
          "Description": "Stack-based buffer overflows in SFK for wifi chipset used for IoT/embedded devices, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-35395"
        },
        {
          "Reference": "CVE-2021-34523",
          "Description": "Mail server does not properly check an access token before executing a Powershell command, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-34523"
        },
        {
          "Reference": "CVE-2020-12812",
          "Description": "Chain: user is not prompted for a second authentication factor (CWE-287) when changing the case of their username (CWE-178), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-12812"
        },
        {
          "Reference": "CVE-2020-10148",
          "Description": "Authentication bypass by appending specific parameters and values to a URI, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-10148"
        },
        {
          "Reference": "CVE-2020-0688",
          "Description": "Mail server does not generate a unique key during installation, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-0688"
        },
        {
          "Reference": "CVE-2017-14623",
          "Description": "LDAP Go package allows authentication bypass using an empty password, causing an unauthenticated LDAP bind",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-14623"
        },
        {
          "Reference": "CVE-2009-3421",
          "Description": "login script for guestbook allows bypassing authentication by setting a \"login_ok\" parameter to 1.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3421"
        },
        {
          "Reference": "CVE-2009-2382",
          "Description": "admin script allows authentication bypass by setting a cookie value to \"LOGGEDIN\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2382"
        },
        {
          "Reference": "CVE-2009-1048",
          "Description": "VOIP product allows authentication bypass using 127.0.0.1 in the Host header.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1048"
        },
        {
          "Reference": "CVE-2009-2213",
          "Description": "product uses default \"Allow\" action, instead of default deny, leading to authentication bypass.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2213"
        },
        {
          "Reference": "CVE-2009-2168",
          "Description": "chain: redirect without exit (CWE-698) leads to resultant authentication bypass.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2168"
        },
        {
          "Reference": "CVE-2009-3107",
          "Description": "product does not restrict access to a listening port for a critical service, allowing authentication to be bypassed.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3107"
        },
        {
          "Reference": "CVE-2009-1596",
          "Description": "product does not properly implement a security-related configuration setting, allowing authentication bypass.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1596"
        },
        {
          "Reference": "CVE-2009-2422",
          "Description": "authentication routine returns \"nil\" instead of \"false\" in some situations, allowing authentication bypass using an invalid username.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2422"
        },
        {
          "Reference": "CVE-2009-3232",
          "Description": "authentication update script does not properly handle when admin does not select any authentication modules, allowing authentication bypass.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3232"
        },
        {
          "Reference": "CVE-2009-3231",
          "Description": "use of LDAP authentication with anonymous binds causes empty password to result in successful authentication",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3231"
        },
        {
          "Reference": "CVE-2005-3435",
          "Description": "product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3435"
        },
        {
          "Reference": "CVE-2005-0408",
          "Description": "chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0408"
        }
      ],
      "FunctionalAreas": [
        "Authentication"
      ],
      "MappingNotes": {
        "Usage": "Discouraged",
        "Suggestions": [
          {
            "CweID": "1390",
            "Comment": "Weak Authentication"
          },
          {
            "CweID": "306",
            "Comment": "Missing Authentication for Critical Function"
          }
        ]
      },
      "1003_view": "Yes"
    },
    {
      "ID": "288",
      "Name": "Authentication Bypass Using an Alternate Path or Channel",
      "Abstraction": "Base",
      "Description": "A product requires authentication, but the product has an alternate path or channel that does not require authentication.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-1179",
          "Description": "Router allows remote attackers to read system logs without authentication by directly connecting to the login screen and typing certain control characters.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1179"
        },
        {
          "Reference": "CVE-1999-1454",
          "Description": "Attackers with physical access to the machine may bypass the password prompt by pressing the ESC (Escape) key.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1454"
        },
        {
          "Reference": "CVE-1999-1077",
          "Description": "OS allows local attackers to bypass the password protection of idled sessions via the programmer's switch or CMD-PWR keyboard sequence, which brings up a debugger that the attacker can use to disable the lock.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1077"
        },
        {
          "Reference": "CVE-2003-0304",
          "Description": "Direct request of installation file allows attacker to create administrator accounts.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0304"
        },
        {
          "Reference": "CVE-2002-0870",
          "Description": "Attackers may gain additional privileges by directly requesting the web management URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0870"
        },
        {
          "Reference": "CVE-2002-0066",
          "Description": "Bypass authentication via direct request to named pipe.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0066"
        },
        {
          "Reference": "CVE-2003-1035",
          "Description": "User can avoid lockouts by using an API instead of the GUI to conduct brute force password guessing.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1035"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "289",
      "Name": "Authentication Bypass by Alternate Name",
      "Abstraction": "Base",
      "Description": "The product performs authentication based on the name of a resource being accessed, or the name of the actor performing the access, but it does not properly check all possible names for that resource or actor.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2003-0317",
          "Description": "Protection mechanism that restricts URL access can be bypassed using URL encoding.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0317"
        },
        {
          "Reference": "CVE-2004-0847",
          "Description": "Bypass of authentication for files using \"\\\" (backslash) or \"%5C\" (encoded backslash).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0847"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "29",
      "Name": "Path Traversal: '\\..\\filename'",
      "Abstraction": "Variant",
      "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\\..\\filename' (leading backslash dot dot) sequences that can resolve to a location that is outside of that directory.",
      "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nThis is similar to CWE-25, except using \"\\\" instead of \"/\". Sometimes a program checks for \"..\\\" at the beginning of the input, so a \"\\..\\\" can bypass that check. It is also useful for bypassing path traversal protection schemes that only assume that the \"/\" separator is valid.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1987",
          "Description": "Protection mechanism checks for \"/..\" but doesn't account for Windows-specific \"\\..\" allowing read of arbitrary files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1987"
        },
        {
          "Reference": "CVE-2005-2142",
          "Description": "Directory traversal vulnerability in FTP server allows remote authenticated attackers to list arbitrary directories via a \"\\..\" sequence in an LS command.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2142"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "290",
      "Name": "Authentication Bypass by Spoofing",
      "Abstraction": "Base",
      "Description": "This attack-focused weakness is caused by incorrectly implemented authentication schemes that are subject to spoofing attacks.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-30319",
          "Description": "S-bus functionality in a home automation product performs access control using an IP allowlist, which can be bypassed by a forged IP address.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30319"
        },
        {
          "Reference": "CVE-2009-1048",
          "Description": "VOIP product allows authentication bypass using 127.0.0.1 in the Host header.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1048"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "291",
      "Name": "Reliance on IP Address for Authentication",
      "Abstraction": "Variant",
      "Description": "The product uses an IP address for authentication.",
      "ExtendedDescription": "IP addresses can be easily spoofed. Attackers can forge the source IP address of the packets they send, but response packets will return to the forged IP address. To see the response packets, the attacker has to sniff the traffic between the victim machine and the forged IP address. In order to accomplish the required sniffing, attackers typically attempt to locate themselves on the same subnet as the victim machine. Attackers may be able to circumvent this requirement by using source routing, but source routing is disabled across much of the Internet today. In summary, IP address verification can be a useful part of an authentication scheme, but it should not be the single factor required for authentication.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-30319",
          "Description": "S-bus functionality in a home automation product performs access control using an IP allowlist, which can be bypassed by a forged IP address.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30319"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "293",
      "Name": "Using Referer Field for Authentication",
      "Abstraction": "Variant",
      "Description": "The referer field in HTTP requests can be easily modified and, as such, is not a valid means of message integrity checking.",
      "BackgroundDetails": [
        "The referer field in HTML requests can be simply modified by malicious users, rendering it useless as a means of checking the validity of the request in question."
      ],
      "AlternateTerms": [
        {
          "Term": "referrer",
          "Description": "While the proper spelling might be regarded as \"referrer,\" the HTTP RFCs and their implementations use \"referer,\" so this is regarded as the correct spelling."
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "294",
      "Name": "Authentication Bypass by Capture-replay",
      "Abstraction": "Base",
      "Description": "A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).",
      "ExtendedDescription": "Capture-replay attacks are common and can be difficult to defeat without cryptography. They are a subset of network injection attacks that rely on observing previously-sent valid commands, then changing them slightly if necessary and resending the same commands to the server.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-3435",
          "Description": "product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3435"
        },
        {
          "Reference": "CVE-2007-4961",
          "Description": "Chain: cleartext transmission of the MD5 hash of password (CWE-319) enables attacks against a server that is susceptible to replay (CWE-294).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4961"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "295",
      "Name": "Improper Certificate Validation",
      "Abstraction": "Base",
      "Description": "The product does not validate, or incorrectly validates, a certificate.",
      "ExtendedDescription": "When a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. The product might connect to a malicious host while believing it is a trusted host, or the product might be deceived into accepting spoofed data that appears to originate from a trusted host.",
      "BackgroundDetails": [
        "A certificate is a token that associates an identity (principal) to a cryptographic key. Certificates can be used to check if a public key belongs to the assumed owner."
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-12496",
          "Description": "A Go framework for robotics, drones, and IoT devices skips verification of root CA certificates by default.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-12496"
        },
        {
          "Reference": "CVE-2014-1266",
          "Description": "chain: incorrect \"goto\" in Apple SSL product bypasses certificate validation, allowing Adversary-in-the-Middle (AITM) attack (Apple \"goto fail\" bug). CWE-705 (Incorrect Control Flow Scoping) -> CWE-561 (Dead Code) -> CWE-295 (Improper Certificate Validation) -> CWE-393 (Return of Wrong Status Code) -> CWE-300 (Channel Accessible by Non-Endpoint).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-1266"
        },
        {
          "Reference": "CVE-2021-22909",
          "Description": "Chain: router's firmware update procedure uses curl with \"-k\" (insecure) option that disables certificate validation (CWE-295), allowing adversary-in-the-middle (AITM) compromise with a malicious firmware image (CWE-494).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-22909"
        },
        {
          "Reference": "CVE-2008-4989",
          "Description": "Verification function trusts certificate chains in which the last certificate is self-signed.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4989"
        },
        {
          "Reference": "CVE-2012-5821",
          "Description": "Web browser uses a TLS-related function incorrectly, preventing it from verifying that a server's certificate is signed by a trusted certification authority (CA)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5821"
        },
        {
          "Reference": "CVE-2009-3046",
          "Description": "Web browser does not check if any intermediate certificates are revoked.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3046"
        },
        {
          "Reference": "CVE-2011-0199",
          "Description": "Operating system does not check Certificate Revocation List (CRL) in some cases, allowing spoofing using a revoked certificate.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-0199"
        },
        {
          "Reference": "CVE-2012-5810",
          "Description": "Mobile banking application does not verify hostname, leading to financial loss.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5810"
        },
        {
          "Reference": "CVE-2012-3446",
          "Description": "Cloud-support library written in Python uses incorrect regular expression when matching hostname.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-3446"
        },
        {
          "Reference": "CVE-2009-2408",
          "Description": "Web browser does not correctly handle '\\0' character (NUL) in Common Name, allowing spoofing of https sites.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2408"
        },
        {
          "Reference": "CVE-2012-2993",
          "Description": "Smartphone device does not verify hostname, allowing spoofing of mail services.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-2993"
        },
        {
          "Reference": "CVE-2012-5822",
          "Description": "Application uses third-party library that does not validate hostname.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5822"
        },
        {
          "Reference": "CVE-2012-5819",
          "Description": "Cloud storage management application does not validate hostname.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5819"
        },
        {
          "Reference": "CVE-2012-5817",
          "Description": "Java library uses JSSE SSLSocket and SSLEngine classes, which do not verify the hostname.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5817"
        },
        {
          "Reference": "CVE-2010-1378",
          "Description": "chain: incorrect calculation allows attackers to bypass certificate checks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-1378"
        },
        {
          "Reference": "CVE-2005-3170",
          "Description": "LDAP client accepts certificates even if they are not from a trusted CA.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3170"
        },
        {
          "Reference": "CVE-2009-0265",
          "Description": "chain: DNS server does not correctly check return value from the OpenSSL EVP_VerifyFinal function allows bypass of validation of the certificate chain.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0265"
        },
        {
          "Reference": "CVE-2003-1229",
          "Description": "chain: product checks if client is trusted when it intended to check if the server is trusted, allowing validation of signed code.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1229"
        },
        {
          "Reference": "CVE-2002-0862",
          "Description": "Cryptographic API, as used in web browsers, mail clients, and other software, does not properly validate Basic Constraints.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0862"
        },
        {
          "Reference": "CVE-2009-1358",
          "Description": "chain: OS package manager does not check properly check the return value, allowing bypass using a revoked certificate.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1358"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "296",
      "Name": "Improper Following of a Certificate's Chain of Trust",
      "Abstraction": "Base",
      "Description": "The product does not follow, or incorrectly follows, the chain of trust for a certificate back to a trusted root certificate, resulting in incorrect trust of any resource that is associated with that certificate.",
      "ExtendedDescription": "\n\nIf a system does not follow the chain of trust of a certificate to a root server, the certificate loses all usefulness as a metric of trust. Essentially, the trust gained from a certificate is derived from a chain of trust -- with a reputable trusted entity at the end of that list. The end user must trust that reputable source, and this reputable source must vouch for the resource in question through the medium of the certificate.\n\n\nIn some cases, this trust traverses several entities who vouch for one another. The entity trusted by the end user is at one end of this trust chain, while the certificate-wielding resource is at the other end of the chain. If the user receives a certificate at the end of one of these trust chains and then proceeds to check only that the first link in the chain, no real trust has been derived, since the entire chain must be traversed back to a trusted source to verify the certificate.\n\n\nThere are several ways in which the chain of trust might be broken, including but not limited to:\n\n\n  - Any certificate in the chain is self-signed, unless it the root.\n\n  - Not every intermediate certificate is checked, starting from the original certificate all the way up to the root certificate.\n\n  - An intermediate, CA-signed certificate does not have the expected Basic Constraints or other important extensions.\n\n  - The root certificate has been compromised or authorized to the wrong party.\n\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2016-2402",
          "Description": "Server allows bypass of certificate pinning by sending a chain of trust that includes a trusted CA that is not pinned.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2016-2402"
        },
        {
          "Reference": "CVE-2008-4989",
          "Description": "Verification function trusts certificate chains in which the last certificate is self-signed.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4989"
        },
        {
          "Reference": "CVE-2012-5821",
          "Description": "Chain: Web browser uses a TLS-related function incorrectly, preventing it from verifying that a server's certificate is signed by a trusted certification authority (CA).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5821"
        },
        {
          "Reference": "CVE-2009-3046",
          "Description": "Web browser does not check if any intermediate certificates are revoked.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3046"
        },
        {
          "Reference": "CVE-2009-0265",
          "Description": "chain: DNS server does not correctly check return value from the OpenSSL EVP_VerifyFinal function allows bypass of validation of the certificate chain.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0265"
        },
        {
          "Reference": "CVE-2009-0124",
          "Description": "chain: incorrect check of return value from the OpenSSL EVP_VerifyFinal function allows bypass of validation of the certificate chain.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0124"
        },
        {
          "Reference": "CVE-2002-0970",
          "Description": "File-transfer software does not validate Basic Constraints of an intermediate CA-signed certificate.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0970"
        },
        {
          "Reference": "CVE-2002-0862",
          "Description": "Cryptographic API, as used in web browsers, mail clients, and other software, does not properly validate Basic Constraints.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0862"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "297",
      "Name": "Improper Validation of Certificate with Host Mismatch",
      "Abstraction": "Variant",
      "Description": "The product communicates with a host that provides a certificate, but the product does not properly ensure that the certificate is actually associated with that host.",
      "ExtendedDescription": "\n\nEven if a certificate is well-formed, signed, and follows the chain of trust, it may simply be a valid certificate for a different site than the site that the product is interacting with. If the certificate's host-specific data is not properly checked - such as the Common Name (CN) in the Subject or the Subject Alternative Name (SAN) extension of an X.509 certificate - it may be possible for a redirection or spoofing attack to allow a malicious host with a valid certificate to provide data, impersonating a trusted host. In order to ensure data integrity, the certificate must be valid and it must pertain to the site that is being accessed.\n\n\nEven if the product attempts to check the hostname, it is still possible to incorrectly check the hostname. For example, attackers could create a certificate with a name that begins with a trusted name followed by a NUL byte, which could cause some string-based comparisons to only examine the portion that contains the trusted name.\n\n\nThis weakness can occur even when the product uses Certificate Pinning, if the product does not verify the hostname at the time a certificate is pinned.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2012-5810",
          "Description": "Mobile banking application does not verify hostname, leading to financial loss.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5810"
        },
        {
          "Reference": "CVE-2012-5811",
          "Description": "Mobile application for printing documents does not verify hostname, allowing attackers to read sensitive documents.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5811"
        },
        {
          "Reference": "CVE-2012-5807",
          "Description": "Software for electronic checking does not verify hostname, leading to financial loss.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5807"
        },
        {
          "Reference": "CVE-2012-3446",
          "Description": "Cloud-support library written in Python uses incorrect regular expression when matching hostname.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-3446"
        },
        {
          "Reference": "CVE-2009-2408",
          "Description": "Web browser does not correctly handle '\\0' character (NUL) in Common Name, allowing spoofing of https sites.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2408"
        },
        {
          "Reference": "CVE-2012-0867",
          "Description": "Database program truncates the Common Name during hostname verification, allowing spoofing.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-0867"
        },
        {
          "Reference": "CVE-2010-2074",
          "Description": "Incorrect handling of '\\0' character (NUL) in hostname verification allows spoofing.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2074"
        },
        {
          "Reference": "CVE-2009-4565",
          "Description": "Mail server's incorrect handling of '\\0' character (NUL) in hostname verification allows spoofing.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-4565"
        },
        {
          "Reference": "CVE-2009-3767",
          "Description": "LDAP server's incorrect handling of '\\0' character (NUL) in hostname verification allows spoofing.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3767"
        },
        {
          "Reference": "CVE-2012-5806",
          "Description": "Payment processing module does not verify hostname when connecting to PayPal using PHP fsockopen function.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5806"
        },
        {
          "Reference": "CVE-2012-2993",
          "Description": "Smartphone device does not verify hostname, allowing spoofing of mail services.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-2993"
        },
        {
          "Reference": "CVE-2012-5804",
          "Description": "E-commerce module does not verify hostname when connecting to payment site.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5804"
        },
        {
          "Reference": "CVE-2012-5824",
          "Description": "Chat application does not validate hostname, leading to loss of privacy.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5824"
        },
        {
          "Reference": "CVE-2012-5822",
          "Description": "Application uses third-party library that does not validate hostname.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5822"
        },
        {
          "Reference": "CVE-2012-5819",
          "Description": "Cloud storage management application does not validate hostname.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5819"
        },
        {
          "Reference": "CVE-2012-5817",
          "Description": "Java library uses JSSE SSLSocket and SSLEngine classes, which do not verify the hostname.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5817"
        },
        {
          "Reference": "CVE-2012-5784",
          "Description": "SOAP platform does not verify the hostname.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5784"
        },
        {
          "Reference": "CVE-2012-5782",
          "Description": "PHP library for payments does not verify the hostname.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5782"
        },
        {
          "Reference": "CVE-2012-5780",
          "Description": "Merchant SDK for payments does not verify the hostname.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5780"
        },
        {
          "Reference": "CVE-2003-0355",
          "Description": "Web browser does not validate Common Name, allowing spoofing of https sites.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0355"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "298",
      "Name": "Improper Validation of Certificate Expiration",
      "Abstraction": "Variant",
      "Description": "A certificate expiration is not validated or is incorrectly validated, so trust may be assigned to certificates that have been abandoned due to age.",
      "ExtendedDescription": "When the expiration of a certificate is not taken into account, no trust has necessarily been conveyed through it. Therefore, the validity of the certificate cannot be verified and all benefit of the certificate is lost.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "299",
      "Name": "Improper Check for Certificate Revocation",
      "Abstraction": "Base",
      "Description": "The product does not check or incorrectly checks the revocation status of a certificate, which may cause it to use a certificate that has been compromised.",
      "ExtendedDescription": "An improper check for certificate revocation is a far more serious flaw than related certificate failures. This is because the use of any revoked certificate is almost certainly malicious. The most common reason for certificate revocation is compromise of the system in question, with the result that no legitimate servers will be using a revoked certificate, unless they are sorely out of sync.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2011-2014",
          "Description": "LDAP-over-SSL implementation does not check Certificate Revocation List (CRL), allowing spoofing using a revoked certificate.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-2014"
        },
        {
          "Reference": "CVE-2011-0199",
          "Description": "Operating system does not check Certificate Revocation List (CRL) in some cases, allowing spoofing using a revoked certificate.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-0199"
        },
        {
          "Reference": "CVE-2010-5185",
          "Description": "Antivirus product does not check whether certificates from signed executables have been revoked.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-5185"
        },
        {
          "Reference": "CVE-2009-3046",
          "Description": "Web browser does not check if any intermediate certificates are revoked.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3046"
        },
        {
          "Reference": "CVE-2009-0161",
          "Description": "chain: Ruby module for OCSP misinterprets a response, preventing detection of a revoked certificate.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0161"
        },
        {
          "Reference": "CVE-2011-2701",
          "Description": "chain: incorrect parsing of replies from OCSP responders allows bypass using a revoked certificate.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-2701"
        },
        {
          "Reference": "CVE-2011-0935",
          "Description": "Router can permanently cache certain public keys, which would allow bypass if the certificate is later revoked.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-0935"
        },
        {
          "Reference": "CVE-2009-1358",
          "Description": "chain: OS package manager does not properly check the return value, allowing bypass using a revoked certificate.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1358"
        },
        {
          "Reference": "CVE-2009-0642",
          "Description": "chain: language interpreter does not properly check the return value from an OSCP function, allowing bypass using a revoked certificate.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0642"
        },
        {
          "Reference": "CVE-2008-4679",
          "Description": "chain: web service component does not call the expected method, which prevents a check for revoked certificates.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4679"
        },
        {
          "Reference": "CVE-2006-4410",
          "Description": "Certificate revocation list not searched for certain certificates.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4410"
        },
        {
          "Reference": "CVE-2006-4409",
          "Description": "Product cannot access certificate revocation list when an HTTP proxy is being used.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4409"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "30",
      "Name": "Path Traversal: '\\dir\\..\\filename'",
      "Abstraction": "Variant",
      "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\\dir\\..\\filename' (leading backslash dot dot) sequences that can resolve to a location that is outside of that directory.",
      "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nThis is similar to CWE-26, except using \"\\\" instead of \"/\". The '\\dir\\..\\filename' manipulation is useful for bypassing some path traversal protection schemes. Sometimes a program only checks for \"..\\\" at the beginning of the input, so a \"\\..\\\" can bypass that check.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1987",
          "Description": "Protection mechanism checks for \"/..\" but doesn't account for Windows-specific \"\\..\" allowing read of arbitrary files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1987"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "300",
      "Name": "Channel Accessible by Non-Endpoint",
      "Abstraction": "Class",
      "Description": "The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.",
      "ExtendedDescription": "In order to establish secure communication between two parties, it is often important to adequately verify the identity of entities at each end of the communication channel. Inadequate or inconsistent verification may result in insufficient or incorrect identification of either communicating entity. This can have negative consequences such as misplaced trust in the entity at the other end of the channel. An attacker can leverage this by interposing between the communicating entities and masquerading as the original entity. In the absence of sufficient verification of identity, such an attacker can eavesdrop and potentially modify the communication between the original entities.",
      "AlternateTerms": [
        {
          "Term": "Adversary-in-the-Middle / AITM"
        },
        {
          "Term": "Man-in-the-Middle / MITM"
        },
        {
          "Term": "Person-in-the-Middle / PITM"
        },
        {
          "Term": "Monkey-in-the-Middle"
        },
        {
          "Term": "Monster-in-the-Middle"
        },
        {
          "Term": "Manipulator-in-the-Middle"
        },
        {
          "Term": "On-path attack"
        },
        {
          "Term": "Interception attack"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2014-1266",
          "Description": "chain: incorrect \"goto\" in Apple SSL product bypasses certificate validation, allowing Adversry-in-the-Middle (AITM) attack (Apple \"goto fail\" bug). CWE-705 (Incorrect Control Flow Scoping) -> CWE-561 (Dead Code) -> CWE-295 (Improper Certificate Validation) -> CWE-393 (Return of Wrong Status Code) -> CWE-300 (Channel Accessible by Non-Endpoint).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-1266"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "301",
      "Name": "Reflection Attack in an Authentication Protocol",
      "Abstraction": "Base",
      "Description": "Simple authentication protocols are subject to reflection attacks if a malicious user can use the target machine to impersonate a trusted user.",
      "ExtendedDescription": "\n\nA mutual authentication protocol requires each party to respond to a random challenge by the other party by encrypting it with a pre-shared key. Often, however, such protocols employ the same pre-shared key for communication with a number of different entities. A malicious user or an attacker can easily compromise this protocol without possessing the correct key by employing a reflection attack on the protocol.\n\n\nReflection attacks capitalize on mutual authentication schemes in order to trick the target into revealing the secret shared between it and another valid user. In a basic mutual-authentication scheme, a secret is known to both the valid user and the server; this allows them to authenticate. In order that they may verify this shared secret without sending it plainly over the wire, they utilize a Diffie-Hellman-style scheme in which they each pick a value, then request the hash of that value as keyed by the shared secret. In a reflection attack, the attacker claims to be a valid user and requests the hash of a random value from the server. When the server returns this value and requests its own value to be hashed, the attacker opens another connection to the server. This time, the hash requested by the attacker is the value which the server requested in the first connection. When the server returns this hashed value, it is used in the first connection, authenticating the attacker successfully as the impersonated valid user.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-3435",
          "Description": "product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3435"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "302",
      "Name": "Authentication Bypass by Assumed-Immutable Data",
      "Abstraction": "Base",
      "Description": "The authentication scheme or implementation uses key data elements that are assumed to be immutable, but can be controlled or modified by the attacker.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0367",
          "Description": "DebPloit",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0367"
        },
        {
          "Reference": "CVE-2004-0261",
          "Description": "Web auth",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0261"
        },
        {
          "Reference": "CVE-2002-1730",
          "Description": "Authentication bypass by setting certain cookies to \"true\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1730"
        },
        {
          "Reference": "CVE-2002-1734",
          "Description": "Authentication bypass by setting certain cookies to \"true\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1734"
        },
        {
          "Reference": "CVE-2002-2064",
          "Description": "Admin access by setting a cookie.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2064"
        },
        {
          "Reference": "CVE-2002-2054",
          "Description": "Gain privileges by setting cookie.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2054"
        },
        {
          "Reference": "CVE-2004-1611",
          "Description": "Product trusts authentication information in cookie.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1611"
        },
        {
          "Reference": "CVE-2005-1708",
          "Description": "Authentication bypass by setting admin-testing variable to true.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1708"
        },
        {
          "Reference": "CVE-2005-1787",
          "Description": "Bypass auth and gain privileges by setting a variable.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1787"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "303",
      "Name": "Incorrect Implementation of Authentication Algorithm",
      "Abstraction": "Base",
      "Description": "The requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.",
      "ExtendedDescription": "This incorrect implementation may allow authentication to be bypassed.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2003-0750",
          "Description": "Conditional should have been an 'or' not an 'and'.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0750"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "304",
      "Name": "Missing Critical Step in Authentication",
      "Abstraction": "Base",
      "Description": "The product implements an authentication technique, but it skips a step that weakens the technique.",
      "ExtendedDescription": "Authentication techniques should follow the algorithms that define them exactly, otherwise authentication can be bypassed or more easily subjected to brute force attacks.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-2163",
          "Description": "Shared secret not verified in a RADIUS response packet, allowing authentication bypass by spoofing server replies.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2163"
        },
        {
          "Reference": "CVE-2005-3327",
          "Description": "Chain: Authentication bypass by skipping the first startup step as required by the protocol.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3327"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "305",
      "Name": "Authentication Bypass by Primary Weakness",
      "Abstraction": "Base",
      "Description": "The authentication algorithm is sound, but the implemented mechanism can be bypassed as the result of a separate weakness that is primary to the authentication error.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1374",
          "Description": "The provided password is only compared against the first character of the real password.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1374"
        },
        {
          "Reference": "CVE-2000-0979",
          "Description": "The password is not properly checked, which allows remote attackers to bypass access controls by sending a 1-byte password that matches the first character of the real password.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0979"
        },
        {
          "Reference": "CVE-2001-0088",
          "Description": "Chain: Forum software does not properly initialize an array, which inadvertently sets the password to a single character, allowing remote attackers to easily guess the password and gain administrative privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0088"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "306",
      "Name": "Missing Authentication for Critical Function",
      "Abstraction": "Base",
      "Diagram": "/data/images/CWE-306-Diagram.png",
      "Description": "The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-31260",
          "Description": "Chain: a digital asset management program has an undisclosed backdoor in the legacy version of a PHP script (CWE-912) that could allow an unauthenticated user to export metadata (CWE-306)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-31260"
        },
        {
          "Reference": "CVE-2022-29951",
          "Description": "TCP-based protocol in Programmable Logic Controller (PLC) has no authentication.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29951"
        },
        {
          "Reference": "CVE-2022-29952",
          "Description": "Condition Monitor firmware uses a protocol that does not require authentication.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29952"
        },
        {
          "Reference": "CVE-2022-30276",
          "Description": "SCADA-based protocol for bridging WAN and LAN traffic has no authentication.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30276"
        },
        {
          "Reference": "CVE-2022-30313",
          "Description": "Safety Instrumented System uses proprietary TCP protocols with no authentication.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30313"
        },
        {
          "Reference": "CVE-2022-30317",
          "Description": "Distributed Control System (DCS) uses a protocol that has no authentication.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30317"
        },
        {
          "Reference": "CVE-2021-21972",
          "Description": "Chain: Cloud computing virtualization platform does not require authentication for upload of a tar format file (CWE-306), then uses .. path traversal sequences (CWE-23) in the file to access unexpected files, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-21972"
        },
        {
          "Reference": "CVE-2020-10263",
          "Description": "Bluetooth speaker does not require authentication for the debug functionality on the UART port, allowing root shell access",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-10263"
        },
        {
          "Reference": "CVE-2021-23147",
          "Description": "WiFi router does not require authentication for its UART port, allowing adversaries with physical access to execute commands as root",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-23147"
        },
        {
          "Reference": "CVE-2021-37415",
          "Description": "IT management product does not perform authentication for some REST API requests, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-37415"
        },
        {
          "Reference": "CVE-2020-13927",
          "Description": "Default setting in workflow management product allows all API requests without authentication, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-13927"
        },
        {
          "Reference": "CVE-2002-1810",
          "Description": "MFV. Access TFTP server without authentication and obtain configuration file with sensitive plaintext information.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1810"
        },
        {
          "Reference": "CVE-2008-6827",
          "Description": "Agent software running at privileges does not authenticate incoming requests over an unprotected channel, allowing a Shatter\" attack.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-6827"
        },
        {
          "Reference": "CVE-2004-0213",
          "Description": "Product enforces restrictions through a GUI but not through privileged APIs.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0213"
        },
        {
          "Reference": "CVE-2020-15483",
          "Description": "monitor device allows access to physical UART debug port without authentication",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-15483"
        },
        {
          "Reference": "CVE-2019-9201",
          "Description": "Programmable Logic Controller (PLC) does not have an authentication feature on its communication protocols.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-9201"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "307",
      "Name": "Improper Restriction of Excessive Authentication Attempts",
      "Abstraction": "Base",
      "Description": "The product does not implement sufficient measures to prevent multiple failed authentication attempts within a short time frame, making it more susceptible to brute force attacks.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-0039",
          "Description": "the REST API for a network OS has a high limit for number of connections, allowing brute force password guessing",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-0039"
        },
        {
          "Reference": "CVE-1999-1152",
          "Description": "Product does not disconnect or timeout after multiple failed logins.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1152"
        },
        {
          "Reference": "CVE-2001-1291",
          "Description": "Product does not disconnect or timeout after multiple failed logins.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1291"
        },
        {
          "Reference": "CVE-2001-0395",
          "Description": "Product does not disconnect or timeout after multiple failed logins.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0395"
        },
        {
          "Reference": "CVE-2001-1339",
          "Description": "Product does not disconnect or timeout after multiple failed logins.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1339"
        },
        {
          "Reference": "CVE-2002-0628",
          "Description": "Product does not disconnect or timeout after multiple failed logins.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0628"
        },
        {
          "Reference": "CVE-1999-1324",
          "Description": "User accounts not disabled when they exceed a threshold; possibly a resultant problem.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1324"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "308",
      "Name": "Use of Single-factor Authentication",
      "Abstraction": "Base",
      "Description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.",
      "ExtendedDescription": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-35248",
          "Description": "Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-35248"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "309",
      "Name": "Use of Password System for Primary Authentication",
      "Abstraction": "Base",
      "Description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.",
      "BackgroundDetails": [
        "Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical."
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "31",
      "Name": "Path Traversal: 'dir\\..\\..\\filename'",
      "Abstraction": "Variant",
      "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize 'dir\\..\\..\\filename' (multiple internal backslash dot dot) sequences that can resolve to a location that is outside of that directory.",
      "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nThe 'dir\\..\\..\\filename' manipulation is useful for bypassing some path traversal protection schemes. Sometimes a program only removes one \"..\\\" sequence, so multiple \"..\\\" can bypass that check. Alternately, this manipulation could be used to bypass a check for \"..\\\" at the beginning of the pathname, moving up more than one directory level.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0160",
          "Description": "The administration function in Access Control Server allows remote attackers to read HTML, Java class, and image files outside the web root via a \"..\\..\" sequence in the URL to port 2002.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0160"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "311",
      "Name": "Missing Encryption of Sensitive Data",
      "Abstraction": "Class",
      "Description": "The product does not encrypt sensitive or critical information before storage or transmission.",
      "ExtendedDescription": "The lack of proper data encryption passes up the guarantees of confidentiality, integrity, and accountability that properly implemented encryption conveys.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2009-2272",
          "Description": "password and username stored in cleartext in a cookie",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2272"
        },
        {
          "Reference": "CVE-2009-1466",
          "Description": "password stored in cleartext in a file with insecure permissions",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1466"
        },
        {
          "Reference": "CVE-2009-0152",
          "Description": "chat program disables SSL in some circumstances even when the user says to use SSL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0152"
        },
        {
          "Reference": "CVE-2009-1603",
          "Description": "Chain: product uses an incorrect public exponent when generating an RSA key, which effectively disables the encryption",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1603"
        },
        {
          "Reference": "CVE-2009-0964",
          "Description": "storage of unencrypted passwords in a database",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0964"
        },
        {
          "Reference": "CVE-2008-6157",
          "Description": "storage of unencrypted passwords in a database",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-6157"
        },
        {
          "Reference": "CVE-2008-6828",
          "Description": "product stores a password in cleartext in memory",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-6828"
        },
        {
          "Reference": "CVE-2008-1567",
          "Description": "storage of a secret key in cleartext in a temporary file",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1567"
        },
        {
          "Reference": "CVE-2008-0174",
          "Description": "SCADA product uses HTTP Basic Authentication, which is not encrypted",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0174"
        },
        {
          "Reference": "CVE-2007-5778",
          "Description": "login credentials stored unencrypted in a registry key",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5778"
        },
        {
          "Reference": "CVE-2002-1949",
          "Description": "Passwords transmitted in cleartext.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1949"
        },
        {
          "Reference": "CVE-2008-4122",
          "Description": "Chain: Use of HTTPS cookie without \"secure\" flag causes it to be transmitted across unencrypted HTTP.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4122"
        },
        {
          "Reference": "CVE-2008-3289",
          "Description": "Product sends password hash in cleartext in violation of intended policy.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3289"
        },
        {
          "Reference": "CVE-2008-4390",
          "Description": "Remote management feature sends sensitive information including passwords in cleartext.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4390"
        },
        {
          "Reference": "CVE-2007-5626",
          "Description": "Backup routine sends password in cleartext in email.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5626"
        },
        {
          "Reference": "CVE-2004-1852",
          "Description": "Product transmits Blowfish encryption key in cleartext.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1852"
        },
        {
          "Reference": "CVE-2008-0374",
          "Description": "Printer sends configuration information, including administrative password, in cleartext.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0374"
        },
        {
          "Reference": "CVE-2007-4961",
          "Description": "Chain: cleartext transmission of the MD5 hash of password enables attacks against a server that is susceptible to replay (CWE-294).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4961"
        },
        {
          "Reference": "CVE-2007-4786",
          "Description": "Product sends passwords in cleartext to a log server.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4786"
        },
        {
          "Reference": "CVE-2005-3140",
          "Description": "Product sends file with cleartext passwords in e-mail message intended for diagnostic purposes.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3140"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "312",
      "Name": "Cleartext Storage of Sensitive Information",
      "Abstraction": "Base",
      "Description": "The product stores sensitive information in cleartext within a resource that might be accessible to another control sphere.",
      "ExtendedDescription": "\n\nBecause the information is stored in cleartext (i.e., unencrypted), attackers could potentially read it. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.\n\n\nWhen organizations adopt cloud services, it can be easier for attackers to access the data from anywhere on the Internet.\n\n\nIn some systems/environments such as cloud, the use of \"double encryption\" (at both the software and hardware layer) might be required, and the developer might be solely responsible for both layers, instead of shared responsibility with the administrator of the broader system/environment.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-30275",
          "Description": "Remote Terminal Unit (RTU) uses a driver that relies on a password stored in plaintext.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30275"
        },
        {
          "Reference": "CVE-2009-2272",
          "Description": "password and username stored in cleartext in a cookie",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2272"
        },
        {
          "Reference": "CVE-2009-1466",
          "Description": "password stored in cleartext in a file with insecure permissions",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1466"
        },
        {
          "Reference": "CVE-2009-0152",
          "Description": "chat program disables SSL in some circumstances even when the user says to use SSL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0152"
        },
        {
          "Reference": "CVE-2009-1603",
          "Description": "Chain: product uses an incorrect public exponent when generating an RSA key, which effectively disables the encryption",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1603"
        },
        {
          "Reference": "CVE-2009-0964",
          "Description": "storage of unencrypted passwords in a database",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0964"
        },
        {
          "Reference": "CVE-2008-6157",
          "Description": "storage of unencrypted passwords in a database",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-6157"
        },
        {
          "Reference": "CVE-2008-6828",
          "Description": "product stores a password in cleartext in memory",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-6828"
        },
        {
          "Reference": "CVE-2008-1567",
          "Description": "storage of a secret key in cleartext in a temporary file",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1567"
        },
        {
          "Reference": "CVE-2008-0174",
          "Description": "SCADA product uses HTTP Basic Authentication, which is not encrypted",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0174"
        },
        {
          "Reference": "CVE-2007-5778",
          "Description": "login credentials stored unencrypted in a registry key",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5778"
        },
        {
          "Reference": "CVE-2001-1481",
          "Description": "Plaintext credentials in world-readable file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1481"
        },
        {
          "Reference": "CVE-2005-1828",
          "Description": "Password in cleartext in config file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1828"
        },
        {
          "Reference": "CVE-2005-2209",
          "Description": "Password in cleartext in config file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2209"
        },
        {
          "Reference": "CVE-2002-1696",
          "Description": "Decrypted copy of a message written to disk given a combination of options and when user replies to an encrypted message.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1696"
        },
        {
          "Reference": "CVE-2004-2397",
          "Description": "Plaintext storage of private key and passphrase in log file when user imports the key.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2397"
        },
        {
          "Reference": "CVE-2002-1800",
          "Description": "Admin password in plaintext in a cookie.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1800"
        },
        {
          "Reference": "CVE-2001-1537",
          "Description": "Default configuration has cleartext usernames/passwords in cookie.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1537"
        },
        {
          "Reference": "CVE-2001-1536",
          "Description": "Usernames/passwords in cleartext in cookies.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1536"
        },
        {
          "Reference": "CVE-2005-2160",
          "Description": "Authentication information stored in cleartext in a cookie.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2160"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "313",
      "Name": "Cleartext Storage in a File or on Disk",
      "Abstraction": "Variant",
      "Description": "The product stores sensitive information in cleartext in a file, or on disk.",
      "ExtendedDescription": "The sensitive information could be read by attackers with access to the file, or with physical or administrator access to the raw disk. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-1481",
          "Description": "Cleartext credentials in world-readable file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1481"
        },
        {
          "Reference": "CVE-2005-1828",
          "Description": "Password in cleartext in config file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1828"
        },
        {
          "Reference": "CVE-2005-2209",
          "Description": "Password in cleartext in config file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2209"
        },
        {
          "Reference": "CVE-2002-1696",
          "Description": "Decrypted copy of a message written to disk given a combination of options and when user replies to an encrypted message.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1696"
        },
        {
          "Reference": "CVE-2004-2397",
          "Description": "Cleartext storage of private key and passphrase in log file when user imports the key.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2397"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "314",
      "Name": "Cleartext Storage in the Registry",
      "Abstraction": "Variant",
      "Description": "The product stores sensitive information in cleartext in the registry.",
      "ExtendedDescription": "Attackers can read the information by accessing the registry key. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-2227",
          "Description": "Cleartext passwords in registry key.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2227"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "315",
      "Name": "Cleartext Storage of Sensitive Information in a Cookie",
      "Abstraction": "Variant",
      "Description": "The product stores sensitive information in cleartext in a cookie.",
      "ExtendedDescription": "Attackers can use widely-available tools to view the cookie and read the sensitive information. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1800",
          "Description": "Admin password in cleartext in a cookie.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1800"
        },
        {
          "Reference": "CVE-2001-1537",
          "Description": "Default configuration has cleartext usernames/passwords in cookie.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1537"
        },
        {
          "Reference": "CVE-2001-1536",
          "Description": "Usernames/passwords in cleartext in cookies.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1536"
        },
        {
          "Reference": "CVE-2005-2160",
          "Description": "Authentication information stored in cleartext in a cookie.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2160"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "316",
      "Name": "Cleartext Storage of Sensitive Information in Memory",
      "Abstraction": "Variant",
      "Description": "The product stores sensitive information in cleartext in memory.",
      "ExtendedDescription": "\n\nThe sensitive memory might be saved to disk, stored in a core dump, or remain uncleared if the product crashes, or if the programmer does not properly clear the memory before freeing it.\n\n\nIt could be argued that such problems are usually only exploitable by those with administrator privileges. However, swapping could cause the memory to be written to disk and leave it accessible to physical attack afterwards. Core dump files might have insecure permissions or be stored in archive files that are accessible to untrusted people. Or, uncleared sensitive memory might be inadvertently exposed to attackers due to another weakness.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-1517",
          "Description": "Sensitive authentication information in cleartext in memory.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1517"
        },
        {
          "Reference": "CVE-2001-0984",
          "Description": "Password protector leaves passwords in memory when window is minimized, even when \"clear password when minimized\" is set.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0984"
        },
        {
          "Reference": "CVE-2003-0291",
          "Description": "SSH client does not clear credentials from memory.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0291"
        }
      ],
      "AffectedResources": [
        "Memory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "317",
      "Name": "Cleartext Storage of Sensitive Information in GUI",
      "Abstraction": "Variant",
      "Description": "The product stores sensitive information in cleartext within the GUI.",
      "ExtendedDescription": "An attacker can often obtain data from a GUI, even if hidden, by using an API to directly access GUI objects such as windows and menus. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1848",
          "Description": "Unencrypted passwords stored in GUI dialog may allow local users to access the passwords.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1848"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "318",
      "Name": "Cleartext Storage of Sensitive Information in Executable",
      "Abstraction": "Variant",
      "Description": "The product stores sensitive information in cleartext in an executable.",
      "ExtendedDescription": "Attackers can reverse engineer binary code to obtain secret data. This is especially easy when the cleartext is plain ASCII. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-1794",
          "Description": "Product stores RSA private key in a DLL and uses it to sign a certificate, allowing spoofing of servers and Adversary-in-the-Middle (AITM) attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1794"
        },
        {
          "Reference": "CVE-2001-1527",
          "Description": "administration passwords in cleartext in executable",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1527"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "319",
      "Name": "Cleartext Transmission of Sensitive Information",
      "Abstraction": "Base",
      "Description": "The product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.",
      "ExtendedDescription": "\n\nMany communication channels can be \"sniffed\" (monitored) by adversaries during data transmission. For example, in networking, packets can traverse many intermediary nodes from the source to the destination, whether across the internet, an internal network, the cloud, etc. Some actors might have privileged access to a network interface or any link along the channel, such as a router, but they might not be authorized to collect the underlying data. As a result, network traffic could be sniffed by adversaries, spilling security-critical data.\n\n\nApplicable communication channels are not limited to software products. Applicable channels include hardware-specific technologies such as internal hardware networks and external debug channels, supporting remote JTAG debugging. When mitigations are not applied to combat adversaries within the product's threat model, this weakness significantly lowers the difficulty of exploitation by such adversaries.\n\n\nWhen full communications are recorded or logged, such as with a packet dump, an adversary could attempt to obtain the dump long after the transmission has occurred and try to \"sniff\" the cleartext from the recorded communications in the dump itself. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information. \n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-29519",
          "Description": "Programmable Logic Controller (PLC) sends sensitive information in plaintext, including passwords and session tokens.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29519"
        },
        {
          "Reference": "CVE-2022-30312",
          "Description": "Building Controller uses a protocol that transmits authentication credentials in plaintext.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30312"
        },
        {
          "Reference": "CVE-2022-31204",
          "Description": "Programmable Logic Controller (PLC) sends password in plaintext.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-31204"
        },
        {
          "Reference": "CVE-2002-1949",
          "Description": "Passwords transmitted in cleartext.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1949"
        },
        {
          "Reference": "CVE-2008-4122",
          "Description": "Chain: Use of HTTPS cookie without \"secure\" flag causes it to be transmitted across unencrypted HTTP.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4122"
        },
        {
          "Reference": "CVE-2008-3289",
          "Description": "Product sends password hash in cleartext in violation of intended policy.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3289"
        },
        {
          "Reference": "CVE-2008-4390",
          "Description": "Remote management feature sends sensitive information including passwords in cleartext.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4390"
        },
        {
          "Reference": "CVE-2007-5626",
          "Description": "Backup routine sends password in cleartext in email.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5626"
        },
        {
          "Reference": "CVE-2004-1852",
          "Description": "Product transmits Blowfish encryption key in cleartext.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1852"
        },
        {
          "Reference": "CVE-2008-0374",
          "Description": "Printer sends configuration information, including administrative password, in cleartext.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0374"
        },
        {
          "Reference": "CVE-2007-4961",
          "Description": "Chain: cleartext transmission of the MD5 hash of password enables attacks against a server that is susceptible to replay (CWE-294).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4961"
        },
        {
          "Reference": "CVE-2007-4786",
          "Description": "Product sends passwords in cleartext to a log server.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4786"
        },
        {
          "Reference": "CVE-2005-3140",
          "Description": "Product sends file with cleartext passwords in e-mail message intended for diagnostic purposes.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3140"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "32",
      "Name": "Path Traversal: '...' (Triple Dot)",
      "Abstraction": "Variant",
      "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '...' (triple dot) sequences that can resolve to a location that is outside of that directory.",
      "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nThe '...' manipulation is useful for bypassing some path traversal protection schemes. On some Windows systems, it is equivalent to \"..\\..\" and might bypass checks that assume only two dots are valid. Incomplete filtering, such as removal of \"./\" sequences, can ultimately produce valid \"..\" sequences due to a collapse into unsafe value (CWE-182).\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-0467",
          "Description": "\"\\...\" in web server",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0467"
        },
        {
          "Reference": "CVE-2001-0615",
          "Description": "\"...\" or \"....\" in chat server",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0615"
        },
        {
          "Reference": "CVE-2001-0963",
          "Description": "\"...\" in cd command in FTP server",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0963"
        },
        {
          "Reference": "CVE-2001-1193",
          "Description": "\"...\" in cd command in FTP server",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1193"
        },
        {
          "Reference": "CVE-2001-1131",
          "Description": "\"...\" in cd command in FTP server",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1131"
        },
        {
          "Reference": "CVE-2001-0480",
          "Description": "read of arbitrary files and directories using GET or CD with \"...\" in Windows-based FTP server.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0480"
        },
        {
          "Reference": "CVE-2002-0288",
          "Description": "read files using \".\" and Unicode-encoded \"/\" or \"\\\" characters in the URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0288"
        },
        {
          "Reference": "CVE-2003-0313",
          "Description": "Directory listing of web server using \"...\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0313"
        },
        {
          "Reference": "CVE-2005-1658",
          "Description": "Triple dot",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1658"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "321",
      "Name": "Use of Hard-coded Cryptographic Key",
      "Abstraction": "Variant",
      "Description": "The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-29960",
          "Description": "Engineering Workstation uses hard-coded cryptographic keys that could allow for unathorized filesystem access and privilege escalation",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29960"
        },
        {
          "Reference": "CVE-2022-30271",
          "Description": "Remote Terminal Unit (RTU) uses a hard-coded SSH private key that is likely to be used by default.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30271"
        },
        {
          "Reference": "CVE-2020-10884",
          "Description": "WiFi router service has a hard-coded encryption key, allowing root access",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-10884"
        },
        {
          "Reference": "CVE-2014-2198",
          "Description": "Communications / collaboration product has a hardcoded SSH private key, allowing access to root account",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-2198"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "322",
      "Name": "Key Exchange without Entity Authentication",
      "Abstraction": "Base",
      "Description": "The product performs a key exchange with an actor without verifying the identity of that actor.",
      "ExtendedDescription": "Performing a key exchange will preserve the integrity of the information sent between two entities, but this will not guarantee that the entities are who they claim they are. This may enable an attacker to impersonate an actor by modifying traffic between the two entities. Typically, this involves a victim client that contacts a malicious server that is impersonating a trusted server. If the client skips authentication or ignores an authentication failure, the malicious server may request authentication information from the user. The malicious server can then use this authentication information to log in to the trusted server using the victim's credentials, sniff traffic between the victim and trusted server, etc.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "323",
      "Name": "Reusing a Nonce, Key Pair in Encryption",
      "Abstraction": "Base",
      "Description": "Nonces should be used for the present occasion and only once.",
      "BackgroundDetails": [
        "Nonces are often bundled with a key in a communication exchange to produce a new session key for each exchange."
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "324",
      "Name": "Use of a Key Past its Expiration Date",
      "Abstraction": "Base",
      "Description": "The product uses a cryptographic key or password past its expiration date, which diminishes its safety significantly by increasing the timing window for cracking attacks against that key.",
      "ExtendedDescription": "While the expiration of keys does not necessarily ensure that they are compromised, it is a significant concern that keys which remain in use for prolonged periods of time have a decreasing probability of integrity. For this reason, it is important to replace keys within a period of time proportional to their strength.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-33020",
          "Description": "Picture Archiving and Communication System (PACS) system for hospitals uses a cryptographic key or password past its expiration date",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-33020"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "325",
      "Name": "Missing Cryptographic Step",
      "Abstraction": "Base",
      "Description": "The product does not implement a required step in a cryptographic algorithm, resulting in weaker encryption than advertised by the algorithm.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-1585",
          "Description": "Missing challenge-response step allows authentication bypass using public key.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1585"
        }
      ],
      "FunctionalAreas": [
        "Cryptography"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "326",
      "Name": "Inadequate Encryption Strength",
      "Abstraction": "Class",
      "Description": "The product stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.",
      "ExtendedDescription": "A weak encryption scheme can be subjected to brute force attacks that have a reasonable chance of succeeding using current attack methods and resources.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-1546",
          "Description": "Weak encryption",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1546"
        },
        {
          "Reference": "CVE-2004-2172",
          "Description": "Weak encryption (chosen plaintext attack)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2172"
        },
        {
          "Reference": "CVE-2002-1682",
          "Description": "Weak encryption",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1682"
        },
        {
          "Reference": "CVE-2002-1697",
          "Description": "Weak encryption produces same ciphertext from the same plaintext blocks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1697"
        },
        {
          "Reference": "CVE-2002-1739",
          "Description": "Weak encryption",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1739"
        },
        {
          "Reference": "CVE-2005-2281",
          "Description": "Weak encryption scheme",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2281"
        },
        {
          "Reference": "CVE-2002-1872",
          "Description": "Weak encryption (XOR)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1872"
        },
        {
          "Reference": "CVE-2002-1910",
          "Description": "Weak encryption (reversible algorithm).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1910"
        },
        {
          "Reference": "CVE-2002-1946",
          "Description": "Weak encryption (one-to-one mapping).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1946"
        },
        {
          "Reference": "CVE-2002-1975",
          "Description": "Encryption error uses fixed salt, simplifying brute force / dictionary attacks (overlaps randomness).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1975"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "327",
      "Name": "Use of a Broken or Risky Cryptographic Algorithm",
      "Abstraction": "Class",
      "Description": "The product uses a broken or risky cryptographic algorithm or protocol.",
      "ExtendedDescription": "\n\nCryptographic algorithms are the methods by which data is scrambled to prevent observation or influence by unauthorized actors. Insecure cryptography can be exploited to expose sensitive information, modify data in unexpected ways, spoof identities of other users or devices, or other impacts.\n\n\nIt is very difficult to produce a secure algorithm, and even high-profile algorithms by accomplished cryptographic experts have been broken. Well-known techniques exist to break or weaken various kinds of cryptography. Accordingly, there are a small number of well-understood and heavily studied algorithms that should be used by most products. Using a non-standard or known-insecure algorithm is dangerous because a determined adversary may be able to break the algorithm and compromise whatever data has been protected.\n\n\nSince the state of cryptography advances so rapidly, it is common for an algorithm to be considered \"unsafe\" even if it was once thought to be strong. This can happen when new attacks are discovered, or if computing power increases so much that the cryptographic algorithm no longer provides the amount of protection that was originally thought.\n\n\nFor a number of reasons, this weakness is even more challenging to manage with hardware deployment of cryptographic algorithms as opposed to software implementation. First, if a flaw is discovered with hardware-implemented cryptography, the flaw cannot be fixed in most cases without a recall of the product, because hardware is not easily replaceable like software. Second, because the hardware product is expected to work for years, the adversary's computing power will only increase over time.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-30273",
          "Description": "SCADA-based protocol supports a legacy encryption mode that uses Tiny Encryption Algorithm (TEA) in ECB mode, which leaks patterns in messages and cannot protect integrity",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30273"
        },
        {
          "Reference": "CVE-2022-30320",
          "Description": "Programmable Logic Controller (PLC) uses a protocol with a cryptographically insecure hashing algorithm for passwords.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30320"
        },
        {
          "Reference": "CVE-2008-3775",
          "Description": "Product uses \"ROT-25\" to obfuscate the password in the registry.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3775"
        },
        {
          "Reference": "CVE-2007-4150",
          "Description": "product only uses \"XOR\" to obfuscate sensitive data",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4150"
        },
        {
          "Reference": "CVE-2007-5460",
          "Description": "product only uses \"XOR\" and a fixed key to obfuscate sensitive data",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5460"
        },
        {
          "Reference": "CVE-2005-4860",
          "Description": "Product substitutes characters with other characters in a fixed way, and also leaves certain input characters unchanged.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-4860"
        },
        {
          "Reference": "CVE-2002-2058",
          "Description": "Attackers can infer private IP addresses by dividing each octet by the MD5 hash of '20'.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2058"
        },
        {
          "Reference": "CVE-2008-3188",
          "Description": "Product uses DES when MD5 has been specified in the configuration, resulting in weaker-than-expected password hashes.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3188"
        },
        {
          "Reference": "CVE-2005-2946",
          "Description": "Default configuration of product uses MD5 instead of stronger algorithms that are available, simplifying forgery of certificates.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2946"
        },
        {
          "Reference": "CVE-2007-6013",
          "Description": "Product uses the hash of a hash for authentication, allowing attackers to gain privileges if they can obtain the original hash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-6013"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "328",
      "Name": "Use of Weak Hash",
      "Abstraction": "Base",
      "Description": "The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).",
      "ExtendedDescription": "\n\nA hash function is defined as an algorithm that maps arbitrarily sized data into a fixed-sized digest (output) such that the following properties hold:\n\n\n  1. The algorithm is not invertible (also called \"one-way\" or \"not reversible\")\n\n  1. The algorithm is deterministic; the same input produces the same digest every time\n\n Building on this definition, a cryptographic hash function must also ensure that a malicious actor cannot leverage the hash function to have a reasonable chance of success at determining any of the following:\n\n  1. the original input (preimage attack), given only the digest\n\n  1. another input that can produce the same digest (2nd preimage attack), given the original input\n\n  1. a set of two or more inputs that evaluate to the same digest (birthday attack), given the actor can arbitrarily choose the inputs to be hashed and can do so a reasonable amount of times\n\nWhat is regarded as \"reasonable\" varies by context and threat model, but in general, \"reasonable\" could cover any attack that is more efficient than brute force (i.e., on average, attempting half of all possible combinations). Note that some attacks might be more efficient than brute force but are still not regarded as achievable in the real world.\n\nAny algorithm that does not meet the above conditions will generally be considered weak for general use in hashing.\n\n\nIn addition to algorithmic weaknesses, a hash function can be made weak by using the hash in a security context that breaks its security guarantees. For example, using a hash function without a salt for storing passwords (that are sufficiently short) could enable an adversary to create a \"rainbow table\" [REF-637] to recover the password under certain conditions; this attack works against such hash functions as MD5, SHA-1, and SHA-2.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-30320",
          "Description": "Programmable Logic Controller (PLC) uses a protocol with a cryptographically insecure hashing algorithm for passwords.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30320"
        },
        {
          "Reference": "CVE-2005-4900",
          "Description": "SHA-1 algorithm is not collision-resistant.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-4900"
        },
        {
          "Reference": "CVE-2020-25685",
          "Description": "DNS product uses a weak hash (CRC32 or SHA-1) of the query name, allowing attacker to forge responses by computing domain names with the same hash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-25685"
        },
        {
          "Reference": "CVE-2012-6707",
          "Description": "blogging product uses MD5-based algorithm for passwords.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-6707"
        },
        {
          "Reference": "CVE-2019-14855",
          "Description": "forging of certificate signatures using SHA-1 collisions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-14855"
        },
        {
          "Reference": "CVE-2017-15999",
          "Description": "mobile app for backup sends SHA-1 hash of password in cleartext.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-15999"
        },
        {
          "Reference": "CVE-2006-4068",
          "Description": "Hard-coded hashed values for username and password contained in client-side script, allowing brute-force offline attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4068"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "329",
      "Name": "Generation of Predictable IV with CBC Mode",
      "Abstraction": "Variant",
      "Description": "The product generates and uses a predictable initialization Vector (IV) with Cipher Block Chaining (CBC) Mode, which causes algorithms to be susceptible to dictionary attacks when they are encrypted under the same key.",
      "ExtendedDescription": "\n\nCBC mode eliminates a weakness of Electronic Code Book (ECB) mode by allowing identical plaintext blocks to be encrypted to different ciphertext blocks. This is possible by the XOR-ing of an IV with the initial plaintext block so that every plaintext block in the chain is XOR'd with a different value before encryption. If IVs are reused, then identical plaintexts would be encrypted to identical ciphertexts. However, even if IVs are not identical but are predictable, then they still break the security of CBC mode against Chosen Plaintext Attacks (CPA).\n",
      "BackgroundDetails": [
        "\n\nCBC mode is a commonly used mode of operation for a block cipher. It works by XOR-ing an IV with the initial block of a plaintext prior to encryption and then XOR-ing each successive block of plaintext with the previous block of ciphertext before encryption.\n\n```\n\t C_0 = IV\n\t C_i = E_k{M_i XOR C_{i-1}} \n```\n When used properly, CBC mode provides security against chosen plaintext attacks. Having an unpredictable IV is a crucial underpinning of this. See [REF-1171]."
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-5408",
          "Description": "encryption functionality in an authentication framework uses a fixed null IV with CBC mode, allowing attackers to decrypt traffic in applications that use this functionality",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-5408"
        },
        {
          "Reference": "CVE-2017-17704",
          "Description": "messages for a door-unlocking product use a fixed IV in CBC mode, which is the same after each restart",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-17704"
        },
        {
          "Reference": "CVE-2017-11133",
          "Description": "application uses AES in CBC mode, but the pseudo-random secret and IV are generated using math.random, which is not cryptographically strong.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-11133"
        },
        {
          "Reference": "CVE-2007-3528",
          "Description": "Blowfish-CBC implementation constructs an IV where each byte is calculated modulo 8 instead of modulo 256, resulting in less than 12 bits for the effective IV length, and less than 4096 possible IV values.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3528"
        },
        {
          "Reference": "CVE-2011-3389",
          "Description": "BEAST attack in SSL 3.0 / TLS 1.0. In CBC mode, chained initialization vectors are non-random, allowing decryption of HTTPS traffic using a chosen plaintext attack.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-3389"
        }
      ],
      "FunctionalAreas": [
        "Cryptography"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "33",
      "Name": "Path Traversal: '....' (Multiple Dot)",
      "Abstraction": "Variant",
      "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '....' (multiple dot) sequences that can resolve to a location that is outside of that directory.",
      "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nThe '....' manipulation is useful for bypassing some path traversal protection schemes. On some Windows systems, it is equivalent to \"..\\..\\..\" and might bypass checks that assume only two dots are valid. Incomplete filtering, such as removal of \"./\" sequences, can ultimately produce valid \"..\" sequences due to a collapse into unsafe value (CWE-182).\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-0240",
          "Description": "read files via \"/........../\" in URL",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0240"
        },
        {
          "Reference": "CVE-2000-0773",
          "Description": "read files via \"....\" in web server",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0773"
        },
        {
          "Reference": "CVE-1999-1082",
          "Description": "read files via \"......\" in web server (doubled triple dot?)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1082"
        },
        {
          "Reference": "CVE-2004-2121",
          "Description": "read files via \"......\" in web server (doubled triple dot?)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2121"
        },
        {
          "Reference": "CVE-2001-0491",
          "Description": "multiple attacks using \"..\", \"...\", and \"....\" in different commands",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0491"
        },
        {
          "Reference": "CVE-2001-0615",
          "Description": "\"...\" or \"....\" in chat server",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0615"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "330",
      "Name": "Use of Insufficiently Random Values",
      "Abstraction": "Class",
      "Description": "The product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.",
      "ExtendedDescription": "When product generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information.",
      "BackgroundDetails": [
        "Computers are deterministic machines, and as such are unable to produce true randomness. Pseudo-Random Number Generators (PRNGs) approximate randomness algorithmically, starting with a seed from which subsequent values are calculated. There are two types of PRNGs: statistical and cryptographic. Statistical PRNGs provide useful statistical properties, but their output is highly predictable and forms an easy to reproduce numeric stream that is unsuitable for use in cases where security depends on generated values being unpredictable. Cryptographic PRNGs address this problem by generating output that is more difficult to predict. For a value to be cryptographically secure, it must be impossible or highly improbable for an attacker to distinguish between it and a truly random value."
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-3692",
          "Description": "PHP framework uses mt_rand() function (Marsenne Twister) when generating tokens",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-3692"
        },
        {
          "Reference": "CVE-2020-7010",
          "Description": "Cloud application on Kubernetes generates passwords using a weak random number generator based on deployment time.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-7010"
        },
        {
          "Reference": "CVE-2009-3278",
          "Description": "Crypto product uses rand() library function to generate a recovery key, making it easier to conduct brute force attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3278"
        },
        {
          "Reference": "CVE-2009-3238",
          "Description": "Random number generator can repeatedly generate the same value.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3238"
        },
        {
          "Reference": "CVE-2009-2367",
          "Description": "Web application generates predictable session IDs, allowing session hijacking.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2367"
        },
        {
          "Reference": "CVE-2009-2158",
          "Description": "Password recovery utility generates a relatively small number of random passwords, simplifying brute force attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2158"
        },
        {
          "Reference": "CVE-2009-0255",
          "Description": "Cryptographic key created with a seed based on the system time.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0255"
        },
        {
          "Reference": "CVE-2008-5162",
          "Description": "Kernel function does not have a good entropy source just after boot.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5162"
        },
        {
          "Reference": "CVE-2008-4905",
          "Description": "Blogging software uses a hard-coded salt when calculating a password hash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4905"
        },
        {
          "Reference": "CVE-2008-4929",
          "Description": "Bulletin board application uses insufficiently random names for uploaded files, allowing other users to access private files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4929"
        },
        {
          "Reference": "CVE-2008-3612",
          "Description": "Handheld device uses predictable TCP sequence numbers, allowing spoofing or hijacking of TCP connections.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3612"
        },
        {
          "Reference": "CVE-2008-2433",
          "Description": "Web management console generates session IDs based on the login time, making it easier to conduct session hijacking.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2433"
        },
        {
          "Reference": "CVE-2008-0166",
          "Description": "SSL library uses a weak random number generator that only generates 65,536 unique keys.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0166"
        },
        {
          "Reference": "CVE-2008-2108",
          "Description": "Chain: insufficient precision causes extra zero bits to be assigned, reducing entropy for an API function that generates random numbers.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2108"
        },
        {
          "Reference": "CVE-2008-2108",
          "Description": "Chain: insufficient precision (CWE-1339) in random-number generator causes some zero bits to be reliably generated, reducing the amount of entropy (CWE-331)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2108"
        },
        {
          "Reference": "CVE-2008-2020",
          "Description": "CAPTCHA implementation does not produce enough different images, allowing bypass using a database of all possible checksums.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2020"
        },
        {
          "Reference": "CVE-2008-0087",
          "Description": "DNS client uses predictable DNS transaction IDs, allowing DNS spoofing.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0087"
        },
        {
          "Reference": "CVE-2008-0141",
          "Description": "Application generates passwords that are based on the time of day.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0141"
        }
      ],
      "FunctionalAreas": [
        "Cryptography",
        "Authentication",
        "Session Management"
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "331",
      "Name": "Insufficient Entropy",
      "Abstraction": "Base",
      "Description": "The product uses an algorithm or scheme that produces insufficient entropy, leaving patterns or clusters of values that are more likely to occur than others.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-0950",
          "Description": "Insufficiently random data used to generate session tokens using C rand(). Also, for certificate/key generation, uses a source that does not block when entropy is low.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0950"
        },
        {
          "Reference": "CVE-2008-2108",
          "Description": "Chain: insufficient precision (CWE-1339) in random-number generator causes some zero bits to be reliably generated, reducing the amount of entropy (CWE-331)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2108"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "332",
      "Name": "Insufficient Entropy in PRNG",
      "Abstraction": "Variant",
      "Description": "The lack of entropy available for, or used by, a Pseudo-Random Number Generator (PRNG) can be a stability and security threat.",
      "ObservedExamples": [
        {
          "Reference": "[REF-1374]",
          "Description": "Chain: JavaScript-based cryptocurrency library can fall back to the insecure Math.random() function instead of reporting a failure (CWE-392), thus reducing the entropy (CWE-332) and leading to generation of non-unique cryptographic keys for Bitcoin wallets (CWE-1391)",
          "Link": "https://www.unciphered.com/blog/randstorm-you-cant-patch-a-house-of-cards"
        },
        {
          "Reference": "CVE-2019-1715",
          "Description": "security product has insufficient entropy in the DRBG, allowing collisions and private key discovery",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-1715"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "333",
      "Name": "Improper Handling of Insufficient Entropy in TRNG",
      "Abstraction": "Variant",
      "Description": "True random number generators (TRNG) generally have a limited source of entropy and therefore can fail or block.",
      "ExtendedDescription": "The rate at which true random numbers can be generated is limited. It is important that one uses them only when they are needed for security.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "334",
      "Name": "Small Space of Random Values",
      "Abstraction": "Base",
      "Description": "The number of possible random values is smaller than needed by the product, making it more susceptible to brute force attacks.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0583",
          "Description": "Product uses 5 alphanumeric characters for filenames of expense claim reports, stored under web root.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0583"
        },
        {
          "Reference": "CVE-2002-0903",
          "Description": "Product uses small number of random numbers for a code to approve an action, and also uses predictable new user IDs, allowing attackers to hijack new accounts.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0903"
        },
        {
          "Reference": "CVE-2003-1230",
          "Description": "SYN cookies implementation only uses 32-bit keys, making it easier to brute force ISN.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1230"
        },
        {
          "Reference": "CVE-2004-0230",
          "Description": "Complex predictability / randomness (reduced space).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0230"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "335",
      "Name": "Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
      "Abstraction": "Base",
      "Description": "The product uses a Pseudo-Random Number Generator (PRNG) but does not correctly manage seeds.",
      "ExtendedDescription": "\n\n PRNGs are deterministic and, while their output appears random, they cannot actually create entropy. They rely on cryptographically secure and unique seeds for entropy so proper seeding is critical to the secure operation of the PRNG.\n\n\n Management of seeds could be broken down into two main areas: \n\n\n  -  (1) protecting seeds as cryptographic material (such as a cryptographic key); \n\n  -  (2) whenever possible, using a uniquely generated seed from a cryptographically secure source \n\n PRNGs require a seed as input to generate a stream of numbers that are functionally indistinguishable from random numbers. While the output is, in many cases, sufficient for cryptographic uses, the output of any PRNG is directly determined by the seed provided as input. If the seed can be ascertained by a third party, the entire output of the PRNG can be made known to them. As such, the seed should be kept secret and should ideally not be able to be guessed. For example, the current time may be a poor seed. Knowing the approximate time the PRNG was seeded greatly reduces the possible key space. \n\n Seeds do not necessarily need to be unique, but reusing seeds may open up attacks if the seed is discovered. \n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-7010",
          "Description": "Cloud application on Kubernetes generates passwords using a weak random number generator based on deployment time.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-7010"
        },
        {
          "Reference": "CVE-2019-11495",
          "Description": "server uses erlang:now() to seed the PRNG, which results in a small search space for potential random seeds",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-11495"
        },
        {
          "Reference": "CVE-2018-12520",
          "Description": "Product's PRNG is not seeded for the generation of session IDs",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-12520"
        },
        {
          "Reference": "CVE-2016-10180",
          "Description": "Router's PIN generation is based on rand(time(0)) seeding.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2016-10180"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "336",
      "Name": "Same Seed in Pseudo-Random Number Generator (PRNG)",
      "Abstraction": "Variant",
      "Description": "A Pseudo-Random Number Generator (PRNG) uses the same seed each time the product is initialized.",
      "ExtendedDescription": "Given the deterministic nature of PRNGs, using the same seed for each initialization will lead to the same output in the same order. If an attacker can guess (or knows) the seed, then the attacker may be able to determine the random numbers that will be produced from the PRNG.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-39218",
          "Description": "SDK for JavaScript app builder for serverless code uses the same fixed seed for a PRNG, allowing cryptography bypass",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-39218"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "337",
      "Name": "Predictable Seed in Pseudo-Random Number Generator (PRNG)",
      "Abstraction": "Variant",
      "Description": "A Pseudo-Random Number Generator (PRNG) is initialized from a predictable seed, such as the process ID or system time.",
      "ExtendedDescription": "The use of predictable seeds significantly reduces the number of possible seeds that an attacker would need to test in order to predict which random numbers will be generated by the PRNG.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-7010",
          "Description": "Cloud application on Kubernetes generates passwords using a weak random number generator based on deployment time.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-7010"
        },
        {
          "Reference": "CVE-2019-11495",
          "Description": "server uses erlang:now() to seed the PRNG, which results in a small search space for potential random seeds",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-11495"
        },
        {
          "Reference": "CVE-2008-0166",
          "Description": "The removal of a couple lines of code caused Debian's OpenSSL Package to only use the current process ID for seeding a PRNG",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0166"
        },
        {
          "Reference": "CVE-2016-10180",
          "Description": "Router's PIN generation is based on rand(time(0)) seeding.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2016-10180"
        },
        {
          "Reference": "CVE-2018-9057",
          "Description": "cloud provider product uses a non-cryptographically secure PRNG and seeds it with the current time",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-9057"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "338",
      "Name": "Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
      "Abstraction": "Base",
      "Description": "The product uses a Pseudo-Random Number Generator (PRNG) in a security context, but the PRNG's algorithm is not cryptographically strong.",
      "ExtendedDescription": "\n\nWhen a non-cryptographic PRNG is used in a cryptographic context, it can expose the cryptography to certain types of attacks.\n\n\nOften a pseudo-random number generator (PRNG) is not designed for cryptography. Sometimes a mediocre source of randomness is sufficient or preferable for algorithms that use random numbers. Weak generators generally take less processing power and/or do not use the precious, finite, entropy sources on a system. While such PRNGs might have very useful features, these same features could be used to break the cryptography.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-3692",
          "Description": "PHP framework uses mt_rand() function (Marsenne Twister) when generating tokens",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-3692"
        },
        {
          "Reference": "CVE-2009-3278",
          "Description": "Crypto product uses rand() library function to generate a recovery key, making it easier to conduct brute force attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3278"
        },
        {
          "Reference": "CVE-2009-3238",
          "Description": "Random number generator can repeatedly generate the same value.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3238"
        },
        {
          "Reference": "CVE-2009-2367",
          "Description": "Web application generates predictable session IDs, allowing session hijacking.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2367"
        },
        {
          "Reference": "CVE-2008-0166",
          "Description": "SSL library uses a weak random number generator that only generates 65,536 unique keys.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0166"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "339",
      "Name": "Small Seed Space in PRNG",
      "Abstraction": "Variant",
      "Description": "A Pseudo-Random Number Generator (PRNG) uses a relatively small seed space, which makes it more susceptible to brute force attacks.",
      "ExtendedDescription": "PRNGs are entirely deterministic once seeded, so it should be extremely difficult to guess the seed. If an attacker can collect the outputs of a PRNG and then brute force the seed by trying every possibility to see which seed matches the observed output, then the attacker will know the output of any subsequent calls to the PRNG. A small seed space implies that the attacker will have far fewer possible values to try to exhaust all possibilities.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-10908",
          "Description": "product generates passwords via org.apache.commons.lang.RandomStringUtils, which uses java.util.Random internally. This PRNG has only a 48-bit seed.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-10908"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "34",
      "Name": "Path Traversal: '....//'",
      "Abstraction": "Variant",
      "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '....//' (doubled dot dot slash) sequences that can resolve to a location that is outside of that directory.",
      "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nThe '....//' manipulation is useful for bypassing some path traversal protection schemes. If \"../\" is filtered in a sequential fashion, as done by some regular expression engines, then \"....//\" can collapse into the \"../\" unsafe value (CWE-182). It could also be useful when \"..\" is removed, if the operating system treats \"//\" and \"/\" as equivalent.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-1670",
          "Description": "Mail server allows remote attackers to create arbitrary directories via a \"..\" or rename arbitrary files via a \"....//\" in user supplied parameters.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1670"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "340",
      "Name": "Generation of Predictable Numbers or Identifiers",
      "Abstraction": "Class",
      "Description": "The product uses a scheme that generates numbers or identifiers that are more predictable than required.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-29330",
          "Description": "Product for administering PBX systems uses predictable identifiers and timestamps for filenames (CWE-340) which allows attackers to access files via direct request (CWE-425).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29330"
        },
        {
          "Reference": "CVE-2001-1141",
          "Description": "PRNG allows attackers to use the output of small PRNG requests to determine the internal state information, which could be used by attackers to predict future pseudo-random numbers.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1141"
        },
        {
          "Reference": "CVE-1999-0074",
          "Description": "Listening TCP ports are sequentially allocated, allowing spoofing attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0074"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "341",
      "Name": "Predictable from Observable State",
      "Abstraction": "Base",
      "Description": "A number or object is predictable based on observations that the attacker can make about the state of the system or network, such as time, process ID, etc.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0389",
          "Description": "Mail server stores private mail messages with predictable filenames in a world-executable directory, which allows local users to read private mailing list archives.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0389"
        },
        {
          "Reference": "CVE-2001-1141",
          "Description": "PRNG allows attackers to use the output of small PRNG requests to determine the internal state information, which could be used by attackers to predict future pseudo-random numbers.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1141"
        },
        {
          "Reference": "CVE-2000-0335",
          "Description": "DNS resolver library uses predictable IDs, which allows a local attacker to spoof DNS query results.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0335"
        },
        {
          "Reference": "CVE-2005-1636",
          "Description": "MFV. predictable filename and insecure permissions allows file modification to execute SQL queries.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1636"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "342",
      "Name": "Predictable Exact Value from Previous Values",
      "Abstraction": "Base",
      "Description": "An exact value or random number can be precisely predicted by observing previous values.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1463",
          "Description": "Firewall generates easily predictable initial sequence numbers (ISN), which allows remote attackers to spoof connections.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1463"
        },
        {
          "Reference": "CVE-1999-0074",
          "Description": "Listening TCP ports are sequentially allocated, allowing spoofing attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0074"
        },
        {
          "Reference": "CVE-1999-0077",
          "Description": "Predictable TCP sequence numbers allow spoofing.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0077"
        },
        {
          "Reference": "CVE-2000-0335",
          "Description": "DNS resolver uses predictable IDs, allowing a local user to spoof DNS query results.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0335"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "343",
      "Name": "Predictable Value Range from Previous Values",
      "Abstraction": "Base",
      "Description": "The product's random number generator produces a series of values which, when observed, can be used to infer a relatively small range of possibilities for the next value that could be generated.",
      "ExtendedDescription": "The output of a random number generator should not be predictable based on observations of previous values. In some cases, an attacker cannot predict the exact value that will be produced next, but can narrow down the possibilities significantly. This reduces the amount of effort to perform a brute force attack. For example, suppose the product generates random numbers between 1 and 100, but it always produces a larger value until it reaches 100. If the generator produces an 80, then the attacker knows that the next value will be somewhere between 81 and 100. Instead of 100 possibilities, the attacker only needs to consider 20.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "344",
      "Name": "Use of Invariant Value in Dynamically Changing Context",
      "Abstraction": "Base",
      "Description": "The product uses a constant value, name, or reference, but this value can (or should) vary across different environments.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0980",
          "Description": "Component for web browser writes an error message to a known location, which can then be referenced by attackers to process HTML/script in a less restrictive context",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0980"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "345",
      "Name": "Insufficient Verification of Data Authenticity",
      "Abstraction": "Class",
      "Description": "The product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-30260",
          "Description": "Distributed Control System (DCS) does not sign firmware images and only relies on insecure checksums for integrity checks",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30260"
        },
        {
          "Reference": "CVE-2022-30267",
          "Description": "Distributed Control System (DCS) does not sign firmware images and only relies on insecure checksums for integrity checks",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30267"
        },
        {
          "Reference": "CVE-2022-30272",
          "Description": "Remote Terminal Unit (RTU) does not use signatures for firmware images and relies on insecure checksums",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30272"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "346",
      "Name": "Origin Validation Error",
      "Abstraction": "Class",
      "Description": "The product does not properly verify that the source of data or communication is valid.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-1218",
          "Description": "DNS server can accept DNS updates from hosts that it did not query, leading to cache poisoning",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1218"
        },
        {
          "Reference": "CVE-2005-0877",
          "Description": "DNS server can accept DNS updates from hosts that it did not query, leading to cache poisoning",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0877"
        },
        {
          "Reference": "CVE-2001-1452",
          "Description": "DNS server caches glue records received from non-delegated name servers",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1452"
        },
        {
          "Reference": "CVE-2005-2188",
          "Description": "user ID obtained from untrusted source (URL)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2188"
        },
        {
          "Reference": "CVE-2003-0174",
          "Description": "LDAP service does not verify if a particular attribute was set by the LDAP server",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0174"
        },
        {
          "Reference": "CVE-1999-1549",
          "Description": "product does not sufficiently distinguish external HTML from internal, potentially dangerous HTML, allowing bypass using special strings in the page title. Overlaps special elements.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1549"
        },
        {
          "Reference": "CVE-2003-0981",
          "Description": "product records the reverse DNS name of a visitor in the logs, allowing spoofing and resultant XSS.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0981"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "347",
      "Name": "Improper Verification of Cryptographic Signature",
      "Abstraction": "Base",
      "Description": "The product does not verify, or incorrectly verifies, the cryptographic signature for data.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1796",
          "Description": "Does not properly verify signatures for \"trusted\" entities.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1796"
        },
        {
          "Reference": "CVE-2005-2181",
          "Description": "Insufficient verification allows spoofing.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2181"
        },
        {
          "Reference": "CVE-2005-2182",
          "Description": "Insufficient verification allows spoofing.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2182"
        },
        {
          "Reference": "CVE-2002-1706",
          "Description": "Accepts a configuration file without a Message Integrity Check (MIC) signature.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1706"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "348",
      "Name": "Use of Less Trusted Source",
      "Abstraction": "Base",
      "Description": "The product has two different sources of the same data or information, but it uses the source that has less support for verification, is less trusted, or is less resistant to attack.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-0860",
          "Description": "Product uses IP address provided by a client, instead of obtaining it from the packet headers, allowing easier spoofing.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0860"
        },
        {
          "Reference": "CVE-2004-1950",
          "Description": "Web product uses the IP address in the X-Forwarded-For HTTP header instead of a server variable that uses the connecting IP address, allowing filter bypass.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1950"
        },
        {
          "Reference": "CVE-2001-0908",
          "Description": "Product logs IP address specified by the client instead of obtaining it from the packet headers, allowing information hiding.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0908"
        },
        {
          "Reference": "CVE-2006-1126",
          "Description": "PHP application uses IP address from X-Forwarded-For HTTP header, instead of REMOTE_ADDR.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-1126"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "349",
      "Name": "Acceptance of Extraneous Untrusted Data With Trusted Data",
      "Abstraction": "Base",
      "Description": "The product, when processing trusted data, accepts any untrusted data that is also included with the trusted data, treating the untrusted data as if it were trusted.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0018",
          "Description": "Does not verify that trusted entity is authoritative for all entities in its response.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0018"
        },
        {
          "Reference": "CVE-2006-5462",
          "Description": "use of extra data in a signature allows certificate signature forging",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-5462"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "35",
      "Name": "Path Traversal: '.../...//'",
      "Abstraction": "Variant",
      "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '.../...//' (doubled triple dot slash) sequences that can resolve to a location that is outside of that directory.",
      "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nThe '.../...//' manipulation is useful for bypassing some path traversal protection schemes. If \"../\" is filtered in a sequential fashion, as done by some regular expression engines, then \".../...//\" can collapse into the \"../\" unsafe value (CWE-182). Removing the first \"../\" yields \"....//\"; the second removal yields \"../\". Depending on the algorithm, the product could be susceptible to CWE-34 but not CWE-35, or vice versa.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-2169",
          "Description": "chain: \".../...//\" bypasses protection mechanism using regexp's that remove \"../\" resulting in collapse into an unsafe value \"../\" (CWE-182) and resultant path traversal.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2169"
        },
        {
          "Reference": "CVE-2005-0202",
          "Description": "\".../....///\" bypasses regexp's that remove \"./\" and \"../\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0202"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "350",
      "Name": "Reliance on Reverse DNS Resolution for a Security-Critical Action",
      "Abstraction": "Variant",
      "Description": "The product performs reverse DNS resolution on an IP address to obtain the hostname and make a security decision, but it does not properly ensure that the IP address is truly associated with the hostname.",
      "ExtendedDescription": "\n\nSince DNS names can be easily spoofed or misreported, and it may be difficult for the product to detect if a trusted DNS server has been compromised, DNS names do not constitute a valid authentication mechanism.\n\n\nWhen the product performs a reverse DNS resolution for an IP address, if an attacker controls the DNS server for that IP address, then the attacker can cause the server to return an arbitrary hostname. As a result, the attacker may be able to bypass authentication, cause the wrong hostname to be recorded in log files to hide activities, or perform other attacks.\n\n\nAttackers can spoof DNS names by either (1) compromising a DNS server and modifying its records (sometimes called DNS cache poisoning), or (2) having legitimate control over a DNS server associated with their IP address.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-1488",
          "Description": "Does not do double-reverse lookup to prevent DNS spoofing.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1488"
        },
        {
          "Reference": "CVE-2001-1500",
          "Description": "Does not verify reverse-resolved hostnames in DNS.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1500"
        },
        {
          "Reference": "CVE-2000-1221",
          "Description": "Authentication bypass using spoofed reverse-resolved DNS hostnames.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1221"
        },
        {
          "Reference": "CVE-2002-0804",
          "Description": "Authentication bypass using spoofed reverse-resolved DNS hostnames.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0804"
        },
        {
          "Reference": "CVE-2001-1155",
          "Description": "Filter does not properly check the result of a reverse DNS lookup, which could allow remote attackers to bypass intended access restrictions via DNS spoofing.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1155"
        },
        {
          "Reference": "CVE-2004-0892",
          "Description": "Reverse DNS lookup used to spoof trusted content in intermediary.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0892"
        },
        {
          "Reference": "CVE-2003-0981",
          "Description": "Product records the reverse DNS name of a visitor in the logs, allowing spoofing and resultant XSS.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0981"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "351",
      "Name": "Insufficient Type Distinction",
      "Abstraction": "Base",
      "Description": "The product does not properly distinguish between different types of elements in a way that leads to insecure behavior.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-2260",
          "Description": "Browser user interface does not distinguish between user-initiated and synthetic events.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2260"
        },
        {
          "Reference": "CVE-2005-2801",
          "Description": "Product does not compare all required data in two separate elements, causing it to think they are the same, leading to loss of ACLs. Similar to Same Name error.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2801"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "352",
      "Name": "Cross-Site Request Forgery (CSRF)",
      "Abstraction": "Compound",
      "Description": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
      "ExtendedDescription": "When a web server is designed to receive a request from a client without any mechanism for verifying that it was intentionally sent, then it might be possible for an attacker to trick a client into making an unintentional request to the web server which will be treated as an authentic request. This can be done via a URL, image load, XMLHttpRequest, etc. and can result in exposure of data or unintended code execution.",
      "AlternateTerms": [
        {
          "Term": "Session Riding"
        },
        {
          "Term": "Cross Site Reference Forgery"
        },
        {
          "Term": "XSRF"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-1703",
          "Description": "Add user accounts via a URL in an img tag",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1703"
        },
        {
          "Reference": "CVE-2004-1995",
          "Description": "Add user accounts via a URL in an img tag",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1995"
        },
        {
          "Reference": "CVE-2004-1967",
          "Description": "Arbitrary code execution by specifying the code in a crafted img tag or URL",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1967"
        },
        {
          "Reference": "CVE-2004-1842",
          "Description": "Gain administrative privileges via a URL in an img tag",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1842"
        },
        {
          "Reference": "CVE-2005-1947",
          "Description": "Delete a victim's information via a URL or an img tag",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1947"
        },
        {
          "Reference": "CVE-2005-2059",
          "Description": "Change another user's settings via a URL or an img tag",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2059"
        },
        {
          "Reference": "CVE-2005-1674",
          "Description": "Perform actions as administrator via a URL or an img tag",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1674"
        },
        {
          "Reference": "CVE-2009-3520",
          "Description": "modify password for the administrator",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3520"
        },
        {
          "Reference": "CVE-2009-3022",
          "Description": "CMS allows modification of configuration via CSRF attack against the administrator",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3022"
        },
        {
          "Reference": "CVE-2009-3759",
          "Description": "web interface allows password changes or stopping a virtual machine via CSRF",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3759"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "353",
      "Name": "Missing Support for Integrity Check",
      "Abstraction": "Base",
      "Description": "The product uses a transmission protocol that does not include a mechanism for verifying the integrity of the data during transmission, such as a checksum.",
      "ExtendedDescription": "If integrity check values or \"checksums\" are omitted from a protocol, there is no way of determining if data has been corrupted in transmission. The lack of checksum functionality in a protocol removes the first application-level check of data that can be used. The end-to-end philosophy of checks states that integrity checks should be performed at the lowest level that they can be completely implemented. Excluding further sanity checks and input validation performed by applications, the protocol's checksum is the most important level of checksum, since it can be performed more completely than at any previous level and takes into account entire messages, as opposed to single packets.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "354",
      "Name": "Improper Validation of Integrity Check Value",
      "Abstraction": "Base",
      "Description": "The product does not validate or incorrectly validates the integrity check values or \"checksums\" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.",
      "ExtendedDescription": "Improper validation of checksums before use results in an unnecessary risk that can easily be mitigated. The protocol specification describes the algorithm used for calculating the checksum. It is then a simple matter of implementing the calculation and verifying that the calculated checksum and the received checksum match. Improper verification of the calculated checksum and the received checksum can lead to far greater consequences.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "356",
      "Name": "Product UI does not Warn User of Unsafe Actions",
      "Abstraction": "Base",
      "Description": "The product's user interface does not warn the user before undertaking an unsafe action on behalf of that user. This makes it easier for attackers to trick users into inflicting damage to their system.",
      "ExtendedDescription": "Product systems should warn users that a potentially dangerous action may occur if the user proceeds. For example, if the user downloads a file from an unknown source and attempts to execute the file on their machine, then the application's GUI can indicate that the file is unsafe.",
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-1055",
          "Description": "Product does not warn user when document contains certain dangerous functions or macros.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1055"
        },
        {
          "Reference": "CVE-1999-0794",
          "Description": "Product does not warn user when document contains certain dangerous functions or macros.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0794"
        },
        {
          "Reference": "CVE-2000-0277",
          "Description": "Product does not warn user when document contains certain dangerous functions or macros.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0277"
        },
        {
          "Reference": "CVE-2000-0517",
          "Description": "Product does not warn user about a certificate if it has already been accepted for a different site. Possibly resultant.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0517"
        },
        {
          "Reference": "CVE-2005-0602",
          "Description": "File extractor does not warn user if setuid/setgid files could be extracted. Overlaps privileges/permissions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0602"
        },
        {
          "Reference": "CVE-2000-0342",
          "Description": "E-mail client allows bypass of warning for dangerous attachments via a Windows .LNK file that refers to the attachment.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0342"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "357",
      "Name": "Insufficient UI Warning of Dangerous Operations",
      "Abstraction": "Base",
      "Description": "The user interface provides a warning to a user regarding dangerous or sensitive operations, but the warning is not noticeable enough to warrant attention.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-1099",
          "Description": "User not sufficiently warned if host key mismatch occurs",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1099"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "358",
      "Name": "Improperly Implemented Security Check for Standard",
      "Abstraction": "Base",
      "Description": "The product does not implement or incorrectly implements one or more security-relevant checks as specified by the design of a standardized algorithm, protocol, or technique.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0862",
          "Description": "Browser does not verify Basic Constraints of a certificate, even though it is required, allowing spoofing of trusted certificates.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0862"
        },
        {
          "Reference": "CVE-2002-0970",
          "Description": "Browser does not verify Basic Constraints of a certificate, even though it is required, allowing spoofing of trusted certificates.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0970"
        },
        {
          "Reference": "CVE-2002-1407",
          "Description": "Browser does not verify Basic Constraints of a certificate, even though it is required, allowing spoofing of trusted certificates.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1407"
        },
        {
          "Reference": "CVE-2005-0198",
          "Description": "Logic error prevents some required conditions from being enforced during Challenge-Response Authentication Mechanism with MD5 (CRAM-MD5).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0198"
        },
        {
          "Reference": "CVE-2004-2163",
          "Description": "Shared secret not verified in a RADIUS response packet, allowing authentication bypass by spoofing server replies.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2163"
        },
        {
          "Reference": "CVE-2005-2181",
          "Description": "Insufficient verification in VoIP implementation, in violation of standard, allows spoofed messages.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2181"
        },
        {
          "Reference": "CVE-2005-2182",
          "Description": "Insufficient verification in VoIP implementation, in violation of standard, allows spoofed messages.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2182"
        },
        {
          "Reference": "CVE-2005-2298",
          "Description": "Security check not applied to all components, allowing bypass.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2298"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "359",
      "Name": "Exposure of Private Personal Information to an Unauthorized Actor",
      "Abstraction": "Base",
      "Description": "The product does not properly prevent a person's private, personal information from being accessed by actors who either (1) are not explicitly authorized to access the information or (2) do not have the implicit consent of the person about whom the information is collected.",
      "ExtendedDescription": "\n\nThere are many types of sensitive information that products must protect from attackers, including system data, communications, configuration, business secrets, intellectual property, and an individual's personal (private) information. Private personal information may include a password, phone number, geographic location, personal messages, credit card number, etc. Private information is important to consider whether the person is a user of the product, or part of a data set that is processed by the product. An exposure of private information does not necessarily prevent the product from working properly, and in fact the exposure might be intended by the developer, e.g. as part of data sharing with other organizations. However, the exposure of personal private information can still be undesirable or explicitly prohibited by law or regulation.\n\n\nSome types of private information include:\n\n\n  - Government identifiers, such as Social Security Numbers\n\n  - Contact information, such as home addresses and telephone numbers\n\n  - Geographic location - where the user is (or was)\n\n  - Employment history\n\n  - Financial data - such as credit card numbers, salary, bank accounts, and debts\n\n  - Pictures, video, or audio\n\n  - Behavioral patterns - such as web surfing history, when certain activities are performed, etc.\n\n  - Relationships (and types of relationships) with others - family, friends, contacts, etc.\n\n  - Communications - e-mail addresses, private messages, text messages, chat logs, etc.\n\n  - Health - medical conditions, insurance status, prescription records\n\n  - Account passwords and other credentials\n\nSome of this information may be characterized as PII (Personally Identifiable Information), Protected Health Information (PHI), etc. Categories of private information may overlap or vary based on the intended usage or the policies and practices of a particular industry.\n\nSometimes data that is not labeled as private can have a privacy implication in a different context. For example, student identification numbers are usually not considered private because there is no explicit and publicly-available mapping to an individual student's personal information. However, if a school generates identification numbers based on student social security numbers, then the identification numbers should be considered private.\n",
      "AlternateTerms": [
        {
          "Term": "Privacy violation"
        },
        {
          "Term": "Privacy leak"
        },
        {
          "Term": "Privacy leakage"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "36",
      "Name": "Absolute Path Traversal",
      "Abstraction": "Base",
      "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize absolute path sequences such as \"/abs/path\" that can resolve to a location that is outside of that directory.",
      "ExtendedDescription": "This allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-31503",
          "Description": "Python package constructs filenames using an unsafe os.path.join call on untrusted input, allowing absolute path traversal because os.path.join resets the pathname to an absolute path that is specified as part of the input.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-31503"
        },
        {
          "Reference": "CVE-2002-1345",
          "Description": "Multiple FTP clients write arbitrary files via absolute paths in server responses",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1345"
        },
        {
          "Reference": "CVE-2001-1269",
          "Description": "ZIP file extractor allows full path",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1269"
        },
        {
          "Reference": "CVE-2002-1818",
          "Description": "Path traversal using absolute pathname",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1818"
        },
        {
          "Reference": "CVE-2002-1913",
          "Description": "Path traversal using absolute pathname",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1913"
        },
        {
          "Reference": "CVE-2005-2147",
          "Description": "Path traversal using absolute pathname",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2147"
        },
        {
          "Reference": "CVE-2000-0614",
          "Description": "Arbitrary files may be overwritten via compressed attachments that specify absolute path names for the decompressed output.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0614"
        },
        {
          "Reference": "CVE-1999-1263",
          "Description": "Mail client allows remote attackers to overwrite arbitrary files via an e-mail message containing a uuencoded attachment that specifies the full pathname for the file to be modified.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1263"
        },
        {
          "Reference": "CVE-2003-0753",
          "Description": "Remote attackers can read arbitrary files via a full pathname to the target file in config parameter.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0753"
        },
        {
          "Reference": "CVE-2002-1525",
          "Description": "Remote attackers can read arbitrary files via an absolute pathname.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1525"
        },
        {
          "Reference": "CVE-2001-0038",
          "Description": "Remote attackers can read arbitrary files by specifying the drive letter in the requested URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0038"
        },
        {
          "Reference": "CVE-2001-0255",
          "Description": "FTP server allows remote attackers to list arbitrary directories by using the \"ls\" command and including the drive letter name (e.g. C:) in the requested pathname.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0255"
        },
        {
          "Reference": "CVE-2001-0933",
          "Description": "FTP server allows remote attackers to list the contents of arbitrary drives via a ls command that includes the drive letter as an argument.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0933"
        },
        {
          "Reference": "CVE-2002-0466",
          "Description": "Server allows remote attackers to browse arbitrary directories via a full pathname in the arguments to certain dynamic pages.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0466"
        },
        {
          "Reference": "CVE-2002-1483",
          "Description": "Remote attackers can read arbitrary files via an HTTP request whose argument is a filename of the form \"C:\" (Drive letter), \"//absolute/path\", or \"..\" .",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1483"
        },
        {
          "Reference": "CVE-2004-2488",
          "Description": "FTP server read/access arbitrary files using \"C:\\\" filenames",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2488"
        },
        {
          "Reference": "CVE-2001-0687",
          "Description": "FTP server allows a remote attacker to retrieve privileged web server system information by specifying arbitrary paths in the UNC format (\\\\computername\\sharename).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0687"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "360",
      "Name": "Trust of System Event Data",
      "Abstraction": "Base",
      "Description": "Security based on event locations are insecure and can be spoofed.",
      "ExtendedDescription": "Events are a messaging system which may provide control data to programs listening for events. Events often do not have any type of authentication framework to allow them to be verified from a trusted source. Any application, in Windows, on a given desktop can send a message to any window on the same desktop. There is no authentication framework for these messages. Therefore, any message can be used to manipulate any process on the desktop if the process does not check the validity and safeness of those messages.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-0213",
          "Description": "Attacker uses Shatter attack to bypass GUI-enforced protection for CVE-2003-0908.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0213"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "362",
      "Name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "Abstraction": "Class",
      "Description": "The product contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently.",
      "ExtendedDescription": "\n\nThis can have security implications when the expected synchronization is in security-critical code, such as recording whether a user is authenticated or modifying important state information that should not be influenced by an outsider.\n\n\nA race condition occurs within concurrent environments, and is effectively a property of a code sequence. Depending on the context, a code sequence may be in the form of a function call, a small number of instructions, a series of program invocations, etc.\n\n\nA race condition violates these properties, which are closely related:\n\n\n  - Exclusivity - the code sequence is given exclusive access to the shared resource, i.e., no other code sequence can modify properties of the shared resource before the original sequence has completed execution.\n\n  - Atomicity - the code sequence is behaviorally atomic, i.e., no other thread or process can concurrently execute the same sequence of instructions (or a subset) against the same resource.\n\nA race condition exists when an \"interfering code sequence\" can still access the shared resource, violating exclusivity. Programmers may assume that certain code sequences execute too quickly to be affected by an interfering code sequence; when they are not, this violates atomicity. For example, the single \"x++\" statement may appear atomic at the code layer, but it is actually non-atomic at the instruction layer, since it involves a read (the original value of x), followed by a computation (x+1), followed by a write (save the result to x).\n\nThe interfering code sequence could be \"trusted\" or \"untrusted.\" A trusted interfering code sequence occurs within the product; it cannot be modified by the attacker, and it can only be invoked indirectly. An untrusted interfering code sequence can be authored directly by the attacker, and typically it is external to the vulnerable product.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-29527",
          "Description": "Go application for cloud management creates a world-writable sudoers file that allows local attackers to inject sudo rules and escalate privileges to root by winning a race condition.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29527"
        },
        {
          "Reference": "CVE-2021-1782",
          "Description": "Chain: improper locking (CWE-667) leads to race condition (CWE-362), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-1782"
        },
        {
          "Reference": "CVE-2021-0920",
          "Description": "Chain: mobile platform race condition (CWE-362) leading to use-after-free (CWE-416), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-0920"
        },
        {
          "Reference": "CVE-2020-6819",
          "Description": "Chain: race condition (CWE-362) leads to use-after-free (CWE-416), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-6819"
        },
        {
          "Reference": "CVE-2019-18827",
          "Description": "chain: JTAG interface is not disabled (CWE-1191) during ROM code execution, introducing a race condition (CWE-362) to extract encryption keys",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-18827"
        },
        {
          "Reference": "CVE-2019-1161",
          "Description": "Chain: race condition (CWE-362) in anti-malware product allows deletion of files by creating a junction (CWE-1386) and using hard links during the time window in which a temporary file is created and deleted.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-1161"
        },
        {
          "Reference": "CVE-2015-1743",
          "Description": "TOCTOU in sandbox process allows installation of untrusted browser add-ons by replacing a file after it has been verified, but before it is executed",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2015-1743"
        },
        {
          "Reference": "CVE-2014-8273",
          "Description": "Chain: chipset has a race condition (CWE-362) between when an interrupt handler detects an attempt to write-enable the BIOS (in violation of the lock bit), and when the handler resets the write-enable bit back to 0, allowing attackers to issue BIOS writes during the timing window [REF-1237].",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-8273"
        },
        {
          "Reference": "CVE-2008-5044",
          "Description": "Race condition leading to a crash by calling a hook removal procedure while other activities are occurring at the same time.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5044"
        },
        {
          "Reference": "CVE-2008-2958",
          "Description": "chain: time-of-check time-of-use (TOCTOU) race condition in program allows bypass of protection mechanism that was designed to prevent symlink attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2958"
        },
        {
          "Reference": "CVE-2008-1570",
          "Description": "chain: time-of-check time-of-use (TOCTOU) race condition in program allows bypass of protection mechanism that was designed to prevent symlink attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1570"
        },
        {
          "Reference": "CVE-2008-0058",
          "Description": "Unsynchronized caching operation enables a race condition that causes messages to be sent to a deallocated object.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0058"
        },
        {
          "Reference": "CVE-2008-0379",
          "Description": "Race condition during initialization triggers a buffer overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0379"
        },
        {
          "Reference": "CVE-2007-6599",
          "Description": "Daemon crash by quickly performing operations and undoing them, which eventually leads to an operation that does not acquire a lock.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-6599"
        },
        {
          "Reference": "CVE-2007-6180",
          "Description": "chain: race condition triggers NULL pointer dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-6180"
        },
        {
          "Reference": "CVE-2007-5794",
          "Description": "Race condition in library function could cause data to be sent to the wrong process.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5794"
        },
        {
          "Reference": "CVE-2007-3970",
          "Description": "Race condition in file parser leads to heap corruption.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3970"
        },
        {
          "Reference": "CVE-2008-5021",
          "Description": "chain: race condition allows attacker to access an object while it is still being initialized, causing software to access uninitialized memory.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5021"
        },
        {
          "Reference": "CVE-2009-4895",
          "Description": "chain: race condition for an argument value, possibly resulting in NULL dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-4895"
        },
        {
          "Reference": "CVE-2009-3547",
          "Description": "chain: race condition might allow resource to be released before operating on it, leading to NULL dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3547"
        },
        {
          "Reference": "CVE-2006-5051",
          "Description": "Chain: Signal handler contains too much functionality (CWE-828), introducing a race condition (CWE-362) that leads to a double free (CWE-415).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-5051"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "363",
      "Name": "Race Condition Enabling Link Following",
      "Abstraction": "Base",
      "Description": "The product checks the status of a file or directory before accessing it, which produces a race condition in which the file can be replaced with a link before the access is performed, causing the product to access the wrong file.",
      "ExtendedDescription": "While developers might expect that there is a very narrow time window between the time of check and time of use, there is still a race condition. An attacker could cause the product to slow down (e.g. with memory consumption), causing the time window to become larger. Alternately, in some situations, the attacker could win the race by performing a large number of attacks.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "364",
      "Name": "Signal Handler Race Condition",
      "Abstraction": "Base",
      "Description": "The product uses a signal handler that introduces a race condition.",
      "ExtendedDescription": "\n\nRace conditions frequently occur in signal handlers, since signal handlers support asynchronous actions. These race conditions have a variety of root causes and symptoms. Attackers may be able to exploit a signal handler race condition to cause the product state to be corrupted, possibly leading to a denial of service or even code execution.\n\n\nThese issues occur when non-reentrant functions, or state-sensitive actions occur in the signal handler, where they may be called at any time. These behaviors can violate assumptions being made by the \"regular\" code that is interrupted, or by other signal handlers that may also be invoked. If these functions are called at an inopportune moment - such as while a non-reentrant function is already running - memory corruption could occur that may be exploitable for code execution. Another signal race condition commonly found occurs when free is called within a signal handler, resulting in a double free and therefore a write-what-where condition. Even if a given pointer is set to NULL after it has been freed, a race condition still exists between the time the memory was freed and the pointer was set to NULL. This is especially problematic if the same signal handler has been set for more than one signal -- since it means that the signal handler itself may be reentered.\n\n\nThere are several known behaviors related to signal handlers that have received the label of \"signal handler race condition\":\n\n\n  - Shared state (e.g. global data or static variables) that are accessible to both a signal handler and \"regular\" code\n\n  - Shared state between a signal handler and other signal handlers\n\n  - Use of non-reentrant functionality within a signal handler - which generally implies that shared state is being used. For example, malloc() and free() are non-reentrant because they may use global or static data structures for managing memory, and they are indirectly used by innocent-seeming functions such as syslog(); these functions could be exploited for memory corruption and, possibly, code execution.\n\n  - Association of the same signal handler function with multiple signals - which might imply shared state, since the same code and resources are accessed. For example, this can be a source of double-free and use-after-free weaknesses.\n\n  - Use of setjmp and longjmp, or other mechanisms that prevent a signal handler from returning control back to the original functionality\n\n  - While not technically a race condition, some signal handlers are designed to be called at most once, and being called more than once can introduce security problems, even when there are not any concurrent calls to the signal handler. This can be a source of double-free and use-after-free weaknesses.\n\nSignal handler vulnerabilities are often classified based on the absence of a specific protection mechanism, although this style of classification is discouraged in CWE because programmers often have a choice of several different mechanisms for addressing the weakness. Such protection mechanisms may preserve exclusivity of access to the shared resource, and behavioral atomicity for the relevant code:\n\n  - Avoiding shared state\n\n  - Using synchronization in the signal handler\n\n  - Using synchronization in the regular code\n\n  - Disabling or masking other signals, which provides atomicity (which effectively ensures exclusivity)\n\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-0035",
          "Description": "Signal handler does not disable other signal handlers, allowing it to be interrupted, causing other functionality to access files/etc. with raised privileges",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0035"
        },
        {
          "Reference": "CVE-2001-0905",
          "Description": "Attacker can send a signal while another signal handler is already running, leading to crash or execution with root privileges",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0905"
        },
        {
          "Reference": "CVE-2001-1349",
          "Description": "unsafe calls to library functions from signal handler",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1349"
        },
        {
          "Reference": "CVE-2004-0794",
          "Description": "SIGURG can be used to remotely interrupt signal handler; other variants exist",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0794"
        },
        {
          "Reference": "CVE-2004-2259",
          "Description": "SIGCHLD signal to FTP server can cause crash under heavy load while executing non-reentrant functions like malloc/free.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2259"
        }
      ],
      "FunctionalAreas": [
        "Signals",
        "Interprocess Communication"
      ],
      "AffectedResources": [
        "System Process"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "366",
      "Name": "Race Condition within a Thread",
      "Abstraction": "Base",
      "Description": "If two threads of execution use a resource simultaneously, there exists the possibility that resources may be used while invalid, in turn making the state of execution undefined.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-2621",
          "Description": "Chain: two threads in a web browser use the same resource (CWE-366), but one of those threads can destroy the resource before the other has completed (CWE-416).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-2621"
        }
      ],
      "AffectedResources": [
        "System Process"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "367",
      "Name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "Abstraction": "Base",
      "Description": "The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.",
      "ExtendedDescription": "This weakness can be security-relevant when an attacker can influence the state of the resource between check and use. This can happen with shared resources such as files, memory, or even variables in multithreaded programs.",
      "AlternateTerms": [
        {
          "Term": "TOCTTOU",
          "Description": "The TOCTTOU acronym expands to \"Time Of Check To Time Of Use\"."
        },
        {
          "Term": "TOCCTOU",
          "Description": "The TOCCTOU acronym is most likely a typo of TOCTTOU, but it has been used in some influential documents, so the typo is repeated fairly frequently."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2015-1743",
          "Description": "TOCTOU in sandbox process allows installation of untrusted browser add-ons by replacing a file after it has been verified, but before it is executed",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2015-1743"
        },
        {
          "Reference": "CVE-2003-0813",
          "Description": "A multi-threaded race condition allows remote attackers to cause a denial of service (crash or reboot) by causing two threads to process the same RPC request, which causes one thread to use memory after it has been freed.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0813"
        },
        {
          "Reference": "CVE-2004-0594",
          "Description": "PHP flaw allows remote attackers to execute arbitrary code by aborting execution before the initialization of key data structures is complete.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0594"
        },
        {
          "Reference": "CVE-2008-2958",
          "Description": "chain: time-of-check time-of-use (TOCTOU) race condition in program allows bypass of protection mechanism that was designed to prevent symlink attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2958"
        },
        {
          "Reference": "CVE-2008-1570",
          "Description": "chain: time-of-check time-of-use (TOCTOU) race condition in program allows bypass of protection mechanism that was designed to prevent symlink attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1570"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "368",
      "Name": "Context Switching Race Condition",
      "Abstraction": "Base",
      "Description": "A product performs a series of non-atomic actions to switch between contexts that cross privilege or other security boundaries, but a race condition allows an attacker to modify or misrepresent the product's behavior during the switch.",
      "ExtendedDescription": "This is commonly seen in web browser vulnerabilities in which the attacker can perform certain actions while the browser is transitioning from a trusted to an untrusted domain, or vice versa, and the browser performs the actions on one domain using the trust level and resources of the other domain.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2009-1837",
          "Description": "Chain: race condition (CWE-362) from improper handling of a page transition in web client while an applet is loading (CWE-368) leads to use after free (CWE-416)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1837"
        },
        {
          "Reference": "CVE-2004-2260",
          "Description": "Browser updates address bar as soon as user clicks on a link instead of when the page has loaded, allowing spoofing by redirecting to another page using onUnload method. ** this is one example of the role of \"hooks\" and context switches, and should be captured somehow - also a race condition of sorts **",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2260"
        },
        {
          "Reference": "CVE-2004-0191",
          "Description": "XSS when web browser executes Javascript events in the context of a new page while it's being loaded, allowing interaction with previous page in different domain.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0191"
        },
        {
          "Reference": "CVE-2004-2491",
          "Description": "Web browser fills in address bar of clicked-on link before page has been loaded, and doesn't update afterward.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2491"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "369",
      "Name": "Divide By Zero",
      "Abstraction": "Base",
      "Description": "The product divides a value by zero.",
      "ExtendedDescription": "This weakness typically occurs when an unexpected value is provided to the product, or if an error occurs that is not properly detected. It frequently occurs in calculations involving physical dimensions such as size, length, width, and height.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-3268",
          "Description": "Invalid size value leads to divide by zero.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3268"
        },
        {
          "Reference": "CVE-2007-2723",
          "Description": "\"Empty\" content triggers divide by zero.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-2723"
        },
        {
          "Reference": "CVE-2007-2237",
          "Description": "Height value of 0 triggers divide by zero.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-2237"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "37",
      "Name": "Path Traversal: '/absolute/pathname/here'",
      "Abstraction": "Variant",
      "Description": "The product accepts input in the form of a slash absolute path ('/absolute/pathname/here') without appropriate validation, which can allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1345",
          "Description": "Multiple FTP clients write arbitrary files via absolute paths in server responses",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1345"
        },
        {
          "Reference": "CVE-2001-1269",
          "Description": "ZIP file extractor allows full path",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1269"
        },
        {
          "Reference": "CVE-2002-1818",
          "Description": "Path traversal using absolute pathname",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1818"
        },
        {
          "Reference": "CVE-2002-1913",
          "Description": "Path traversal using absolute pathname",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1913"
        },
        {
          "Reference": "CVE-2005-2147",
          "Description": "Path traversal using absolute pathname",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2147"
        },
        {
          "Reference": "CVE-2000-0614",
          "Description": "Arbitrary files may be overwritten via compressed attachments that specify absolute path names for the decompressed output.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0614"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "370",
      "Name": "Missing Check for Certificate Revocation after Initial Check",
      "Abstraction": "Variant",
      "Description": "The product does not check the revocation status of a certificate after its initial revocation check, which can cause the product to perform privileged actions even after the certificate is revoked at a later time.",
      "ExtendedDescription": "If the revocation status of a certificate is not checked before each action that requires privileges, the system may be subject to a race condition. If a certificate is revoked after the initial check, all subsequent actions taken with the owner of the revoked certificate will lose all benefits guaranteed by the certificate. In fact, it is almost certain that the use of a revoked certificate indicates malicious activity.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "372",
      "Name": "Incomplete Internal State Distinction",
      "Abstraction": "Base",
      "Description": "The product does not properly determine which state it is in, causing it to assume it is in state X when in fact it is in state Y, causing it to perform incorrect operations in a security-relevant manner.",
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "374",
      "Name": "Passing Mutable Objects to an Untrusted Method",
      "Abstraction": "Base",
      "Description": "The product sends non-cloned mutable data as an argument to a method or function.",
      "ExtendedDescription": "The function or method that has been called can alter or delete the mutable data. This could violate assumptions that the calling function has made about its state. In situations where unknown code is called with references to mutable data, this external code could make changes to the data sent. If this data was not previously cloned, the modified data might not be valid in the context of execution.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "375",
      "Name": "Returning a Mutable Object to an Untrusted Caller",
      "Abstraction": "Base",
      "Description": "Sending non-cloned mutable data as a return value may result in that data being altered or deleted by the calling function.",
      "ExtendedDescription": "In situations where functions return references to mutable data, it is possible that the external code which called the function may make changes to the data sent. If this data was not previously cloned, the class will then be using modified data which may violate assumptions about its internal state.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "377",
      "Name": "Insecure Temporary File",
      "Abstraction": "Class",
      "Description": "Creating and using insecure temporary files can leave application and system data vulnerable to attack.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-41954",
          "Description": "A library uses the Java File.createTempFile() method which creates a file with \"-rw-r--r--\" default permissions on Unix-like operating systems",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-41954"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "378",
      "Name": "Creation of Temporary File With Insecure Permissions",
      "Abstraction": "Base",
      "Description": "Opening temporary files without appropriate measures or controls can leave the file, its contents and any function that it impacts vulnerable to attack.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-24823",
          "Description": "A network application framework uses the Java function createTempFile(), which will create a file that is readable by other local users of the system",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-24823"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "379",
      "Name": "Creation of Temporary File in Directory with Insecure Permissions",
      "Abstraction": "Base",
      "Description": "The product creates a temporary file in a directory whose permissions allow unintended actors to determine the file's existence or otherwise access that file.",
      "ExtendedDescription": "On some operating systems, the fact that the temporary file exists may be apparent to any user with sufficient privileges to access that directory. Since the file is visible, the application that is using the temporary file could be known. If one has access to list the processes on the system, the attacker has gained information about what the user is doing at that time. By correlating this with the applications the user is running, an attacker could potentially discover what a user's actions are. From this, higher levels of security could be breached.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-27818",
          "Description": "A hotkey daemon written in Rust creates a domain socket file underneath /tmp, which is accessible by any user.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-27818"
        },
        {
          "Reference": "CVE-2021-21290",
          "Description": "A Java-based application for a rapid-development framework uses File.createTempFile() to create a random temporary file with insecure default permissions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-21290"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "38",
      "Name": "Path Traversal: '\\absolute\\pathname\\here'",
      "Abstraction": "Variant",
      "Description": "The product accepts input in the form of a backslash absolute path ('\\absolute\\pathname\\here') without appropriate validation, which can allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-1263",
          "Description": "Mail client allows remote attackers to overwrite arbitrary files via an e-mail message containing a uuencoded attachment that specifies the full pathname for the file to be modified.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1263"
        },
        {
          "Reference": "CVE-2003-0753",
          "Description": "Remote attackers can read arbitrary files via a full pathname to the target file in config parameter.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0753"
        },
        {
          "Reference": "CVE-2002-1525",
          "Description": "Remote attackers can read arbitrary files via an absolute pathname.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1525"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "382",
      "Name": "J2EE Bad Practices: Use of System.exit()",
      "Abstraction": "Variant",
      "Description": "A J2EE application uses System.exit(), which also shuts down its container.",
      "ExtendedDescription": "It is never a good idea for a web application to attempt to shut down the application container. Access to a function that can shut down the application is an avenue for Denial of Service (DoS) attacks.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "383",
      "Name": "J2EE Bad Practices: Direct Use of Threads",
      "Abstraction": "Variant",
      "Description": "Thread management in a Web application is forbidden in some circumstances and is always highly error prone.",
      "ExtendedDescription": "Thread management in a web application is forbidden by the J2EE standard in some circumstances and is always highly error prone. Managing threads is difficult and is likely to interfere in unpredictable ways with the behavior of the application container. Even without interfering with the container, thread management usually leads to bugs that are hard to detect and diagnose like deadlock, race conditions, and other synchronization errors.",
      "AffectedResources": [
        "System Process"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "384",
      "Name": "Session Fixation",
      "Abstraction": "Compound",
      "Description": "Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.",
      "ExtendedDescription": "\n\nSuch a scenario is commonly observed when:\n\n\n  - A web application authenticates a user without first invalidating the existing session, thereby continuing to use the session already associated with the user.\n\n  - An attacker is able to force a known session identifier on a user so that, once the user authenticates, the attacker has access to the authenticated session.\n\n  - The application or container uses predictable session identifiers.\n\nIn the generic exploit of session fixation vulnerabilities, an attacker creates a new session on a web application and records the associated session identifier. The attacker then causes the victim to associate, and possibly authenticate, against the server using that session identifier, giving the attacker access to the user's account through the active session.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-2820",
          "Description": "Website software for game servers does not proprerly terminate user sessions, allowing for possible session fixation",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-2820"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "385",
      "Name": "Covert Timing Channel",
      "Abstraction": "Base",
      "Description": "Covert timing channels convey information by modulating some aspect of system behavior over time, so that the program receiving the information can observe system behavior and infer protected information.",
      "ExtendedDescription": "\n\nIn some instances, knowing when data is transmitted between parties can provide a malicious user with privileged information. Also, externally monitoring the timing of operations can potentially reveal sensitive data. For example, a cryptographic operation can expose its internal state if the time it takes to perform the operation varies, based on the state.\n\n\nCovert channels are frequently classified as either storage or timing channels. Some examples of covert timing channels are the system's paging rate, the time a certain transaction requires to execute, and the time it takes to gain access to a shared bus.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "386",
      "Name": "Symbolic Name not Mapping to Correct Object",
      "Abstraction": "Base",
      "Description": "A constant symbolic reference to an object is used, even though the reference can resolve to a different object over time.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "39",
      "Name": "Path Traversal: 'C:dirname'",
      "Abstraction": "Variant",
      "Description": "The product accepts input that contains a drive letter or Windows volume letter ('C:dirname') that potentially redirects access to an unintended location or arbitrary file.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-0038",
          "Description": "Remote attackers can read arbitrary files by specifying the drive letter in the requested URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0038"
        },
        {
          "Reference": "CVE-2001-0255",
          "Description": "FTP server allows remote attackers to list arbitrary directories by using the \"ls\" command and including the drive letter name (e.g. C:) in the requested pathname.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0255"
        },
        {
          "Reference": "CVE-2001-0687",
          "Description": "FTP server allows a remote attacker to retrieve privileged system information by specifying arbitrary paths.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0687"
        },
        {
          "Reference": "CVE-2001-0933",
          "Description": "FTP server allows remote attackers to list the contents of arbitrary drives via a ls command that includes the drive letter as an argument.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0933"
        },
        {
          "Reference": "CVE-2002-0466",
          "Description": "Server allows remote attackers to browse arbitrary directories via a full pathname in the arguments to certain dynamic pages.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0466"
        },
        {
          "Reference": "CVE-2002-1483",
          "Description": "Remote attackers can read arbitrary files via an HTTP request whose argument is a filename of the form \"C:\" (Drive letter), \"//absolute/path\", or \"..\" .",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1483"
        },
        {
          "Reference": "CVE-2004-2488",
          "Description": "FTP server read/access arbitrary files using \"C:\\\" filenames",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2488"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "390",
      "Name": "Detection of Error Condition Without Action",
      "Abstraction": "Base",
      "Description": "The product detects a specific error, but takes no actions to handle the error.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-21820",
          "Description": "A GPU data center manager detects an error due to a malformed request but does not act on it, leading to memory corruption.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-21820"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "392",
      "Name": "Missing Report of Error Condition",
      "Abstraction": "Base",
      "Description": "The product encounters an error but does not provide a status code or return value to indicate that an error has occurred.",
      "ObservedExamples": [
        {
          "Reference": "[REF-1374]",
          "Description": "Chain: JavaScript-based cryptocurrency library can fall back to the insecure Math.random() function instead of reporting a failure (CWE-392), thus reducing the entropy (CWE-332) and leading to generation of non-unique cryptographic keys for Bitcoin wallets (CWE-1391)",
          "Link": "https://www.unciphered.com/blog/randstorm-you-cant-patch-a-house-of-cards"
        },
        {
          "Reference": "CVE-2004-0063",
          "Description": "Function returns \"OK\" even if another function returns a different status code than expected, leading to accepting an invalid PIN number.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0063"
        },
        {
          "Reference": "CVE-2002-1446",
          "Description": "Error checking routine in PKCS#11 library returns \"OK\" status even when invalid signature is detected, allowing spoofed messages.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1446"
        },
        {
          "Reference": "CVE-2002-0499",
          "Description": "Kernel function truncates long pathnames without generating an error, leading to operation on wrong directory.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0499"
        },
        {
          "Reference": "CVE-2005-2459",
          "Description": "Function returns non-error value when a particular erroneous condition is encountered, leading to resultant NULL dereference.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2459"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "393",
      "Name": "Return of Wrong Status Code",
      "Abstraction": "Base",
      "Description": "A function or operation returns an incorrect return value or status code that does not indicate an error, but causes the product to modify its behavior based on the incorrect result.",
      "ExtendedDescription": "This can lead to unpredictable behavior. If the function is used to make security-critical decisions or provide security-critical information, then the wrong status code can cause the product to assume that an action is safe, even when it is not.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2003-1132",
          "Description": "DNS server returns wrong response code for non-existent AAAA record, which effectively says that the domain is inaccessible.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1132"
        },
        {
          "Reference": "CVE-2001-1509",
          "Description": "Hardware-specific implementation of system call causes incorrect results from geteuid.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1509"
        },
        {
          "Reference": "CVE-2001-1559",
          "Description": "Chain: System call returns wrong value (CWE-393), leading to a resultant NULL dereference (CWE-476).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1559"
        },
        {
          "Reference": "CVE-2014-1266",
          "Description": "chain: incorrect \"goto\" in Apple SSL product bypasses certificate validation, allowing Adversary-in-the-Middle (AITM) attack (Apple \"goto fail\" bug). CWE-705 (Incorrect Control Flow Scoping) -> CWE-561 (Dead Code) -> CWE-295 (Improper Certificate Validation) -> CWE-393 (Return of Wrong Status Code) -> CWE-300 (Channel Accessible by Non-Endpoint).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-1266"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "394",
      "Name": "Unexpected Status Code or Return Value",
      "Abstraction": "Base",
      "Description": "The product does not properly check when a function or operation returns a value that is legitimate for the function, but is not expected by the product.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-1395",
          "Description": "Certain packets (zero byte and other lengths) cause a recvfrom call to produce an unexpected return code that causes a server's listening loop to exit.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1395"
        },
        {
          "Reference": "CVE-2002-2124",
          "Description": "Unchecked return code from recv() leads to infinite loop.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2124"
        },
        {
          "Reference": "CVE-2005-2553",
          "Description": "Kernel function does not properly handle when a null is returned by a function call, causing it to call another function that it shouldn't.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2553"
        },
        {
          "Reference": "CVE-2005-1858",
          "Description": "Memory not properly cleared when read() function call returns fewer bytes than expected.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1858"
        },
        {
          "Reference": "CVE-2000-0536",
          "Description": "Bypass access restrictions when connecting from IP whose DNS reverse lookup does not return a hostname.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0536"
        },
        {
          "Reference": "CVE-2001-0910",
          "Description": "Bypass access restrictions when connecting from IP whose DNS reverse lookup does not return a hostname.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0910"
        },
        {
          "Reference": "CVE-2004-2371",
          "Description": "Game server doesn't check return values for functions that handle text strings and associated size values.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2371"
        },
        {
          "Reference": "CVE-2005-1267",
          "Description": "Resultant infinite loop when function call returns -1 value.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1267"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "395",
      "Name": "Use of NullPointerException Catch to Detect NULL Pointer Dereference",
      "Abstraction": "Base",
      "Description": "Catching NullPointerException should not be used as an alternative to programmatic checks to prevent dereferencing a null pointer.",
      "ExtendedDescription": "\n\nProgrammers typically catch NullPointerException under three circumstances:\n\n\n  - The program contains a null pointer dereference. Catching the resulting exception was easier than fixing the underlying problem.\n\n  - The program explicitly throws a NullPointerException to signal an error condition.\n\n  - The code is part of a test harness that supplies unexpected input to the classes under test.\n\nOf these three circumstances, only the last is acceptable.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "396",
      "Name": "Declaration of Catch for Generic Exception",
      "Abstraction": "Base",
      "Description": "Catching overly broad exceptions promotes complex error handling code that is more likely to contain security vulnerabilities.",
      "ExtendedDescription": "Multiple catch blocks can get ugly and repetitive, but \"condensing\" catch blocks by catching a high-level class like Exception can obscure exceptions that deserve special treatment or that should not be caught at this point in the program. Catching an overly broad exception essentially defeats the purpose of a language's typed exceptions, and can become particularly dangerous if the program grows and begins to throw new types of exceptions. The new exception types will not receive any attention.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "397",
      "Name": "Declaration of Throws for Generic Exception",
      "Abstraction": "Base",
      "Description": "Throwing overly broad exceptions promotes complex error handling code that is more likely to contain security vulnerabilities.",
      "ExtendedDescription": "Declaring a method to throw Exception or Throwable makes it difficult for callers to perform proper error handling and error recovery. Java's exception mechanism, for example, is set up to make it easy for callers to anticipate what can go wrong and write code to handle each specific exceptional circumstance. Declaring that a method throws a generic form of exception defeats this system.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "40",
      "Name": "Path Traversal: '\\\\UNC\\share\\name\\' (Windows UNC Share)",
      "Abstraction": "Variant",
      "Description": "The product accepts input that identifies a Windows UNC share ('\\\\UNC\\share\\name') that potentially redirects access to an unintended location or arbitrary file.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-0687",
          "Description": "FTP server allows a remote attacker to retrieve privileged web server system information by specifying arbitrary paths in the UNC format (\\\\computername\\sharename).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0687"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "400",
      "Name": "Uncontrolled Resource Consumption",
      "Abstraction": "Class",
      "Description": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
      "ExtendedDescription": "\n\nLimited resources include memory, file system storage, database connection pool entries, and CPU. If an attacker can trigger the allocation of these limited resources, but the number or size of the resources is not controlled, then the attacker could cause a denial of service that consumes all available resources. This would prevent valid users from accessing the product, and it could potentially have an impact on the surrounding environment. For example, a memory exhaustion attack against an application could slow down the application as well as its host operating system.\n\n\nThere are at least three distinct scenarios which can commonly lead to resource exhaustion:\n\n\n  - Lack of throttling for the number of allocated resources\n\n  - Losing all references to a resource before reaching the shutdown stage\n\n  - Not closing/returning a resource after processing\n\nResource exhaustion problems are often result due to an incorrect implementation of the following situations:\n\n  - Error conditions and other exceptional circumstances.\n\n  - Confusion over which part of the program is responsible for releasing the resource.\n\n",
      "AlternateTerms": [
        {
          "Term": "Resource Exhaustion"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-21668",
          "Description": "Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-21668"
        },
        {
          "Reference": "CVE-2020-7218",
          "Description": "Go-based workload orchestrator does not limit resource usage with unauthenticated connections, allowing a DoS by flooding the service",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-7218"
        },
        {
          "Reference": "CVE-2020-3566",
          "Description": "Resource exhaustion in distributed OS because of \"insufficient\" IGMP queue management, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-3566"
        },
        {
          "Reference": "CVE-2009-2874",
          "Description": "Product allows attackers to cause a crash via a large number of connections.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2874"
        },
        {
          "Reference": "CVE-2009-1928",
          "Description": "Malformed request triggers uncontrolled recursion, leading to stack exhaustion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1928"
        },
        {
          "Reference": "CVE-2009-2858",
          "Description": "Chain: memory leak (CWE-404) leads to resource exhaustion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2858"
        },
        {
          "Reference": "CVE-2009-2726",
          "Description": "Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2726"
        },
        {
          "Reference": "CVE-2009-2540",
          "Description": "Large integer value for a length property in an object causes a large amount of memory allocation.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2540"
        },
        {
          "Reference": "CVE-2009-2299",
          "Description": "Web application firewall consumes excessive memory when an HTTP request contains a large Content-Length value but no POST data.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2299"
        },
        {
          "Reference": "CVE-2009-2054",
          "Description": "Product allows exhaustion of file descriptors when processing a large number of TCP packets.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2054"
        },
        {
          "Reference": "CVE-2008-5180",
          "Description": "Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5180"
        },
        {
          "Reference": "CVE-2008-2121",
          "Description": "TCP implementation allows attackers to consume CPU and prevent new connections using a TCP SYN flood attack.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2121"
        },
        {
          "Reference": "CVE-2008-2122",
          "Description": "Port scan triggers CPU consumption with processes that attempt to read data from closed sockets.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2122"
        },
        {
          "Reference": "CVE-2008-1700",
          "Description": "Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1700"
        },
        {
          "Reference": "CVE-2007-4103",
          "Description": "Product allows resource exhaustion via a large number of calls that do not complete a 3-way handshake.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4103"
        },
        {
          "Reference": "CVE-2006-1173",
          "Description": "Mail server does not properly handle deeply nested multipart MIME messages, leading to stack exhaustion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-1173"
        },
        {
          "Reference": "CVE-2007-0897",
          "Description": "Chain: anti-virus product encounters a malformed file but returns from a function without closing a file descriptor (CWE-775) leading to file descriptor consumption (CWE-400) and failed scans.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-0897"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "401",
      "Name": "Missing Release of Memory after Effective Lifetime",
      "Abstraction": "Variant",
      "Description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
      "ExtendedDescription": "This is often triggered by improper handling of malformed data or unexpectedly interrupted sessions. In some languages, developers are responsible for tracking memory allocation and releasing the memory. If there are no more pointers or references to the memory, then it can no longer be tracked and identified for release.",
      "AlternateTerms": [
        {
          "Term": "Memory Leak"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-3119",
          "Description": "Memory leak because function does not free() an element of a data structure.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3119"
        },
        {
          "Reference": "CVE-2004-0427",
          "Description": "Memory leak when counter variable is not decremented.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0427"
        },
        {
          "Reference": "CVE-2002-0574",
          "Description": "chain: reference count is not decremented, leading to memory leak in OS by sending ICMP packets.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0574"
        },
        {
          "Reference": "CVE-2005-3181",
          "Description": "Kernel uses wrong function to release a data structure, preventing data from being properly tracked by other code.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3181"
        },
        {
          "Reference": "CVE-2004-0222",
          "Description": "Memory leak via unknown manipulations as part of protocol test suite.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0222"
        },
        {
          "Reference": "CVE-2001-0136",
          "Description": "Memory leak via a series of the same command.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0136"
        }
      ],
      "FunctionalAreas": [
        "Memory Management"
      ],
      "AffectedResources": [
        "Memory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "402",
      "Name": "Transmission of Private Resources into a New Sphere ('Resource Leak')",
      "Abstraction": "Class",
      "Description": "The product makes resources available to untrusted parties when those resources are only intended to be accessed by the product.",
      "AlternateTerms": [
        {
          "Term": "Resource Leak"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2003-0740",
          "Description": "Server leaks a privileged file descriptor, allowing the server to be hijacked.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0740"
        },
        {
          "Reference": "CVE-2004-1033",
          "Description": "File descriptor leak allows read of restricted files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1033"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "403",
      "Name": "Exposure of File Descriptor to Unintended Control Sphere ('File Descriptor Leak')",
      "Abstraction": "Base",
      "Description": "A process does not close sensitive file descriptors before invoking a child process, which allows the child to perform unauthorized I/O operations using those descriptors.",
      "ExtendedDescription": "When a new process is forked or executed, the child process inherits any open file descriptors. When the child process has fewer privileges than the parent process, this might introduce a vulnerability if the child process can access the file descriptor but does not have the privileges to access the associated file.",
      "AlternateTerms": [
        {
          "Term": "File descriptor leak",
          "Description": "While this issue is frequently called a file descriptor leak, the \"leak\" term is often used in two different ways - exposure of a resource, or consumption of a resource. Use of this term could cause confusion."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2003-0740",
          "Description": "Server leaks a privileged file descriptor, allowing the server to be hijacked.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0740"
        },
        {
          "Reference": "CVE-2004-1033",
          "Description": "File descriptor leak allows read of restricted files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1033"
        },
        {
          "Reference": "CVE-2000-0094",
          "Description": "Access to restricted resource using modified file descriptor for stderr.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0094"
        },
        {
          "Reference": "CVE-2002-0638",
          "Description": "Open file descriptor used as alternate channel in complex race condition.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0638"
        },
        {
          "Reference": "CVE-2003-0489",
          "Description": "Program does not fully drop privileges after creating a file descriptor, which allows access to the descriptor via a separate vulnerability.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0489"
        },
        {
          "Reference": "CVE-2003-0937",
          "Description": "User bypasses restrictions by obtaining a file descriptor then calling setuid program, which does not close the descriptor.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0937"
        },
        {
          "Reference": "CVE-2004-2215",
          "Description": "Terminal manager does not properly close file descriptors, allowing attackers to access terminals of other users.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2215"
        },
        {
          "Reference": "CVE-2006-5397",
          "Description": "Module opens a file for reading twice, allowing attackers to read files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-5397"
        }
      ],
      "AffectedResources": [
        "System Process",
        "File or Directory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "404",
      "Name": "Improper Resource Shutdown or Release",
      "Abstraction": "Class",
      "Description": "The product does not release or incorrectly releases a resource before it is made available for re-use.",
      "ExtendedDescription": "When a resource is created or allocated, the developer is responsible for properly releasing the resource as well as accounting for all potential paths of expiration or invalidation, such as a set period of time or revocation.",
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-1127",
          "Description": "Does not shut down named pipe connections if malformed data is sent.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1127"
        },
        {
          "Reference": "CVE-2001-0830",
          "Description": "Sockets not properly closed when attacker repeatedly connects and disconnects from server.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0830"
        },
        {
          "Reference": "CVE-2002-1372",
          "Description": "Chain: Return values of file/socket operations are not checked (CWE-252), allowing resultant consumption of file descriptors (CWE-772).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1372"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "405",
      "Name": "Asymmetric Resource Consumption (Amplification)",
      "Abstraction": "Class",
      "Description": "The product does not properly control situations in which an adversary can cause the product to consume or produce excessive resources without requiring the adversary to invest equivalent work or otherwise prove authorization, i.e., the adversary's influence is \"asymmetric.\"",
      "ExtendedDescription": "This can lead to poor performance due to \"amplification\" of resource consumption, typically in a non-linear fashion. This situation is worsened if the product allows malicious users or attackers to consume more resources than their access level permits.",
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-0513",
          "Description": "Classic \"Smurf\" attack, using spoofed ICMP packets to broadcast addresses.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0513"
        },
        {
          "Reference": "CVE-2003-1564",
          "Description": "Parsing library allows XML bomb",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1564"
        },
        {
          "Reference": "CVE-2004-2458",
          "Description": "Tool creates directories before authenticating user.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2458"
        },
        {
          "Reference": "CVE-2020-10735",
          "Description": "Python has \"quadratic complexity\" issue when converting string to int with many digits in unexpected bases",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-10735"
        },
        {
          "Reference": "CVE-2020-5243",
          "Description": "server allows ReDOS with crafted User-Agent strings, due to overlapping capture groups that cause excessive backtracking.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-5243"
        },
        {
          "Reference": "CVE-2013-5211",
          "Description": "composite: NTP feature generates large responses (high amplification factor) with spoofed UDP source addresses.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2013-5211"
        },
        {
          "Reference": "CVE-2002-20001",
          "Description": "Diffie-Hellman (DHE) Key Agreement Protocol allows attackers to send arbitrary numbers that are not public keys, which causes the server to perform expensive, unnecessary computation of modular exponentiation.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-20001"
        },
        {
          "Reference": "CVE-2022-40735",
          "Description": "The Diffie-Hellman Key Agreement Protocol allows use of long exponents, which are more computationally expensive than using certain \"short exponents\" with particular properties.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-40735"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "406",
      "Name": "Insufficient Control of Network Message Volume (Network Amplification)",
      "Abstraction": "Class",
      "Description": "The product does not sufficiently monitor or control transmitted network traffic volume, so that an actor can cause the product to transmit more traffic than should be allowed for that actor.",
      "ExtendedDescription": "In the absence of a policy to restrict asymmetric resource consumption, the application or system cannot distinguish between legitimate transmissions and traffic intended to serve as an amplifying attack on target systems. Systems can often be configured to restrict the amount of traffic sent out on behalf of a client, based on the client's origin or access level. This is usually defined in a resource allocation policy. In the absence of a mechanism to keep track of transmissions, the system or application can be easily abused to transmit asymmetrically greater traffic than the request or client should be permitted to.",
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-0513",
          "Description": "Classic \"Smurf\" attack, using spoofed ICMP packets to broadcast addresses.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0513"
        },
        {
          "Reference": "CVE-1999-1379",
          "Description": "DNS query with spoofed source address causes more traffic to be returned to spoofed address than was sent by the attacker.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1379"
        },
        {
          "Reference": "CVE-2000-0041",
          "Description": "Large datagrams are sent in response to malformed datagrams.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0041"
        },
        {
          "Reference": "CVE-1999-1066",
          "Description": "Game server sends a large amount.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1066"
        },
        {
          "Reference": "CVE-2013-5211",
          "Description": "composite: NTP feature generates large responses (high amplification factor) with spoofed UDP source addresses.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2013-5211"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "407",
      "Name": "Inefficient Algorithmic Complexity",
      "Abstraction": "Class",
      "Description": "An algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.",
      "AlternateTerms": [
        {
          "Term": "Quadratic Complexity",
          "Description": "Used when the algorithmic complexity is related to the square of the number of inputs (N^2)"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-32617",
          "Description": "C++ library for image metadata has \"quadratic complexity\" issue with unnecessarily repetitive parsing each time an invalid character is encountered",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-32617"
        },
        {
          "Reference": "CVE-2020-10735",
          "Description": "Python has \"quadratic complexity\" issue when converting string to int with many digits in unexpected bases",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-10735"
        },
        {
          "Reference": "CVE-2020-5243",
          "Description": "server allows ReDOS with crafted User-Agent strings, due to overlapping capture groups that cause excessive backtracking.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-5243"
        },
        {
          "Reference": "CVE-2014-1474",
          "Description": "Perl-based email address parser has \"quadratic complexity\" issue via a string that does not contain a valid address",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-1474"
        },
        {
          "Reference": "CVE-2003-0244",
          "Description": "CPU consumption via inputs that cause many hash table collisions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0244"
        },
        {
          "Reference": "CVE-2003-0364",
          "Description": "CPU consumption via inputs that cause many hash table collisions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0364"
        },
        {
          "Reference": "CVE-2002-1203",
          "Description": "Product performs unnecessary processing before dropping an invalid packet.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1203"
        },
        {
          "Reference": "CVE-2001-1501",
          "Description": "CPU and memory consumption using many wildcards.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1501"
        },
        {
          "Reference": "CVE-2004-2527",
          "Description": "Product allows attackers to cause multiple copies of a program to be loaded more quickly than the program can detect that other copies are running, then exit. This type of error should probably have its own category, where teardown takes more time than initialization.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2527"
        },
        {
          "Reference": "CVE-2006-6931",
          "Description": "Network monitoring system allows remote attackers to cause a denial of service (CPU consumption and detection outage) via crafted network traffic, aka a \"backtracking attack.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6931"
        },
        {
          "Reference": "CVE-2006-3380",
          "Description": "Wiki allows remote attackers to cause a denial of service (CPU consumption) by performing a diff between large, crafted pages that trigger the worst case algorithmic complexity.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-3380"
        },
        {
          "Reference": "CVE-2006-3379",
          "Description": "Wiki allows remote attackers to cause a denial of service (CPU consumption) by performing a diff between large, crafted pages that trigger the worst case algorithmic complexity.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-3379"
        },
        {
          "Reference": "CVE-2005-2506",
          "Description": "OS allows attackers to cause a denial of service (CPU consumption) via crafted Gregorian dates.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2506"
        },
        {
          "Reference": "CVE-2005-1792",
          "Description": "Memory leak by performing actions faster than the software can clear them.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1792"
        }
      ],
      "FunctionalAreas": [
        "Cryptography"
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "408",
      "Name": "Incorrect Behavior Order: Early Amplification",
      "Abstraction": "Base",
      "Description": "The product allows an entity to perform a legitimate but expensive operation before authentication or authorization has taken place.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-2458",
          "Description": "Tool creates directories before authenticating user.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2458"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "409",
      "Name": "Improper Handling of Highly Compressed Data (Data Amplification)",
      "Abstraction": "Base",
      "Description": "The product does not handle or incorrectly handles a compressed input with a very high compression ratio that produces a large output.",
      "ExtendedDescription": "An example of data amplification is a \"decompression bomb,\" a small ZIP file that can produce a large amount of data when it is decompressed.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2009-1955",
          "Description": "XML bomb in web server module",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1955"
        },
        {
          "Reference": "CVE-2003-1564",
          "Description": "Parsing library allows XML bomb",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1564"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "41",
      "Name": "Improper Resolution of Path Equivalence",
      "Abstraction": "Base",
      "Description": "The product is vulnerable to file system contents disclosure through path equivalence. Path equivalence involves the use of special characters in file and directory names. The associated manipulations are intended to generate multiple names for the same object.",
      "ExtendedDescription": "Path equivalence is usually employed in order to circumvent access controls expressed using an incomplete set of file name or file path representations. This is different from path traversal, wherein the manipulations are performed to generate a name for a different object.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-1114",
          "Description": "Source code disclosure using trailing dot",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1114"
        },
        {
          "Reference": "CVE-2002-1986",
          "Description": "Source code disclosure using trailing dot",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1986"
        },
        {
          "Reference": "CVE-2004-2213",
          "Description": "Source code disclosure using trailing dot or trailing encoding space \"%20\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2213"
        },
        {
          "Reference": "CVE-2005-3293",
          "Description": "Source code disclosure using trailing dot",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3293"
        },
        {
          "Reference": "CVE-2004-0061",
          "Description": "Bypass directory access restrictions using trailing dot in URL",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0061"
        },
        {
          "Reference": "CVE-2000-1133",
          "Description": "Bypass directory access restrictions using trailing dot in URL",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1133"
        },
        {
          "Reference": "CVE-2001-1386",
          "Description": "Bypass check for \".lnk\" extension using \".lnk.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1386"
        },
        {
          "Reference": "CVE-2001-0693",
          "Description": "Source disclosure via trailing encoded space \"%20\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0693"
        },
        {
          "Reference": "CVE-2001-0778",
          "Description": "Source disclosure via trailing encoded space \"%20\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0778"
        },
        {
          "Reference": "CVE-2001-1248",
          "Description": "Source disclosure via trailing encoded space \"%20\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1248"
        },
        {
          "Reference": "CVE-2004-0280",
          "Description": "Source disclosure via trailing encoded space \"%20\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0280"
        },
        {
          "Reference": "CVE-2005-0622",
          "Description": "Source disclosure via trailing encoded space \"%20\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0622"
        },
        {
          "Reference": "CVE-2005-1656",
          "Description": "Source disclosure via trailing encoded space \"%20\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1656"
        },
        {
          "Reference": "CVE-2002-1603",
          "Description": "Source disclosure via trailing encoded space \"%20\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1603"
        },
        {
          "Reference": "CVE-2001-0054",
          "Description": "Multi-Factor Vulnerability (MFV). directory traversal and other issues in FTP server using Web encodings such as \"%20\"; certain manipulations have unusual side effects.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0054"
        },
        {
          "Reference": "CVE-2002-1451",
          "Description": "Trailing space (\"+\" in query string) leads to source code disclosure.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1451"
        },
        {
          "Reference": "CVE-2000-0293",
          "Description": "Filenames with spaces allow arbitrary file deletion when the product does not properly quote them; some overlap with path traversal.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0293"
        },
        {
          "Reference": "CVE-2001-1567",
          "Description": "\"+\" characters in query string converted to spaces before sensitive file/extension (internal space), leading to bypass of access restrictions to the file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1567"
        },
        {
          "Reference": "CVE-2002-0253",
          "Description": "Overlaps infoleak",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0253"
        },
        {
          "Reference": "CVE-2001-0446",
          "Description": "Application server allows remote attackers to read source code for .jsp files by appending a / to the requested URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0446"
        },
        {
          "Reference": "CVE-2004-0334",
          "Description": "Bypass Basic Authentication for files using trailing \"/\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0334"
        },
        {
          "Reference": "CVE-2001-0893",
          "Description": "Read sensitive files with trailing \"/\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0893"
        },
        {
          "Reference": "CVE-2001-0892",
          "Description": "Web server allows remote attackers to view sensitive files under the document root (such as .htpasswd) via a GET request with a trailing /.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0892"
        },
        {
          "Reference": "CVE-2004-1814",
          "Description": "Directory traversal vulnerability in server allows remote attackers to read protected files via .. (dot dot) sequences in an HTTP request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1814"
        },
        {
          "Reference": "CVE-2002-1483",
          "Description": "Read files with full pathname using multiple internal slash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1483"
        },
        {
          "Reference": "CVE-1999-1456",
          "Description": "Server allows remote attackers to read arbitrary files via a GET request with more than one leading / (slash) character in the filename.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1456"
        },
        {
          "Reference": "CVE-2004-0578",
          "Description": "Server allows remote attackers to read arbitrary files via leading slash (//) characters in a URL request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0578"
        },
        {
          "Reference": "CVE-2002-0275",
          "Description": "Server allows remote attackers to bypass authentication and read restricted files via an extra / (slash) in the requested URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0275"
        },
        {
          "Reference": "CVE-2004-1032",
          "Description": "Product allows local users to delete arbitrary files or create arbitrary empty files via a target filename with a large number of leading slash (/) characters.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1032"
        },
        {
          "Reference": "CVE-2002-1238",
          "Description": "Server allows remote attackers to bypass access restrictions for files via an HTTP request with a sequence of multiple / (slash) characters such as http://www.example.com///file/.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1238"
        },
        {
          "Reference": "CVE-2004-1878",
          "Description": "Product allows remote attackers to bypass authentication, obtain sensitive information, or gain access via a direct request to admin/user.pl preceded by // (double leading slash).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1878"
        },
        {
          "Reference": "CVE-2005-1365",
          "Description": "Server allows remote attackers to execute arbitrary commands via a URL with multiple leading \"/\" (slash) characters and \"..\" sequences.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1365"
        },
        {
          "Reference": "CVE-2000-1050",
          "Description": "Access directory using multiple leading slash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1050"
        },
        {
          "Reference": "CVE-2001-1072",
          "Description": "Bypass access restrictions via multiple leading slash, which causes a regular expression to fail.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1072"
        },
        {
          "Reference": "CVE-2004-0235",
          "Description": "Archive extracts to arbitrary files using multiple leading slash in filenames in the archive.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0235"
        },
        {
          "Reference": "CVE-2002-1078",
          "Description": "Directory listings in web server using multiple trailing slash",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1078"
        },
        {
          "Reference": "CVE-2004-0847",
          "Description": "ASP.NET allows remote attackers to bypass authentication for .aspx files in restricted directories via a request containing a (1) \"\\\" (backslash) or (2) \"%5C\" (encoded backslash), aka \"Path Validation Vulnerability.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0847"
        },
        {
          "Reference": "CVE-2000-0004",
          "Description": "Server allows remote attackers to read source code for executable files by inserting a . (dot) into the URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0004"
        },
        {
          "Reference": "CVE-2002-0304",
          "Description": "Server allows remote attackers to read password-protected files via a /./ in the HTTP request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0304"
        },
        {
          "Reference": "CVE-1999-1083",
          "Description": "Possibly (could be a cleansing error)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1083"
        },
        {
          "Reference": "CVE-2004-0815",
          "Description": "\"/./////etc\" cleansed to \".///etc\" then \"/etc\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0815"
        },
        {
          "Reference": "CVE-2002-0112",
          "Description": "Server allows remote attackers to view password protected files via /./ in the URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0112"
        },
        {
          "Reference": "CVE-2004-0696",
          "Description": "List directories using desired path and \"*\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0696"
        },
        {
          "Reference": "CVE-2002-0433",
          "Description": "List files in web server using \"*.ext\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0433"
        },
        {
          "Reference": "CVE-2001-1152",
          "Description": "Proxy allows remote attackers to bypass denylist restrictions and connect to unauthorized web servers by modifying the requested URL, including (1) a // (double slash), (2) a /SUBDIR/.. where the desired file is in the parentdir, (3) a /./, or (4) URL-encoded characters.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1152"
        },
        {
          "Reference": "CVE-2000-0191",
          "Description": "application check access for restricted URL before canonicalization",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0191"
        },
        {
          "Reference": "CVE-2005-1366",
          "Description": "CGI source disclosure using \"dirname/../cgi-bin\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1366"
        },
        {
          "Reference": "CVE-1999-0012",
          "Description": "Multiple web servers allow restriction bypass using 8.3 names instead of long names",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0012"
        },
        {
          "Reference": "CVE-2001-0795",
          "Description": "Source code disclosure using 8.3 file name.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0795"
        },
        {
          "Reference": "CVE-2005-0471",
          "Description": "Multi-Factor Vulnerability. Product generates temporary filenames using long filenames, which become predictable in 8.3 format.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0471"
        }
      ],
      "AffectedResources": [
        "File or Directory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "410",
      "Name": "Insufficient Resource Pool",
      "Abstraction": "Base",
      "Description": "The product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.",
      "ExtendedDescription": "Frequently the consequence is a \"flood\" of connection or sessions.",
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-1363",
          "Description": "Large number of locks on file exhausts the pool and causes crash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1363"
        },
        {
          "Reference": "CVE-2001-1340",
          "Description": "Product supports only one connection and does not disconnect a user who does not provide credentials.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1340"
        },
        {
          "Reference": "CVE-2002-0406",
          "Description": "Large number of connections without providing credentials allows connection exhaustion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0406"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "412",
      "Name": "Unrestricted Externally Accessible Lock",
      "Abstraction": "Base",
      "Description": "The product properly checks for the existence of a lock, but the lock can be externally controlled or influenced by an actor that is outside of the intended sphere of control.",
      "ExtendedDescription": "This prevents the product from acting on associated resources or performing other behaviors that are controlled by the presence of the lock. Relevant locks might include an exclusive lock or mutex, or modifying a shared resource that is treated as a lock. If the lock can be held for an indefinite period of time, then the denial of service could be permanent.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-0682",
          "Description": "Program can not execute when attacker obtains a mutex.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0682"
        },
        {
          "Reference": "CVE-2002-1914",
          "Description": "Program can not execute when attacker obtains a lock on a critical output file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1914"
        },
        {
          "Reference": "CVE-2002-1915",
          "Description": "Program can not execute when attacker obtains a lock on a critical output file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1915"
        },
        {
          "Reference": "CVE-2002-0051",
          "Description": "Critical file can be opened with exclusive read access by user, preventing application of security policy. Possibly related to improper permissions, large-window race condition.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0051"
        },
        {
          "Reference": "CVE-2000-0338",
          "Description": "Chain: predictable file names used for locking, allowing attacker to create the lock beforehand. Resultant from permissions and randomness.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0338"
        },
        {
          "Reference": "CVE-2000-1198",
          "Description": "Chain: Lock files with predictable names. Resultant from randomness.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1198"
        },
        {
          "Reference": "CVE-2002-1869",
          "Description": "Product does not check if it can write to a log file, allowing attackers to avoid logging by accessing the file using an exclusive lock. Overlaps unchecked error condition. This is not quite CWE-412, but close.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1869"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "413",
      "Name": "Improper Resource Locking",
      "Abstraction": "Base",
      "Description": "The product does not lock or does not correctly lock a resource when the product must have exclusive access to the resource.",
      "ExtendedDescription": "When a resource is not properly locked, an attacker could modify the resource while it is being operated on by the product. This might violate the product's assumption that the resource will not change, potentially leading to unexpected behaviors.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-20141",
          "Description": "Chain: an operating system kernel has insufficent resource locking (CWE-413) leading to a use after free (CWE-416).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-20141"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "414",
      "Name": "Missing Lock Check",
      "Abstraction": "Base",
      "Description": "A product does not check to see if a lock is present before performing sensitive operations on a resource.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-1056",
          "Description": "Product does not properly check if a lock is present, allowing other attackers to access functionality.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1056"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "415",
      "Name": "Double Free",
      "Abstraction": "Variant",
      "Description": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.",
      "ExtendedDescription": "When a program calls free() twice with the same argument, the program's memory management data structures become corrupted. This corruption can cause the program to crash or, in some circumstances, cause two later calls to malloc() to return the same pointer. If malloc() returns the same value twice and the program later gives the attacker control over the data that is written into this doubly-allocated memory, the program becomes vulnerable to a buffer overflow attack.",
      "AlternateTerms": [
        {
          "Term": "Double-free"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2006-5051",
          "Description": "Chain: Signal handler contains too much functionality (CWE-828), introducing a race condition (CWE-362) that leads to a double free (CWE-415).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-5051"
        },
        {
          "Reference": "CVE-2004-0642",
          "Description": "Double free resultant from certain error conditions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0642"
        },
        {
          "Reference": "CVE-2004-0772",
          "Description": "Double free resultant from certain error conditions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0772"
        },
        {
          "Reference": "CVE-2005-1689",
          "Description": "Double free resultant from certain error conditions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1689"
        },
        {
          "Reference": "CVE-2003-0545",
          "Description": "Double free from invalid ASN.1 encoding.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0545"
        },
        {
          "Reference": "CVE-2003-1048",
          "Description": "Double free from malformed GIF.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1048"
        },
        {
          "Reference": "CVE-2005-0891",
          "Description": "Double free from malformed GIF.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0891"
        },
        {
          "Reference": "CVE-2002-0059",
          "Description": "Double free from malformed compressed data.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0059"
        }
      ],
      "AffectedResources": [
        "Memory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "416",
      "Name": "Use After Free",
      "Abstraction": "Variant",
      "Diagram": "/data/images/CWE-416-Diagram.png",
      "Description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
      "AlternateTerms": [
        {
          "Term": "Dangling pointer",
          "Description": "a pointer that no longer points to valid memory, often after it has been freed"
        },
        {
          "Term": "UAF",
          "Description": "commonly used acronym for Use After Free"
        },
        {
          "Term": "Use-After-Free"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-20141",
          "Description": "Chain: an operating system kernel has insufficent resource locking (CWE-413) leading to a use after free (CWE-416).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-20141"
        },
        {
          "Reference": "CVE-2022-2621",
          "Description": "Chain: two threads in a web browser use the same resource (CWE-366), but one of those threads can destroy the resource before the other has completed (CWE-416).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-2621"
        },
        {
          "Reference": "CVE-2021-0920",
          "Description": "Chain: mobile platform race condition (CWE-362) leading to use-after-free (CWE-416), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-0920"
        },
        {
          "Reference": "CVE-2020-6819",
          "Description": "Chain: race condition (CWE-362) leads to use-after-free (CWE-416), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-6819"
        },
        {
          "Reference": "CVE-2010-4168",
          "Description": "Use-after-free triggered by closing a connection while data is still being transmitted.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-4168"
        },
        {
          "Reference": "CVE-2010-2941",
          "Description": "Improper allocation for invalid data leads to use-after-free.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2941"
        },
        {
          "Reference": "CVE-2010-2547",
          "Description": "certificate with a large number of Subject Alternate Names not properly handled in realloc, leading to use-after-free",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2547"
        },
        {
          "Reference": "CVE-2010-1772",
          "Description": "Timers are not disabled when a related object is deleted",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-1772"
        },
        {
          "Reference": "CVE-2010-1437",
          "Description": "Access to a \"dead\" object that is being cleaned up",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-1437"
        },
        {
          "Reference": "CVE-2010-1208",
          "Description": "object is deleted even with a non-zero reference count, and later accessed",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-1208"
        },
        {
          "Reference": "CVE-2010-0629",
          "Description": "use-after-free involving request containing an invalid version number",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-0629"
        },
        {
          "Reference": "CVE-2010-0378",
          "Description": "unload of an object that is currently being accessed by other functionality",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-0378"
        },
        {
          "Reference": "CVE-2010-0302",
          "Description": "incorrectly tracking a reference count leads to use-after-free",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-0302"
        },
        {
          "Reference": "CVE-2010-0249",
          "Description": "use-after-free related to use of uninitialized memory",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-0249"
        },
        {
          "Reference": "CVE-2010-0050",
          "Description": "HTML document with incorrectly-nested tags",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-0050"
        },
        {
          "Reference": "CVE-2009-3658",
          "Description": "Use after free in ActiveX object by providing a malformed argument to a method",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3658"
        },
        {
          "Reference": "CVE-2009-3616",
          "Description": "use-after-free by disconnecting during data transfer, or a message containing incorrect data types",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3616"
        },
        {
          "Reference": "CVE-2009-3553",
          "Description": "disconnect during a large data transfer causes incorrect reference count, leading to use-after-free",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3553"
        },
        {
          "Reference": "CVE-2009-2416",
          "Description": "use-after-free found by fuzzing",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2416"
        },
        {
          "Reference": "CVE-2009-1837",
          "Description": "Chain: race condition (CWE-362) from improper handling of a page transition in web client while an applet is loading (CWE-368) leads to use after free (CWE-416)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1837"
        },
        {
          "Reference": "CVE-2009-0749",
          "Description": "realloc generates new buffer and pointer, but previous pointer is still retained, leading to use after free",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0749"
        },
        {
          "Reference": "CVE-2010-3328",
          "Description": "Use-after-free in web browser, probably resultant from not initializing memory.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-3328"
        },
        {
          "Reference": "CVE-2008-5038",
          "Description": "use-after-free when one thread accessed memory that was freed by another thread",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5038"
        },
        {
          "Reference": "CVE-2008-0077",
          "Description": "assignment of malformed values to certain properties triggers use after free",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0077"
        },
        {
          "Reference": "CVE-2006-4434",
          "Description": "mail server does not properly handle a long header.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4434"
        },
        {
          "Reference": "CVE-2010-2753",
          "Description": "chain: integer overflow leads to use-after-free",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2753"
        },
        {
          "Reference": "CVE-2006-4997",
          "Description": "freed pointer dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4997"
        }
      ],
      "AffectedResources": [
        "Memory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "419",
      "Name": "Unprotected Primary Channel",
      "Abstraction": "Base",
      "Description": "The product uses a primary channel for administration or restricted functionality, but it does not properly protect the channel.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "42",
      "Name": "Path Equivalence: 'filename.' (Trailing Dot)",
      "Abstraction": "Variant",
      "Description": "The product accepts path input in the form of trailing dot ('filedir.') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-1114",
          "Description": "Source code disclosure using trailing dot",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1114"
        },
        {
          "Reference": "CVE-2002-1986",
          "Description": "Source code disclosure using trailing dot",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1986"
        },
        {
          "Reference": "CVE-2004-2213",
          "Description": "Source code disclosure using trailing dot",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2213"
        },
        {
          "Reference": "CVE-2005-3293",
          "Description": "Source code disclosure using trailing dot",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3293"
        },
        {
          "Reference": "CVE-2004-0061",
          "Description": "Bypass directory access restrictions using trailing dot in URL",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0061"
        },
        {
          "Reference": "CVE-2000-1133",
          "Description": "Bypass directory access restrictions using trailing dot in URL",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1133"
        },
        {
          "Reference": "CVE-2001-1386",
          "Description": "Bypass check for \".lnk\" extension using \".lnk.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1386"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "420",
      "Name": "Unprotected Alternate Channel",
      "Abstraction": "Base",
      "Description": "The product protects a primary channel, but it does not use the same level of protection for an alternate channel.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-8004",
          "Description": "When the internal flash is protected by blocking access on the Data Bus (DBUS), it can still be indirectly accessed through the Instruction Bus (IBUS).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8004"
        },
        {
          "Reference": "CVE-2002-0567",
          "Description": "DB server assumes that local clients have performed authentication, allowing attacker to directly connect to a process to load libraries and execute commands; a socket interface also exists (another alternate channel), so attack can be remote.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0567"
        },
        {
          "Reference": "CVE-2002-1578",
          "Description": "Product does not restrict access to underlying database, so attacker can bypass restrictions by directly querying the database.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1578"
        },
        {
          "Reference": "CVE-2003-1035",
          "Description": "User can avoid lockouts by using an API instead of the GUI to conduct brute force password guessing.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1035"
        },
        {
          "Reference": "CVE-2002-1863",
          "Description": "FTP service can not be disabled even when other access controls would require it.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1863"
        },
        {
          "Reference": "CVE-2002-0066",
          "Description": "Windows named pipe created without authentication/access control, allowing configuration modification.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0066"
        },
        {
          "Reference": "CVE-2004-1461",
          "Description": "Router management interface spawns a separate TCP connection after authentication, allowing hijacking by attacker coming from the same IP address.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1461"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "421",
      "Name": "Race Condition During Access to Alternate Channel",
      "Abstraction": "Base",
      "Description": "The product opens an alternate channel to communicate with an authorized user, but the channel is accessible to other actors.",
      "ExtendedDescription": "This creates a race condition that allows an attacker to access the channel before the authorized user does.",
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-0351",
          "Description": "FTP \"Pizza Thief\" vulnerability. Attacker can connect to a port that was intended for use by another client.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0351"
        },
        {
          "Reference": "CVE-2003-0230",
          "Description": "Product creates Windows named pipe during authentication that another attacker can hijack by connecting to it.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0230"
        }
      ],
      "AffectedResources": [
        "System Process"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "422",
      "Name": "Unprotected Windows Messaging Channel ('Shatter')",
      "Abstraction": "Variant",
      "Description": "The product does not properly verify the source of a message in the Windows Messaging System while running at elevated privileges, creating an alternate channel through which an attacker can directly send a message to the product.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0971",
          "Description": "Bypass GUI and access restricted dialog box.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0971"
        },
        {
          "Reference": "CVE-2002-1230",
          "Description": "Gain privileges via Windows message.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1230"
        },
        {
          "Reference": "CVE-2003-0350",
          "Description": "A control allows a change to a pointer for a callback function using Windows message.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0350"
        },
        {
          "Reference": "CVE-2003-0908",
          "Description": "Product launches Help functionality while running with raised privileges, allowing command execution using Windows message to access \"open file\" dialog.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0908"
        },
        {
          "Reference": "CVE-2004-0213",
          "Description": "Attacker uses Shatter attack to bypass GUI-enforced protection for CVE-2003-0908.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0213"
        },
        {
          "Reference": "CVE-2004-0207",
          "Description": "User can call certain API functions to modify certain properties of privileged programs.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0207"
        }
      ],
      "AffectedResources": [
        "System Process"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "424",
      "Name": "Improper Protection of Alternate Path",
      "Abstraction": "Class",
      "Description": "The product does not sufficiently protect all possible paths that a user can take to access restricted functionality or resources.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-29238",
          "Description": "Access-control setting in web-based document collaboration tool is not properly implemented by the code, which prevents listing hidden directories but does not prevent direct requests to files in those directories.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29238"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "425",
      "Name": "Direct Request ('Forced Browsing')",
      "Abstraction": "Base",
      "Description": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
      "ExtendedDescription": "Web applications susceptible to direct request attacks often make the false assumption that such resources can only be reached through a given navigation path and so only apply authorization at certain points in the path.",
      "AlternateTerms": [
        {
          "Term": "forced browsing",
          "Description": "The \"forced browsing\" term could be misinterpreted to include weaknesses such as CSRF or XSS, so its use is discouraged."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-29238",
          "Description": "Access-control setting in web-based document collaboration tool is not properly implemented by the code, which prevents listing hidden directories but does not prevent direct requests to files in those directories.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29238"
        },
        {
          "Reference": "CVE-2022-23607",
          "Description": "Python-based HTTP library did not scope cookies to a particular domain such that \"supercookies\" could be sent to any domain on redirect.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-23607"
        },
        {
          "Reference": "CVE-2004-2144",
          "Description": "Bypass authentication via direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2144"
        },
        {
          "Reference": "CVE-2005-1892",
          "Description": "Infinite loop or infoleak triggered by direct requests.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1892"
        },
        {
          "Reference": "CVE-2004-2257",
          "Description": "Bypass auth/auth via direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2257"
        },
        {
          "Reference": "CVE-2005-1688",
          "Description": "Direct request leads to infoleak by error.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1688"
        },
        {
          "Reference": "CVE-2005-1697",
          "Description": "Direct request leads to infoleak by error.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1697"
        },
        {
          "Reference": "CVE-2005-1698",
          "Description": "Direct request leads to infoleak by error.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1698"
        },
        {
          "Reference": "CVE-2005-1685",
          "Description": "Authentication bypass via direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1685"
        },
        {
          "Reference": "CVE-2005-1827",
          "Description": "Authentication bypass via direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1827"
        },
        {
          "Reference": "CVE-2005-1654",
          "Description": "Authorization bypass using direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1654"
        },
        {
          "Reference": "CVE-2005-1668",
          "Description": "Access privileged functionality using direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1668"
        },
        {
          "Reference": "CVE-2002-1798",
          "Description": "Upload arbitrary files via direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1798"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "426",
      "Name": "Untrusted Search Path",
      "Abstraction": "Base",
      "Description": "The product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.",
      "ExtendedDescription": "\n\nThis might allow attackers to execute their own programs, access unauthorized data files, or modify configuration in unexpected ways. If the product uses a search path to locate critical resources such as programs, then an attacker could modify that search path to point to a malicious program, which the targeted product would then execute. The problem extends to any type of critical resource that the product trusts.\n\n\nSome of the most common variants of untrusted search path are:\n\n\n  - In various UNIX and Linux-based systems, the PATH environment variable may be consulted to locate executable programs, and LD_PRELOAD may be used to locate a separate library.\n\n  - In various Microsoft-based systems, the PATH environment variable is consulted to locate a DLL, if the DLL is not found in other paths that appear earlier in the search order.\n\n",
      "AlternateTerms": [
        {
          "Term": "Untrusted Path"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-1120",
          "Description": "Application relies on its PATH environment variable to find and execute program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1120"
        },
        {
          "Reference": "CVE-2008-1810",
          "Description": "Database application relies on its PATH environment variable to find and execute program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1810"
        },
        {
          "Reference": "CVE-2007-2027",
          "Description": "Chain: untrusted search path enabling resultant format string by loading malicious internationalization messages.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-2027"
        },
        {
          "Reference": "CVE-2008-3485",
          "Description": "Untrusted search path using malicious .EXE in Windows environment.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3485"
        },
        {
          "Reference": "CVE-2008-2613",
          "Description": "setuid program allows compromise using path that finds and loads a malicious library.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2613"
        },
        {
          "Reference": "CVE-2008-1319",
          "Description": "Server allows client to specify the search path, which can be modified to point to a program that the client has uploaded.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1319"
        }
      ],
      "FunctionalAreas": [
        "Program Invocation",
        "Code Libraries"
      ],
      "AffectedResources": [
        "System Process"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "427",
      "Name": "Uncontrolled Search Path Element",
      "Abstraction": "Base",
      "Description": "The product uses a fixed or controlled search path to find resources, but one or more locations in that path can be under the control of unintended actors.",
      "ExtendedDescription": "\n\nAlthough this weakness can occur with any type of resource, it is frequently introduced when a product uses a directory search path to find executables or code libraries, but the path contains a directory that can be modified by an attacker, such as \"/tmp\" or the current working directory.\n\n\nIn Windows-based systems, when the LoadLibrary or LoadLibraryEx function is called with a DLL name that does not contain a fully qualified path, the function follows a search order that includes two path elements that might be uncontrolled:\n\n\n  - the directory from which the program has been loaded\n\n  - the current working directory\n\nIn some cases, the attack can be conducted remotely, such as when SMB or WebDAV network shares are used.\n\nOne or more locations in that path could include the Windows drive root or its subdirectories. This often exists in Linux-based code assuming the controlled nature of the root directory (/) or its subdirectories (/etc, etc), or a code that recursively accesses the parent directory. In Windows, the drive root and some of its subdirectories have weak permissions by default, which makes them uncontrolled.\n\n\nIn some Unix-based systems, a PATH might be created that contains an empty element, e.g. by splicing an empty variable into the PATH. This empty element can be interpreted as equivalent to the current working directory, which might be an untrusted search element.\n\n\nIn software package management frameworks (e.g., npm, RubyGems, or PyPi), the framework may identify dependencies on third-party libraries or other packages, then consult a repository that contains the desired package. The framework may search a public repository before a private repository. This could be exploited by attackers by placing a malicious package in the public repository that has the same name as a package from the private repository. The search path might not be directly under control of the developer relying on the framework, but this search order effectively contains an untrusted element.\n",
      "AlternateTerms": [
        {
          "Term": "DLL preloading",
          "Description": "This term is one of several that are used to describe exploitation of untrusted search path elements in Windows systems, which received wide attention in August 2010. From a weakness perspective, the term is imprecise because it can apply to both CWE-426 and CWE-427."
        },
        {
          "Term": "Binary planting",
          "Description": "This term is one of several that are used to describe exploitation of untrusted search path elements in Windows systems, which received wide attention in August 2010. From a weakness perspective, the term is imprecise because it can apply to both CWE-426 and CWE-427."
        },
        {
          "Term": "Insecure library loading",
          "Description": "This term is one of several that are used to describe exploitation of untrusted search path elements in Windows systems, which received wide attention in August 2010. From a weakness perspective, the term is imprecise because it can apply to both CWE-426 and CWE-427."
        },
        {
          "Term": "Dependency confusion",
          "Description": "As of February 2021, this term is used to describe CWE-427 in the context of managing installation of software package dependencies, in which attackers release packages on public sites where the names are the same as package names used by private repositories, and the search for the dependent package tries the public site first, downloading untrusted code. It may also be referred to as a \"substitution attack.\""
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2023-25815",
          "Description": "chain: a change in an underlying package causes the gettext function to use implicit initialization with a hard-coded path (CWE-1419) under the user-writable C:\\ drive, introducing an untrusted search path element (CWE-427) that enables spoofing of messages.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2023-25815"
        },
        {
          "Reference": "CVE-2022-4826",
          "Description": "Go-based git extension on Windows can search for and execute a malicious \"..exe\" in a repository because Go searches the current working directory if git.exe is not found in the PATH",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-4826"
        },
        {
          "Reference": "CVE-2020-26284",
          "Description": "A Static Site Generator built in Go, when running on Windows, searches the current working directory for a command, possibly allowing code execution using a malicious .exe or .bat file with the name being searched",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-26284"
        },
        {
          "Reference": "CVE-2022-24765",
          "Description": "Windows-based fork of git creates a \".git\" folder in the C: drive, allowing local attackers to create a .git folder with a malicious config file",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-24765"
        },
        {
          "Reference": "CVE-2019-1552",
          "Description": "SSL package searches under \"C:/usr/local\" for configuration files and other critical data, but C:/usr/local might be world-writable.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-1552"
        },
        {
          "Reference": "CVE-2010-3402",
          "Description": "\"DLL hijacking\" issue in document editor.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-3402"
        },
        {
          "Reference": "CVE-2010-3397",
          "Description": "\"DLL hijacking\" issue in encryption software.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-3397"
        },
        {
          "Reference": "CVE-2010-3138",
          "Description": "\"DLL hijacking\" issue in library used by multiple media players.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-3138"
        },
        {
          "Reference": "CVE-2010-3152",
          "Description": "\"DLL hijacking\" issue in illustration program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-3152"
        },
        {
          "Reference": "CVE-2010-3147",
          "Description": "\"DLL hijacking\" issue in address book.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-3147"
        },
        {
          "Reference": "CVE-2010-3135",
          "Description": "\"DLL hijacking\" issue in network monitoring software.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-3135"
        },
        {
          "Reference": "CVE-2010-3131",
          "Description": "\"DLL hijacking\" issue in web browser.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-3131"
        },
        {
          "Reference": "CVE-2010-1795",
          "Description": "\"DLL hijacking\" issue in music player/organizer.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-1795"
        },
        {
          "Reference": "CVE-2002-1576",
          "Description": "Product uses the current working directory to find and execute a program, which allows local users to gain privileges by creating a symlink that points to a malicious version of the program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1576"
        },
        {
          "Reference": "CVE-1999-1461",
          "Description": "Product trusts the PATH environmental variable to find and execute a program, which allows local users to obtain root access by modifying the PATH to point to a malicous version of that program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1461"
        },
        {
          "Reference": "CVE-1999-1318",
          "Description": "Software uses a search path that includes the current working directory (.), which allows local users to gain privileges via malicious programs.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1318"
        },
        {
          "Reference": "CVE-2003-0579",
          "Description": "Admin software trusts the user-supplied -uv.install command line option to find and execute the uv.install program, which allows local users to gain privileges by providing a pathname that is under control of the user.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0579"
        },
        {
          "Reference": "CVE-2000-0854",
          "Description": "When a document is opened, the directory of that document is first used to locate DLLs , which could allow an attacker to execute arbitrary commands by inserting malicious DLLs into the same directory as the document.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0854"
        },
        {
          "Reference": "CVE-2001-0943",
          "Description": "Database trusts the PATH environment variable to find and execute programs, which allows local users to modify the PATH to point to malicious programs.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0943"
        },
        {
          "Reference": "CVE-2001-0942",
          "Description": "Database uses an environment variable to find and execute a program, which allows local users to execute arbitrary programs by changing the environment variable.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0942"
        },
        {
          "Reference": "CVE-2001-0507",
          "Description": "Server uses relative paths to find system files that will run in-process, which allows local users to gain privileges via a malicious file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0507"
        },
        {
          "Reference": "CVE-2002-2017",
          "Description": "Product allows local users to execute arbitrary code by setting an environment variable to reference a malicious program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2017"
        },
        {
          "Reference": "CVE-1999-0690",
          "Description": "Product includes the current directory in root's PATH variable.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0690"
        },
        {
          "Reference": "CVE-2001-0912",
          "Description": "Error during packaging causes product to include a hard-coded, non-standard directory in search path.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0912"
        },
        {
          "Reference": "CVE-2001-0289",
          "Description": "Product searches current working directory for configuration file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0289"
        },
        {
          "Reference": "CVE-2005-1705",
          "Description": "Product searches current working directory for configuration file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1705"
        },
        {
          "Reference": "CVE-2005-1307",
          "Description": "Product executable other program from current working directory.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1307"
        },
        {
          "Reference": "CVE-2002-2040",
          "Description": "Untrusted path.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2040"
        },
        {
          "Reference": "CVE-2005-2072",
          "Description": "Modification of trusted environment variable leads to untrusted path vulnerability.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2072"
        },
        {
          "Reference": "CVE-2005-1632",
          "Description": "Product searches /tmp for modules before other paths.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1632"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "428",
      "Name": "Unquoted Search Path or Element",
      "Abstraction": "Base",
      "Description": "The product uses a search path that contains an unquoted element, in which the element contains whitespace or other separators. This can cause the product to access resources in a parent path.",
      "ExtendedDescription": "If a malicious individual has access to the file system, it is possible to elevate privileges by inserting such a file as \"C:\\Program.exe\" to be run by a privileged program making use of WinExec.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-1185",
          "Description": "Small handful of others. Program doesn't quote the \"C:\\Program Files\\\" path when calling a program to be executed - or any other path with a directory or file whose name contains a space - so attacker can put a malicious program.exe into C:.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1185"
        },
        {
          "Reference": "CVE-2005-2938",
          "Description": "CreateProcess() and CreateProcessAsUser() can be misused by applications to allow \"program.exe\" style attacks in C:",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2938"
        },
        {
          "Reference": "CVE-2000-1128",
          "Description": "Applies to \"Common Files\" folder, with a malicious common.exe, instead of \"Program Files\"/program.exe.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1128"
        }
      ],
      "FunctionalAreas": [
        "Program Invocation"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "43",
      "Name": "Path Equivalence: 'filename....' (Multiple Trailing Dot)",
      "Abstraction": "Variant",
      "Description": "The product accepts path input in the form of multiple trailing dot ('filedir....') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-0281",
          "Description": "Multiple trailing dot allows directory listing",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0281"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "430",
      "Name": "Deployment of Wrong Handler",
      "Abstraction": "Base",
      "Description": "The wrong \"handler\" is assigned to process an object.",
      "ExtendedDescription": "An example of deploying the wrong handler would be calling a servlet to reveal source code of a .JSP file, or automatically \"determining\" type of the object even if it is contradictory to an explicitly specified type.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-0004",
          "Description": "Source code disclosure via manipulated file extension that causes parsing by wrong DLL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0004"
        },
        {
          "Reference": "CVE-2002-0025",
          "Description": "Web browser does not properly handle the Content-Type header field, causing a different application to process the document.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0025"
        },
        {
          "Reference": "CVE-2000-1052",
          "Description": "Source code disclosure by directly invoking a servlet.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1052"
        },
        {
          "Reference": "CVE-2002-1742",
          "Description": "Arbitrary Perl functions can be loaded by calling a non-existent function that activates a handler.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1742"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "431",
      "Name": "Missing Handler",
      "Abstraction": "Base",
      "Description": "A handler is not available or implemented.",
      "ExtendedDescription": "When an exception is thrown and not caught, the process has given up an opportunity to decide if a given failure or event is worth a change in execution.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-25302",
          "Description": "SDK for OPC Unified Architecture (OPC UA) is missing a handler for when a cast fails, allowing for a crash",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-25302"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "432",
      "Name": "Dangerous Signal Handler not Disabled During Sensitive Operations",
      "Abstraction": "Base",
      "Description": "The product uses a signal handler that shares state with other signal handlers, but it does not properly mask or prevent those signal handlers from being invoked while the original signal handler is still running.",
      "ExtendedDescription": "During the execution of a signal handler, it can be interrupted by another handler when a different signal is sent. If the two handlers share state - such as global variables - then an attacker can corrupt the state by sending another signal before the first handler has completed execution.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "433",
      "Name": "Unparsed Raw Web Content Delivery",
      "Abstraction": "Variant",
      "Description": "The product stores raw content or supporting code under the web document root with an extension that is not specifically handled by the server.",
      "ExtendedDescription": "If code is stored in a file with an extension such as \".inc\" or \".pl\", and the web server does not have a handler for that extension, then the server will likely send the contents of the file directly to the requester without the pre-processing that was expected. When that file contains sensitive information such as database credentials, this may allow the attacker to compromise the application or associated components.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1886",
          "Description": "\".inc\" file stored under web document root and returned unparsed by the server",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1886"
        },
        {
          "Reference": "CVE-2002-2065",
          "Description": "\".inc\" file stored under web document root and returned unparsed by the server",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2065"
        },
        {
          "Reference": "CVE-2005-2029",
          "Description": "\".inc\" file stored under web document root and returned unparsed by the server",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2029"
        },
        {
          "Reference": "CVE-2001-0330",
          "Description": "direct request to .pl file leaves it unparsed",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0330"
        },
        {
          "Reference": "CVE-2002-0614",
          "Description": ".inc file",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0614"
        },
        {
          "Reference": "CVE-2004-2353",
          "Description": "unparsed config.conf file",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2353"
        },
        {
          "Reference": "CVE-2007-3365",
          "Description": "Chain: uppercase file extensions causes web server to return script source code instead of executing the script.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3365"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "434",
      "Name": "Unrestricted Upload of File with Dangerous Type",
      "Abstraction": "Base",
      "Diagram": "/data/images/CWE-434-Diagram.png",
      "Description": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
      "AlternateTerms": [
        {
          "Term": "Unrestricted File Upload",
          "Description": "Used in vulnerability databases and elsewhere, but it is insufficiently precise. The phrase could be interpreted as the lack of restrictions on the size or number of uploaded files, which is a resource consumption issue."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2023-5227",
          "Description": "PHP-based FAQ management app does not check the MIME type for uploaded images",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2023-5227"
        },
        {
          "Reference": "CVE-2001-0901",
          "Description": "Web-based mail product stores \".shtml\" attachments that could contain SSI",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0901"
        },
        {
          "Reference": "CVE-2002-1841",
          "Description": "PHP upload does not restrict file types",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1841"
        },
        {
          "Reference": "CVE-2005-1868",
          "Description": "upload and execution of .php file",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1868"
        },
        {
          "Reference": "CVE-2005-1881",
          "Description": "upload file with dangerous extension",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1881"
        },
        {
          "Reference": "CVE-2005-0254",
          "Description": "program does not restrict file types",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0254"
        },
        {
          "Reference": "CVE-2004-2262",
          "Description": "improper type checking of uploaded files",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2262"
        },
        {
          "Reference": "CVE-2006-4558",
          "Description": "Double \"php\" extension leaves an active php extension in the generated filename.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4558"
        },
        {
          "Reference": "CVE-2006-6994",
          "Description": "ASP program allows upload of .asp files by bypassing client-side checks",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6994"
        },
        {
          "Reference": "CVE-2005-3288",
          "Description": "ASP file upload",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3288"
        },
        {
          "Reference": "CVE-2006-2428",
          "Description": "ASP file upload",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2428"
        }
      ],
      "FunctionalAreas": [
        "File Processing"
      ],
      "AffectedResources": [
        "File or Directory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "435",
      "Name": "Improper Interaction Between Multiple Correctly-Behaving Entities",
      "Abstraction": "Pillar",
      "Description": "An interaction error occurs when two entities have correct behavior when running independently of each other, but when they are integrated as components in a larger system or process, they introduce incorrect behaviors that may cause resultant weaknesses.",
      "ExtendedDescription": "When a system or process combines multiple independent components, this often produces new, emergent behaviors at the system level. However, if the interactions between these components are not fully accounted for, some of the emergent behaviors can be incorrect or even insecure.",
      "AlternateTerms": [
        {
          "Term": "Interaction Error"
        },
        {
          "Term": "Emergent Fault"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0485",
          "Description": "Anti-virus product allows bypass via Content-Type and Content-Disposition headers that are mixed case, which are still processed by some clients.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0485"
        },
        {
          "Reference": "CVE-2003-0411",
          "Description": "chain: Code was ported from a case-sensitive Unix platform to a case-insensitive Windows platform where filetype handlers treat .jsp and .JSP as different extensions. JSP source code may be read because .JSP defaults to the filetype \"text\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0411"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "436",
      "Name": "Interpretation Conflict",
      "Abstraction": "Class",
      "Description": "Product A handles inputs or steps differently than Product B, which causes A to perform incorrect actions based on its perception of B's state.",
      "ExtendedDescription": "This is generally found in proxies, firewalls, anti-virus software, and other intermediary devices that monitor, allow, deny, or modify traffic based on how the client or server is expected to behave.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-1215",
          "Description": "Bypass filters or poison web cache using requests with multiple Content-Length headers, a non-standard behavior.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1215"
        },
        {
          "Reference": "CVE-2002-0485",
          "Description": "Anti-virus product allows bypass via Content-Type and Content-Disposition headers that are mixed case, which are still processed by some clients.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0485"
        },
        {
          "Reference": "CVE-2002-1978",
          "Description": "FTP clients sending a command with \"PASV\" in the argument can cause firewalls to misinterpret the server's error as a valid response, allowing filter bypass.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1978"
        },
        {
          "Reference": "CVE-2002-1979",
          "Description": "FTP clients sending a command with \"PASV\" in the argument can cause firewalls to misinterpret the server's error as a valid response, allowing filter bypass.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1979"
        },
        {
          "Reference": "CVE-2002-0637",
          "Description": "Virus product bypass with spaces between MIME header fields and the \":\" separator, a non-standard message that is accepted by some clients.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0637"
        },
        {
          "Reference": "CVE-2002-1777",
          "Description": "AV product detection bypass using inconsistency manipulation (file extension in MIME Content-Type vs. Content-Disposition field).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1777"
        },
        {
          "Reference": "CVE-2005-3310",
          "Description": "CMS system allows uploads of files with GIF/JPG extensions, but if they contain HTML, Internet Explorer renders them as HTML instead of images.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3310"
        },
        {
          "Reference": "CVE-2005-4260",
          "Description": "Interpretation conflict allows XSS via invalid \"<\" when a \">\" is expected, which is treated as \">\" by many web browsers.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-4260"
        },
        {
          "Reference": "CVE-2005-4080",
          "Description": "Interpretation conflict (non-standard behavior) enables XSS because browser ignores invalid characters in the middle of tags.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-4080"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "437",
      "Name": "Incomplete Model of Endpoint Features",
      "Abstraction": "Base",
      "Description": "A product acts as an intermediary or monitor between two or more endpoints, but it does not have a complete model of an endpoint's features, behaviors, or state, potentially causing the product to perform incorrect actions based on this incomplete model.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "439",
      "Name": "Behavioral Change in New Version or Environment",
      "Abstraction": "Base",
      "Description": "A's behavior or functionality changes with a new version of A, or a new environment, which is not known (or manageable) by B.",
      "AlternateTerms": [
        {
          "Term": "Functional change"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1976",
          "Description": "Linux kernel 2.2 and above allow promiscuous mode using a different method than previous versions, and ifconfig is not aware of the new method (alternate path property).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1976"
        },
        {
          "Reference": "CVE-2005-1711",
          "Description": "Product uses defunct method from another product that does not return an error code and allows detection avoidance.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1711"
        },
        {
          "Reference": "CVE-2003-0411",
          "Description": "chain: Code was ported from a case-sensitive Unix platform to a case-insensitive Windows platform where filetype handlers treat .jsp and .JSP as different extensions. JSP source code may be read because .JSP defaults to the filetype \"text\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0411"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "44",
      "Name": "Path Equivalence: 'file.name' (Internal Dot)",
      "Abstraction": "Variant",
      "Description": "The product accepts path input in the form of internal dot ('file.ordir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "440",
      "Name": "Expected Behavior Violation",
      "Abstraction": "Base",
      "Description": "A feature, API, or function does not perform according to its specification.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2003-0187",
          "Description": "Program uses large timeouts on unconfirmed connections resulting from inconsistency in linked lists implementations.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0187"
        },
        {
          "Reference": "CVE-2003-0465",
          "Description": "\"strncpy\" in Linux kernel acts different than libc on x86, leading to expected behavior difference - sort of a multiple interpretation error?",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0465"
        },
        {
          "Reference": "CVE-2005-3265",
          "Description": "Buffer overflow in product stems the use of a third party library function that is expected to have internal protection against overflows, but doesn't.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3265"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "441",
      "Name": "Unintended Proxy or Intermediary ('Confused Deputy')",
      "Abstraction": "Class",
      "Description": "The product receives a request, message, or directive from an upstream component, but the product does not sufficiently preserve the original source of the request before forwarding the request to an external actor that is outside of the product's control sphere. This causes the product to appear to be the source of the request, leading it to act as a proxy or other intermediary between the upstream component and the external actor.",
      "ExtendedDescription": "\n\nIf an attacker cannot directly contact a target, but the product has access to the target, then the attacker can send a request to the product and have it be forwarded to the target. The request would appear to be coming from the product's system, not the attacker's system. As a result, the attacker can bypass access controls (such as firewalls) or hide the source of malicious requests, since the requests would not be coming directly from the attacker.\n\n\nSince proxy functionality and message-forwarding often serve a legitimate purpose, this issue only becomes a vulnerability when:\n\n\n  - The product runs with different privileges or on a different system, or otherwise has different levels of access than the upstream component;\n\n  - The attacker is prevented from making the request directly to the target; and\n\n  - The attacker can create a request that the proxy does not explicitly intend to be forwarded on the behalf of the requester. Such a request might point to an unexpected hostname, port number, hardware IP, or service. Or, the request might be sent to an allowed service, but the request could contain disallowed directives, commands, or resources.\n\n",
      "AlternateTerms": [
        {
          "Term": "Confused Deputy",
          "Description": "This weakness is sometimes referred to as the \"Confused deputy\" problem, in which an attacker misused the authority of one victim (the \"confused deputy\") when targeting another victim."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-0017",
          "Description": "FTP bounce attack. The design of the protocol allows an attacker to modify the PORT command to cause the FTP server to connect to other machines besides the attacker's.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0017"
        },
        {
          "Reference": "CVE-1999-0168",
          "Description": "RPC portmapper could redirect service requests from an attacker to another entity, which thinks the requests came from the portmapper.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0168"
        },
        {
          "Reference": "CVE-2005-0315",
          "Description": "FTP server does not ensure that the IP address in a PORT command is the same as the FTP user's session, allowing port scanning by proxy.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0315"
        },
        {
          "Reference": "CVE-2002-1484",
          "Description": "Web server allows attackers to request a URL from another server, including other ports, which allows proxied scanning.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1484"
        },
        {
          "Reference": "CVE-2004-2061",
          "Description": "CGI script accepts and retrieves incoming URLs.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2061"
        },
        {
          "Reference": "CVE-2001-1484",
          "Description": "Bounce attack allows access to TFTP from trusted side.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1484"
        },
        {
          "Reference": "CVE-2010-1637",
          "Description": "Web-based mail program allows internal network scanning using a modified POP3 port number.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-1637"
        },
        {
          "Reference": "CVE-2009-0037",
          "Description": "URL-downloading library automatically follows redirects to file:// and scp:// URLs",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0037"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "444",
      "Name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')",
      "Abstraction": "Base",
      "Description": "The product acts as an intermediary HTTP agent\n         (such as a proxy or firewall) in the data flow between two\n         entities such as a client and server, but it does not\n         interpret malformed HTTP requests or responses in ways that\n         are consistent with how the messages will be processed by\n         those entities that are at the ultimate destination.",
      "ExtendedDescription": "\n\nHTTP requests or responses (\"messages\") can be malformed or unexpected in ways that cause web servers or clients to interpret the messages in different ways than intermediary HTTP agents such as load balancers, reverse proxies, web caching proxies, application firewalls, etc. For example, an adversary may be able to add duplicate or different header fields that a client or server might interpret as one set of messages, whereas the intermediary might interpret the same sequence of bytes as a different set of messages. For example, discrepancies can arise in how to handle duplicate headers like two Transfer-encoding (TE) or two Content-length (CL), or the malicious HTTP message will have different headers for TE and CL.\n\n\nThe inconsistent parsing and interpretation of messages can allow the adversary to \"smuggle\" a message to the client/server without the intermediary being aware of it.\n\n\nThis weakness is usually the result of the usage of outdated or incompatible HTTP protocol versions in the HTTP agents.\n",
      "AlternateTerms": [
        {
          "Term": "HTTP Request Smuggling"
        },
        {
          "Term": "HTTP Response Smuggling"
        },
        {
          "Term": "HTTP Smuggling"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-24766",
          "Description": "SSL/TLS-capable proxy allows HTTP smuggling when used in tandem with HTTP/1.0 services, due to inconsistent interpretation and input sanitization of HTTP messages within the body of another message",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-24766"
        },
        {
          "Reference": "CVE-2021-37147",
          "Description": "Chain: caching proxy server has improper input validation (CWE-20) of headers, allowing HTTP response smuggling (CWE-444) using an \"LF line ending\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-37147"
        },
        {
          "Reference": "CVE-2020-8287",
          "Description": "Node.js platform allows request smuggling via two Transfer-Encoding headers",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8287"
        },
        {
          "Reference": "CVE-2006-6276",
          "Description": "Web servers allow request smuggling via inconsistent HTTP headers.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6276"
        },
        {
          "Reference": "CVE-2005-2088",
          "Description": "HTTP server allows request smuggling with both a \"Transfer-Encoding: chunked\" header and a Content-Length header",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2088"
        },
        {
          "Reference": "CVE-2005-2089",
          "Description": "HTTP server allows request smuggling with both a \"Transfer-Encoding: chunked\" header and a Content-Length header",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2089"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "446",
      "Name": "UI Discrepancy for Security Feature",
      "Abstraction": "Class",
      "Description": "The user interface does not correctly enable or configure a security feature, but the interface provides feedback that causes the user to believe that the feature is in a secure state.",
      "ExtendedDescription": "When the user interface does not properly reflect what the user asks of it, then it can lead the user into a false sense of security. For example, the user might check a box to enable a security option to enable encrypted communications, but the product does not actually enable the encryption. Alternately, the user might provide a \"restrict ALL\" access control rule, but the product only implements \"restrict SOME\".",
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-1446",
          "Description": "UI inconsistency; visited URLs list not cleared when \"Clear History\" option is selected.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1446"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "447",
      "Name": "Unimplemented or Unsupported Feature in UI",
      "Abstraction": "Base",
      "Description": "A UI function for a security feature appears to be supported and gives feedback to the user that suggests that it is supported, but the underlying functionality is not implemented.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-0127",
          "Description": "GUI configuration tool does not enable a security option when a checkbox is selected, although that option is honored when manually set in the configuration file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0127"
        },
        {
          "Reference": "CVE-2001-0863",
          "Description": "Router does not implement a specific keyword when it is used in an ACL, allowing filter bypass.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0863"
        },
        {
          "Reference": "CVE-2001-0865",
          "Description": "Router does not implement a specific keyword when it is used in an ACL, allowing filter bypass.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0865"
        },
        {
          "Reference": "CVE-2004-0979",
          "Description": "Web browser does not properly modify security setting when the user sets it.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0979"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "448",
      "Name": "Obsolete Feature in UI",
      "Abstraction": "Base",
      "Description": "A UI function is obsolete and the product does not warn the user.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "449",
      "Name": "The UI Performs the Wrong Action",
      "Abstraction": "Base",
      "Description": "The UI performs the wrong action with respect to the user's request.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-1387",
          "Description": "Network firewall accidentally implements one command line option as if it were another, possibly leading to behavioral infoleak.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1387"
        },
        {
          "Reference": "CVE-2001-0081",
          "Description": "Command line option correctly suppresses a user prompt but does not properly disable a feature, although when the product prompts the user, the feature is properly disabled.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0081"
        },
        {
          "Reference": "CVE-2002-1977",
          "Description": "Product does not \"time out\" according to user specification, leaving sensitive data available after it has expired.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1977"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "45",
      "Name": "Path Equivalence: 'file...name' (Multiple Internal Dot)",
      "Abstraction": "Variant",
      "Description": "The product accepts path input in the form of multiple internal dot ('file...dir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "450",
      "Name": "Multiple Interpretations of UI Input",
      "Abstraction": "Base",
      "Description": "The UI has multiple interpretations of user input but does not prompt the user when it selects the less secure interpretation.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "451",
      "Name": "User Interface (UI) Misrepresentation of Critical Information",
      "Abstraction": "Class",
      "Description": "The user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.",
      "ExtendedDescription": "\n\nIf an attacker can cause the UI to display erroneous data, or to otherwise convince the user to display information that appears to come from a trusted source, then the attacker could trick the user into performing the wrong action. This is often a component in phishing attacks, but other kinds of problems exist. For example, if the UI is used to monitor the security state of a system or network, then omitting or obscuring an important indicator could prevent the user from detecting and reacting to a security-critical event.\n\n\nUI misrepresentation can take many forms:\n\n\n  - Incorrect indicator: incorrect information is displayed, which prevents the user from understanding the true state of the product or the environment the product is monitoring, especially of potentially-dangerous conditions or operations. This can be broken down into several different subtypes.\n\n  - Overlay: an area of the display is intended to give critical information, but another process can modify the display by overlaying another element on top of it. The user is not interacting with the expected portion of the user interface. This is the problem that enables clickjacking attacks, although many other types of attacks exist that involve overlay.\n\n  - Icon manipulation: the wrong icon, or the wrong color indicator, can be influenced (such as making a dangerous .EXE executable look like a harmless .GIF)\n\n  - Timing: the product is performing a state transition or context switch that is presented to the user with an indicator, but a race condition can cause the wrong indicator to be used before the product has fully switched context. The race window could be extended indefinitely if the attacker can trigger an error.\n\n  - Visual truncation: important information could be truncated from the display, such as a long filename with a dangerous extension that is not displayed in the GUI because the malicious portion is truncated. The use of excessive whitespace can also cause truncation, or place the potentially-dangerous indicator outside of the user's field of view (e.g. \"filename.txt .exe\"). A different type of truncation can occur when a portion of the information is removed due to reasons other than length, such as the accidental insertion of an end-of-input marker in the middle of an input, such as a NUL byte in a C-style string.\n\n  - Visual distinction: visual information might be presented in a way that makes it difficult for the user to quickly and correctly distinguish between critical and unimportant segments of the display.\n\n  - Homographs: letters from different character sets, fonts, or languages can appear very similar (i.e. may be visually equivalent) in a way that causes the human user to misread the text (for example, to conduct phishing attacks to trick a user into visiting a malicious web site with a visually-similar name as a trusted site). This can be regarded as a type of visual distinction issue.\n\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-2227",
          "Description": "Web browser's filename selection dialog only shows the beginning portion of long filenames, which can trick users into launching executables with dangerous extensions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2227"
        },
        {
          "Reference": "CVE-2001-0398",
          "Description": "Attachment with many spaces in filename bypasses \"dangerous content\" warning and uses different icon. Likely resultant.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0398"
        },
        {
          "Reference": "CVE-2001-0643",
          "Description": "Misrepresentation and equivalence issue.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0643"
        },
        {
          "Reference": "CVE-2005-0593",
          "Description": "Lock spoofing from several different weaknesses.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0593"
        },
        {
          "Reference": "CVE-2004-1104",
          "Description": "Incorrect indicator: web browser can be tricked into presenting the wrong URL",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1104"
        },
        {
          "Reference": "CVE-2005-0143",
          "Description": "Incorrect indicator: Lock icon displayed when an insecure page loads a binary file loaded from a trusted site.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0143"
        },
        {
          "Reference": "CVE-2005-0144",
          "Description": "Incorrect indicator: Secure \"lock\" icon is presented for one channel, while an insecure page is being simultaneously loaded in another channel.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0144"
        },
        {
          "Reference": "CVE-2004-0761",
          "Description": "Incorrect indicator: Certain redirect sequences cause security lock icon to appear in web browser, even when page is not encrypted.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0761"
        },
        {
          "Reference": "CVE-2004-2219",
          "Description": "Incorrect indicator: Spoofing via multi-step attack that causes incorrect information to be displayed in browser address bar.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2219"
        },
        {
          "Reference": "CVE-2004-0537",
          "Description": "Overlay: Wide \"favorites\" icon can overlay and obscure address bar",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0537"
        },
        {
          "Reference": "CVE-2005-2271",
          "Description": "Visual distinction: Web browsers do not clearly associate a Javascript dialog box with the web page that generated it, allowing spoof of the source of the dialog. \"origin validation error\" of a sort?",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2271"
        },
        {
          "Reference": "CVE-2005-2272",
          "Description": "Visual distinction: Web browsers do not clearly associate a Javascript dialog box with the web page that generated it, allowing spoof of the source of the dialog. \"origin validation error\" of a sort?",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2272"
        },
        {
          "Reference": "CVE-2005-2273",
          "Description": "Visual distinction: Web browsers do not clearly associate a Javascript dialog box with the web page that generated it, allowing spoof of the source of the dialog. \"origin validation error\" of a sort?",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2273"
        },
        {
          "Reference": "CVE-2005-2274",
          "Description": "Visual distinction: Web browsers do not clearly associate a Javascript dialog box with the web page that generated it, allowing spoof of the source of the dialog. \"origin validation error\" of a sort?",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2274"
        },
        {
          "Reference": "CVE-2001-1410",
          "Description": "Visual distinction: Browser allows attackers to create chromeless windows and spoof victim's display using unprotected Javascript method.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1410"
        },
        {
          "Reference": "CVE-2002-0197",
          "Description": "Visual distinction: Chat client allows remote attackers to spoof encrypted, trusted messages with lines that begin with a special sequence, which makes the message appear legitimate.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0197"
        },
        {
          "Reference": "CVE-2005-0831",
          "Description": "Visual distinction: Product allows spoofing names of other users by registering with a username containing hex-encoded characters.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0831"
        },
        {
          "Reference": "CVE-2003-1025",
          "Description": "Visual truncation: Special character in URL causes web browser to truncate the user portion of the \"user@domain\" URL, hiding real domain in the address bar.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1025"
        },
        {
          "Reference": "CVE-2005-0243",
          "Description": "Visual truncation: Chat client does not display long filenames in file dialog boxes, allowing dangerous extensions via manipulations including (1) many spaces and (2) multiple file extensions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0243"
        },
        {
          "Reference": "CVE-2005-1575",
          "Description": "Visual truncation: Web browser file download type can be hidden using whitespace.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1575"
        },
        {
          "Reference": "CVE-2004-2530",
          "Description": "Visual truncation: Visual truncation in chat client using whitespace to hide dangerous file extension.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2530"
        },
        {
          "Reference": "CVE-2005-0590",
          "Description": "Visual truncation: Dialog box in web browser allows user to spoof the hostname via a long \"user:pass\" sequence in the URL, which appears before the real hostname.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0590"
        },
        {
          "Reference": "CVE-2004-1451",
          "Description": "Visual truncation: Null character in URL prevents entire URL from being displayed in web browser.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1451"
        },
        {
          "Reference": "CVE-2004-2258",
          "Description": "Miscellaneous -- [step-based attack, GUI] -- Password-protected tab can be bypassed by switching to another tab, then back to original tab.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2258"
        },
        {
          "Reference": "CVE-2005-1678",
          "Description": "Miscellaneous -- Dangerous file extensions not displayed.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1678"
        },
        {
          "Reference": "CVE-2002-0722",
          "Description": "Miscellaneous -- Web browser allows remote attackers to misrepresent the source of a file in the File Download dialog box.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0722"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "453",
      "Name": "Insecure Default Variable Initialization",
      "Abstraction": "Variant",
      "Description": "The product, by default, initializes an internal variable with an insecure or less secure value than is possible.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-36349",
          "Description": "insecure default variable initialization in BIOS firmware for a hardware board allows DoS",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-36349"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "454",
      "Name": "External Initialization of Trusted Variables or Data Stores",
      "Abstraction": "Base",
      "Description": "The product initializes critical internal variables or data stores using inputs that can be modified by untrusted actors.",
      "ExtendedDescription": "A product system should be reluctant to trust variables that have been initialized outside of its trust boundary, especially if they are initialized by users. The variables may have been initialized incorrectly. If an attacker can initialize the variable, then they can influence what the vulnerable system will do.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-43468",
          "Description": "WordPress module sets internal variables based on external inputs, allowing false reporting of the number of views",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-43468"
        },
        {
          "Reference": "CVE-2000-0959",
          "Description": "Does not clear dangerous environment variables, enabling symlink attack.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0959"
        },
        {
          "Reference": "CVE-2001-0033",
          "Description": "Specify alternate configuration directory in environment variable, enabling untrusted path.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0033"
        },
        {
          "Reference": "CVE-2001-0872",
          "Description": "Dangerous environment variable not cleansed.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0872"
        },
        {
          "Reference": "CVE-2001-0084",
          "Description": "Specify arbitrary modules using environment variable.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0084"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "455",
      "Name": "Non-exit on Failed Initialization",
      "Abstraction": "Base",
      "Description": "The product does not exit or otherwise modify its operation when security-relevant errors occur during initialization, such as when a configuration file has a format error or a hardware security module (HSM) cannot be activated, which can cause the product to execute in a less secure fashion than intended by the administrator.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-1345",
          "Description": "Product does not trigger a fatal error if missing or invalid ACLs are in a configuration file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1345"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "456",
      "Name": "Missing Initialization of a Variable",
      "Abstraction": "Variant",
      "Description": "The product does not initialize critical variables, which causes the execution environment to use unexpected values.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-6078",
          "Description": "Chain: The return value of a function returning a pointer is not checked for success (CWE-252) resulting in the later use of an uninitialized variable (CWE-456) and a null pointer dereference (CWE-476)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-6078"
        },
        {
          "Reference": "CVE-2009-2692",
          "Description": "Chain: Use of an unimplemented network socket operation pointing to an uninitialized handler function (CWE-456) causes a crash because of a null pointer dereference (CWE-476).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2692"
        },
        {
          "Reference": "CVE-2020-20739",
          "Description": "A variable that has its value set in a conditional statement is sometimes used when the conditional fails, sometimes causing data leakage",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-20739"
        },
        {
          "Reference": "CVE-2005-2978",
          "Description": "Product uses uninitialized variables for size and index, leading to resultant buffer overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2978"
        },
        {
          "Reference": "CVE-2005-2109",
          "Description": "Internal variable in PHP application is not initialized, allowing external modification.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2109"
        },
        {
          "Reference": "CVE-2005-2193",
          "Description": "Array variable not initialized in PHP application, leading to resultant SQL injection.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2193"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "457",
      "Name": "Use of Uninitialized Variable",
      "Abstraction": "Variant",
      "Description": "The code uses a variable that has not been initialized, leading to unpredictable or unintended results.",
      "ExtendedDescription": "In some languages such as C and C++, stack variables are not initialized by default. They generally contain junk data with the contents of stack memory before the function was invoked. An attacker can sometimes control or read these contents. In other languages or conditions, a variable that is not explicitly initialized can be given a default value that has security implications, depending on the logic of the program. The presence of an uninitialized variable can sometimes indicate a typographic error in the code.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-15900",
          "Description": "Chain: sscanf() call is used to check if a username and group exists, but the return value of sscanf() call is not checked (CWE-252), causing an uninitialized variable to be checked (CWE-457), returning success to allow authorization bypass for executing a privileged (CWE-863).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-15900"
        },
        {
          "Reference": "CVE-2008-3688",
          "Description": "Chain: A denial of service may be caused by an uninitialized variable (CWE-457) allowing an infinite loop (CWE-835) resulting from a connection to an unresponsive server.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3688"
        },
        {
          "Reference": "CVE-2008-0081",
          "Description": "Uninitialized variable leads to code execution in popular desktop application.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0081"
        },
        {
          "Reference": "CVE-2007-4682",
          "Description": "Crafted input triggers dereference of an uninitialized object pointer.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4682"
        },
        {
          "Reference": "CVE-2007-3468",
          "Description": "Crafted audio file triggers crash when an uninitialized variable is used.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3468"
        },
        {
          "Reference": "CVE-2007-2728",
          "Description": "Uninitialized random seed variable used.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-2728"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "459",
      "Name": "Incomplete Cleanup",
      "Abstraction": "Base",
      "Description": "The product does not properly \"clean up\" and remove temporary or supporting resources after they have been used.",
      "AlternateTerms": [
        {
          "Term": "Insufficient Cleanup"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-0552",
          "Description": "World-readable temporary file not deleted after use.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0552"
        },
        {
          "Reference": "CVE-2005-2293",
          "Description": "Temporary file not deleted after use, leaking database usernames and passwords.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2293"
        },
        {
          "Reference": "CVE-2002-0788",
          "Description": "Interaction error creates a temporary file that can not be deleted due to strong permissions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0788"
        },
        {
          "Reference": "CVE-2002-2066",
          "Description": "Alternate data streams for NTFS files are not cleared when files are wiped (alternate channel / infoleak).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2066"
        },
        {
          "Reference": "CVE-2002-2067",
          "Description": "Alternate data streams for NTFS files are not cleared when files are wiped (alternate channel / infoleak).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2067"
        },
        {
          "Reference": "CVE-2002-2068",
          "Description": "Alternate data streams for NTFS files are not cleared when files are wiped (alternate channel / infoleak).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2068"
        },
        {
          "Reference": "CVE-2002-2069",
          "Description": "Alternate data streams for NTFS files are not cleared when files are wiped (alternate channel / infoleak).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2069"
        },
        {
          "Reference": "CVE-2002-2070",
          "Description": "Alternate data streams for NTFS files are not cleared when files are wiped (alternate channel / infoleak).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2070"
        },
        {
          "Reference": "CVE-2005-1744",
          "Description": "Users not logged out when application is restarted after security-relevant changes were made.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1744"
        }
      ],
      "FunctionalAreas": [
        "File Processing"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "46",
      "Name": "Path Equivalence: 'filename ' (Trailing Space)",
      "Abstraction": "Variant",
      "Description": "The product accepts path input in the form of trailing space ('filedir ') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-0693",
          "Description": "Source disclosure via trailing encoded space \"%20\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0693"
        },
        {
          "Reference": "CVE-2001-0778",
          "Description": "Source disclosure via trailing encoded space \"%20\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0778"
        },
        {
          "Reference": "CVE-2001-1248",
          "Description": "Source disclosure via trailing encoded space \"%20\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1248"
        },
        {
          "Reference": "CVE-2004-0280",
          "Description": "Source disclosure via trailing encoded space \"%20\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0280"
        },
        {
          "Reference": "CVE-2004-2213",
          "Description": "Source disclosure via trailing encoded space \"%20\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2213"
        },
        {
          "Reference": "CVE-2005-0622",
          "Description": "Source disclosure via trailing encoded space \"%20\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0622"
        },
        {
          "Reference": "CVE-2005-1656",
          "Description": "Source disclosure via trailing encoded space \"%20\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1656"
        },
        {
          "Reference": "CVE-2002-1603",
          "Description": "Source disclosure via trailing encoded space \"%20\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1603"
        },
        {
          "Reference": "CVE-2001-0054",
          "Description": "Multi-Factor Vulnerability (MFV). directory traversal and other issues in FTP server using Web encodings such as \"%20\"; certain manipulations have unusual side effects.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0054"
        },
        {
          "Reference": "CVE-2002-1451",
          "Description": "Trailing space (\"+\" in query string) leads to source code disclosure.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1451"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "460",
      "Name": "Improper Cleanup on Thrown Exception",
      "Abstraction": "Base",
      "Description": "The product does not clean up its state or incorrectly cleans up its state when an exception is thrown, leading to unexpected state or control flow.",
      "ExtendedDescription": "Often, when functions or loops become complicated, some level of resource cleanup is needed throughout execution. Exceptions can disturb the flow of the code and prevent the necessary cleanup from happening.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "462",
      "Name": "Duplicate Key in Associative List (Alist)",
      "Abstraction": "Variant",
      "Description": "Duplicate keys in associative lists can lead to non-unique keys being mistaken for an error.",
      "ExtendedDescription": "A duplicate key entry -- if the alist is designed properly -- could be used as a constant time replace function. However, duplicate key entries could be inserted by mistake. Because of this ambiguity, duplicate key entries in an association list are not recommended and should not be allowed.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "463",
      "Name": "Deletion of Data Structure Sentinel",
      "Abstraction": "Base",
      "Description": "The accidental deletion of a data-structure sentinel can cause serious programming logic problems.",
      "ExtendedDescription": "Often times data-structure sentinels are used to mark structure of the data structure. A common example of this is the null character at the end of strings. Another common example is linked lists which may contain a sentinel to mark the end of the list. It is dangerous to allow this type of control data to be easily accessible. Therefore, it is important to protect from the deletion or modification outside of some wrapper interface which provides safety.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "464",
      "Name": "Addition of Data Structure Sentinel",
      "Abstraction": "Base",
      "Description": "The accidental addition of a data-structure sentinel can cause serious programming logic problems.",
      "ExtendedDescription": "Data-structure sentinels are often used to mark the structure of data. A common example of this is the null character at the end of strings or a special sentinel to mark the end of a linked list. It is dangerous to allow this type of control data to be easily accessible. Therefore, it is important to protect from the addition or modification of sentinels.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "466",
      "Name": "Return of Pointer Value Outside of Expected Range",
      "Abstraction": "Base",
      "Description": "A function can return a pointer to memory that is outside of the buffer that the pointer is expected to reference.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "467",
      "Name": "Use of sizeof() on a Pointer Type",
      "Abstraction": "Variant",
      "Description": "The code calls sizeof() on a malloced pointer type, which always returns the wordsize/8. This can produce an unexpected result if the programmer intended to determine how much memory has been allocated.",
      "ExtendedDescription": "The use of sizeof() on a pointer can sometimes generate useful information. An obvious case is to find out the wordsize on a platform. More often than not, the appearance of sizeof(pointer) indicates a bug.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "468",
      "Name": "Incorrect Pointer Scaling",
      "Abstraction": "Base",
      "Description": "In C and C++, one may often accidentally refer to the wrong memory due to the semantics of when math operations are implicitly scaled.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "469",
      "Name": "Use of Pointer Subtraction to Determine Size",
      "Abstraction": "Base",
      "Description": "The product subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "47",
      "Name": "Path Equivalence: ' filename' (Leading Space)",
      "Abstraction": "Variant",
      "Description": "The product accepts path input in the form of leading space (' filedir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "470",
      "Name": "Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')",
      "Abstraction": "Base",
      "Description": "The product uses external input with reflection to select which classes or code to use, but it does not sufficiently prevent the input from selecting improper classes or code.",
      "ExtendedDescription": "If the product uses external inputs to determine which class to instantiate or which method to invoke, then an attacker could supply values to select unexpected classes or methods. If this occurs, then the attacker could create control flow paths that were not intended by the developer. These paths could bypass authentication or access control checks, or otherwise cause the product to behave in an unexpected manner. This situation becomes a doomsday scenario if the attacker can upload files into a location that appears on the product's classpath (CWE-427) or add new entries to the product's classpath (CWE-426). Under either of these conditions, the attacker can use reflection to introduce new, malicious behavior into the product.",
      "AlternateTerms": [
        {
          "Term": "Reflection Injection"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2018-1000613",
          "Description": "Cryptography API uses unsafe reflection when deserializing a private key",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-1000613"
        },
        {
          "Reference": "CVE-2004-2331",
          "Description": "Database system allows attackers to bypass sandbox restrictions by using the Reflection API.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2331"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "471",
      "Name": "Modification of Assumed-Immutable Data (MAID)",
      "Abstraction": "Base",
      "Description": "The product does not properly protect an assumed-immutable element from being modified by an attacker.",
      "ExtendedDescription": "This occurs when a particular input is critical enough to the functioning of the application that it should not be modifiable at all, but it is. Certain resources are often assumed to be immutable when they are not, such as hidden form fields in web applications, cookies, and reverse DNS lookups.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1757",
          "Description": "Relies on $PHP_SELF variable for authentication.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1757"
        },
        {
          "Reference": "CVE-2005-1905",
          "Description": "Gain privileges by modifying assumed-immutable code addresses that are accessed by a driver.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1905"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "472",
      "Name": "External Control of Assumed-Immutable Web Parameter",
      "Abstraction": "Base",
      "Description": "The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.",
      "ExtendedDescription": "\n\nIf a web product does not properly protect assumed-immutable values from modification in hidden form fields, parameters, cookies, or URLs, this can lead to modification of critical data. Web applications often mistakenly make the assumption that data passed to the client in hidden fields or cookies is not susceptible to tampering. Improper validation of data that are user-controllable can lead to the application processing incorrect, and often malicious, input.\n\n\nFor example, custom cookies commonly store session data or persistent data across sessions. This kind of session data is normally involved in security related decisions on the server side, such as user authentication and access control. Thus, the cookies might contain sensitive data such as user credentials and privileges. This is a dangerous practice, as it can often lead to improper reliance on the value of the client-provided cookie by the server side application.\n",
      "AlternateTerms": [
        {
          "Term": "Assumed-Immutable Parameter Tampering"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0108",
          "Description": "Forum product allows spoofed messages of other users via hidden form fields for name and e-mail address.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0108"
        },
        {
          "Reference": "CVE-2000-0253",
          "Description": "Shopping cart allows price modification via hidden form field.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0253"
        },
        {
          "Reference": "CVE-2000-0254",
          "Description": "Shopping cart allows price modification via hidden form field.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0254"
        },
        {
          "Reference": "CVE-2000-0926",
          "Description": "Shopping cart allows price modification via hidden form field.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0926"
        },
        {
          "Reference": "CVE-2000-0101",
          "Description": "Shopping cart allows price modification via hidden form field.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0101"
        },
        {
          "Reference": "CVE-2000-0102",
          "Description": "Shopping cart allows price modification via hidden form field.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0102"
        },
        {
          "Reference": "CVE-2000-0758",
          "Description": "Allows admin access by modifying value of form field.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0758"
        },
        {
          "Reference": "CVE-2002-1880",
          "Description": "Read messages by modifying message ID parameter.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1880"
        },
        {
          "Reference": "CVE-2000-1234",
          "Description": "Send email to arbitrary users by modifying email parameter.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1234"
        },
        {
          "Reference": "CVE-2005-1652",
          "Description": "Authentication bypass by setting a parameter.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1652"
        },
        {
          "Reference": "CVE-2005-1784",
          "Description": "Product does not check authorization for configuration change admin script, leading to password theft via modified e-mail address field.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1784"
        },
        {
          "Reference": "CVE-2005-2314",
          "Description": "Logic error leads to password disclosure.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2314"
        },
        {
          "Reference": "CVE-2005-1682",
          "Description": "Modification of message number parameter allows attackers to read other people's messages.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1682"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "473",
      "Name": "PHP External Variable Modification",
      "Abstraction": "Variant",
      "Description": "A PHP application does not properly protect against the modification of variables from external sources, such as query parameters or cookies. This can expose the application to numerous weaknesses that would not exist otherwise.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-0860",
          "Description": "File upload allows arbitrary file read by setting hidden form variables to match internal variable names.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0860"
        },
        {
          "Reference": "CVE-2001-0854",
          "Description": "Mistakenly trusts $PHP_SELF variable to determine if include script was called by its parent.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0854"
        },
        {
          "Reference": "CVE-2002-0764",
          "Description": "PHP remote file inclusion by modified assumed-immutable variable.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0764"
        },
        {
          "Reference": "CVE-2001-1025",
          "Description": "Modify key variable when calling scripts that don't load a library that initializes it.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1025"
        },
        {
          "Reference": "CVE-2003-0754",
          "Description": "Authentication bypass by modifying array used for authentication.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0754"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "474",
      "Name": "Use of Function with Inconsistent Implementations",
      "Abstraction": "Base",
      "Description": "The code uses a function that has inconsistent implementations across operating systems and versions.",
      "ExtendedDescription": "\n\nThe use of inconsistent implementations can cause changes in behavior when the code is ported or built under a different environment than the programmer expects, which can lead to security problems in some cases.\n\n\nThe implementation of many functions varies by platform, and at times, even by different versions of the same platform. Implementation differences can include:\n\n\n  - Slight differences in the way parameters are interpreted leading to inconsistent results.\n\n  - Some implementations of the function carry significant security risks.\n\n  - The function might not be defined on all platforms.\n\n  - The function might change which return codes it can provide, or change the meaning of its return codes.\n\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "475",
      "Name": "Undefined Behavior for Input to API",
      "Abstraction": "Base",
      "Description": "The behavior of this function is undefined unless its control parameter is set to a specific value.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "476",
      "Name": "NULL Pointer Dereference",
      "Abstraction": "Base",
      "Diagram": "/data/images/CWE-476-Diagram.png",
      "Description": "The product dereferences a pointer that it expects to be valid but is NULL.",
      "AlternateTerms": [
        {
          "Term": "NPD",
          "Description": "Common abbreviation for Null Pointer Dereference"
        },
        {
          "Term": "null deref",
          "Description": "Common abbreviation for Null Pointer Dereference"
        },
        {
          "Term": "NPE",
          "Description": "Common abbreviation for Null Pointer Exception"
        },
        {
          "Term": "nil pointer dereference",
          "Description": "used for access of nil in Go programs"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-3274",
          "Description": "race condition causes a table to be corrupted if a timer activates while it is being modified, leading to resultant NULL dereference; also involves locking.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3274"
        },
        {
          "Reference": "CVE-2002-1912",
          "Description": "large number of packets leads to NULL dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1912"
        },
        {
          "Reference": "CVE-2005-0772",
          "Description": "packet with invalid error status value triggers NULL dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0772"
        },
        {
          "Reference": "CVE-2009-4895",
          "Description": "Chain: race condition for an argument value, possibly resulting in NULL dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-4895"
        },
        {
          "Reference": "CVE-2020-29652",
          "Description": "ssh component for Go allows clients to cause a denial of service (nil pointer dereference) against SSH servers.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-29652"
        },
        {
          "Reference": "CVE-2009-2692",
          "Description": "Chain: Use of an unimplemented network socket operation pointing to an uninitialized handler function (CWE-456) causes a crash because of a null pointer dereference (CWE-476).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2692"
        },
        {
          "Reference": "CVE-2009-3547",
          "Description": "Chain: race condition (CWE-362) might allow resource to be released before operating on it, leading to NULL dereference (CWE-476)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3547"
        },
        {
          "Reference": "CVE-2009-3620",
          "Description": "Chain: some unprivileged ioctls do not verify that a structure has been initialized before invocation, leading to NULL dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3620"
        },
        {
          "Reference": "CVE-2009-2698",
          "Description": "Chain: IP and UDP layers each track the same value with different mechanisms that can get out of sync, possibly resulting in a NULL dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2698"
        },
        {
          "Reference": "CVE-2009-2692",
          "Description": "Chain: uninitialized function pointers can be dereferenced allowing code execution",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2692"
        },
        {
          "Reference": "CVE-2009-0949",
          "Description": "Chain: improper initialization of memory can lead to NULL dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0949"
        },
        {
          "Reference": "CVE-2008-3597",
          "Description": "Chain: game server can access player data structures before initialization has happened leading to NULL dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3597"
        },
        {
          "Reference": "CVE-2020-6078",
          "Description": "Chain: The return value of a function returning a pointer is not checked for success (CWE-252) resulting in the later use of an uninitialized variable (CWE-456) and a null pointer dereference (CWE-476)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-6078"
        },
        {
          "Reference": "CVE-2008-0062",
          "Description": "Chain: a message having an unknown message type may cause a reference to uninitialized memory resulting in a null pointer dereference (CWE-476) or dangling pointer (CWE-825), possibly crashing the system or causing heap corruption.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0062"
        },
        {
          "Reference": "CVE-2008-5183",
          "Description": "Chain: unchecked return value can lead to NULL dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5183"
        },
        {
          "Reference": "CVE-2004-0079",
          "Description": "SSL software allows remote attackers to cause a denial of service (crash) via a crafted SSL/TLS handshake that triggers a null dereference.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0079"
        },
        {
          "Reference": "CVE-2004-0365",
          "Description": "Network monitor allows remote attackers to cause a denial of service (crash) via a malformed RADIUS packet that triggers a null dereference.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0365"
        },
        {
          "Reference": "CVE-2003-1013",
          "Description": "Network monitor allows remote attackers to cause a denial of service (crash) via a malformed Q.931, which triggers a null dereference.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1013"
        },
        {
          "Reference": "CVE-2003-1000",
          "Description": "Chat client allows remote attackers to cause a denial of service (crash) via a passive DCC request with an invalid ID number, which causes a null dereference.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1000"
        },
        {
          "Reference": "CVE-2004-0389",
          "Description": "Server allows remote attackers to cause a denial of service (crash) via malformed requests that trigger a null dereference.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0389"
        },
        {
          "Reference": "CVE-2004-0119",
          "Description": "OS allows remote attackers to cause a denial of service (crash from null dereference) or execute arbitrary code via a crafted request during authentication protocol selection.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0119"
        },
        {
          "Reference": "CVE-2004-0458",
          "Description": "Game allows remote attackers to cause a denial of service (server crash) via a missing argument, which triggers a null pointer dereference.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0458"
        },
        {
          "Reference": "CVE-2002-0401",
          "Description": "Network monitor allows remote attackers to cause a denial of service (crash) or execute arbitrary code via malformed packets that cause a NULL pointer dereference.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0401"
        },
        {
          "Reference": "CVE-2001-1559",
          "Description": "Chain: System call returns wrong value (CWE-393), leading to a resultant NULL dereference (CWE-476).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1559"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "477",
      "Name": "Use of Obsolete Function",
      "Abstraction": "Base",
      "Description": "The code uses deprecated or obsolete functions, which suggests that the code has not been actively reviewed or maintained.",
      "ExtendedDescription": "\n\nAs programming languages evolve, functions occasionally become obsolete due to:\n\n\n  - Advances in the language\n\n  - Improved understanding of how operations should be performed effectively and securely\n\n  - Changes in the conventions that govern certain operations\n\nFunctions that are removed are usually replaced by newer counterparts that perform the same task in some different and hopefully improved way.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "478",
      "Name": "Missing Default Case in Multiple Condition Expression",
      "Abstraction": "Base",
      "Description": "The code does not have a default case in an expression with multiple conditions, such as a switch statement.",
      "ExtendedDescription": "If a multiple-condition expression (such as a switch in C) omits the default case but does not consider or handle all possible values that could occur, then this might lead to complex logical errors and resultant weaknesses. Because of this, further decisions are made based on poor information, and cascading failure results. This cascading failure may result in any number of security issues, and constitutes a significant failure in the system.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "479",
      "Name": "Signal Handler Use of a Non-reentrant Function",
      "Abstraction": "Variant",
      "Description": "The product defines a signal handler that calls a non-reentrant function.",
      "ExtendedDescription": "\n\nNon-reentrant functions are functions that cannot safely be called, interrupted, and then recalled before the first call has finished without resulting in memory corruption. This can lead to an unexpected system state and unpredictable results with a variety of potential consequences depending on context, including denial of service and code execution.\n\n\nMany functions are not reentrant, but some of them can result in the corruption of memory if they are used in a signal handler. The function call syslog() is an example of this. In order to perform its functionality, it allocates a small amount of memory as \"scratch space.\" If syslog() is suspended by a signal call and the signal handler calls syslog(), the memory used by both of these functions enters an undefined, and possibly, exploitable state. Implementations of malloc() and free() manage metadata in global structures in order to track which memory is allocated versus which memory is available, but they are non-reentrant. Simultaneous calls to these functions can cause corruption of the metadata.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-0893",
          "Description": "signal handler calls function that ultimately uses malloc()",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0893"
        },
        {
          "Reference": "CVE-2004-2259",
          "Description": "SIGCHLD signal to FTP server can cause crash under heavy load while executing non-reentrant functions like malloc/free.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2259"
        }
      ],
      "AffectedResources": [
        "System Process"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "48",
      "Name": "Path Equivalence: 'file name' (Internal Whitespace)",
      "Abstraction": "Variant",
      "Description": "The product accepts path input in the form of internal space ('file(SPACE)name') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-0293",
          "Description": "Filenames with spaces allow arbitrary file deletion when the product does not properly quote them; some overlap with path traversal.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0293"
        },
        {
          "Reference": "CVE-2001-1567",
          "Description": "\"+\" characters in query string converted to spaces before sensitive file/extension (internal space), leading to bypass of access restrictions to the file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1567"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "480",
      "Name": "Use of Incorrect Operator",
      "Abstraction": "Base",
      "Description": "The product accidentally uses the wrong operator, which changes the logic in security-relevant ways.",
      "ExtendedDescription": "These types of errors are generally the result of a typo by the programmer.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-3979",
          "Description": "Chain: data visualization program written in PHP uses the \"!=\" operator instead of the type-strict \"!==\" operator (CWE-480) when validating hash values, potentially leading to an incorrect type conversion (CWE-704)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-3979"
        },
        {
          "Reference": "CVE-2021-3116",
          "Description": "Chain: Python-based HTTP Proxy server uses the wrong boolean operators (CWE-480) causing an incorrect comparison (CWE-697) that identifies an authN failure if all three conditions are met instead of only one, allowing bypass of the proxy authentication (CWE-1390)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-3116"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "481",
      "Name": "Assigning instead of Comparing",
      "Abstraction": "Variant",
      "Description": "The code uses an operator for assignment when the intention was to perform a comparison.",
      "ExtendedDescription": "In many languages the compare statement is very close in appearance to the assignment statement and are often confused. This bug is generally the result of a typo and usually causes obvious problems with program execution. If the comparison is in an if statement, the if statement will usually evaluate the value of the right-hand side of the predicate.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "482",
      "Name": "Comparing instead of Assigning",
      "Abstraction": "Variant",
      "Description": "The code uses an operator for comparison when the intention was to perform an assignment.",
      "ExtendedDescription": "In many languages, the compare statement is very close in appearance to the assignment statement; they are often confused.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "483",
      "Name": "Incorrect Block Delimitation",
      "Abstraction": "Base",
      "Description": "The code does not explicitly delimit a block that is intended to contain 2 or more statements, creating a logic error.",
      "ExtendedDescription": "In some languages, braces (or other delimiters) are optional for blocks. When the delimiter is omitted, it is possible to insert a logic error in which a statement is thought to be in a block but is not. In some cases, the logic error can have security implications.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2014-1266",
          "Description": "incorrect indentation of \"goto\" statement makes it more difficult to detect an incorrect goto (Apple's \"goto fail\")",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-1266"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "484",
      "Name": "Omitted Break Statement in Switch",
      "Abstraction": "Base",
      "Description": "The product omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.",
      "ExtendedDescription": "This can lead to critical code executing in situations where it should not.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "486",
      "Name": "Comparison of Classes by Name",
      "Abstraction": "Variant",
      "Description": "The product compares classes by name, which can cause it to use the wrong class when multiple classes can have the same name.",
      "ExtendedDescription": "If the decision to trust the methods and data of an object is based on the name of a class, it is possible for malicious users to send objects of the same name as trusted classes and thereby gain the trust afforded to known classes and types.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "487",
      "Name": "Reliance on Package-level Scope",
      "Abstraction": "Base",
      "Description": "Java packages are not inherently closed; therefore, relying on them for code security is not a good practice.",
      "ExtendedDescription": "The purpose of package scope is to prevent accidental access by other parts of a program. This is an ease-of-software-development feature but not a security feature.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "488",
      "Name": "Exposure of Data Element to Wrong Session",
      "Abstraction": "Base",
      "Description": "The product does not sufficiently enforce boundaries between the states of different sessions, causing data to be provided to, or used by, the wrong session.",
      "ExtendedDescription": "\n\nData can \"bleed\" from one session to another through member variables of singleton objects, such as Servlets, and objects from a shared pool.\n\n\nIn the case of Servlets, developers sometimes do not understand that, unless a Servlet implements the SingleThreadModel interface, the Servlet is a singleton; there is only one instance of the Servlet, and that single instance is used and re-used to handle multiple requests that are processed simultaneously by different threads. A common result is that developers use Servlet member fields in such a way that one user may inadvertently see another user's data. In other words, storing user data in Servlet member fields introduces a data access race condition.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "489",
      "Name": "Active Debug Code",
      "Abstraction": "Base",
      "Description": "The product is deployed to unauthorized actors with debugging code still enabled or active, which can create unintended entry points or expose sensitive information.",
      "ExtendedDescription": "A common development practice is to add \"back door\" code specifically designed for debugging or testing purposes that is not intended to be shipped or deployed with the product. These back door entry points create security risks because they are not considered during design or testing and fall outside of the expected operating conditions of the product.",
      "AlternateTerms": [
        {
          "Term": "Leftover debug code",
          "Description": "This term originates from Seven Pernicious Kingdoms"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "49",
      "Name": "Path Equivalence: 'filename/' (Trailing Slash)",
      "Abstraction": "Variant",
      "Description": "The product accepts path input in the form of trailing slash ('filedir/') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0253",
          "Description": "Overlaps infoleak",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0253"
        },
        {
          "Reference": "CVE-2001-0446",
          "Description": "Application server allows remote attackers to read source code for .jsp files by appending a / to the requested URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0446"
        },
        {
          "Reference": "CVE-2004-0334",
          "Description": "Bypass Basic Authentication for files using trailing \"/\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0334"
        },
        {
          "Reference": "CVE-2001-0893",
          "Description": "Read sensitive files with trailing \"/\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0893"
        },
        {
          "Reference": "CVE-2001-0892",
          "Description": "Web server allows remote attackers to view sensitive files under the document root (such as .htpasswd) via a GET request with a trailing /.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0892"
        },
        {
          "Reference": "CVE-2004-1814",
          "Description": "Directory traversal vulnerability in server allows remote attackers to read protected files via .. (dot dot) sequences in an HTTP request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1814"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "491",
      "Name": "Public cloneable() Method Without Final ('Object Hijack')",
      "Abstraction": "Variant",
      "Description": "A class has a cloneable() method that is not declared final, which allows an object to be created without calling the constructor. This can cause the object to be in an unexpected state.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "492",
      "Name": "Use of Inner Class Containing Sensitive Data",
      "Abstraction": "Variant",
      "Description": "Inner classes are translated into classes that are accessible at package scope and may expose code that the programmer intended to keep private to attackers.",
      "ExtendedDescription": "Inner classes quietly introduce several security concerns because of the way they are translated into Java bytecode. In Java source code, it appears that an inner class can be declared to be accessible only by the enclosing class, but Java bytecode has no concept of an inner class, so the compiler must transform an inner class declaration into a peer class with package level access to the original outer class. More insidiously, since an inner class can access private fields in its enclosing class, once an inner class becomes a peer class in bytecode, the compiler converts private fields accessed by the inner class into protected fields.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "493",
      "Name": "Critical Public Variable Without Final Modifier",
      "Abstraction": "Variant",
      "Description": "The product has a critical public variable that is not final, which allows the variable to be modified to contain unexpected values.",
      "ExtendedDescription": "If a field is non-final and public, it can be changed once the value is set by any function that has access to the class which contains the field. This could lead to a vulnerability if other parts of the program make assumptions about the contents of that field.",
      "BackgroundDetails": [
        "Mobile code, such as a Java Applet, is code that is transmitted across a network and executed on a remote machine. Because mobile code developers have little if any control of the environment in which their code will execute, special security concerns become relevant. One of the biggest environmental threats results from the risk that the mobile code will run side-by-side with other, potentially malicious, mobile code. Because all of the popular web browsers execute code from multiple sources together in the same JVM, many of the security guidelines for mobile code are focused on preventing manipulation of your objects' state and behavior by adversaries who have access to the same virtual machine where your program is running.",
        "Final provides security by only allowing non-mutable objects to be changed after being set. However, only objects which are not extended can be made final."
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "494",
      "Name": "Download of Code Without Integrity Check",
      "Abstraction": "Base",
      "Description": "The product downloads source code or an executable from a remote location and executes the code without sufficiently verifying the origin and integrity of the code.",
      "ExtendedDescription": "An attacker can execute malicious code by compromising the host server, performing DNS spoofing, or modifying the code in transit.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-9534",
          "Description": "Satellite phone does not validate its firmware image.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-9534"
        },
        {
          "Reference": "CVE-2021-22909",
          "Description": "Chain: router's firmware update procedure uses curl with \"-k\" (insecure) option that disables certificate validation (CWE-295), allowing adversary-in-the-middle (AITM) compromise with a malicious firmware image (CWE-494).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-22909"
        },
        {
          "Reference": "CVE-2008-3438",
          "Description": "OS does not verify authenticity of its own updates.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3438"
        },
        {
          "Reference": "CVE-2008-3324",
          "Description": "online poker client does not verify authenticity of its own updates.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3324"
        },
        {
          "Reference": "CVE-2001-1125",
          "Description": "anti-virus product does not verify automatic updates for itself.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1125"
        },
        {
          "Reference": "CVE-2002-0671",
          "Description": "VOIP phone downloads applications from web sites without verifying integrity.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0671"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "495",
      "Name": "Private Data Structure Returned From A Public Method",
      "Abstraction": "Variant",
      "Description": "The product has a method that is declared public, but returns a reference to a private data structure, which could then be modified in unexpected ways.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "496",
      "Name": "Public Data Assigned to Private Array-Typed Field",
      "Abstraction": "Variant",
      "Description": "Assigning public data to a private array is equivalent to giving public access to the array.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "497",
      "Name": "Exposure of Sensitive System Information to an Unauthorized Control Sphere",
      "Abstraction": "Base",
      "Description": "The product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.",
      "ExtendedDescription": "\n\nNetwork-based products, such as web applications, often run on top of an operating system or similar environment. When the product communicates with outside parties, details about the underlying system are expected to remain hidden, such as path names for data files, other OS users, installed packages, the application environment, etc. This system information may be provided by the product itself, or buried within diagnostic or debugging messages. Debugging information helps an adversary learn about the system and form an attack plan.\n\n\nAn information exposure occurs when system data or debugging information leaves the program through an output stream or logging function that makes it accessible to unauthorized parties. Using other weaknesses, an attacker could cause errors to occur; the response to these errors can reveal detailed system information, along with other impacts. An attacker can use messages that reveal technologies, operating systems, and product versions to tune the attack against known vulnerabilities in these technologies. A product may use diagnostic methods that provide significant implementation details such as stack traces as part of its error handling mechanism.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-32638",
          "Description": "Code analysis product passes access tokens as a command-line parameter or through an environment variable, making them visible to other processes via the ps command.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-32638"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "498",
      "Name": "Cloneable Class Containing Sensitive Information",
      "Abstraction": "Variant",
      "Description": "The code contains a class with sensitive data, but the class is cloneable. The data can then be accessed by cloning the class.",
      "ExtendedDescription": "Cloneable classes are effectively open classes, since data cannot be hidden in them. Classes that do not explicitly deny cloning can be cloned by any other class without running the constructor.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "499",
      "Name": "Serializable Class Containing Sensitive Data",
      "Abstraction": "Variant",
      "Description": "The code contains a class with sensitive data, but the class does not explicitly deny serialization. The data can be accessed by serializing the class through another class.",
      "ExtendedDescription": "Serializable classes are effectively open classes since data cannot be hidden in them. Classes that do not explicitly deny serialization can be serialized by any other class, which can then in turn use the data stored inside it.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "5",
      "Name": "J2EE Misconfiguration: Data Transmission Without Encryption",
      "Abstraction": "Variant",
      "Description": "Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "50",
      "Name": "Path Equivalence: '//multiple/leading/slash'",
      "Abstraction": "Variant",
      "Description": "The product accepts path input in the form of multiple leading slash ('//multiple/leading/slash') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1483",
          "Description": "Read files with full pathname using multiple internal slash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1483"
        },
        {
          "Reference": "CVE-1999-1456",
          "Description": "Server allows remote attackers to read arbitrary files via a GET request with more than one leading / (slash) character in the filename.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1456"
        },
        {
          "Reference": "CVE-2004-0578",
          "Description": "Server allows remote attackers to read arbitrary files via leading slash (//) characters in a URL request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0578"
        },
        {
          "Reference": "CVE-2002-0275",
          "Description": "Server allows remote attackers to bypass authentication and read restricted files via an extra / (slash) in the requested URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0275"
        },
        {
          "Reference": "CVE-2004-1032",
          "Description": "Product allows local users to delete arbitrary files or create arbitrary empty files via a target filename with a large number of leading slash (/) characters.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1032"
        },
        {
          "Reference": "CVE-2002-1238",
          "Description": "Server allows remote attackers to bypass access restrictions for files via an HTTP request with a sequence of multiple / (slash) characters such as http://www.example.com///file/.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1238"
        },
        {
          "Reference": "CVE-2004-1878",
          "Description": "Product allows remote attackers to bypass authentication, obtain sensitive information, or gain access via a direct request to admin/user.pl preceded by // (double leading slash).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1878"
        },
        {
          "Reference": "CVE-2005-1365",
          "Description": "Server allows remote attackers to execute arbitrary commands via a URL with multiple leading \"/\" (slash) characters and \"..\" sequences.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1365"
        },
        {
          "Reference": "CVE-2000-1050",
          "Description": "Access directory using multiple leading slash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1050"
        },
        {
          "Reference": "CVE-2001-1072",
          "Description": "Bypass access restrictions via multiple leading slash, which causes a regular expression to fail.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1072"
        },
        {
          "Reference": "CVE-2004-0235",
          "Description": "Archive extracts to arbitrary files using multiple leading slash in filenames in the archive.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0235"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "500",
      "Name": "Public Static Field Not Marked Final",
      "Abstraction": "Variant",
      "Description": "An object contains a public static field that is not marked final, which might allow it to be modified in unexpected ways.",
      "ExtendedDescription": "Public static variables can be read without an accessor and changed without a mutator by any classes in the application.",
      "BackgroundDetails": [
        "When a field is declared public but not final, the field can be read and written to by arbitrary Java code."
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "501",
      "Name": "Trust Boundary Violation",
      "Abstraction": "Base",
      "Description": "The product mixes trusted and untrusted data in the same data structure or structured message.",
      "ExtendedDescription": "A trust boundary can be thought of as line drawn through a program. On one side of the line, data is untrusted. On the other side of the line, data is assumed to be trustworthy. The purpose of validation logic is to allow data to safely cross the trust boundary - to move from untrusted to trusted. A trust boundary violation occurs when a program blurs the line between what is trusted and what is untrusted. By combining trusted and untrusted data in the same data structure, it becomes easier for programmers to mistakenly trust unvalidated data.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "502",
      "Name": "Deserialization of Untrusted Data",
      "Abstraction": "Base",
      "Description": "The product deserializes untrusted data without sufficiently verifying that the resulting data will be valid.",
      "ExtendedDescription": "\n\nIt is often convenient to serialize objects for communication or to save them for later use. However, deserialized data or code can often be modified without using the provided accessor functions if it does not use cryptography to protect itself. Furthermore, any cryptography would still be client-side security -- which is a dangerous security assumption.\n\n\nData that is untrusted can not be trusted to be well-formed.\n\n\nWhen developers place no restrictions on \"gadget chains,\" or series of instances and method invocations that can self-execute during the deserialization process (i.e., before the object is returned to the caller), it is sometimes possible for attackers to leverage them to perform unauthorized actions, like generating a shell.\n",
      "BackgroundDetails": [
        "Serialization and deserialization refer to the process of taking program-internal object-related data, packaging it in a way that allows the data to be externally stored or transferred (\"serialization\"), then extracting the serialized data to reconstruct the original object (\"deserialization\")."
      ],
      "AlternateTerms": [
        {
          "Term": "Marshaling, Unmarshaling",
          "Description": "Marshaling and unmarshaling are effectively synonyms for serialization and deserialization, respectively."
        },
        {
          "Term": "Pickling, Unpickling",
          "Description": "In Python, the \"pickle\" functionality is used to perform serialization and deserialization."
        },
        {
          "Term": "PHP Object Injection",
          "Description": "Some PHP application researchers use this term when attacking unsafe use of the unserialize() function; but it is also used for CWE-915."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-12799",
          "Description": "chain: bypass of untrusted deserialization issue (CWE-502) by using an assumed-trusted class (CWE-183)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-12799"
        },
        {
          "Reference": "CVE-2015-8103",
          "Description": "Deserialization issue in commonly-used Java library allows remote execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2015-8103"
        },
        {
          "Reference": "CVE-2015-4852",
          "Description": "Deserialization issue in commonly-used Java library allows remote execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2015-4852"
        },
        {
          "Reference": "CVE-2013-1465",
          "Description": "Use of PHP unserialize function on untrusted input allows attacker to modify application configuration.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2013-1465"
        },
        {
          "Reference": "CVE-2012-3527",
          "Description": "Use of PHP unserialize function on untrusted input in content management system might allow code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-3527"
        },
        {
          "Reference": "CVE-2012-0911",
          "Description": "Use of PHP unserialize function on untrusted input in content management system allows code execution using a crafted cookie value.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-0911"
        },
        {
          "Reference": "CVE-2012-0911",
          "Description": "Content management system written in PHP allows unserialize of arbitrary objects, possibly allowing code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-0911"
        },
        {
          "Reference": "CVE-2011-2520",
          "Description": "Python script allows local users to execute code via pickled data.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-2520"
        },
        {
          "Reference": "CVE-2012-4406",
          "Description": "Unsafe deserialization using pickle in a Python script.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-4406"
        },
        {
          "Reference": "CVE-2003-0791",
          "Description": "Web browser allows execution of native methods via a crafted string to a JavaScript function that deserializes the string.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0791"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "506",
      "Name": "Embedded Malicious Code",
      "Abstraction": "Class",
      "Description": "The product contains code that appears to be malicious in nature.",
      "ExtendedDescription": "Malicious flaws have acquired colorful names, including Trojan horse, trapdoor, timebomb, and logic-bomb. A developer might insert malicious code with the intent to subvert the security of a product or its host system at some time in the future. It generally refers to a program that performs a useful service but exploits rights of the program's user in a way the user does not intend.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-30877",
          "Description": "A command history tool was shipped with a code-execution backdoor inserted by a malicious party.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30877"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "507",
      "Name": "Trojan Horse",
      "Abstraction": "Base",
      "Description": "The product appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "508",
      "Name": "Non-Replicating Malicious Code",
      "Abstraction": "Base",
      "Description": "Non-replicating malicious code only resides on the target system or product that is attacked; it does not attempt to spread to other systems.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "509",
      "Name": "Replicating Malicious Code (Virus or Worm)",
      "Abstraction": "Base",
      "Description": "Replicating malicious code, including viruses and worms, will attempt to attack other systems once it has successfully compromised the target system or the product.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "51",
      "Name": "Path Equivalence: '/multiple//internal/slash'",
      "Abstraction": "Variant",
      "Description": "The product accepts path input in the form of multiple internal slash ('/multiple//internal/slash/') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1483",
          "Description": "Read files with full pathname using multiple internal slash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1483"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "510",
      "Name": "Trapdoor",
      "Abstraction": "Base",
      "Description": "A trapdoor is a hidden piece of code that responds to a special input, allowing its user access to resources without passing through the normal security enforcement mechanism.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "511",
      "Name": "Logic/Time Bomb",
      "Abstraction": "Base",
      "Description": "The product contains code that is designed to disrupt the legitimate operation of the product (or its environment) when a certain time passes, or when a certain logical condition is met.",
      "ExtendedDescription": "When the time bomb or logic bomb is detonated, it may perform a denial of service such as crashing the system, deleting critical data, or degrading system response time. This bomb might be placed within either a replicating or non-replicating Trojan horse.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "512",
      "Name": "Spyware",
      "Abstraction": "Base",
      "Description": "The product collects personally identifiable information about a human user or the user's activities, but the product accesses this information using other resources besides itself, and it does not require that user's explicit approval or direct input into the product.",
      "ExtendedDescription": "\"Spyware\" is a commonly used term with many definitions and interpretations. In general, it is meant to refer to products that collect information or install functionality that human users might not allow if they were fully aware of the actions being taken by the software. For example, a user might expect that tax software would collect a social security number and include it when filing a tax return, but that same user would not expect gaming software to obtain the social security number from that tax software's data.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "514",
      "Name": "Covert Channel",
      "Abstraction": "Class",
      "Description": "A covert channel is a path that can be used to transfer information in a way not intended by the system's designers.",
      "ExtendedDescription": "Typically the system has not given authorization for the transmission and has no knowledge of its occurrence.",
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "515",
      "Name": "Covert Storage Channel",
      "Abstraction": "Base",
      "Description": "A covert storage channel transfers information through the setting of bits by one program and the reading of those bits by another. What distinguishes this case from that of ordinary operation is that the bits are used to convey encoded information.",
      "ExtendedDescription": "Covert storage channels occur when out-of-band data is stored in messages for the purpose of memory reuse. Covert channels are frequently classified as either storage or timing channels. Examples would include using a file intended to hold only audit information to convey user passwords--using the name of a file or perhaps status bits associated with it that can be read by all users to signal the contents of the file. Steganography, concealing information in such a manner that no one but the intended recipient knows of the existence of the message, is a good example of a covert storage channel.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "52",
      "Name": "Path Equivalence: '/multiple/trailing/slash//'",
      "Abstraction": "Variant",
      "Description": "The product accepts path input in the form of multiple trailing slash ('/multiple/trailing/slash//') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1078",
          "Description": "Directory listings in web server using multiple trailing slash",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1078"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "520",
      "Name": ".NET Misconfiguration: Use of Impersonation",
      "Abstraction": "Variant",
      "Description": "Allowing a .NET application to run at potentially escalated levels of access to the underlying operating and file systems can be dangerous and result in various forms of attacks.",
      "ExtendedDescription": ".NET server applications can optionally execute using the identity of the user authenticated to the client. The intention of this functionality is to bypass authentication and access control checks within the .NET application code. Authentication is done by the underlying web server (Microsoft Internet Information Service IIS), which passes the authenticated token, or unauthenticated anonymous token, to the .NET application. Using the token to impersonate the client, the application then relies on the settings within the NTFS directories and files to control access. Impersonation enables the application, on the server running the .NET application, to both execute code and access resources in the context of the authenticated and authorized user.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "521",
      "Name": "Weak Password Requirements",
      "Abstraction": "Base",
      "Description": "The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.",
      "ExtendedDescription": "Authentication mechanisms often rely on a memorized secret (also known as a password) to provide an assertion of identity for a user of a system. It is therefore important that this password be of sufficient complexity and impractical for an adversary to guess. The specific requirements around how complex a password needs to be depends on the type of system being protected. Selecting the correct password requirements and enforcing them through implementation are critical to the overall success of the authentication mechanism.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-4574",
          "Description": "key server application does not require strong passwords",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-4574"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "522",
      "Name": "Insufficiently Protected Credentials",
      "Abstraction": "Class",
      "Description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-30018",
          "Description": "A messaging platform serializes all elements of User/Group objects, making private information available to adversaries",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30018"
        },
        {
          "Reference": "CVE-2022-29959",
          "Description": "Initialization file contains credentials that can be decoded using a \"simple string transformation\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29959"
        },
        {
          "Reference": "CVE-2022-35411",
          "Description": "Python-based RPC framework enables pickle functionality by default, allowing clients to unpickle untrusted data.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-35411"
        },
        {
          "Reference": "CVE-2022-29519",
          "Description": "Programmable Logic Controller (PLC) sends sensitive information in plaintext, including passwords and session tokens.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29519"
        },
        {
          "Reference": "CVE-2022-30312",
          "Description": "Building Controller uses a protocol that transmits authentication credentials in plaintext.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30312"
        },
        {
          "Reference": "CVE-2022-31204",
          "Description": "Programmable Logic Controller (PLC) sends password in plaintext.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-31204"
        },
        {
          "Reference": "CVE-2022-30275",
          "Description": "Remote Terminal Unit (RTU) uses a driver that relies on a password stored in plaintext.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30275"
        },
        {
          "Reference": "CVE-2007-0681",
          "Description": "Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-0681"
        },
        {
          "Reference": "CVE-2000-0944",
          "Description": "Web application password change utility doesn't check the original password.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0944"
        },
        {
          "Reference": "CVE-2005-3435",
          "Description": "product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3435"
        },
        {
          "Reference": "CVE-2005-0408",
          "Description": "chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0408"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "523",
      "Name": "Unprotected Transport of Credentials",
      "Abstraction": "Base",
      "Description": "Login pages do not use adequate measures to protect the user name and password while they are in transit from the client to the server.",
      "BackgroundDetails": [
        "SSL (Secure Socket Layer) provides data confidentiality and integrity to HTTP. By encrypting HTTP messages, SSL protects from attackers eavesdropping or altering message contents."
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "524",
      "Name": "Use of Cache Containing Sensitive Information",
      "Abstraction": "Base",
      "Description": "The code uses a cache that contains sensitive information, but the cache can be read by an actor outside of the intended control sphere.",
      "ExtendedDescription": "Applications may use caches to improve efficiency when communicating with remote entities or performing intensive calculations. A cache maintains a pool of objects, threads, connections, pages, financial data, passwords, or other resources to minimize the time it takes to initialize and access these resources. If the cache is accessible to unauthorized actors, attackers can read the cache and obtain this sensitive information.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "525",
      "Name": "Use of Web Browser Cache Containing Sensitive Information",
      "Abstraction": "Variant",
      "Description": "The web application does not use an appropriate caching policy that specifies the extent to which each web page and associated form fields should be cached.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "526",
      "Name": "Cleartext Storage of Sensitive Information in an Environment Variable",
      "Abstraction": "Variant",
      "Description": "The product uses an environment variable to store unencrypted sensitive information.",
      "ExtendedDescription": "Information stored in an environment variable can be accessible by other processes with the execution context, including child processes that dependencies are executed in, or serverless functions in cloud environments. An environment variable's contents can also be inserted into messages, headers, log files, or other outputs. Often these other dependencies have no need to use the environment variable in question. A weakness that discloses environment variables could expose this information.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-43691",
          "Description": "CMS shows sensitive server-side information from environment variables when run in Debug mode.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-43691"
        },
        {
          "Reference": "CVE-2022-27195",
          "Description": "Plugin for an automation server inserts environment variable contents into build XML files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-27195"
        },
        {
          "Reference": "CVE-2022-25264",
          "Description": "CI/CD tool logs environment variables related to passwords add Contribution to content history.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-25264"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "527",
      "Name": "Exposure of Version-Control Repository to an Unauthorized Control Sphere",
      "Abstraction": "Variant",
      "Description": "The product stores a CVS, git, or other repository in a directory, archive, or other resource that is stored, transferred, or otherwise made accessible to unauthorized actors.",
      "ExtendedDescription": "Version control repositories such as CVS or git store version-specific metadata and other details within subdirectories. If these subdirectories are stored on a web server or added to an archive, then these could be used by an attacker. This information may include usernames, filenames, path root, IP addresses, and detailed \"diff\" data about how files have been changed - which could reveal source code snippets that were never intended to be made public.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "528",
      "Name": "Exposure of Core Dump File to an Unauthorized Control Sphere",
      "Abstraction": "Variant",
      "Description": "The product generates a core dump file in a directory, archive, or other resource that is stored, transferred, or otherwise made accessible to unauthorized actors.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "529",
      "Name": "Exposure of Access Control List Files to an Unauthorized Control Sphere",
      "Abstraction": "Variant",
      "Description": "The product stores access control list files in a directory or other container that is accessible to actors outside of the intended control sphere.",
      "ExtendedDescription": "Exposure of these access control list files may give the attacker information about the configuration of the site or system. This information may then be used to bypass the intended security policy or identify trusted systems from which an attack can be launched.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "53",
      "Name": "Path Equivalence: '\\multiple\\\\internal\\backslash'",
      "Abstraction": "Variant",
      "Description": "The product accepts path input in the form of multiple internal backslash ('\\multiple\\trailing\\\\slash') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "530",
      "Name": "Exposure of Backup File to an Unauthorized Control Sphere",
      "Abstraction": "Variant",
      "Description": "A backup file is stored in a directory or archive that is made accessible to unauthorized actors.",
      "ExtendedDescription": "Often, older backup files are renamed with an extension such as .~bk to distinguish them from production files. The source code for old files that have been renamed in this manner and left in the webroot can often be retrieved. This renaming may have been performed automatically by the web server, or manually by the administrator.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "531",
      "Name": "Inclusion of Sensitive Information in Test Code",
      "Abstraction": "Variant",
      "Description": "Accessible test applications can pose a variety of security risks. Since developers or administrators rarely consider that someone besides themselves would even know about the existence of these applications, it is common for them to contain sensitive information or functions.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "532",
      "Name": "Insertion of Sensitive Information into Log File",
      "Abstraction": "Base",
      "Description": "Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.",
      "ExtendedDescription": "\n\nWhile logging all information may be helpful during development stages, it is important that logging levels be set appropriately before a product ships so that sensitive user data and system information are not accidentally exposed to potential attackers.\n\n\nDifferent log files may be produced and stored for:\n\n\n  - Server log files (e.g. server.log). This can give information on whatever application left the file. Usually this can give full path names and system information, and sometimes usernames and passwords.\n\n  - log files that are used for debugging\n\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2017-9615",
          "Description": "verbose logging stores admin credentials in a world-readable log file",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-9615"
        },
        {
          "Reference": "CVE-2018-1999036",
          "Description": "SSH password for private key stored in build log",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-1999036"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "535",
      "Name": "Exposure of Information Through Shell Error Message",
      "Abstraction": "Variant",
      "Description": "A command shell error message indicates that there exists an unhandled exception in the web application code. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "536",
      "Name": "Servlet Runtime Error Message Containing Sensitive Information",
      "Abstraction": "Variant",
      "Description": "A servlet error message indicates that there exists an unhandled exception in your web application code and may provide useful information to an attacker.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "537",
      "Name": "Java Runtime Error Message Containing Sensitive Information",
      "Abstraction": "Variant",
      "Description": "In many cases, an attacker can leverage the conditions that cause unhandled exception errors in order to gain unauthorized access to the system.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "538",
      "Name": "Insertion of Sensitive Information into Externally-Accessible File or Directory",
      "Abstraction": "Base",
      "Description": "The product places sensitive information into files or directories that are accessible to actors who are allowed to have access to the files, but not to the sensitive information.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2018-1999036",
          "Description": "SSH password for private key stored in build log",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-1999036"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "539",
      "Name": "Use of Persistent Cookies Containing Sensitive Information",
      "Abstraction": "Variant",
      "Description": "The web application uses persistent cookies, but the cookies contain sensitive information.",
      "ExtendedDescription": "Cookies are small bits of data that are sent by the web application but stored locally in the browser. This lets the application use the cookie to pass information between pages and store variable information. The web application controls what information is stored in a cookie and how it is used. Typical types of information stored in cookies are session identifiers, personalization and customization information, and in rare cases even usernames to enable automated logins. There are two different types of cookies: session cookies and persistent cookies. Session cookies just live in the browser's memory and are not stored anywhere, but persistent cookies are stored on the browser's hard drive. This can cause security and privacy issues depending on the information stored in the cookie and how it is accessed.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "54",
      "Name": "Path Equivalence: 'filedir\\' (Trailing Backslash)",
      "Abstraction": "Variant",
      "Description": "The product accepts path input in the form of trailing backslash ('filedir\\') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-0847",
          "Description": "web framework for .NET allows remote attackers to bypass authentication for .aspx files in restricted directories via a request containing a (1) \"\\\" (backslash) or (2) \"%5C\" (encoded backslash)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0847"
        },
        {
          "Reference": "CVE-2004-0061",
          "Description": "Bypass directory access restrictions using trailing dot in URL",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0061"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "540",
      "Name": "Inclusion of Sensitive Information in Source Code",
      "Abstraction": "Base",
      "Description": "Source code on a web server or repository often contains sensitive information and should generally not be accessible to users.",
      "ExtendedDescription": "There are situations where it is critical to remove source code from an area or server. For example, obtaining Perl source code on a system allows an attacker to understand the logic of the script and extract extremely useful information such as code bugs or logins and passwords.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-25512",
          "Description": "Server for Team Awareness Kit (TAK) application includes sensitive tokens in the JavaScript source code.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-25512"
        },
        {
          "Reference": "CVE-2022-24867",
          "Description": "The LDAP password might be visible in the html code of a rendered page in an IT Asset Management tool.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-24867"
        },
        {
          "Reference": "CVE-2007-6197",
          "Description": "Version numbers and internal hostnames leaked in HTML comments.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-6197"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "541",
      "Name": "Inclusion of Sensitive Information in an Include File",
      "Abstraction": "Variant",
      "Description": "If an include file source is accessible, the file can contain usernames and passwords, as well as sensitive information pertaining to the application and system.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "543",
      "Name": "Use of Singleton Pattern Without Synchronization in a Multithreaded Context",
      "Abstraction": "Variant",
      "Description": "The product uses the singleton pattern when creating a resource within a multithreaded environment.",
      "ExtendedDescription": "The use of a singleton pattern may not be thread-safe.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "544",
      "Name": "Missing Standardized Error Handling Mechanism",
      "Abstraction": "Base",
      "Description": "The product does not use a standardized method for handling errors throughout the code, which might introduce inconsistent error handling and resultant weaknesses.",
      "ExtendedDescription": "If the product handles error messages individually, on a one-by-one basis, this is likely to result in inconsistent error handling. The causes of errors may be lost. Also, detailed information about the causes of an error may be unintentionally returned to the user.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "546",
      "Name": "Suspicious Comment",
      "Abstraction": "Variant",
      "Description": "The code contains comments that suggest the presence of bugs, incomplete functionality, or weaknesses.",
      "ExtendedDescription": "Many suspicious comments, such as BUG, HACK, FIXME, LATER, LATER2, TODO, in the code indicate missing security functionality and checking. Others indicate code problems that programmers should fix, such as hard-coded variables, error handling, not using stored procedures, and performance issues.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "547",
      "Name": "Use of Hard-coded, Security-relevant Constants",
      "Abstraction": "Base",
      "Description": "The product uses hard-coded constants instead of symbolic names for security-critical values, which increases the likelihood of mistakes during code maintenance or security policy change.",
      "ExtendedDescription": "If the developer does not find all occurrences of the hard-coded constants, an incorrect policy decision may be made if one of the constants is not changed. Making changes to these values will require code changes that may be difficult or impossible once the system is released to the field. In addition, these hard-coded values may become available to attackers if the code is ever disclosed.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "548",
      "Name": "Exposure of Information Through Directory Listing",
      "Abstraction": "Variant",
      "Description": "A directory listing is inappropriately exposed, yielding potentially sensitive information to attackers.",
      "ExtendedDescription": "A directory listing provides an attacker with the complete index of all the resources located inside of the directory. The specific risks and consequences vary depending on which files are listed and accessible.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "549",
      "Name": "Missing Password Field Masking",
      "Abstraction": "Base",
      "Description": "The product does not mask passwords during entry, increasing the potential for attackers to observe and capture passwords.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "55",
      "Name": "Path Equivalence: '/./' (Single Dot Directory)",
      "Abstraction": "Variant",
      "Description": "The product accepts path input in the form of single dot directory exploit ('/./') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-0004",
          "Description": "Server allows remote attackers to read source code for executable files by inserting a . (dot) into the URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0004"
        },
        {
          "Reference": "CVE-2002-0304",
          "Description": "Server allows remote attackers to read password-protected files via a /./ in the HTTP request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0304"
        },
        {
          "Reference": "CVE-1999-1083",
          "Description": "Possibly (could be a cleansing error)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1083"
        },
        {
          "Reference": "CVE-2004-0815",
          "Description": "\"/./////etc\" cleansed to \".///etc\" then \"/etc\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0815"
        },
        {
          "Reference": "CVE-2002-0112",
          "Description": "Server allows remote attackers to view password protected files via /./ in the URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0112"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "550",
      "Name": "Server-generated Error Message Containing Sensitive Information",
      "Abstraction": "Variant",
      "Description": "Certain conditions, such as network failure, will cause a server error message to be displayed.",
      "ExtendedDescription": "While error messages in and of themselves are not dangerous, per se, it is what an attacker can glean from them that might cause eventual problems.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "551",
      "Name": "Incorrect Behavior Order: Authorization Before Parsing and Canonicalization",
      "Abstraction": "Base",
      "Description": "If a web server does not fully parse requested URLs before it examines them for authorization, it may be possible for an attacker to bypass authorization protection.",
      "ExtendedDescription": "For instance, the character strings /./ and / both mean current directory. If /SomeDirectory is a protected directory and an attacker requests /./SomeDirectory, the attacker may be able to gain access to the resource if /./ is not converted to / before the authorization check is performed.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "552",
      "Name": "Files or Directories Accessible to External Parties",
      "Abstraction": "Base",
      "Description": "The product makes files or directories accessible to unauthorized actors, even though they should not be.",
      "ExtendedDescription": "\n\nWeb servers, FTP servers, and similar servers may store a set of files underneath a \"root\" directory that is accessible to the server's users. Applications may store sensitive files underneath this root without also using access control to limit which users may request those files, if any. Alternately, an application might package multiple files or directories into an archive file (e.g., ZIP or tar), but the application might not exclude sensitive files that are underneath those directories.\n\n\nIn cloud technologies and containers, this weakness might present itself in the form of misconfigured storage accounts that can be read or written by a public or anonymous user.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-1835",
          "Description": "Data file under web root.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1835"
        }
      ],
      "AffectedResources": [
        "File or Directory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "553",
      "Name": "Command Shell in Externally Accessible Directory",
      "Abstraction": "Variant",
      "Description": "A possible shell file exists in /cgi-bin/ or other accessible directories. This is extremely dangerous and can be used by an attacker to execute commands on the web server.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "554",
      "Name": "ASP.NET Misconfiguration: Not Using Input Validation Framework",
      "Abstraction": "Variant",
      "Description": "The ASP.NET application does not use an input validation framework.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "555",
      "Name": "J2EE Misconfiguration: Plaintext Password in Configuration File",
      "Abstraction": "Variant",
      "Description": "The J2EE application stores a plaintext password in a configuration file.",
      "ExtendedDescription": "Storing a plaintext password in a configuration file allows anyone who can read the file to access the password-protected resource, making it an easy target for attackers.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "556",
      "Name": "ASP.NET Misconfiguration: Use of Identity Impersonation",
      "Abstraction": "Variant",
      "Description": "Configuring an ASP.NET application to run with impersonated credentials may give the application unnecessary privileges.",
      "ExtendedDescription": "The use of impersonated credentials allows an ASP.NET application to run with either the privileges of the client on whose behalf it is executing or with arbitrary privileges granted in its configuration.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "558",
      "Name": "Use of getlogin() in Multithreaded Application",
      "Abstraction": "Variant",
      "Description": "The product uses the getlogin() function in a multithreaded context, potentially causing it to return incorrect values.",
      "ExtendedDescription": "The getlogin() function returns a pointer to a string that contains the name of the user associated with the calling process. The function is not reentrant, meaning that if it is called from another process, the contents are not locked out and the value of the string can be changed by another process. This makes it very risky to use because the username can be changed by other processes, so the results of the function cannot be trusted.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "56",
      "Name": "Path Equivalence: 'filedir*' (Wildcard)",
      "Abstraction": "Variant",
      "Description": "The product accepts path input in the form of asterisk wildcard ('filedir*') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-0696",
          "Description": "List directories using desired path and \"*\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0696"
        },
        {
          "Reference": "CVE-2002-0433",
          "Description": "List files in web server using \"*.ext\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0433"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "560",
      "Name": "Use of umask() with chmod-style Argument",
      "Abstraction": "Variant",
      "Description": "The product calls umask() with an incorrect argument that is specified as if it is an argument to chmod().",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "561",
      "Name": "Dead Code",
      "Abstraction": "Base",
      "Description": "The product contains dead code, which can never be executed.",
      "ExtendedDescription": "Dead code is code that can never be executed in a running program. The surrounding code makes it impossible for a section of code to ever be executed.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2014-1266",
          "Description": "chain: incorrect \"goto\" in Apple SSL product bypasses certificate validation, allowing Adversary-in-the-Middle (AITM) attack (Apple \"goto fail\" bug). CWE-705 (Incorrect Control Flow Scoping) -> CWE-561 (Dead Code) -> CWE-295 (Improper Certificate Validation) -> CWE-393 (Return of Wrong Status Code) -> CWE-300 (Channel Accessible by Non-Endpoint).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-1266"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "562",
      "Name": "Return of Stack Variable Address",
      "Abstraction": "Base",
      "Description": "A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.",
      "ExtendedDescription": "Because local variables are allocated on the stack, when a program returns a pointer to a local variable, it is returning a stack address. A subsequent function call is likely to re-use this same stack address, thereby overwriting the value of the pointer, which no longer corresponds to the same variable since a function's stack frame is invalidated when it returns. At best this will cause the value of the pointer to change unexpectedly. In many cases it causes the program to crash the next time the pointer is dereferenced.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "563",
      "Name": "Assignment to Variable without Use",
      "Abstraction": "Base",
      "Description": "The variable's value is assigned but never used, making it a dead store.",
      "ExtendedDescription": "After the assignment, the variable is either assigned another value or goes out of scope. It is likely that the variable is simply vestigial, but it is also possible that the unused variable points out a bug.",
      "AlternateTerms": [
        {
          "Term": "Unused Variable"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "564",
      "Name": "SQL Injection: Hibernate",
      "Abstraction": "Variant",
      "Description": "Using Hibernate to execute a dynamic SQL statement built with user-controlled input can allow an attacker to modify the statement's meaning or to execute arbitrary SQL commands.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "565",
      "Name": "Reliance on Cookies without Validation and Integrity Checking",
      "Abstraction": "Base",
      "Description": "The product relies on the existence or values of cookies when performing security-critical operations, but it does not properly ensure that the setting is valid for the associated user.",
      "ExtendedDescription": "Attackers can easily modify cookies, within the browser or by implementing the client-side code outside of the browser. Reliance on cookies without detailed validation and integrity checking can allow attackers to bypass authentication, conduct injection attacks such as SQL injection and cross-site scripting, or otherwise modify inputs in unexpected ways.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2008-5784",
          "Description": "e-dating application allows admin privileges by setting the admin cookie to 1.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5784"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "566",
      "Name": "Authorization Bypass Through User-Controlled SQL Primary Key",
      "Abstraction": "Variant",
      "Description": "The product uses a database table that includes records that should not be accessible to an actor, but it executes a SQL statement with a primary key that can be controlled by that actor.",
      "ExtendedDescription": "\n\nWhen a user can set a primary key to any value, then the user can modify the key to point to unauthorized records.\n\n\nDatabase access control errors occur when:\n\n\n  - Data enters a program from an untrusted source.\n\n  - The data is used to specify the value of a primary key in a SQL query.\n\n  - The untrusted source does not have the permissions to be able to access all rows in the associated table.\n\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "567",
      "Name": "Unsynchronized Access to Shared Data in a Multithreaded Context",
      "Abstraction": "Base",
      "Description": "The product does not properly synchronize shared data, such as static variables across threads, which can lead to undefined behavior and unpredictable data changes.",
      "ExtendedDescription": "\n\nWithin servlets, shared static variables are not protected from concurrent access, but servlets are multithreaded. This is a typical programming mistake in J2EE applications, since the multithreading is handled by the framework. When a shared variable can be influenced by an attacker, one thread could wind up modifying the variable to contain data that is not valid for a different thread that is also using the data within the variable.\n\n\nNote that this weakness is not unique to servlets.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "568",
      "Name": "finalize() Method Without super.finalize()",
      "Abstraction": "Variant",
      "Description": "The product contains a finalize() method that does not call super.finalize().",
      "ExtendedDescription": "The Java Language Specification states that it is a good practice for a finalize() method to call super.finalize().",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "57",
      "Name": "Path Equivalence: 'fakedir/../realdir/filename'",
      "Abstraction": "Variant",
      "Description": "The product contains protection mechanisms to restrict access to 'realdir/filename', but it constructs pathnames using external input in the form of 'fakedir/../realdir/filename' that are not handled by those mechanisms. This allows attackers to perform unauthorized actions against the targeted file.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-1152",
          "Description": "Proxy allows remote attackers to bypass denylist restrictions and connect to unauthorized web servers by modifying the requested URL, including (1) a // (double slash), (2) a /SUBDIR/.. where the desired file is in the parentdir, (3) a /./, or (4) URL-encoded characters.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1152"
        },
        {
          "Reference": "CVE-2000-0191",
          "Description": "application check access for restricted URL before canonicalization",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0191"
        },
        {
          "Reference": "CVE-2005-1366",
          "Description": "CGI source disclosure using \"dirname/../cgi-bin\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1366"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "570",
      "Name": "Expression is Always False",
      "Abstraction": "Base",
      "Description": "The product contains an expression that will always evaluate to false.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "571",
      "Name": "Expression is Always True",
      "Abstraction": "Base",
      "Description": "The product contains an expression that will always evaluate to true.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "572",
      "Name": "Call to Thread run() instead of start()",
      "Abstraction": "Variant",
      "Description": "The product calls a thread's run() method instead of calling start(), which causes the code to run in the thread of the caller instead of the callee.",
      "ExtendedDescription": "In most cases a direct call to a Thread object's run() method is a bug. The programmer intended to begin a new thread of control, but accidentally called run() instead of start(), so the run() method will execute in the caller's thread of control.",
      "AffectedResources": [
        "System Process"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "573",
      "Name": "Improper Following of Specification by Caller",
      "Abstraction": "Class",
      "Description": "The product does not follow or incorrectly follows the specifications as required by the implementation language, environment, framework, protocol, or platform.",
      "ExtendedDescription": "When leveraging external functionality, such as an API, it is important that the caller does so in accordance with the requirements of the external functionality or else unintended behaviors may result, possibly leaving the system vulnerable to any number of exploits.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2006-7140",
          "Description": "Crypto implementation removes padding when it shouldn't, allowing forged signatures",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-7140"
        },
        {
          "Reference": "CVE-2006-4339",
          "Description": "Crypto implementation removes padding when it shouldn't, allowing forged signatures",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4339"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "574",
      "Name": "EJB Bad Practices: Use of Synchronization Primitives",
      "Abstraction": "Variant",
      "Description": "The product violates the Enterprise JavaBeans (EJB) specification by using thread synchronization primitives.",
      "ExtendedDescription": "The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the following EJB guideline: \"An enterprise bean must not use thread synchronization primitives to synchronize execution of multiple instances.\" The specification justifies this requirement in the following way: \"This rule is required to ensure consistent runtime semantics because while some EJB containers may use a single JVM to execute all enterprise bean's instances, others may distribute the instances across multiple JVMs.\"",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "575",
      "Name": "EJB Bad Practices: Use of AWT Swing",
      "Abstraction": "Variant",
      "Description": "The product violates the Enterprise JavaBeans (EJB) specification by using AWT/Swing.",
      "ExtendedDescription": "The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the following EJB guideline: \"An enterprise bean must not use the AWT functionality to attempt to output information to a display, or to input information from a keyboard.\" The specification justifies this requirement in the following way: \"Most servers do not allow direct interaction between an application program and a keyboard/display attached to the server system.\"",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "576",
      "Name": "EJB Bad Practices: Use of Java I/O",
      "Abstraction": "Variant",
      "Description": "The product violates the Enterprise JavaBeans (EJB) specification by using the java.io package.",
      "ExtendedDescription": "The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the following EJB guideline: \"An enterprise bean must not use the java.io package to attempt to access files and directories in the file system.\" The specification justifies this requirement in the following way: \"The file system APIs are not well-suited for business components to access data. Business components should use a resource manager API, such as JDBC, to store data.\"",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "577",
      "Name": "EJB Bad Practices: Use of Sockets",
      "Abstraction": "Variant",
      "Description": "The product violates the Enterprise JavaBeans (EJB) specification by using sockets.",
      "ExtendedDescription": "The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the following EJB guideline: \"An enterprise bean must not attempt to listen on a socket, accept connections on a socket, or use a socket for multicast.\" The specification justifies this requirement in the following way: \"The EJB architecture allows an enterprise bean instance to be a network socket client, but it does not allow it to be a network server. Allowing the instance to become a network server would conflict with the basic function of the enterprise bean-- to serve the EJB clients.\"",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "578",
      "Name": "EJB Bad Practices: Use of Class Loader",
      "Abstraction": "Variant",
      "Description": "The product violates the Enterprise JavaBeans (EJB) specification by using the class loader.",
      "ExtendedDescription": "The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the following EJB guideline: \"The enterprise bean must not attempt to create a class loader; obtain the current class loader; set the context class loader; set security manager; create a new security manager; stop the JVM; or change the input, output, and error streams.\" The specification justifies this requirement in the following way: \"These functions are reserved for the EJB container. Allowing the enterprise bean to use these functions could compromise security and decrease the container's ability to properly manage the runtime environment.\"",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "579",
      "Name": "J2EE Bad Practices: Non-serializable Object Stored in Session",
      "Abstraction": "Variant",
      "Description": "The product stores a non-serializable object as an HttpSession attribute, which can hurt reliability.",
      "ExtendedDescription": "A J2EE application can make use of multiple JVMs in order to improve application reliability and performance. In order to make the multiple JVMs appear as a single application to the end user, the J2EE container can replicate an HttpSession object across multiple JVMs so that if one JVM becomes unavailable another can step in and take its place without disrupting the flow of the application. This is only possible if all session data is serializable, allowing the session to be duplicated between the JVMs.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "58",
      "Name": "Path Equivalence: Windows 8.3 Filename",
      "Abstraction": "Variant",
      "Description": "The product contains a protection mechanism that restricts access to a long filename on a Windows operating system, but it does not properly restrict access to the equivalent short \"8.3\" filename.",
      "ExtendedDescription": "On later Windows operating systems, a file can have a \"long name\" and a short name that is compatible with older Windows file systems, with up to 8 characters in the filename and 3 characters for the extension. These \"8.3\" filenames, therefore, act as an alternate name for files with long names, so they are useful pathname equivalence manipulations.",
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-0012",
          "Description": "Multiple web servers allow restriction bypass using 8.3 names instead of long names",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0012"
        },
        {
          "Reference": "CVE-2001-0795",
          "Description": "Source code disclosure using 8.3 file name.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0795"
        },
        {
          "Reference": "CVE-2005-0471",
          "Description": "Multi-Factor Vulnerability. Product generates temporary filenames using long filenames, which become predictable in 8.3 format.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0471"
        }
      ],
      "FunctionalAreas": [
        "File Processing"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "580",
      "Name": "clone() Method Without super.clone()",
      "Abstraction": "Variant",
      "Description": "The product contains a clone() method that does not call super.clone() to obtain the new object.",
      "ExtendedDescription": "All implementations of clone() should obtain the new object by calling super.clone(). If a class does not follow this convention, a subclass's clone() method will return an object of the wrong type.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "581",
      "Name": "Object Model Violation: Just One of Equals and Hashcode Defined",
      "Abstraction": "Variant",
      "Description": "The product does not maintain equal hashcodes for equal objects.",
      "ExtendedDescription": "Java objects are expected to obey a number of invariants related to equality. One of these invariants is that equal objects must have equal hashcodes. In other words, if a.equals(b) == true then a.hashCode() == b.hashCode().",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "582",
      "Name": "Array Declared Public, Final, and Static",
      "Abstraction": "Variant",
      "Description": "The product declares an array public, final, and static, which is not sufficient to prevent the array's contents from being modified.",
      "ExtendedDescription": "Because arrays are mutable objects, the final constraint requires that the array object itself be assigned only once, but makes no guarantees about the values of the array elements. Since the array is public, a malicious program can change the values stored in the array. As such, in most cases an array declared public, final and static is a bug.",
      "BackgroundDetails": [
        "Mobile code, in this case a Java Applet, is code that is transmitted across a network and executed on a remote machine. Because mobile code developers have little if any control of the environment in which their code will execute, special security concerns become relevant. One of the biggest environmental threats results from the risk that the mobile code will run side-by-side with other, potentially malicious, mobile code. Because all of the popular web browsers execute code from multiple sources together in the same JVM, many of the security guidelines for mobile code are focused on preventing manipulation of your objects' state and behavior by adversaries who have access to the same virtual machine where your product is running."
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "583",
      "Name": "finalize() Method Declared Public",
      "Abstraction": "Variant",
      "Description": "The product violates secure coding principles for mobile code by declaring a finalize() method public.",
      "ExtendedDescription": "A product should never call finalize explicitly, except to call super.finalize() inside an implementation of finalize(). In mobile code situations, the otherwise error prone practice of manual garbage collection can become a security threat if an attacker can maliciously invoke a finalize() method because it is declared with public access.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "584",
      "Name": "Return Inside Finally Block",
      "Abstraction": "Base",
      "Description": "The code has a return statement inside a finally block, which will cause any thrown exception in the try block to be discarded.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "585",
      "Name": "Empty Synchronized Block",
      "Abstraction": "Variant",
      "Description": "The product contains an empty synchronized block.",
      "ExtendedDescription": "An empty synchronized block does not actually accomplish any synchronization and may indicate a troubled section of code. An empty synchronized block can occur because code no longer needed within the synchronized block is commented out without removing the synchronized block.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "586",
      "Name": "Explicit Call to Finalize()",
      "Abstraction": "Base",
      "Description": "The product makes an explicit call to the finalize() method from outside the finalizer.",
      "ExtendedDescription": "While the Java Language Specification allows an object's finalize() method to be called from outside the finalizer, doing so is usually a bad idea. For example, calling finalize() explicitly means that finalize() will be called more than once: the first time will be the explicit call and the last time will be the call that is made after the object is garbage collected.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "587",
      "Name": "Assignment of a Fixed Address to a Pointer",
      "Abstraction": "Variant",
      "Description": "The product sets a pointer to a specific address other than NULL or 0.",
      "ExtendedDescription": "Using a fixed address is not portable, because that address will probably not be valid in all environments or platforms.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "588",
      "Name": "Attempt to Access Child of a Non-structure Pointer",
      "Abstraction": "Variant",
      "Description": "Casting a non-structure type to a structure type and accessing a field can lead to memory access errors or data corruption.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-3510",
          "Description": "JSON decoder accesses a C union using an invalid offset to an object",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-3510"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "589",
      "Name": "Call to Non-ubiquitous API",
      "Abstraction": "Variant",
      "Description": "The product uses an API function that does not exist on all versions of the target platform. This could cause portability problems or inconsistencies that allow denial of service or other consequences.",
      "ExtendedDescription": "Some functions that offer security features supported by the OS are not available on all versions of the OS in common use. Likewise, functions are often deprecated or made obsolete for security reasons and should not be used.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "59",
      "Name": "Improper Link Resolution Before File Access ('Link Following')",
      "Abstraction": "Base",
      "Description": "The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.",
      "BackgroundDetails": [
        "Soft links are a UNIX term that is synonymous with simple shortcuts on Windows-based platforms."
      ],
      "AlternateTerms": [
        {
          "Term": "insecure temporary file",
          "Description": "Some people use the phrase \"insecure temporary file\" when referring to a link following weakness, but other weaknesses can produce insecure temporary files without any symlink involvement at all."
        },
        {
          "Term": "Zip Slip",
          "Description": "\"Zip slip\" is an attack that uses file archives (e.g., ZIP, tar, rar, etc.) that contain filenames with path traversal sequences that cause the files to be written outside of the directory under which the archive is expected to be extracted [REF-1282]. It is most commonly used for relative path traversal (CWE-23) and link following (CWE-59)."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-1386",
          "Description": "Some versions of Perl follow symbolic links when running with the -e option, which allows local users to overwrite arbitrary files via a symlink attack.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1386"
        },
        {
          "Reference": "CVE-2000-1178",
          "Description": "Text editor follows symbolic links when creating a rescue copy during an abnormal exit, which allows local users to overwrite the files of other users.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1178"
        },
        {
          "Reference": "CVE-2004-0217",
          "Description": "Antivirus update allows local users to create or append to arbitrary files via a symlink attack on a logfile.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0217"
        },
        {
          "Reference": "CVE-2003-0517",
          "Description": "Symlink attack allows local users to overwrite files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0517"
        },
        {
          "Reference": "CVE-2004-0689",
          "Description": "Window manager does not properly handle when certain symbolic links point to \"stale\" locations, which could allow local users to create or truncate arbitrary files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0689"
        },
        {
          "Reference": "CVE-2005-1879",
          "Description": "Second-order symlink vulnerabilities",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1879"
        },
        {
          "Reference": "CVE-2005-1880",
          "Description": "Second-order symlink vulnerabilities",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1880"
        },
        {
          "Reference": "CVE-2005-1916",
          "Description": "Symlink in Python program",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1916"
        },
        {
          "Reference": "CVE-2000-0972",
          "Description": "Setuid product allows file reading by replacing a file being edited with a symlink to the targeted file, leaking the result in error messages when parsing fails.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0972"
        },
        {
          "Reference": "CVE-2005-0824",
          "Description": "Signal causes a dump that follows symlinks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0824"
        },
        {
          "Reference": "CVE-2001-1494",
          "Description": "Hard link attack, file overwrite; interesting because program checks against soft links",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1494"
        },
        {
          "Reference": "CVE-2002-0793",
          "Description": "Hard link and possibly symbolic link following vulnerabilities in embedded operating system allow local users to overwrite arbitrary files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0793"
        },
        {
          "Reference": "CVE-2003-0578",
          "Description": "Server creates hard links and unlinks files as root, which allows local users to gain privileges by deleting and overwriting arbitrary files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0578"
        },
        {
          "Reference": "CVE-1999-0783",
          "Description": "Operating system allows local users to conduct a denial of service by creating a hard link from a device special file to a file on an NFS file system.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0783"
        },
        {
          "Reference": "CVE-2004-1603",
          "Description": "Web hosting manager follows hard links, which allows local users to read or modify arbitrary files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1603"
        },
        {
          "Reference": "CVE-2004-1901",
          "Description": "Package listing system allows local users to overwrite arbitrary files via a hard link attack on the lockfiles.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1901"
        },
        {
          "Reference": "CVE-2005-1111",
          "Description": "Hard link race condition",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1111"
        },
        {
          "Reference": "CVE-2000-0342",
          "Description": "Mail client allows remote attackers to bypass the user warning for executable attachments such as .exe, .com, and .bat by using a .lnk file that refers to the attachment, aka \"Stealth Attachment.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0342"
        },
        {
          "Reference": "CVE-2001-1042",
          "Description": "FTP server allows remote attackers to read arbitrary files and directories by uploading a .lnk (link) file that points to the target file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1042"
        },
        {
          "Reference": "CVE-2001-1043",
          "Description": "FTP server allows remote attackers to read arbitrary files and directories by uploading a .lnk (link) file that points to the target file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1043"
        },
        {
          "Reference": "CVE-2005-0587",
          "Description": "Browser allows remote malicious web sites to overwrite arbitrary files by tricking the user into downloading a .LNK (link) file twice, which overwrites the file that was referenced in the first .LNK file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0587"
        },
        {
          "Reference": "CVE-2001-1386",
          "Description": "\".LNK.\" - .LNK with trailing dot",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1386"
        },
        {
          "Reference": "CVE-2003-1233",
          "Description": "Rootkits can bypass file access restrictions to Windows kernel directories using NtCreateSymbolicLinkObject function to create symbolic link",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1233"
        },
        {
          "Reference": "CVE-2002-0725",
          "Description": "File system allows local attackers to hide file usage activities via a hard link to the target file, which causes the link to be recorded in the audit trail instead of the target file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0725"
        },
        {
          "Reference": "CVE-2003-0844",
          "Description": "Web server plugin allows local users to overwrite arbitrary files via a symlink attack on predictable temporary filenames.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0844"
        },
        {
          "Reference": "CVE-2015-3629",
          "Description": "A Libcontainer used in Docker Engine allows local users to escape containerization and write to an arbitrary file on the host system via a symlink attack in an image when respawning a container.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2015-3629"
        },
        {
          "Reference": "CVE-2021-21272",
          "Description": "\"Zip Slip\" vulnerability in Go-based Open Container Initiative (OCI) registries product allows writing arbitrary files outside intended directory via symbolic links or hard links in a gzipped tarball.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-21272"
        },
        {
          "Reference": "CVE-2020-27833",
          "Description": "\"Zip Slip\" vulnerability in container management product allows writing arbitrary files outside intended directory via a container image (.tar format) with filenames that are symbolic links that point to other files within the same tar file; however, the files being pointed to can also be symbolic links to destinations outside the intended directory, bypassing the initial check.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-27833"
        }
      ],
      "FunctionalAreas": [
        "File Processing"
      ],
      "AffectedResources": [
        "File or Directory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "590",
      "Name": "Free of Memory not on the Heap",
      "Abstraction": "Variant",
      "Description": "The product calls free() on a pointer to memory that was not allocated using associated heap allocation functions such as malloc(), calloc(), or realloc().",
      "ExtendedDescription": "When free() is called on an invalid pointer, the program's memory management data structures may become corrupted. This corruption can cause the program to crash or, in some circumstances, an attacker may be able to cause free() to operate on controllable memory locations to modify critical program variables or execute code.",
      "AffectedResources": [
        "Memory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "591",
      "Name": "Sensitive Data Storage in Improperly Locked Memory",
      "Abstraction": "Variant",
      "Description": "The product stores sensitive data in memory that is not locked, or that has been incorrectly locked, which might cause the memory to be written to swap files on disk by the virtual memory manager. This can make the data more accessible to external actors.",
      "ExtendedDescription": "On Windows systems the VirtualLock function can lock a page of memory to ensure that it will remain present in memory and not be swapped to disk. However, on older versions of Windows, such as 95, 98, or Me, the VirtualLock() function is only a stub and provides no protection. On POSIX systems the mlock() call ensures that a page will stay resident in memory but does not guarantee that the page will not appear in the swap. Therefore, it is unsuitable for use as a protection mechanism for sensitive data. Some platforms, in particular Linux, do make the guarantee that the page will not be swapped, but this is non-standard and is not portable. Calls to mlock() also require supervisor privilege. Return values for both of these calls must be checked to ensure that the lock operation was actually successful.",
      "AffectedResources": [
        "Memory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "593",
      "Name": "Authentication Bypass: OpenSSL CTX Object Modified after SSL Objects are Created",
      "Abstraction": "Variant",
      "Description": "The product modifies the SSL context after connection creation has begun.",
      "ExtendedDescription": "If the program modifies the SSL_CTX object after creating SSL objects from it, there is the possibility that older SSL objects created from the original context could all be affected by that change.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "594",
      "Name": "J2EE Framework: Saving Unserializable Objects to Disk",
      "Abstraction": "Variant",
      "Description": "When the J2EE container attempts to write unserializable objects to disk there is no guarantee that the process will complete successfully.",
      "ExtendedDescription": "In heavy load conditions, most J2EE application frameworks flush objects to disk to manage memory requirements of incoming requests. For example, session scoped objects, and even application scoped objects, are written to disk when required. While these application frameworks do the real work of writing objects to disk, they do not enforce that those objects be serializable, thus leaving the web application vulnerable to crashes induced by serialization failure. An attacker may be able to mount a denial of service attack by sending enough requests to the server to force the web application to save objects to disk.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "595",
      "Name": "Comparison of Object References Instead of Object Contents",
      "Abstraction": "Variant",
      "Description": "The product compares object references instead of the contents of the objects themselves, preventing it from detecting equivalent objects.",
      "ExtendedDescription": "For example, in Java, comparing objects using == usually produces deceptive results, since the == operator compares object references rather than values; often, this means that using == for strings is actually comparing the strings' references, not their values.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "597",
      "Name": "Use of Wrong Operator in String Comparison",
      "Abstraction": "Variant",
      "Description": "The product uses the wrong operator when comparing a string, such as using \"==\" when the .equals() method should be used instead.",
      "ExtendedDescription": "In Java, using == or != to compare two strings for equality actually compares two objects for equality rather than their string values for equality. Chances are good that the two references will never be equal. While this weakness often only affects program correctness, if the equality is used for a security decision, the unintended comparison result could be leveraged to affect program security.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "598",
      "Name": "Use of GET Request Method With Sensitive Query Strings",
      "Abstraction": "Variant",
      "Description": "The web application uses the HTTP GET method to process a request and includes sensitive information in the query string of that request.",
      "ExtendedDescription": "The query string for the URL could be saved in the browser's history, passed through Referers to other web sites, stored in web logs, or otherwise recorded in other sources. If the query string contains sensitive information such as session identifiers, then attackers can use this information to launch further attacks.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-23546",
          "Description": "A discussion platform leaks private information in GET requests.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-23546"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "599",
      "Name": "Missing Validation of OpenSSL Certificate",
      "Abstraction": "Variant",
      "Description": "The product uses OpenSSL and trusts or uses a certificate without using the SSL_get_verify_result() function to ensure that the certificate satisfies all necessary security requirements.",
      "ExtendedDescription": "This could allow an attacker to use an invalid certificate to claim to be a trusted host, use expired certificates, or conduct other attacks that could be detected if the certificate is properly validated.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "6",
      "Name": "J2EE Misconfiguration: Insufficient Session-ID Length",
      "Abstraction": "Variant",
      "Description": "The J2EE application is configured to use an insufficient session ID length.",
      "ExtendedDescription": "If an attacker can guess or steal a session ID, then they may be able to take over the user's session (called session hijacking). The number of possible session IDs increases with increased session ID length, making it more difficult to guess or steal a session ID.",
      "BackgroundDetails": [
        "\n\nSession ID's can be used to identify communicating parties in a web environment.\n\n\nThe expected number of seconds required to guess a valid session identifier is given by the equation: (2^B+1)/(2*A*S) Where: - B is the number of bits of entropy in the session identifier. - A is the number of guesses an attacker can try each second. - S is the number of valid session identifiers that are valid and available to be guessed at any given time. The number of bits of entropy in the session identifier is always less than the total number of bits in the session identifier. For example, if session identifiers were provided in ascending order, there would be close to zero bits of entropy in the session identifier no matter the identifier's length. Assuming that the session identifiers are being generated using a good source of random numbers, we will estimate the number of bits of entropy in a session identifier to be half the total number of bits in the session identifier. For realistic identifier lengths this is possible, though perhaps optimistic.\n"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "600",
      "Name": "Uncaught Exception in Servlet ",
      "Abstraction": "Variant",
      "Description": "The Servlet does not catch all exceptions, which may reveal sensitive debugging information.",
      "ExtendedDescription": "When a Servlet throws an exception, the default error response the Servlet container sends back to the user typically includes debugging information. This information is of great value to an attacker. For example, a stack trace might show the attacker a malformed SQL query string, the type of database being used, and the version of the application container. This information enables the attacker to target known vulnerabilities in these components.",
      "AlternateTerms": [
        {
          "Term": "Missing Catch Block"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "601",
      "Name": "URL Redirection to Untrusted Site ('Open Redirect')",
      "Abstraction": "Base",
      "Description": "A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks.",
      "ExtendedDescription": "An http parameter may contain a URL value and could cause the web application to redirect the request to the specified URL. By modifying the URL value to a malicious site, an attacker may successfully launch a phishing scam and steal user credentials. Because the server name in the modified link is identical to the original site, phishing attempts have a more trustworthy appearance. Whether this issue poses a vulnerability will be subject to the intended behavior of the application. For example, a search engine might intentionally provide redirects to arbitrary URLs.",
      "BackgroundDetails": [
        "Phishing is a general term for deceptive attempts to coerce private information from users that will be used for identity theft."
      ],
      "AlternateTerms": [
        {
          "Term": "Open Redirect"
        },
        {
          "Term": "Cross-site Redirect"
        },
        {
          "Term": "Cross-domain Redirect"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-4206",
          "Description": "URL parameter loads the URL into a frame and causes it to appear to be part of a valid page.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-4206"
        },
        {
          "Reference": "CVE-2008-2951",
          "Description": "An open redirect vulnerability in the search script in the software allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via a URL as a parameter to the proper function.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2951"
        },
        {
          "Reference": "CVE-2008-2052",
          "Description": "Open redirect vulnerability in the software allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via a URL in the proper parameter.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2052"
        },
        {
          "Reference": "CVE-2020-11053",
          "Description": "Chain: Go-based Oauth2 reverse proxy can send the authenticated user to another site at the end of the authentication flow. A redirect URL with HTML-encoded whitespace characters can bypass the validation (CWE-1289) to redirect to a malicious site (CWE-601)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-11053"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "602",
      "Name": "Client-Side Enforcement of Server-Side Security",
      "Abstraction": "Class",
      "Description": "The product is composed of a server that relies on the client to implement a mechanism that is intended to protect the server.",
      "ExtendedDescription": "When the server relies on protection mechanisms placed on the client side, an attacker can modify the client-side behavior to bypass the protection mechanisms, resulting in potentially unexpected interactions between the client and server. The consequences will vary, depending on what the mechanisms are trying to protect.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-33139",
          "Description": "SCADA system only uses client-side authentication, allowing adversaries to impersonate other users.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-33139"
        },
        {
          "Reference": "CVE-2006-6994",
          "Description": "ASP program allows upload of .asp files by bypassing client-side checks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6994"
        },
        {
          "Reference": "CVE-2007-0163",
          "Description": "steganography products embed password information in the carrier file, which can be extracted from a modified client.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-0163"
        },
        {
          "Reference": "CVE-2007-0164",
          "Description": "steganography products embed password information in the carrier file, which can be extracted from a modified client.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-0164"
        },
        {
          "Reference": "CVE-2007-0100",
          "Description": "client allows server to modify client's configuration and overwrite arbitrary files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-0100"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "603",
      "Name": "Use of Client-Side Authentication",
      "Abstraction": "Base",
      "Description": "A client/server product performs authentication within client code but not in server code, allowing server-side authentication to be bypassed via a modified client that omits the authentication check.",
      "ExtendedDescription": "Client-side authentication is extremely weak and may be breached easily. Any attacker may read the source code and reverse-engineer the authentication mechanism to access parts of the application which would otherwise be protected.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-33139",
          "Description": "SCADA system only uses client-side authentication, allowing adversaries to impersonate other users.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-33139"
        },
        {
          "Reference": "CVE-2006-0230",
          "Description": "Client-side check for a password allows access to a server using crafted XML requests from a modified client.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-0230"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "605",
      "Name": "Multiple Binds to the Same Port",
      "Abstraction": "Variant",
      "Description": "When multiple sockets are allowed to bind to the same port, other services on that port may be stolen or spoofed.",
      "ExtendedDescription": "On most systems, a combination of setting the SO_REUSEADDR socket option, and a call to bind() allows any process to bind to a port to which a previous process has bound with INADDR_ANY. This allows a user to bind to the specific address of a server bound to INADDR_ANY on an unprivileged port, and steal its UDP packets/TCP connection.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "606",
      "Name": "Unchecked Input for Loop Condition",
      "Abstraction": "Base",
      "Description": "The product does not properly check inputs that are used for loop conditions, potentially leading to a denial of service or other consequences because of excessive looping.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "607",
      "Name": "Public Static Final Field References Mutable Object",
      "Abstraction": "Variant",
      "Description": "A public or protected static final field references a mutable object, which allows the object to be changed by malicious code, or accidentally from another package.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "608",
      "Name": "Struts: Non-private Field in ActionForm Class",
      "Abstraction": "Variant",
      "Description": "An ActionForm class contains a field that has not been declared private, which can be accessed without using a setter or getter.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "609",
      "Name": "Double-Checked Locking",
      "Abstraction": "Base",
      "Description": "The product uses double-checked locking to access a resource without the overhead of explicit synchronization, but the locking is insufficient.",
      "ExtendedDescription": "Double-checked locking refers to the situation where a programmer checks to see if a resource has been initialized, grabs a lock, checks again to see if the resource has been initialized, and then performs the initialization if it has not occurred yet. This should not be done, as it is not guaranteed to work in all languages and on all architectures. In summary, other threads may not be operating inside the synchronous block and are not guaranteed to see the operations execute in the same order as they would appear inside the synchronous block.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "61",
      "Name": "UNIX Symbolic Link (Symlink) Following",
      "Abstraction": "Compound",
      "Description": "The product, when opening a file or directory, does not sufficiently account for when the file is a symbolic link that resolves to a target outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.",
      "ExtendedDescription": "A product that allows UNIX symbolic links (symlink) as part of paths whether in internal code or through user input can allow an attacker to spoof the symbolic link and traverse the file system to unintended locations or access arbitrary files. The symbolic link can permit an attacker to read/write/corrupt a file that they originally did not have permissions to access.",
      "AlternateTerms": [
        {
          "Term": "Symlink following"
        },
        {
          "Term": "symlink vulnerability"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-1386",
          "Description": "Some versions of Perl follow symbolic links when running with the -e option, which allows local users to overwrite arbitrary files via a symlink attack.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1386"
        },
        {
          "Reference": "CVE-2000-1178",
          "Description": "Text editor follows symbolic links when creating a rescue copy during an abnormal exit, which allows local users to overwrite the files of other users.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1178"
        },
        {
          "Reference": "CVE-2004-0217",
          "Description": "Antivirus update allows local users to create or append to arbitrary files via a symlink attack on a logfile.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0217"
        },
        {
          "Reference": "CVE-2003-0517",
          "Description": "Symlink attack allows local users to overwrite files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0517"
        },
        {
          "Reference": "CVE-2004-0689",
          "Description": "Possible interesting example",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0689"
        },
        {
          "Reference": "CVE-2005-1879",
          "Description": "Second-order symlink vulnerabilities",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1879"
        },
        {
          "Reference": "CVE-2005-1880",
          "Description": "Second-order symlink vulnerabilities",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1880"
        },
        {
          "Reference": "CVE-2005-1916",
          "Description": "Symlink in Python program",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1916"
        },
        {
          "Reference": "CVE-2000-0972",
          "Description": "Setuid product allows file reading by replacing a file being edited with a symlink to the targeted file, leaking the result in error messages when parsing fails.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0972"
        },
        {
          "Reference": "CVE-2005-0824",
          "Description": "Signal causes a dump that follows symlinks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0824"
        },
        {
          "Reference": "CVE-2015-3629",
          "Description": "A Libcontainer used in Docker Engine allows local users to escape containerization and write to an arbitrary file on the host system via a symlink attack in an image when respawning a container.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2015-3629"
        },
        {
          "Reference": "CVE-2020-26277",
          "Description": "In a MySQL database deployment tool, users may craft a maliciously packaged tarball that contains symlinks to files external to the target and once unpacked, will execute.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-26277"
        },
        {
          "Reference": "CVE-2021-21272",
          "Description": "\"Zip Slip\" vulnerability in Go-based Open Container Initiative (OCI) registries product allows writing arbitrary files outside intended directory via symbolic links or hard links in a gzipped tarball.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-21272"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "610",
      "Name": "Externally Controlled Reference to a Resource in Another Sphere",
      "Abstraction": "Class",
      "Description": "The product uses an externally controlled name or reference that resolves to a resource that is outside of the intended control sphere.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-3032",
          "Description": "An email client does not block loading of remote objects in a nested document.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-3032"
        },
        {
          "Reference": "CVE-2022-45918",
          "Description": "Chain: a learning management tool debugger uses external input to locate previous session logs (CWE-73) and does not properly validate the given path (CWE-20), allowing for filesystem path traversal using \"../\" sequences (CWE-24)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-45918"
        },
        {
          "Reference": "CVE-2018-1000613",
          "Description": "Cryptography API uses unsafe reflection when deserializing a private key",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-1000613"
        },
        {
          "Reference": "CVE-2020-11053",
          "Description": "Chain: Go-based Oauth2 reverse proxy can send the authenticated user to another site at the end of the authentication flow. A redirect URL with HTML-encoded whitespace characters can bypass the validation (CWE-1289) to redirect to a malicious site (CWE-601)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-11053"
        },
        {
          "Reference": "CVE-2022-42745",
          "Description": "Recruiter software allows reading arbitrary files using XXE",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-42745"
        },
        {
          "Reference": "CVE-2004-2331",
          "Description": "Database system allows attackers to bypass sandbox restrictions by using the Reflection API.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2331"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "611",
      "Name": "Improper Restriction of XML External Entity Reference",
      "Abstraction": "Base",
      "Description": "The product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",
      "ExtendedDescription": "\n\nXML documents optionally contain a Document Type Definition (DTD), which, among other features, enables the definition of XML entities. It is possible to define an entity by providing a substitution string in the form of a URI. The XML parser can access the contents of this URI and embed these contents back into the XML document for further processing.\n\n\nBy submitting an XML file that defines an external entity with a file:// URI, an attacker can cause the processing application to read the contents of a local file. For example, a URI such as \"file:///c:/winnt/win.ini\" designates (in Windows) the file C:\\Winnt\\win.ini, or file:///etc/passwd designates the password file in Unix-based systems. Using URIs with other schemes such as http://, the attacker can force the application to make outgoing requests to servers that the attacker cannot reach directly, which can be used to bypass firewall restrictions or hide the source of attacks such as port scanning.\n\n\nOnce the content of the URI is read, it is fed back into the application that is processing the XML. This application may echo back the data (e.g. in an error message), thereby exposing the file contents.\n",
      "AlternateTerms": [
        {
          "Term": "XXE",
          "Description": "An acronym used for the term \"XML eXternal Entities\""
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-42745",
          "Description": "Recruiter software allows reading arbitrary files using XXE",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-42745"
        },
        {
          "Reference": "CVE-2005-1306",
          "Description": "A browser control can allow remote attackers to determine the existence of files via Javascript containing XML script.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1306"
        },
        {
          "Reference": "CVE-2012-5656",
          "Description": "XXE during SVG image conversion",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5656"
        },
        {
          "Reference": "CVE-2012-2239",
          "Description": "XXE in PHP application allows reading the application's configuration file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-2239"
        },
        {
          "Reference": "CVE-2012-3489",
          "Description": "XXE in database server",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-3489"
        },
        {
          "Reference": "CVE-2012-4399",
          "Description": "XXE in rapid web application development framework allows reading arbitrary files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-4399"
        },
        {
          "Reference": "CVE-2012-3363",
          "Description": "XXE via XML-RPC request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-3363"
        },
        {
          "Reference": "CVE-2012-0037",
          "Description": "XXE in office document product using RDF.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-0037"
        },
        {
          "Reference": "CVE-2011-4107",
          "Description": "XXE in web-based administration tool for database.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-4107"
        },
        {
          "Reference": "CVE-2010-3322",
          "Description": "XXE in product that performs large-scale data analysis.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-3322"
        },
        {
          "Reference": "CVE-2009-1699",
          "Description": "XXE in XSL stylesheet functionality in a common library used by some web browsers.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1699"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "612",
      "Name": "Improper Authorization of Index Containing Sensitive Information",
      "Abstraction": "Base",
      "Description": "The product creates a search index of private or sensitive documents, but it does not properly limit index access to actors who are authorized to see the original information.",
      "ExtendedDescription": "Web sites and other document repositories may apply an indexing routine against a group of private documents to facilitate search. If the index's results are available to parties who do not have access to the documents being indexed, then attackers could obtain portions of the documents by conducting targeted searches and reading the results. The risk is especially dangerous if search results include surrounding text that was not part of the search query. This issue can appear in search engines that are not configured (or implemented) to ignore critical files that should remain hidden; even without permissions to download these files directly, the remote user could read them.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-41918",
          "Description": "A search application's access control rules are not properly applied to indices for data streams, allowing for the viewing of sensitive information.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-41918"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "613",
      "Name": "Insufficient Session Expiration",
      "Abstraction": "Base",
      "Description": "According to WASC, \"Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.\"",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "614",
      "Name": "Sensitive Cookie in HTTPS Session Without 'Secure' Attribute",
      "Abstraction": "Variant",
      "Description": "The Secure attribute for sensitive cookies in HTTPS sessions is not set, which could cause the user agent to send those cookies in plaintext over an HTTP session.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-0462",
          "Description": "A product does not set the Secure attribute for sensitive cookies in HTTPS sessions, which could cause the user agent to send those cookies in plaintext over an HTTP session with the product.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0462"
        },
        {
          "Reference": "CVE-2008-3663",
          "Description": "A product does not set the secure flag for the session cookie in an https session, which can cause the cookie to be sent in http requests and make it easier for remote attackers to capture this cookie.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3663"
        },
        {
          "Reference": "CVE-2008-3662",
          "Description": "A product does not set the secure flag for the session cookie in an https session, which can cause the cookie to be sent in http requests and make it easier for remote attackers to capture this cookie.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3662"
        },
        {
          "Reference": "CVE-2008-0128",
          "Description": "A product does not set the secure flag for a cookie in an https session, which can cause the cookie to be sent in http requests and make it easier for remote attackers to capture this cookie.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0128"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "615",
      "Name": "Inclusion of Sensitive Information in Source Code Comments",
      "Abstraction": "Variant",
      "Description": "While adding general comments is very useful, some programmers tend to leave important data, such as: filenames related to the web application, old links or links which were not meant to be browsed by users, old code fragments, etc.",
      "ExtendedDescription": "An attacker who finds these comments can map the application's structure and files, expose hidden parts of the site, and study the fragments of code to reverse engineer the application, which may help develop further attacks against the site.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-6197",
          "Description": "Version numbers and internal hostnames leaked in HTML comments.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-6197"
        },
        {
          "Reference": "CVE-2007-4072",
          "Description": "CMS places full pathname of server in HTML comment.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4072"
        },
        {
          "Reference": "CVE-2009-2431",
          "Description": "blog software leaks real username in HTML comment.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2431"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "616",
      "Name": "Incomplete Identification of Uploaded File Variables (PHP)",
      "Abstraction": "Variant",
      "Description": "The PHP application uses an old method for processing uploaded files by referencing the four global variables that are set for each file (e.g. $varname, $varname_size, $varname_name, $varname_type). These variables could be overwritten by attackers, causing the application to process unauthorized files.",
      "ExtendedDescription": "These global variables could be overwritten by POST requests, cookies, or other methods of populating or overwriting these variables. This could be used to read or process arbitrary files by providing values such as \"/etc/passwd\".",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1460",
          "Description": "Forum does not properly verify whether a file was uploaded or if the associated variables were set by POST, allowing remote attackers to read arbitrary files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1460"
        },
        {
          "Reference": "CVE-2002-1759",
          "Description": "Product doesn't check if the variables for an upload were set by uploading the file, or other methods such as $_POST.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1759"
        },
        {
          "Reference": "CVE-2002-1710",
          "Description": "Product does not distinguish uploaded file from other files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1710"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "617",
      "Name": "Reachable Assertion",
      "Abstraction": "Base",
      "Description": "The product contains an assert() or similar statement that can be triggered by an attacker, which leads to an application exit or other behavior that is more severe than necessary.",
      "ExtendedDescription": "\n\nWhile assertion is good for catching logic errors and reducing the chances of reaching more serious vulnerability conditions, it can still lead to a denial of service.\n\n\nFor example, if a server handles multiple simultaneous connections, and an assert() occurs in one single connection that causes all other connections to be dropped, this is a reachable assertion that leads to a denial of service.\n",
      "AlternateTerms": [
        {
          "Term": "assertion failure"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2023-49286",
          "Description": "Chain: function in web caching proxy does not correctly check a return value (CWE-253) leading to a reachable assertion (CWE-617)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2023-49286"
        },
        {
          "Reference": "CVE-2006-6767",
          "Description": "FTP server allows remote attackers to cause a denial of service (daemon abort) via crafted commands which trigger an assertion failure.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6767"
        },
        {
          "Reference": "CVE-2006-6811",
          "Description": "Chat client allows remote attackers to cause a denial of service (crash) via a long message string when connecting to a server, which causes an assertion failure.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6811"
        },
        {
          "Reference": "CVE-2006-5779",
          "Description": "Product allows remote attackers to cause a denial of service (daemon crash) via LDAP BIND requests with long authcid names, which triggers an assertion failure.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-5779"
        },
        {
          "Reference": "CVE-2006-4095",
          "Description": "Product allows remote attackers to cause a denial of service (crash) via certain queries, which cause an assertion failure.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4095"
        },
        {
          "Reference": "CVE-2006-4574",
          "Description": "Chain: security monitoring product has an off-by-one error that leads to unexpected length values, triggering an assertion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4574"
        },
        {
          "Reference": "CVE-2004-0270",
          "Description": "Anti-virus product has assert error when line length is non-numeric.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0270"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "618",
      "Name": "Exposed Unsafe ActiveX Method",
      "Abstraction": "Variant",
      "Description": "An ActiveX control is intended for use in a web browser, but it exposes dangerous methods that perform actions that are outside of the browser's security model (e.g. the zone or domain).",
      "ExtendedDescription": "ActiveX controls can exercise far greater control over the operating system than typical Java or javascript. Exposed methods can be subject to various vulnerabilities, depending on the implemented behaviors of those methods, and whether input validation is performed on the provided arguments. If there is no integrity checking or origin validation, this method could be invoked by attackers.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-1120",
          "Description": "download a file to arbitrary folders.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1120"
        },
        {
          "Reference": "CVE-2006-6838",
          "Description": "control downloads and executes a url in a parameter",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6838"
        },
        {
          "Reference": "CVE-2007-0321",
          "Description": "resultant buffer overflow",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-0321"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "619",
      "Name": "Dangling Database Cursor ('Cursor Injection')",
      "Abstraction": "Base",
      "Description": "If a database cursor is not closed properly, then it could become accessible to other users while retaining the same privileges that were originally assigned, leaving the cursor \"dangling.\"",
      "ExtendedDescription": "For example, an improper dangling cursor could arise from unhandled exceptions. The impact of the issue depends on the cursor's role, but SQL injection attacks are commonly possible.",
      "BackgroundDetails": [
        "A cursor is a feature in Oracle PL/SQL and other languages that provides a handle for executing and accessing the results of SQL queries."
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "62",
      "Name": "UNIX Hard Link",
      "Abstraction": "Variant",
      "Description": "The product, when opening a file or directory, does not sufficiently account for when the name is associated with a hard link to a target that is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.",
      "ExtendedDescription": "Failure for a system to check for hard links can result in vulnerability to different types of attacks. For example, an attacker can escalate their privileges if a file used by a privileged program is replaced with a hard link to a sensitive file (e.g. /etc/passwd). When the process opens the file, the attacker can assume the privileges of that process.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-1494",
          "Description": "Hard link attack, file overwrite; interesting because program checks against soft links",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1494"
        },
        {
          "Reference": "CVE-2002-0793",
          "Description": "Hard link and possibly symbolic link following vulnerabilities in embedded operating system allow local users to overwrite arbitrary files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0793"
        },
        {
          "Reference": "CVE-2003-0578",
          "Description": "Server creates hard links and unlinks files as root, which allows local users to gain privileges by deleting and overwriting arbitrary files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0578"
        },
        {
          "Reference": "CVE-1999-0783",
          "Description": "Operating system allows local users to conduct a denial of service by creating a hard link from a device special file to a file on an NFS file system.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0783"
        },
        {
          "Reference": "CVE-2004-1603",
          "Description": "Web hosting manager follows hard links, which allows local users to read or modify arbitrary files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1603"
        },
        {
          "Reference": "CVE-2004-1901",
          "Description": "Package listing system allows local users to overwrite arbitrary files via a hard link attack on the lockfiles.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1901"
        },
        {
          "Reference": "CVE-2005-0342",
          "Description": "The Finder in Mac OS X and earlier allows local users to overwrite arbitrary files and gain privileges by creating a hard link from the .DS_Store file to an arbitrary file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0342"
        },
        {
          "Reference": "CVE-2005-1111",
          "Description": "Hard link race condition",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1111"
        },
        {
          "Reference": "CVE-2021-21272",
          "Description": "\"Zip Slip\" vulnerability in Go-based Open Container Initiative (OCI) registries product allows writing arbitrary files outside intended directory via symbolic links or hard links in a gzipped tarball.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-21272"
        },
        {
          "Reference": "CVE-2003-1366",
          "Description": "setuid root tool allows attackers to read secret data by replacing a temp file with a hard link to a sensitive file",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1366"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "620",
      "Name": "Unverified Password Change",
      "Abstraction": "Base",
      "Description": "When setting a new password for a user, the product does not require knowledge of the original password, or using another form of authentication.",
      "ExtendedDescription": "This could be used by an attacker to change passwords for another user, thus gaining the privileges associated with that user.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-0681",
          "Description": "Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-0681"
        },
        {
          "Reference": "CVE-2000-0944",
          "Description": "Web application password change utility doesn't check the original password.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0944"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "621",
      "Name": "Variable Extraction Error",
      "Abstraction": "Variant",
      "Description": "The product uses external input to determine the names of variables into which information is extracted, without verifying that the names of the specified variables are valid. This could cause the program to overwrite unintended variables.",
      "ExtendedDescription": "\n\nFor example, in PHP, extraction can be used to provide functionality similar to register_globals, a dangerous functionality that is frequently disabled in production systems. Calling extract() or import_request_variables() without the proper arguments could allow arbitrary global variables to be overwritten, including superglobals.\n\n\nSimilar functionality is possible in other interpreted languages, including custom languages.\n",
      "AlternateTerms": [
        {
          "Term": "Variable overwrite"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2006-7135",
          "Description": "extract issue enables file inclusion",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-7135"
        },
        {
          "Reference": "CVE-2006-7079",
          "Description": "Chain: PHP app uses extract for register_globals compatibility layer (CWE-621), enabling path traversal (CWE-22)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-7079"
        },
        {
          "Reference": "CVE-2007-0649",
          "Description": "extract() buried in include files makes post-disclosure analysis confusing; original report had seemed incorrect.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-0649"
        },
        {
          "Reference": "CVE-2006-6661",
          "Description": "extract() enables static code injection",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6661"
        },
        {
          "Reference": "CVE-2006-2828",
          "Description": "import_request_variables() buried in include files makes post-disclosure analysis confusing",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2828"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "622",
      "Name": "Improper Validation of Function Hook Arguments",
      "Abstraction": "Variant",
      "Description": "The product adds hooks to user-accessible API functions, but it does not properly validate the arguments. This could lead to resultant vulnerabilities.",
      "ExtendedDescription": "Such hooks can be used in defensive software that runs with privileges, such as anti-virus or firewall, which hooks kernel calls. When the arguments are not validated, they could be used to bypass the protection scheme or attack the product itself.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-0708",
          "Description": "DoS in firewall using standard Microsoft functions",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-0708"
        },
        {
          "Reference": "CVE-2006-7160",
          "Description": "DoS in firewall using standard Microsoft functions",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-7160"
        },
        {
          "Reference": "CVE-2007-1376",
          "Description": "function does not verify that its argument is the proper type, leading to arbitrary memory write",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1376"
        },
        {
          "Reference": "CVE-2007-1220",
          "Description": "invalid syscall arguments bypass code execution limits",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1220"
        },
        {
          "Reference": "CVE-2006-4541",
          "Description": "DoS in IDS via NULL argument",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4541"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "623",
      "Name": "Unsafe ActiveX Control Marked Safe For Scripting",
      "Abstraction": "Variant",
      "Description": "An ActiveX control is intended for restricted use, but it has been marked as safe-for-scripting.",
      "ExtendedDescription": "This might allow attackers to use dangerous functionality via a web page that accesses the control, which can lead to different resultant vulnerabilities, depending on the control's behavior.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-0617",
          "Description": "control allows attackers to add malicious email addresses to bypass spam limits",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-0617"
        },
        {
          "Reference": "CVE-2007-0219",
          "Description": "web browser uses certain COM objects as ActiveX",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-0219"
        },
        {
          "Reference": "CVE-2006-6510",
          "Description": "kiosk allows bypass to read files",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6510"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "624",
      "Name": "Executable Regular Expression Error",
      "Abstraction": "Base",
      "Description": "The product uses a regular expression that either (1) contains an executable component with user-controlled inputs, or (2) allows a user to enable execution by inserting pattern modifiers.",
      "ExtendedDescription": "Case (2) is possible in the PHP preg_replace() function, and possibly in other languages when a user-controlled input is inserted into a string that is later parsed as a regular expression.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2006-2059",
          "Description": "Executable regexp in PHP by inserting \"e\" modifier into first argument to preg_replace",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2059"
        },
        {
          "Reference": "CVE-2005-3420",
          "Description": "Executable regexp in PHP by inserting \"e\" modifier into first argument to preg_replace",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3420"
        },
        {
          "Reference": "CVE-2006-2878",
          "Description": "Complex curly syntax inserted into the replacement argument to PHP preg_replace(), which uses the \"/e\" modifier",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2878"
        },
        {
          "Reference": "CVE-2006-2908",
          "Description": "Function allows remote attackers to execute arbitrary PHP code via the username field, which is used in a preg_replace function call with a /e (executable) modifier.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2908"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "625",
      "Name": "Permissive Regular Expression",
      "Abstraction": "Base",
      "Description": "The product uses a regular expression that does not sufficiently restrict the set of allowed values.",
      "ExtendedDescription": "\n\nThis effectively causes the regexp to accept substrings that match the pattern, which produces a partial comparison to the target. In some cases, this can lead to other weaknesses. Common errors include:\n\n\n  - not identifying the beginning and end of the target string\n\n  - using wildcards instead of acceptable character ranges\n\n  - others\n\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-22204",
          "Description": "Chain: regex in EXIF processor code does not correctly determine where a string ends (CWE-625), enabling eval injection (CWE-95), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-22204"
        },
        {
          "Reference": "CVE-2006-1895",
          "Description": "\".*\" regexp leads to static code injection",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-1895"
        },
        {
          "Reference": "CVE-2002-2175",
          "Description": "insertion of username into regexp results in partial comparison, causing wrong database entry to be updated when one username is a substring of another.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2175"
        },
        {
          "Reference": "CVE-2006-4527",
          "Description": "regexp intended to verify that all characters are legal, only checks that at least one is legal, enabling file inclusion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4527"
        },
        {
          "Reference": "CVE-2005-1949",
          "Description": "Regexp for IP address isn't anchored at the end, allowing appending of shell metacharacters.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1949"
        },
        {
          "Reference": "CVE-2002-2109",
          "Description": "Regexp isn't \"anchored\" to the beginning or end, which allows spoofed values that have trusted values as substrings.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2109"
        },
        {
          "Reference": "CVE-2006-6511",
          "Description": "regexp in .htaccess file allows access of files whose names contain certain substrings",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6511"
        },
        {
          "Reference": "CVE-2006-6629",
          "Description": "allow load of macro files whose names contain certain substrings.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6629"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "626",
      "Name": "Null Byte Interaction Error (Poison Null Byte)",
      "Abstraction": "Variant",
      "Description": "The product does not properly handle null bytes or NUL characters when passing data between different representations or components.",
      "ExtendedDescription": "\n\nA null byte (NUL character) can have different meanings across representations or languages. For example, it is a string terminator in standard C libraries, but Perl and PHP strings do not treat it as a terminator. When two representations are crossed - such as when Perl or PHP invokes underlying C functionality - this can produce an interaction error with unexpected results. Similar issues have been reported for ASP. Other interpreters written in C might also be affected.\n\n\nThe poison null byte is frequently useful in path traversal attacks by terminating hard-coded extensions that are added to a filename. It can play a role in regular expression processing in PHP.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-4155",
          "Description": "NUL byte bypasses PHP regular expression check",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-4155"
        },
        {
          "Reference": "CVE-2005-3153",
          "Description": "inserting SQL after a NUL byte bypasses allowlist regexp, enabling SQL injection",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3153"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "627",
      "Name": "Dynamic Variable Evaluation",
      "Abstraction": "Variant",
      "Description": "In a language where the user can influence the name of a variable at runtime, if the variable names are not controlled, an attacker can read or write to arbitrary variables, or access arbitrary functions.",
      "ExtendedDescription": "The resultant vulnerabilities depend on the behavior of the application, both at the crossover point and in any control/data flow that is reachable by the related variables or functions.",
      "BackgroundDetails": [
        "Many interpreted languages support the use of a \"$$varname\" construct to set a variable whose name is specified by the $varname variable. In PHP, these are referred to as \"variable variables.\" Functions might also be invoked using similar syntax, such as $$funcname(arg1, arg2)."
      ],
      "AlternateTerms": [
        {
          "Term": "Dynamic evaluation"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2009-0422",
          "Description": "Chain: Dynamic variable evaluation allows resultant remote file inclusion and path traversal.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0422"
        },
        {
          "Reference": "CVE-2007-2431",
          "Description": "Chain: dynamic variable evaluation in PHP program used to modify critical, unexpected $_SERVER variable for resultant XSS.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-2431"
        },
        {
          "Reference": "CVE-2006-4904",
          "Description": "Chain: dynamic variable evaluation in PHP program used to conduct remote file inclusion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4904"
        },
        {
          "Reference": "CVE-2006-4019",
          "Description": "Dynamic variable evaluation in mail program allows reading and modifying attachments and preferences of other users.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4019"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "628",
      "Name": "Function Call with Incorrectly Specified Arguments",
      "Abstraction": "Base",
      "Description": "The product calls a function, procedure, or routine with arguments that are not correctly specified, leading to always-incorrect behavior and resultant weaknesses.",
      "ExtendedDescription": "\n\nThere are multiple ways in which this weakness can be introduced, including:\n\n\n  - the wrong variable or reference;\n\n  - an incorrect number of arguments;\n\n  - incorrect order of arguments;\n\n  - wrong type of arguments; or\n\n  - wrong value.\n\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2006-7049",
          "Description": "The method calls the functions with the wrong argument order, which allows remote attackers to bypass intended access restrictions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-7049"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "636",
      "Name": "Not Failing Securely ('Failing Open')",
      "Abstraction": "Class",
      "Description": "When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.",
      "ExtendedDescription": "By entering a less secure state, the product inherits the weaknesses associated with that state, making it easier to compromise. At the least, it causes administrators to have a false sense of security. This weakness typically occurs as a result of wanting to \"fail functional\" to minimize administration and support costs, instead of \"failing safe.\"",
      "AlternateTerms": [
        {
          "Term": "Failing Open"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-5277",
          "Description": "The failure of connection attempts in a web browser resets DNS pin restrictions. An attacker can then bypass the same origin policy by rebinding a domain name to a different IP address. This was an attempt to \"fail functional.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5277"
        },
        {
          "Reference": "CVE-2006-4407",
          "Description": "Incorrect prioritization leads to the selection of a weaker cipher. Although it is not known whether this issue occurred in implementation or design, it is feasible that a poorly designed algorithm could be a factor.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4407"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "637",
      "Name": "Unnecessary Complexity in Protection Mechanism (Not Using 'Economy of Mechanism')",
      "Abstraction": "Class",
      "Description": "The product uses a more complex mechanism than necessary, which could lead to resultant weaknesses when the mechanism is not correctly understood, modeled, configured, implemented, or used.",
      "ExtendedDescription": "Security mechanisms should be as simple as possible. Complex security mechanisms may engender partial implementations and compatibility problems, with resulting mismatches in assumptions and implemented security. A corollary of this principle is that data specifications should be as simple as possible, because complex data specifications result in complex validation code. Complex tasks and systems may also need to be guarded by complex security checks, so simple systems should be preferred.",
      "AlternateTerms": [
        {
          "Term": "Unnecessary Complexity"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-6067",
          "Description": "Support for complex regular expressions leads to a resultant algorithmic complexity weakness (CWE-407).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-6067"
        },
        {
          "Reference": "CVE-2007-1552",
          "Description": "Either a filename extension and a Content-Type header could be used to infer the file type, but the developer only checks the Content-Type, enabling unrestricted file upload (CWE-434).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1552"
        },
        {
          "Reference": "CVE-2007-6479",
          "Description": "In Apache environments, a \"filename.php.gif\" can be redirected to the PHP interpreter instead of being sent as an image/gif directly to the user. Not knowing this, the developer only checks the last extension of a submitted filename, enabling arbitrary code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-6479"
        },
        {
          "Reference": "CVE-2005-2148",
          "Description": "The developer cleanses the $_REQUEST superglobal array, but PHP also populates $_GET, allowing attackers to bypass the protection mechanism and conduct SQL injection attacks against code that uses $_GET.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2148"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "638",
      "Name": "Not Using Complete Mediation",
      "Abstraction": "Class",
      "Description": "The product does not perform access checks on a resource every time the resource is accessed by an entity, which can create resultant weaknesses if that entity's rights or privileges change over time.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-0408",
          "Description": "Server does not properly validate client certificates when reusing cached connections.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-0408"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "639",
      "Name": "Authorization Bypass Through User-Controlled Key",
      "Abstraction": "Base",
      "Description": "The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.",
      "ExtendedDescription": "\n\nRetrieval of a user record occurs in the system based on some key value that is under user control. The key would typically identify a user-related record stored in the system and would be used to lookup that record for presentation to the user. It is likely that an attacker would have to be an authenticated user in the system. However, the authorization process would not properly check the data access operation to ensure that the authenticated user performing the operation has sufficient entitlements to perform the requested data access, hence bypassing any other authorization checks present in the system.\n\n\nFor example, attackers can look at places where user specific data is retrieved (e.g. search screens) and determine whether the key for the item being looked up is controllable externally. The key may be a hidden field in the HTML form field, might be passed as a URL parameter or as an unencrypted cookie variable, then in each of these cases it will be possible to tamper with the key value.\n\n\nOne manifestation of this weakness is when a system uses sequential or otherwise easily-guessable session IDs that would allow one user to easily switch to another user's session and read/modify their data.\n",
      "AlternateTerms": [
        {
          "Term": "Insecure Direct Object Reference / IDOR",
          "Description": "The \"Insecure Direct Object Reference\" term, as described in the OWASP Top Ten, is broader than this CWE because it also covers path traversal (CWE-22). Within the context of vulnerability theory, there is a similarity between the OWASP concept and CWE-706: Use of Incorrectly-Resolved Name or Reference."
        },
        {
          "Term": "Broken Object Level Authorization / BOLA",
          "Description": "BOLA is used in the 2019 OWASP API Security Top 10 and is said to be the same as IDOR."
        },
        {
          "Term": "Horizontal Authorization",
          "Description": "\"Horizontal Authorization\" is used to describe situations in which two users have the same privilege level, but must be prevented from accessing each other's resources. This is fairly common when using key-based access to resources in a multi-user context."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-36539",
          "Description": "An educational application does not appropriately restrict file IDs to a particular user. The attacker can brute-force guess IDs, indicating IDOR.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-36539"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "64",
      "Name": "Windows Shortcut Following (.LNK)",
      "Abstraction": "Variant",
      "Description": "The product, when opening a file or directory, does not sufficiently handle when the file is a Windows shortcut (.LNK) whose target is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.",
      "ExtendedDescription": "The shortcut (file with the .lnk extension) can permit an attacker to read/write a file that they originally did not have permissions to access.",
      "AlternateTerms": [
        {
          "Term": "Windows symbolic link following"
        },
        {
          "Term": "symlink"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-19793",
          "Description": "network access control service executes program with high privileges and allows symlink to invoke another executable or perform DLL injection.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-19793"
        },
        {
          "Reference": "CVE-2000-0342",
          "Description": "Mail client allows remote attackers to bypass the user warning for executable attachments such as .exe, .com, and .bat by using a .lnk file that refers to the attachment, aka \"Stealth Attachment.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0342"
        },
        {
          "Reference": "CVE-2001-1042",
          "Description": "FTP server allows remote attackers to read arbitrary files and directories by uploading a .lnk (link) file that points to the target file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1042"
        },
        {
          "Reference": "CVE-2001-1043",
          "Description": "FTP server allows remote attackers to read arbitrary files and directories by uploading a .lnk (link) file that points to the target file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1043"
        },
        {
          "Reference": "CVE-2005-0587",
          "Description": "Browser allows remote malicious web sites to overwrite arbitrary files by tricking the user into downloading a .LNK (link) file twice, which overwrites the file that was referenced in the first .LNK file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0587"
        },
        {
          "Reference": "CVE-2001-1386",
          "Description": "\".LNK.\" - .LNK with trailing dot",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1386"
        },
        {
          "Reference": "CVE-2003-1233",
          "Description": "Rootkits can bypass file access restrictions to Windows kernel directories using NtCreateSymbolicLinkObject function to create symbolic link",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1233"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "640",
      "Name": "Weak Password Recovery Mechanism for Forgotten Password",
      "Abstraction": "Base",
      "Description": "The product contains a mechanism for users to recover or change their passwords without knowing the original password, but the mechanism is weak.",
      "ExtendedDescription": "\n\nIt is common for an application to have a mechanism that provides a means for a user to gain access to their account in the event they forget their password. Very often the password recovery mechanism is weak, which has the effect of making it more likely that it would be possible for a person other than the legitimate system user to gain access to that user's account. Weak password recovery schemes completely undermine a strong password authentication scheme.\n\n\nThis weakness may be that the security question is too easy to guess or find an answer to (e.g. because the question is too common, or the answers can be found using social media). Or there might be an implementation weakness in the password recovery mechanism code that may for instance trick the system into e-mailing the new password to an e-mail account other than that of the user. There might be no throttling done on the rate of password resets so that a legitimate user can be denied service by an attacker if an attacker tries to recover their password in a rapid succession. The system may send the original password to the user rather than generating a new temporary password. In summary, password recovery functionality, if not carefully designed and implemented can often become the system's weakest link that can be misused in a way that would allow an attacker to gain unauthorized access to the system.\n",
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "641",
      "Name": "Improper Restriction of Names for Files and Other Resources",
      "Abstraction": "Base",
      "Description": "The product constructs the name of a file or other resource using input from an upstream component, but it does not restrict or incorrectly restricts the resulting name.",
      "ExtendedDescription": "This may produce resultant weaknesses. For instance, if the names of these resources contain scripting characters, it is possible that a script may get executed in the client's browser if the application ever displays the name of the resource on a dynamically generated web page. Alternately, if the resources are consumed by some application parser, a specially crafted name can exploit some vulnerability internal to the parser, potentially resulting in execution of arbitrary code on the server machine. The problems will vary based on the context of usage of such malformed resource names and whether vulnerabilities are present in or assumptions are made by the targeted technology that would make code execution possible.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "642",
      "Name": "External Control of Critical State Data",
      "Abstraction": "Class",
      "Description": "The product stores security-critical state information about its users, or the product itself, in a location that is accessible to unauthorized actors.",
      "ExtendedDescription": "\n\nIf an attacker can modify the state information without detection, then it could be used to perform unauthorized actions or access unexpected resources, since the application programmer does not expect that the state can be changed.\n\n\nState information can be stored in various locations such as a cookie, in a hidden web form field, input parameter or argument, an environment variable, a database record, within a settings file, etc. All of these locations have the potential to be modified by an attacker. When this state information is used to control security or determine resource usage, then it may create a vulnerability. For example, an application may perform authentication, then save the state in an \"authenticated=true\" cookie. An attacker may simply create this cookie in order to bypass the authentication.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-2428",
          "Description": "Mail client stores password hashes for unrelated accounts in a hidden form field.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2428"
        },
        {
          "Reference": "CVE-2008-0306",
          "Description": "Privileged program trusts user-specified environment variable to modify critical configuration settings.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0306"
        },
        {
          "Reference": "CVE-1999-0073",
          "Description": "Telnet daemon allows remote clients to specify critical environment variables for the server, leading to code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0073"
        },
        {
          "Reference": "CVE-2007-4432",
          "Description": "Untrusted search path vulnerability through modified LD_LIBRARY_PATH environment variable.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4432"
        },
        {
          "Reference": "CVE-2006-7191",
          "Description": "Untrusted search path vulnerability through modified LD_LIBRARY_PATH environment variable.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-7191"
        },
        {
          "Reference": "CVE-2008-5738",
          "Description": "Calendar application allows bypass of authentication by setting a certain cookie value to 1.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5738"
        },
        {
          "Reference": "CVE-2008-5642",
          "Description": "Setting of a language preference in a cookie enables path traversal attack.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5642"
        },
        {
          "Reference": "CVE-2008-5125",
          "Description": "Application allows admin privileges by setting a cookie value to \"admin.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5125"
        },
        {
          "Reference": "CVE-2008-5065",
          "Description": "Application allows admin privileges by setting a cookie value to \"admin.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5065"
        },
        {
          "Reference": "CVE-2008-4752",
          "Description": "Application allows admin privileges by setting a cookie value to \"admin.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4752"
        },
        {
          "Reference": "CVE-2000-0102",
          "Description": "Shopping cart allows price modification via hidden form field.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0102"
        },
        {
          "Reference": "CVE-2000-0253",
          "Description": "Shopping cart allows price modification via hidden form field.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0253"
        },
        {
          "Reference": "CVE-2008-1319",
          "Description": "Server allows client to specify the search path, which can be modified to point to a program that the client has uploaded.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1319"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "643",
      "Name": "Improper Neutralization of Data within XPath Expressions ('XPath Injection')",
      "Abstraction": "Base",
      "Description": "The product uses external input to dynamically construct an XPath expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.",
      "ExtendedDescription": "The net effect is that the attacker will have control over the information selected from the XML database and may use that ability to control application flow, modify logic, retrieve unauthorized data, or bypass important checks (e.g. authentication).",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "644",
      "Name": "Improper Neutralization of HTTP Headers for Scripting Syntax",
      "Abstraction": "Variant",
      "Description": "The product does not neutralize or incorrectly neutralizes web scripting syntax in HTTP headers that can be used by web browser components that can process raw headers, such as Flash.",
      "ExtendedDescription": "\n\nAn attacker may be able to conduct cross-site scripting and other attacks against users who have these components enabled.\n\n\nIf a product does not neutralize user controlled data being placed in the header of an HTTP response coming from the server, the header may contain a script that will get executed in the client's browser context, potentially resulting in a cross site scripting vulnerability or possibly an HTTP response splitting attack. It is important to carefully control data that is being placed both in HTTP response header and in the HTTP response body to ensure that no scripting syntax is present, taking various encodings into account.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2006-3918",
          "Description": "Web server does not remove the Expect header from an HTTP request when it is reflected back in an error message, allowing a Flash SWF file to perform XSS attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-3918"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "645",
      "Name": "Overly Restrictive Account Lockout Mechanism",
      "Abstraction": "Base",
      "Description": "The product contains an account lockout protection mechanism, but the mechanism is too restrictive and can be triggered too easily, which allows attackers to deny service to legitimate users by causing their accounts to be locked out.",
      "ExtendedDescription": "Account lockout is a security feature often present in applications as a countermeasure to the brute force attack on the password based authentication mechanism of the system. After a certain number of failed login attempts, the users' account may be disabled for a certain period of time or until it is unlocked by an administrator. Other security events may also possibly trigger account lockout. However, an attacker may use this very security feature to deny service to legitimate system users. It is therefore important to ensure that the account lockout security mechanism is not overly restrictive.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "646",
      "Name": "Reliance on File Name or Extension of Externally-Supplied File",
      "Abstraction": "Variant",
      "Description": "The product allows a file to be uploaded, but it relies on the file name or extension of the file to determine the appropriate behaviors. This could be used by attackers to cause the file to be misclassified and processed in a dangerous fashion.",
      "ExtendedDescription": "An application might use the file name or extension of a user-supplied file to determine the proper course of action, such as selecting the correct process to which control should be passed, deciding what data should be made available, or what resources should be allocated. If the attacker can cause the code to misclassify the supplied file, then the wrong action could occur. For example, an attacker could supply a file that ends in a \".php.gif\" extension that appears to be a GIF image, but would be processed as PHP code. In extreme cases, code execution is possible, but the attacker could also cause exhaustion of resources, denial of service, exposure of debug or system data (including application source code), or being bound to a particular server side process. This weakness may be due to a vulnerability in any of the technologies used by the web and application servers, due to misconfiguration, or resultant from another flaw in the application itself.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "647",
      "Name": "Use of Non-Canonical URL Paths for Authorization Decisions",
      "Abstraction": "Variant",
      "Description": "The product defines policy namespaces and makes authorization decisions based on the assumption that a URL is canonical. This can allow a non-canonical URL to bypass the authorization.",
      "ExtendedDescription": "\n\nIf an application defines policy namespaces and makes authorization decisions based on the URL, but it does not require or convert to a canonical URL before making the authorization decision, then it opens the application to attack. For example, if the application only wants to allow access to http://www.example.com/mypage, then the attacker might be able to bypass this restriction using equivalent URLs such as:\n\n\n  - http://WWW.EXAMPLE.COM/mypage\n\n  - http://www.example.com/%6Dypage (alternate encoding)\n\n  - http://192.168.1.1/mypage (IP address)\n\n  - http://www.example.com/mypage/ (trailing /)\n\n  - http://www.example.com:80/mypage\n\nTherefore it is important to specify access control policy that is based on the path information in some canonical form with all alternate encodings rejected (which can be accomplished by a default deny rule).",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "648",
      "Name": "Incorrect Use of Privileged APIs",
      "Abstraction": "Base",
      "Description": "The product does not conform to the API requirements for a function call that requires extra privileges. This could allow attackers to gain privileges by causing the function to be called incorrectly.",
      "ExtendedDescription": "\n\nWhen a product contains certain functions that perform operations requiring an elevated level of privilege, the caller of a privileged API must be careful to:\n\n\n  - ensure that assumptions made by the APIs are valid, such as validity of arguments\n\n  - account for known weaknesses in the design/implementation of the API\n\n  - call the API from a safe context\n\nIf the caller of the API does not follow these requirements, then it may allow a malicious user or process to elevate their privilege, hijack the process, or steal sensitive data.\n\nFor instance, it is important to know if privileged APIs do not shed their privileges before returning to the caller or if the privileged function might make certain assumptions about the data, context or state information passed to it by the caller. It is important to always know when and how privileged APIs can be called in order to ensure that their elevated level of privilege cannot be exploited.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2003-0645",
          "Description": "A Unix utility that displays online help files, if installed setuid, could allow a local attacker to gain privileges when a particular file-opening function is called.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0645"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "649",
      "Name": "Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking",
      "Abstraction": "Base",
      "Description": "The product uses obfuscation or encryption of inputs that should not be mutable by an external actor, but the product does not use integrity checks to detect if those inputs have been modified.",
      "ExtendedDescription": "When an application relies on obfuscation or incorrectly applied / weak encryption to protect client-controllable tokens or parameters, that may have an effect on the user state, system state, or some decision made on the server. Without protecting the tokens/parameters for integrity, the application is vulnerable to an attack where an adversary traverses the space of possible values of the said token/parameter in order to attempt to gain an advantage. The goal of the attacker is to find another admissible value that will somehow elevate their privileges in the system, disclose information or change the behavior of the system in some way beneficial to the attacker. If the application does not protect these critical tokens/parameters for integrity, it will not be able to determine that these values have been tampered with. Measures that are used to protect data for confidentiality should not be relied upon to provide the integrity service.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-0039",
          "Description": "An IPSec configuration does not perform integrity checking of the IPSec packet as the result of either not configuring ESP properly to support the integrity service or using AH improperly. In either case, the security gateway receiving the IPSec packet would not validate the integrity of the packet to ensure that it was not changed. Thus if the packets were intercepted the attacker could undetectably change some of the bits in the packets. The meaningful bit flipping was possible due to the known weaknesses in the CBC encryption mode. Since the attacker knew the structure of the packet, they were able (in one variation of the attack) to use bit flipping to change the destination IP of the packet to the destination machine controlled by the attacker. And so the destination security gateway would decrypt the packet and then forward the plaintext to the machine controlled by the attacker. The attacker could then read the original message. For instance if VPN was used with the vulnerable IPSec configuration the attacker could read the victim's e-mail. This vulnerability demonstrates the need to enforce the integrity service properly when critical data could be modified by an attacker. This problem might have also been mitigated by using an encryption mode that is not susceptible to bit flipping attacks, but the preferred mechanism to address this problem still remains message verification for integrity. While this attack focuses on the network layer and requires an entity that controls part of the communication path such as a router, the situation is not much different at the software level, where an attacker can modify tokens/parameters used by the application.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0039"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "65",
      "Name": "Windows Hard Link",
      "Abstraction": "Variant",
      "Description": "The product, when opening a file or directory, does not sufficiently handle when the name is associated with a hard link to a target that is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.",
      "ExtendedDescription": "Failure for a system to check for hard links can result in vulnerability to different types of attacks. For example, an attacker can escalate their privileges if a file used by a privileged program is replaced with a hard link to a sensitive file (e.g. AUTOEXEC.BAT). When the process opens the file, the attacker can assume the privileges of that process, or prevent the program from accurately processing data.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0725",
          "Description": "File system allows local attackers to hide file usage activities via a hard link to the target file, which causes the link to be recorded in the audit trail instead of the target file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0725"
        },
        {
          "Reference": "CVE-2003-0844",
          "Description": "Web server plugin allows local users to overwrite arbitrary files via a symlink attack on predictable temporary filenames.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0844"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "650",
      "Name": "Trusting HTTP Permission Methods on the Server Side",
      "Abstraction": "Variant",
      "Description": "The server contains a protection mechanism that assumes that any URI that is accessed using HTTP GET will not cause a state change to the associated resource. This might allow attackers to bypass intended access restrictions and conduct resource modification and deletion attacks, since some applications allow GET to modify state.",
      "ExtendedDescription": "The HTTP GET method and some other methods are designed to retrieve resources and not to alter the state of the application or resources on the server side. Furthermore, the HTTP specification requires that GET requests (and other requests) should not have side effects. Believing that it will be enough to prevent unintended resource alterations, an application may disallow the HTTP requests to perform DELETE, PUT and POST operations on the resource representation. However, there is nothing in the HTTP protocol itself that actually prevents the HTTP GET method from performing more than just query of the data. Developers can easily code programs that accept a HTTP GET request that do in fact create, update or delete data on the server. For instance, it is a common practice with REST based Web Services to have HTTP GET requests modifying resources on the server side. However, whenever that happens, the access control needs to be properly enforced in the application. No assumptions should be made that only HTTP DELETE, PUT, POST, and other methods have the power to alter the representation of the resource being accessed in the request.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "651",
      "Name": "Exposure of WSDL File Containing Sensitive Information",
      "Abstraction": "Variant",
      "Description": "The Web services architecture may require exposing a Web Service Definition Language (WSDL) file that contains information on the publicly accessible services and how callers of these services should interact with them (e.g. what parameters they expect and what types they return).",
      "ExtendedDescription": "\n\nAn information exposure may occur if any of the following apply:\n\n\n  - The WSDL file is accessible to a wider audience than intended.\n\n  - The WSDL file contains information on the methods/services that should not be publicly accessible or information about deprecated methods. This problem is made more likely due to the WSDL often being automatically generated from the code.\n\n  - Information in the WSDL file helps guess names/locations of methods/resources that should not be publicly accessible.\n\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "652",
      "Name": "Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')",
      "Abstraction": "Base",
      "Description": "The product uses external input to dynamically construct an XQuery expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.",
      "ExtendedDescription": "The net effect is that the attacker will have control over the information selected from the XML database and may use that ability to control application flow, modify logic, retrieve unauthorized data, or bypass important checks (e.g. authentication).",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "653",
      "Name": "Improper Isolation or Compartmentalization",
      "Abstraction": "Class",
      "Description": "The product does not properly compartmentalize or isolate functionality, processes, or resources that require different privilege levels, rights, or permissions.",
      "ExtendedDescription": "When a weakness occurs in functionality that is accessible by lower-privileged users, then without strong boundaries, an attack might extend the scope of the damage to higher-privileged users.",
      "AlternateTerms": [
        {
          "Term": "Separation of Privilege",
          "Description": "Some people and publications use the term \"Separation of Privilege\" to describe this weakness, but this term has dual meanings in current usage. This node conflicts with the original definition of \"Separation of Privilege\" by Saltzer and Schroeder; that original definition is more closely associated with CWE-654. Because there are multiple interpretations, use of the \"Separation of Privilege\" term is discouraged."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-33096",
          "Description": "Improper isolation of shared resource in a network-on-chip leads to denial of service",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-33096"
        },
        {
          "Reference": "CVE-2019-6260",
          "Description": "Baseboard Management Controller (BMC) device implements Advanced High-performance Bus (AHB) bridges that do not require authentication for arbitrary read and write access to the BMC's physical address space from the host, and possibly the network [REF-1138].",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-6260"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "654",
      "Name": "Reliance on a Single Factor in a Security Decision",
      "Abstraction": "Base",
      "Description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.",
      "AlternateTerms": [
        {
          "Term": "Separation of Privilege",
          "Description": "Some people and publications use the term \"Separation of Privilege\" to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition of \"Separation of Privilege\" by Saltzer and Schroeder, others use the same term to describe poor compartmentalization (CWE-653). Because there are multiple interpretations, use of the \"Separation of Privilege\" term is discouraged."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-35248",
          "Description": "Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-35248"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "655",
      "Name": "Insufficient Psychological Acceptability",
      "Abstraction": "Class",
      "Description": "The product has a protection mechanism that is too difficult or inconvenient to use, encouraging non-malicious users to disable or bypass the mechanism, whether by accident or on purpose.",
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "656",
      "Name": "Reliance on Security Through Obscurity",
      "Abstraction": "Class",
      "Description": "The product uses a protection mechanism whose strength depends heavily on its obscurity, such that knowledge of its algorithms or key data is sufficient to defeat the mechanism.",
      "ExtendedDescription": "This reliance on \"security through obscurity\" can produce resultant weaknesses if an attacker is able to reverse engineer the inner workings of the mechanism. Note that obscurity can be one small part of defense in depth, since it can create more work for an attacker; however, it is a significant risk if used as the primary means of protection.",
      "AlternateTerms": [
        {
          "Term": "Never Assuming your secrets are safe"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2006-6588",
          "Description": "Reliance on hidden form fields in a web application. Many web application vulnerabilities exist because the developer did not consider that \"hidden\" form fields can be processed using a modified client.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6588"
        },
        {
          "Reference": "CVE-2006-7142",
          "Description": "Hard-coded cryptographic key stored in executable program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-7142"
        },
        {
          "Reference": "CVE-2005-4002",
          "Description": "Hard-coded cryptographic key stored in executable program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-4002"
        },
        {
          "Reference": "CVE-2006-4068",
          "Description": "Hard-coded hashed values for username and password contained in client-side script, allowing brute-force offline attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4068"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "657",
      "Name": "Violation of Secure Design Principles",
      "Abstraction": "Class",
      "Description": "The product violates well-established principles for secure design.",
      "ExtendedDescription": "This can introduce resultant weaknesses or make it easier for developers to introduce related weaknesses during implementation. Because code is centered around design, it can be resource-intensive to fix design problems.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-6260",
          "Description": "Baseboard Management Controller (BMC) device implements Advanced High-performance Bus (AHB) bridges that do not require authentication for arbitrary read and write access to the BMC's physical address space from the host, and possibly the network [REF-1138].",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-6260"
        },
        {
          "Reference": "CVE-2007-5277",
          "Description": "The failure of connection attempts in a web browser resets DNS pin restrictions. An attacker can then bypass the same origin policy by rebinding a domain name to a different IP address. This was an attempt to \"fail functional.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5277"
        },
        {
          "Reference": "CVE-2006-7142",
          "Description": "Hard-coded cryptographic key stored in executable program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-7142"
        },
        {
          "Reference": "CVE-2007-0408",
          "Description": "Server does not properly validate client certificates when reusing cached connections.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-0408"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "66",
      "Name": "Improper Handling of File Names that Identify Virtual Resources",
      "Abstraction": "Base",
      "Description": "The product does not handle or incorrectly handles a file name that identifies a \"virtual\" resource that is not directly specified within the directory that is associated with the file name, causing the product to perform file-based operations on a resource that is not a file.",
      "ExtendedDescription": "Virtual file names are represented like normal file names, but they are effectively aliases for other resources that do not behave like normal files. Depending on their functionality, they could be alternate entities. They are not necessarily listed in directories.",
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-0278",
          "Description": "In IIS, remote attackers can obtain source code for ASP files by appending \"::$DATA\" to the URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0278"
        },
        {
          "Reference": "CVE-2004-1084",
          "Description": "Server allows remote attackers to read files and resource fork content via HTTP requests to certain special file names related to multiple data streams in HFS+.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1084"
        },
        {
          "Reference": "CVE-2002-0106",
          "Description": "Server allows remote attackers to cause a denial of service via a series of requests to .JSP files that contain an MS-DOS device name.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0106"
        }
      ],
      "FunctionalAreas": [
        "File Processing"
      ],
      "AffectedResources": [
        "File or Directory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "662",
      "Name": "Improper Synchronization",
      "Abstraction": "Class",
      "Description": "The product utilizes multiple threads or processes to allow temporary access to a shared resource that can only be exclusive to one process at a time, but it does not properly synchronize these actions, which might cause simultaneous accesses of this resource by multiple threads or processes.",
      "ExtendedDescription": "\n\nSynchronization refers to a variety of behaviors and mechanisms that allow two or more independently-operating processes or threads to ensure that they operate on shared resources in predictable ways that do not interfere with each other. Some shared resource operations cannot be executed atomically; that is, multiple steps must be guaranteed to execute sequentially, without any interference by other processes. Synchronization mechanisms vary widely, but they may include locking, mutexes, and semaphores. When a multi-step operation on a shared resource cannot be guaranteed to execute independent of interference, then the resulting behavior can be unpredictable. Improper synchronization could lead to data or memory corruption, denial of service, etc.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-1782",
          "Description": "Chain: improper locking (CWE-667) leads to race condition (CWE-362), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-1782"
        },
        {
          "Reference": "CVE-2009-0935",
          "Description": "Attacker provides invalid address to a memory-reading function, causing a mutex to be unlocked twice",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0935"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "663",
      "Name": "Use of a Non-reentrant Function in a Concurrent Context",
      "Abstraction": "Base",
      "Description": "The product calls a non-reentrant function in a concurrent context in which a competing code sequence (e.g. thread or signal handler) may have an opportunity to call the same function or otherwise influence its state.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-1349",
          "Description": "unsafe calls to library functions from signal handler",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1349"
        },
        {
          "Reference": "CVE-2004-2259",
          "Description": "SIGCHLD signal to FTP server can cause crash under heavy load while executing non-reentrant functions like malloc/free.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2259"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "664",
      "Name": "Improper Control of a Resource Through its Lifetime",
      "Abstraction": "Pillar",
      "Description": "The product does not maintain or incorrectly maintains control over a resource throughout its lifetime of creation, use, and release.",
      "ExtendedDescription": "\n\nResources often have explicit instructions on how to be created, used and destroyed. When code does not follow these instructions, it can lead to unexpected behaviors and potentially exploitable states.\n\n\nEven without explicit instructions, various principles are expected to be adhered to, such as \"Do not use an object until after its creation is complete,\" or \"do not use an object after it has been slated for destruction.\"\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2018-1000613",
          "Description": "Cryptography API uses unsafe reflection when deserializing a private key",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-1000613"
        },
        {
          "Reference": "CVE-2022-21668",
          "Description": "Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-21668"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "665",
      "Name": "Improper Initialization",
      "Abstraction": "Class",
      "Description": "The product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.",
      "ExtendedDescription": "This can have security implications when the associated resource is expected to have certain properties or values, such as a variable that determines whether a user has been authenticated or not.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-1471",
          "Description": "chain: an invalid value prevents a library file from being included, skipping initialization of key variables, leading to resultant eval injection.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1471"
        },
        {
          "Reference": "CVE-2008-3637",
          "Description": "Improper error checking in protection mechanism produces an uninitialized variable, allowing security bypass and code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3637"
        },
        {
          "Reference": "CVE-2008-4197",
          "Description": "Use of uninitialized memory may allow code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4197"
        },
        {
          "Reference": "CVE-2008-2934",
          "Description": "Free of an uninitialized pointer leads to crash and possible code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2934"
        },
        {
          "Reference": "CVE-2007-3749",
          "Description": "OS kernel does not reset a port when starting a setuid program, allowing local users to access the port and gain privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3749"
        },
        {
          "Reference": "CVE-2008-0063",
          "Description": "Product does not clear memory contents when generating an error message, leading to information leak.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0063"
        },
        {
          "Reference": "CVE-2008-0062",
          "Description": "Lack of initialization triggers NULL pointer dereference or double-free.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0062"
        },
        {
          "Reference": "CVE-2008-0081",
          "Description": "Uninitialized variable leads to code execution in popular desktop application.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0081"
        },
        {
          "Reference": "CVE-2008-3688",
          "Description": "chain: Uninitialized variable leads to infinite loop.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3688"
        },
        {
          "Reference": "CVE-2008-3475",
          "Description": "chain: Improper initialization leads to memory corruption.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3475"
        },
        {
          "Reference": "CVE-2008-5021",
          "Description": "Composite: race condition allows attacker to modify an object while it is still being initialized, causing software to access uninitialized memory.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5021"
        },
        {
          "Reference": "CVE-2005-1036",
          "Description": "Chain: Bypass of access restrictions due to improper authorization (CWE-862) of a user results from an improperly initialized (CWE-909) I/O permission bitmap",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1036"
        },
        {
          "Reference": "CVE-2008-3597",
          "Description": "chain: game server can access player data structures before initialization has happened leading to NULL dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3597"
        },
        {
          "Reference": "CVE-2009-2692",
          "Description": "chain: uninitialized function pointers can be dereferenced allowing code execution",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2692"
        },
        {
          "Reference": "CVE-2009-0949",
          "Description": "chain: improper initialization of memory can lead to NULL dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0949"
        },
        {
          "Reference": "CVE-2009-3620",
          "Description": "chain: some unprivileged ioctls do not verify that a structure has been initialized before invocation, leading to NULL dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3620"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "666",
      "Name": "Operation on Resource in Wrong Phase of Lifetime",
      "Abstraction": "Class",
      "Description": "The product performs an operation on a resource at the wrong phase of the resource's lifecycle, which can lead to unexpected behaviors.",
      "ExtendedDescription": "A resource's lifecycle includes several phases: initialization, use, and release. For each phase, it is important to follow the specifications outlined for how to operate on the resource and to ensure that the resource is in the expected phase. Otherwise, if a resource is in one phase but the operation is not valid for that phase (i.e., an incorrect phase of the resource's lifetime), then this can produce resultant weaknesses. For example, using a resource before it has been fully initialized could cause corruption or incorrect data to be used.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2006-5051",
          "Description": "Chain: Signal handler contains too much functionality (CWE-828), introducing a race condition (CWE-362) that leads to a double free (CWE-415).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-5051"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "667",
      "Name": "Improper Locking",
      "Abstraction": "Class",
      "Description": "The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.",
      "ExtendedDescription": "\n\nLocking is a type of synchronization behavior that ensures that multiple independently-operating processes or threads do not interfere with each other when accessing the same resource. All processes/threads are expected to follow the same steps for locking. If these steps are not followed precisely - or if no locking is done at all - then another process/thread could modify the shared resource in a way that is not visible or predictable to the original process. This can lead to data or memory corruption, denial of service, etc.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-1782",
          "Description": "Chain: improper locking (CWE-667) leads to race condition (CWE-362), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-1782"
        },
        {
          "Reference": "CVE-2009-0935",
          "Description": "Attacker provides invalid address to a memory-reading function, causing a mutex to be unlocked twice",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0935"
        },
        {
          "Reference": "CVE-2010-4210",
          "Description": "function in OS kernel unlocks a mutex that was not previously locked, causing a panic or overwrite of arbitrary memory.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-4210"
        },
        {
          "Reference": "CVE-2008-4302",
          "Description": "Chain: OS kernel does not properly handle a failure of a function call (CWE-755), leading to an unlock of a resource that was not locked (CWE-832), with resultant crash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4302"
        },
        {
          "Reference": "CVE-2009-1243",
          "Description": "OS kernel performs an unlock in some incorrect circumstances, leading to panic.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1243"
        },
        {
          "Reference": "CVE-2009-2857",
          "Description": "OS deadlock",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2857"
        },
        {
          "Reference": "CVE-2009-1961",
          "Description": "OS deadlock involving 3 separate functions",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1961"
        },
        {
          "Reference": "CVE-2009-2699",
          "Description": "deadlock in library",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2699"
        },
        {
          "Reference": "CVE-2009-4272",
          "Description": "deadlock triggered by packets that force collisions in a routing table",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-4272"
        },
        {
          "Reference": "CVE-2002-1850",
          "Description": "read/write deadlock between web server and script",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1850"
        },
        {
          "Reference": "CVE-2004-0174",
          "Description": "web server deadlock involving multiple listening connections",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0174"
        },
        {
          "Reference": "CVE-2009-1388",
          "Description": "multiple simultaneous calls to the same function trigger deadlock.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1388"
        },
        {
          "Reference": "CVE-2006-5158",
          "Description": "chain: other weakness leads to NULL pointer dereference (CWE-476) or deadlock (CWE-833).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-5158"
        },
        {
          "Reference": "CVE-2006-4342",
          "Description": "deadlock when an operation is performed on a resource while it is being removed.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4342"
        },
        {
          "Reference": "CVE-2006-2374",
          "Description": "Deadlock in device driver triggered by using file handle of a related device.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2374"
        },
        {
          "Reference": "CVE-2006-2275",
          "Description": "Deadlock when large number of small messages cannot be processed quickly enough.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2275"
        },
        {
          "Reference": "CVE-2005-3847",
          "Description": "OS kernel has deadlock triggered by a signal during a core dump.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3847"
        },
        {
          "Reference": "CVE-2005-3106",
          "Description": "Race condition leads to deadlock.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3106"
        },
        {
          "Reference": "CVE-2005-2456",
          "Description": "Chain: array index error (CWE-129) leads to deadlock (CWE-833)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2456"
        },
        {
          "Reference": "CVE-2001-0682",
          "Description": "Program can not execute when attacker obtains a mutex.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0682"
        },
        {
          "Reference": "CVE-2002-1914",
          "Description": "Program can not execute when attacker obtains a lock on a critical output file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1914"
        },
        {
          "Reference": "CVE-2002-1915",
          "Description": "Program can not execute when attacker obtains a lock on a critical output file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1915"
        },
        {
          "Reference": "CVE-2002-0051",
          "Description": "Critical file can be opened with exclusive read access by user, preventing application of security policy. Possibly related to improper permissions, large-window race condition.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0051"
        },
        {
          "Reference": "CVE-2000-0338",
          "Description": "Chain: predictable file names used for locking, allowing attacker to create the lock beforehand. Resultant from permissions and randomness.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0338"
        },
        {
          "Reference": "CVE-2000-1198",
          "Description": "Chain: Lock files with predictable names. Resultant from randomness.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1198"
        },
        {
          "Reference": "CVE-2002-1869",
          "Description": "Product does not check if it can write to a log file, allowing attackers to avoid logging by accessing the file using an exclusive lock. Overlaps unchecked error condition. This is not quite CWE-412, but close.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1869"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "668",
      "Name": "Exposure of Resource to Wrong Sphere",
      "Abstraction": "Class",
      "Description": "The product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.",
      "ExtendedDescription": "\n\nResources such as files and directories may be inadvertently exposed through mechanisms such as insecure permissions, or when a program accidentally operates on the wrong object. For example, a program may intend that private files can only be provided to a specific user. This effectively defines a control sphere that is intended to prevent attackers from accessing these private files. If the file permissions are insecure, then parties other than the user will be able to access those files.\n\n\nA separate control sphere might effectively require that the user can only access the private files, but not any other files on the system. If the program does not ensure that the user is only requesting private files, then the user might be able to access other files on the system.\n\n\nIn either case, the end result is that a resource has been exposed to the wrong party.\n",
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "669",
      "Name": "Incorrect Resource Transfer Between Spheres",
      "Abstraction": "Class",
      "Description": "The product does not properly transfer a resource/behavior to another sphere, or improperly imports a resource/behavior from another sphere, in a manner that provides unintended control over that resource.",
      "BackgroundDetails": [
        "A \"control sphere\" is a set of resources and behaviors that are accessible to a single actor, or a group of actors. A product's security model will typically define multiple spheres, possibly implicitly. For example, a server might define one sphere for \"administrators\" who can create new user accounts with subdirectories under /home/server/, and a second sphere might cover the set of users who can create or delete files within their own subdirectories. A third sphere might be \"users who are authenticated to the operating system on which the product is installed.\" Each sphere has different sets of actors and allowable behaviors."
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-22909",
          "Description": "Chain: router's firmware update procedure uses curl with \"-k\" (insecure) option that disables certificate validation (CWE-295), allowing adversary-in-the-middle (AITM) compromise with a malicious firmware image (CWE-494).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-22909"
        },
        {
          "Reference": "CVE-2023-5227",
          "Description": "PHP-based FAQ management app does not check the MIME type for uploaded images",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2023-5227"
        },
        {
          "Reference": "CVE-2005-0406",
          "Description": "Some image editors modify a JPEG image, but the original EXIF thumbnail image is left intact within the JPEG. (Also an interaction error).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0406"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "67",
      "Name": "Improper Handling of Windows Device Names",
      "Abstraction": "Variant",
      "Description": "The product constructs pathnames from user input, but it does not handle or incorrectly handles a pathname containing a Windows device name such as AUX or CON. This typically leads to denial of service or an information exposure when the application attempts to process the pathname as a regular file.",
      "ExtendedDescription": "Not properly handling virtual filenames (e.g. AUX, CON, PRN, COM1, LPT1) can result in different types of vulnerabilities. In some cases an attacker can request a device via injection of a virtual filename in a URL, which may cause an error that leads to a denial of service or an error page that reveals sensitive information. A product that allows device names to bypass filtering runs the risk of an attacker injecting malicious code in a file with the name of a device.",
      "BackgroundDetails": [
        "Historically, there was a bug in the Windows operating system that caused a blue screen of death. Even after that issue was fixed DOS device names continue to be a factor."
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0106",
          "Description": "Server allows remote attackers to cause a denial of service via a series of requests to .JSP files that contain an MS-DOS device name.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0106"
        },
        {
          "Reference": "CVE-2002-0200",
          "Description": "Server allows remote attackers to cause a denial of service via an HTTP request for an MS-DOS device name.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0200"
        },
        {
          "Reference": "CVE-2002-1052",
          "Description": "Product allows remote attackers to use MS-DOS device names in HTTP requests to cause a denial of service or obtain the physical path of the server.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1052"
        },
        {
          "Reference": "CVE-2001-0493",
          "Description": "Server allows remote attackers to cause a denial of service via a URL that contains an MS-DOS device name.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0493"
        },
        {
          "Reference": "CVE-2001-0558",
          "Description": "Server allows a remote attacker to create a denial of service via a URL request which includes a MS-DOS device name.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0558"
        },
        {
          "Reference": "CVE-2000-0168",
          "Description": "Microsoft Windows 9x operating systems allow an attacker to cause a denial of service via a pathname that includes file device names, aka the \"DOS Device in Path Name\" vulnerability.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0168"
        },
        {
          "Reference": "CVE-2001-0492",
          "Description": "Server allows remote attackers to determine the physical path of the server via a URL containing MS-DOS device names.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0492"
        },
        {
          "Reference": "CVE-2004-0552",
          "Description": "Product does not properly handle files whose names contain reserved MS-DOS device names, which can allow malicious code to bypass detection when it is installed, copied, or executed.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0552"
        },
        {
          "Reference": "CVE-2005-2195",
          "Description": "Server allows remote attackers to cause a denial of service (application crash) via a URL with a filename containing a .cgi extension and an MS-DOS device name.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2195"
        }
      ],
      "AffectedResources": [
        "File or Directory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "670",
      "Name": "Always-Incorrect Control Flow Implementation",
      "Abstraction": "Class",
      "Description": "The code contains a control flow path that does not reflect the algorithm that the path is intended to implement, leading to incorrect behavior any time this path is navigated.",
      "ExtendedDescription": "This weakness captures cases in which a particular code segment is always incorrect with respect to the algorithm that it is implementing. For example, if a C programmer intends to include multiple statements in a single block but does not include the enclosing braces (CWE-483), then the logic is always incorrect. This issue is in contrast to most weaknesses in which the code usually behaves correctly, except when it is externally manipulated in malicious ways.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-3011",
          "Description": "virtual interrupt controller in a virtualization product allows crash of host by writing a certain invalid value to a register, which triggers a fatal error instead of returning an error code",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-3011"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "671",
      "Name": "Lack of Administrator Control over Security",
      "Abstraction": "Class",
      "Description": "The product uses security features in a way that prevents the product's administrator from tailoring security settings to reflect the environment in which the product is being used. This introduces resultant weaknesses or prevents it from operating at a level of security that is desired by the administrator.",
      "ExtendedDescription": "If the product's administrator does not have the ability to manage security-related decisions at all times, then protecting the product from outside threats - including the product's developer - can become impossible. For example, a hard-coded account name and password cannot be changed by the administrator, thus exposing that product to attacks that the administrator can not prevent.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-29953",
          "Description": "Condition Monitor firmware has a maintenance interface with hard-coded credentials",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29953"
        },
        {
          "Reference": "CVE-2000-0127",
          "Description": "GUI configuration tool does not enable a security option when a checkbox is selected, although that option is honored when manually set in the configuration file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0127"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "672",
      "Name": "Operation on a Resource after Expiration or Release",
      "Abstraction": "Class",
      "Description": "The product uses, accesses, or otherwise operates on a resource after that resource has been expired, released, or revoked.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2009-3547",
          "Description": "Chain: race condition (CWE-362) might allow resource to be released before operating on it, leading to NULL dereference (CWE-476)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3547"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "673",
      "Name": "External Influence of Sphere Definition",
      "Abstraction": "Class",
      "Description": "The product does not prevent the definition of control spheres from external actors.",
      "ExtendedDescription": "Typically, a product defines its control sphere within the code itself, or through configuration by the product's administrator. In some cases, an external party can change the definition of the control sphere. This is typically a resultant weakness.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2008-2613",
          "Description": "setuid program allows compromise using path that finds and loads a malicious library.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2613"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "674",
      "Name": "Uncontrolled Recursion",
      "Abstraction": "Class",
      "Description": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
      "AlternateTerms": [
        {
          "Term": "Stack Exhaustion"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-1285",
          "Description": "Deeply nested arrays trigger stack exhaustion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1285"
        },
        {
          "Reference": "CVE-2007-3409",
          "Description": "Self-referencing pointers create infinite loop and resultant stack exhaustion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3409"
        },
        {
          "Reference": "CVE-2016-10707",
          "Description": "Javascript application accidentally changes input in a way that prevents a recursive call from detecting an exit condition.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2016-10707"
        },
        {
          "Reference": "CVE-2016-3627",
          "Description": "An attempt to recover a corrupted XML file infinite recursion protection counter was not always incremented missing the exit condition.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2016-3627"
        },
        {
          "Reference": "CVE-2019-15118",
          "Description": "USB-audio driver's descriptor code parsing allows unlimited recursion leading to stack exhaustion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-15118"
        }
      ],
      "AffectedResources": [
        "CPU"
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "675",
      "Name": "Multiple Operations on Resource in Single-Operation Context",
      "Abstraction": "Class",
      "Description": "The product performs the same operation on a resource two or more times, when the operation should only be applied once.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2009-0935",
          "Description": "Attacker provides invalid address to a memory-reading function, causing a mutex to be unlocked twice",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0935"
        },
        {
          "Reference": "CVE-2019-13351",
          "Description": "file descriptor double close can cause the wrong file to be associated with a file descriptor.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-13351"
        },
        {
          "Reference": "CVE-2004-1939",
          "Description": "XSS protection mechanism attempts to remove \"/\" that could be used to close tags, but it can be bypassed using double encoded slashes (%252F)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1939"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "676",
      "Name": "Use of Potentially Dangerous Function",
      "Abstraction": "Base",
      "Description": "The product invokes a potentially dangerous function that could introduce a vulnerability if it is used incorrectly, but the function can also be used safely.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-1470",
          "Description": "Library has multiple buffer overflows using sprintf() and strcpy()",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1470"
        },
        {
          "Reference": "CVE-2009-3849",
          "Description": "Buffer overflow using strcat()",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3849"
        },
        {
          "Reference": "CVE-2006-2114",
          "Description": "Buffer overflow using strcpy()",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2114"
        },
        {
          "Reference": "CVE-2006-0963",
          "Description": "Buffer overflow using strcpy()",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-0963"
        },
        {
          "Reference": "CVE-2011-0712",
          "Description": "Vulnerable use of strcpy() changed to use safer strlcpy()",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-0712"
        },
        {
          "Reference": "CVE-2008-5005",
          "Description": "Buffer overflow using strcpy()",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5005"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "680",
      "Name": "Integer Overflow to Buffer Overflow",
      "Abstraction": "Compound",
      "Description": "The product performs a calculation to determine how much memory to allocate, but an integer overflow can occur that causes less memory to be allocated than expected, leading to a buffer overflow.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-43537",
          "Description": "Chain: in a web browser, an unsigned 64-bit integer is forcibly cast to a 32-bit integer (CWE-681) and potentially leading to an integer overflow (CWE-190). If an integer overflow occurs, this can cause heap memory corruption (CWE-122)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-43537"
        },
        {
          "Reference": "CVE-2017-1000121",
          "Description": "chain: unchecked message size metadata allows integer overflow (CWE-190) leading to buffer overflow (CWE-119).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-1000121"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "681",
      "Name": "Incorrect Conversion between Numeric Types",
      "Abstraction": "Base",
      "Description": "When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-2639",
          "Description": "Chain: integer coercion error (CWE-192) prevents a return value from indicating an error, leading to out-of-bounds write (CWE-787)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-2639"
        },
        {
          "Reference": "CVE-2021-43537",
          "Description": "Chain: in a web browser, an unsigned 64-bit integer is forcibly cast to a 32-bit integer (CWE-681) and potentially leading to an integer overflow (CWE-190). If an integer overflow occurs, this can cause heap memory corruption (CWE-122)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-43537"
        },
        {
          "Reference": "CVE-2007-4268",
          "Description": "Chain: integer signedness error (CWE-195) passes signed comparison, leading to heap overflow (CWE-122)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4268"
        },
        {
          "Reference": "CVE-2007-4988",
          "Description": "Chain: signed short width value in image processor is sign extended during conversion to unsigned int, which leads to integer overflow and heap-based buffer overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4988"
        },
        {
          "Reference": "CVE-2009-0231",
          "Description": "Integer truncation of length value leads to heap-based buffer overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0231"
        },
        {
          "Reference": "CVE-2008-3282",
          "Description": "Size of a particular type changes for 64-bit platforms, leading to an integer truncation in document processor causes incorrect index to be generated.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3282"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "682",
      "Name": "Incorrect Calculation",
      "Abstraction": "Pillar",
      "Description": "The product performs a calculation that generates incorrect or unintended results that are later used in security-critical decisions or resource management.",
      "ExtendedDescription": "When product performs a security-critical calculation incorrectly, it might lead to incorrect resource allocations, incorrect privilege assignments, or failed comparisons among other things. Many of the direct results of an incorrect calculation can lead to even larger problems such as failed protection mechanisms or even arbitrary code execution.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-0022",
          "Description": "chain: mobile phone Bluetooth implementation does not include offset when calculating packet length (CWE-682), leading to out-of-bounds write (CWE-787)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-0022"
        },
        {
          "Reference": "CVE-2004-1363",
          "Description": "substitution overflow: buffer overflow using environment variables that are expanded after the length check is performed",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1363"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "683",
      "Name": "Function Call With Incorrect Order of Arguments",
      "Abstraction": "Variant",
      "Description": "The product calls a function, procedure, or routine, but the caller specifies the arguments in an incorrect order, leading to resultant weaknesses.",
      "ExtendedDescription": "While this weakness might be caught by the compiler in some languages, it can occur more frequently in cases in which the called function accepts variable numbers or types of arguments, such as format strings in C. It also can occur in languages or environments that do not enforce strong typing.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2006-7049",
          "Description": "Application calls functions with arguments in the wrong order, allowing attacker to bypass intended access restrictions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-7049"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "684",
      "Name": "Incorrect Provision of Specified Functionality",
      "Abstraction": "Class",
      "Description": "The code does not function according to its published specifications, potentially leading to incorrect usage.",
      "ExtendedDescription": "When providing functionality to an external party, it is important that the product behaves in accordance with the details specified. When requirements of nuances are not documented, the functionality may produce unintended behaviors for the caller, possibly leading to an exploitable state.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1446",
          "Description": "Error checking routine in PKCS#11 library returns \"OK\" status even when invalid signature is detected, allowing spoofed messages.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1446"
        },
        {
          "Reference": "CVE-2001-1559",
          "Description": "Chain: System call returns wrong value (CWE-393), leading to a resultant NULL dereference (CWE-476).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1559"
        },
        {
          "Reference": "CVE-2003-0187",
          "Description": "Program uses large timeouts on unconfirmed connections resulting from inconsistency in linked lists implementations.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0187"
        },
        {
          "Reference": "CVE-1999-1446",
          "Description": "UI inconsistency; visited URLs list not cleared when \"Clear History\" option is selected.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1446"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "685",
      "Name": "Function Call With Incorrect Number of Arguments",
      "Abstraction": "Variant",
      "Description": "The product calls a function, procedure, or routine, but the caller specifies too many arguments, or too few arguments, which may lead to undefined behavior and resultant weaknesses.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "686",
      "Name": "Function Call With Incorrect Argument Type",
      "Abstraction": "Variant",
      "Description": "The product calls a function, procedure, or routine, but the caller specifies an argument that is the wrong data type, which may lead to resultant weaknesses.",
      "ExtendedDescription": "This weakness is most likely to occur in loosely typed languages, or in strongly typed languages in which the types of variable arguments cannot be enforced at compilation time, or where there is implicit casting.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "687",
      "Name": "Function Call With Incorrectly Specified Argument Value",
      "Abstraction": "Variant",
      "Description": "The product calls a function, procedure, or routine, but the caller specifies an argument that contains the wrong value, which may lead to resultant weaknesses.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "688",
      "Name": "Function Call With Incorrect Variable or Reference as Argument",
      "Abstraction": "Variant",
      "Description": "The product calls a function, procedure, or routine, but the caller specifies the wrong variable or reference as one of the arguments, which may lead to undefined behavior and resultant weaknesses.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-2548",
          "Description": "Kernel code specifies the wrong variable in first argument, leading to resultant NULL pointer dereference.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2548"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "689",
      "Name": "Permission Race Condition During Resource Copy",
      "Abstraction": "Compound",
      "Description": "The product, while copying or cloning a resource, does not set the resource's permissions or access control until the copy is complete, leaving the resource exposed to other spheres while the copy is taking place.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0760",
          "Description": "Archive extractor decompresses files with world-readable permissions, then later sets permissions to what the archive specified.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0760"
        },
        {
          "Reference": "CVE-2005-2174",
          "Description": "Product inserts a new object into database before setting the object's permissions, introducing a race condition.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2174"
        },
        {
          "Reference": "CVE-2006-5214",
          "Description": "Error file has weak permissions before a chmod is performed.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-5214"
        },
        {
          "Reference": "CVE-2005-2475",
          "Description": "Archive permissions issue using hard link.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2475"
        },
        {
          "Reference": "CVE-2003-0265",
          "Description": "Database product creates files world-writable before initializing the setuid bits, leading to modification of executables.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0265"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "69",
      "Name": "Improper Handling of Windows ::DATA Alternate Data Stream",
      "Abstraction": "Variant",
      "Description": "The product does not properly prevent access to, or detect usage of, alternate data streams (ADS).",
      "ExtendedDescription": "An attacker can use an ADS to hide information about a file (e.g. size, the name of the process) from a system or file browser tools such as Windows Explorer and 'dir' at the command line utility. Alternately, the attacker might be able to bypass intended access restrictions for the associated data fork.",
      "BackgroundDetails": [
        "Alternate data streams (ADS) were first implemented in the Windows NT operating system to provide compatibility between NTFS and the Macintosh Hierarchical File System (HFS). In HFS, data and resource forks are used to store information about a file. The data fork provides information about the contents of the file while the resource fork stores metadata such as file type."
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-0278",
          "Description": "In IIS, remote attackers can obtain source code for ASP files by appending \"::$DATA\" to the URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0278"
        },
        {
          "Reference": "CVE-2000-0927",
          "Description": "Product does not properly record file sizes if they are stored in alternative data streams, which allows users to bypass quota restrictions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0927"
        }
      ],
      "AffectedResources": [
        "System Process"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "690",
      "Name": "Unchecked Return Value to NULL Pointer Dereference",
      "Abstraction": "Compound",
      "Description": "The product does not check for an error after calling a function that can return with a NULL pointer if the function fails, which leads to a resultant NULL pointer dereference.",
      "ExtendedDescription": "While unchecked return value weaknesses are not limited to returns of NULL pointers (see the examples in CWE-252), functions often return NULL to indicate an error status. When this error condition is not checked, a NULL pointer dereference can occur.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2008-1052",
          "Description": "Large Content-Length value leads to NULL pointer dereference when malloc fails.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1052"
        },
        {
          "Reference": "CVE-2006-6227",
          "Description": "Large message length field leads to NULL pointer dereference when malloc fails.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6227"
        },
        {
          "Reference": "CVE-2006-2555",
          "Description": "Parsing routine encounters NULL dereference when input is missing a colon separator.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2555"
        },
        {
          "Reference": "CVE-2003-1054",
          "Description": "URI parsing API sets argument to NULL when a parsing failure occurs, such as when the Referer header is missing a hostname, leading to NULL dereference.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1054"
        },
        {
          "Reference": "CVE-2008-5183",
          "Description": "chain: unchecked return value can lead to NULL dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5183"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "691",
      "Name": "Insufficient Control Flow Management",
      "Abstraction": "Pillar",
      "Description": "The code does not sufficiently manage its control flow during execution, creating conditions in which the control flow can be modified in unexpected ways.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-9805",
          "Description": "Chain: Creation of the packet client occurs before initialization is complete (CWE-696) resulting in a read from uninitialized memory (CWE-908), causing memory corruption.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-9805"
        },
        {
          "Reference": "CVE-2014-1266",
          "Description": "chain: incorrect \"goto\" in Apple SSL product bypasses certificate validation, allowing Adversary-in-the-Middle (AITM) attack (Apple \"goto fail\" bug). CWE-705 (Incorrect Control Flow Scoping) -> CWE-561 (Dead Code) -> CWE-295 (Improper Certificate Validation) -> CWE-393 (Return of Wrong Status Code) -> CWE-300 (Channel Accessible by Non-Endpoint).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-1266"
        },
        {
          "Reference": "CVE-2011-1027",
          "Description": "Chain: off-by-one error (CWE-193) leads to infinite loop (CWE-835) using invalid hex-encoded characters.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-1027"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "692",
      "Name": "Incomplete Denylist to Cross-Site Scripting",
      "Abstraction": "Compound",
      "Description": "The product uses a denylist-based protection mechanism to defend against XSS attacks, but the denylist is incomplete, allowing XSS variants to succeed.",
      "ExtendedDescription": "While XSS might seem simple to prevent, web browsers vary so widely in how they parse web pages, that a denylist cannot keep track of all the variations. The \"XSS Cheat Sheet\" [REF-714] contains a large number of attacks that are intended to bypass incomplete denylists.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-5727",
          "Description": "Denylist only removes <SCRIPT> tag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5727"
        },
        {
          "Reference": "CVE-2006-3617",
          "Description": "Denylist only removes <SCRIPT> tag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-3617"
        },
        {
          "Reference": "CVE-2006-4308",
          "Description": "Denylist only checks \"javascript:\" tag",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4308"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "693",
      "Name": "Protection Mechanism Failure",
      "Abstraction": "Pillar",
      "Description": "The product does not use or incorrectly uses a protection mechanism that provides sufficient defense against directed attacks against the product.",
      "ExtendedDescription": "This weakness covers three distinct situations. A \"missing\" protection mechanism occurs when the application does not define any mechanism against a certain class of attack. An \"insufficient\" protection mechanism might provide some defenses - for example, against the most common attacks - but it does not protect against everything that is intended. Finally, an \"ignored\" mechanism occurs when a mechanism is available and in active use within the product, but the developer has not applied it in some code path.",
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "694",
      "Name": "Use of Multiple Resources with Duplicate Identifier",
      "Abstraction": "Base",
      "Description": "The product uses multiple resources that can have the same identifier, in a context in which unique identifiers are required.",
      "ExtendedDescription": "If the product assumes that each resource has a unique identifier, the product could operate on the wrong resource if attackers can cause multiple resources to be associated with the same identifier.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2013-4787",
          "Description": "chain: mobile OS verifies cryptographic signature of file in an archive, but then installs a different file with the same name that is also listed in the archive.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2013-4787"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "695",
      "Name": "Use of Low-Level Functionality",
      "Abstraction": "Base",
      "Description": "The product uses low-level functionality that is explicitly prohibited by the framework or specification under which the product is supposed to operate.",
      "ExtendedDescription": "The use of low-level functionality can violate the specification in unexpected ways that effectively disable built-in protection mechanisms, introduce exploitable inconsistencies, or otherwise expose the functionality to attack.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "696",
      "Name": "Incorrect Behavior Order",
      "Abstraction": "Class",
      "Description": "The product performs multiple related behaviors, but the behaviors are performed in the wrong order in ways which may produce resultant weaknesses.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-9805",
          "Description": "Chain: Creation of the packet client occurs before initialization is complete (CWE-696) resulting in a read from uninitialized memory (CWE-908), causing memory corruption.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-9805"
        },
        {
          "Reference": "CVE-2007-5191",
          "Description": "file-system management programs call the setuid and setgid functions in the wrong order and do not check the return values, allowing attackers to gain unintended privileges",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5191"
        },
        {
          "Reference": "CVE-2007-1588",
          "Description": "C++ web server program calls Process::setuid before calling Process::setgid, preventing it from dropping privileges, potentially allowing CGI programs to be called with higher privileges than intended",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1588"
        },
        {
          "Reference": "CVE-2022-37734",
          "Description": "Chain: lexer in Java-based GraphQL server does not enforce maximum of tokens early enough (CWE-696), allowing excessive CPU consumption (CWE-1176)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-37734"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "697",
      "Name": "Incorrect Comparison",
      "Abstraction": "Pillar",
      "Description": "The product compares two entities in a security-relevant context, but the comparison is incorrect, which may lead to resultant weaknesses.",
      "ExtendedDescription": "\n\nThis Pillar covers several possibilities:\n\n\n  - the comparison checks one factor incorrectly;\n\n  - the comparison should consider multiple factors, but it does not check at least one of those factors at all;\n\n  - the comparison checks the wrong factor.\n\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-3116",
          "Description": "Chain: Python-based HTTP Proxy server uses the wrong boolean operators (CWE-480) causing an incorrect comparison (CWE-697) that identifies an authN failure if all three conditions are met instead of only one, allowing bypass of the proxy authentication (CWE-1390)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-3116"
        },
        {
          "Reference": "CVE-2020-15811",
          "Description": "Chain: Proxy uses a substring search instead of parsing the Transfer-Encoding header (CWE-697), allowing request splitting (CWE-113) and cache poisoning",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-15811"
        },
        {
          "Reference": "CVE-2016-10003",
          "Description": "Proxy performs incorrect comparison of request headers, leading to infoleak",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2016-10003"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "698",
      "Name": "Execution After Redirect (EAR)",
      "Abstraction": "Base",
      "Description": "The web application sends a redirect to another location, but instead of exiting, it executes additional code.",
      "AlternateTerms": [
        {
          "Term": "Redirect Without Exit"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2013-1402",
          "Description": "Execution-after-redirect allows access to application configuration details.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2013-1402"
        },
        {
          "Reference": "CVE-2009-1936",
          "Description": "chain: library file sends a redirect if it is directly requested but continues to execute, allowing remote file inclusion and path traversal.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1936"
        },
        {
          "Reference": "CVE-2007-2713",
          "Description": "Remote attackers can obtain access to administrator functionality through EAR.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-2713"
        },
        {
          "Reference": "CVE-2007-4932",
          "Description": "Remote attackers can obtain access to administrator functionality through EAR.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4932"
        },
        {
          "Reference": "CVE-2007-5578",
          "Description": "Bypass of authentication step through EAR.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5578"
        },
        {
          "Reference": "CVE-2007-2713",
          "Description": "Chain: Execution after redirect triggers eval injection.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-2713"
        },
        {
          "Reference": "CVE-2007-6652",
          "Description": "chain: execution after redirect allows non-administrator to perform static code injection.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-6652"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "7",
      "Name": "J2EE Misconfiguration: Missing Custom Error Page",
      "Abstraction": "Variant",
      "Description": "The default error page of a web application should not display sensitive information about the product.",
      "ExtendedDescription": "\n\nA Web application must define a default error page for 4xx errors (e.g. 404), 5xx (e.g. 500) errors and catch java.lang.Throwable exceptions to prevent attackers from mining information from the application container's built-in error response.\n\n\nWhen an attacker explores a web site looking for vulnerabilities, the amount of information that the site provides is crucial to the eventual success or failure of any attempted attacks.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "703",
      "Name": "Improper Check or Handling of Exceptional Conditions",
      "Abstraction": "Pillar",
      "Description": "The product does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the product.",
      "ObservedExamples": [
        {
          "Reference": "[REF-1374]",
          "Description": "Chain: JavaScript-based cryptocurrency library can fall back to the insecure Math.random() function instead of reporting a failure (CWE-392), thus reducing the entropy (CWE-332) and leading to generation of non-unique cryptographic keys for Bitcoin wallets (CWE-1391)",
          "Link": "https://www.unciphered.com/blog/randstorm-you-cant-patch-a-house-of-cards"
        },
        {
          "Reference": "CVE-2022-22224",
          "Description": "Chain: an operating system does not properly process malformed Open Shortest Path First (OSPF) Type/Length/Value Identifiers (TLV) (CWE-703), which can cause the process to enter an infinite loop (CWE-835)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-22224"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "704",
      "Name": "Incorrect Type Conversion or Cast",
      "Abstraction": "Class",
      "Description": "The product does not correctly convert an object, resource, or structure from one type to a different type.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-43537",
          "Description": "Chain: in a web browser, an unsigned 64-bit integer is forcibly cast to a 32-bit integer (CWE-681) and potentially leading to an integer overflow (CWE-190). If an integer overflow occurs, this can cause heap memory corruption (CWE-122)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-43537"
        },
        {
          "Reference": "CVE-2022-3979",
          "Description": "Chain: data visualization program written in PHP uses the \"!=\" operator instead of the type-strict \"!==\" operator (CWE-480) when validating hash values, potentially leading to an incorrect type conversion (CWE-704)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-3979"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "705",
      "Name": "Incorrect Control Flow Scoping",
      "Abstraction": "Class",
      "Description": "The product does not properly return control flow to the proper location after it has completed a task or detected an unusual condition.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2023-21087",
          "Description": "Java code in a smartphone OS can encounter a \"boot loop\" due to an uncaught exception",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2023-21087"
        },
        {
          "Reference": "CVE-2014-1266",
          "Description": "chain: incorrect \"goto\" in Apple SSL product bypasses certificate validation, allowing Adversary-in-the-Middle (AITM) attack (Apple \"goto fail\" bug). CWE-705 (Incorrect Control Flow Scoping) -> CWE-561 (Dead Code) -> CWE-295 (Improper Certificate Validation) -> CWE-393 (Return of Wrong Status Code) -> CWE-300 (Channel Accessible by Non-Endpoint).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-1266"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "706",
      "Name": "Use of Incorrectly-Resolved Name or Reference",
      "Abstraction": "Class",
      "Description": "The product uses a name or reference to access a resource, but the name/reference resolves to a resource that is outside of the intended control sphere.",
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "707",
      "Name": "Improper Neutralization",
      "Abstraction": "Pillar",
      "Description": "The product does not ensure or incorrectly ensures that structured messages or data are well-formed and that certain security properties are met before being read from an upstream component or sent to a downstream component.",
      "ExtendedDescription": "\n\nIf a message is malformed, it may cause the message to be incorrectly interpreted.\n\n\nNeutralization is an abstract term for any technique that ensures that input (and output) conforms with expectations and is \"safe.\" This can be done by:\n\n\n  - checking that the input/output is already \"safe\" (e.g. validation)\n\n  - transformation of the input/output to be \"safe\" using techniques such as filtering, encoding/decoding, escaping/unescaping, quoting/unquoting, or canonicalization\n\n  - preventing the input/output from being directly provided by an attacker (e.g. \"indirect selection\" that maps externally-provided values to internally-controlled values)\n\n  - preventing the input/output from being processed at all\n\nThis weakness typically applies in cases where the product prepares a control message that another process must act on, such as a command or query, and malicious input that was intended as data, can enter the control plane instead. However, this weakness also applies to more general cases where there are not always control implications.",
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "708",
      "Name": "Incorrect Ownership Assignment",
      "Abstraction": "Base",
      "Description": "The product assigns an owner to a resource, but the owner is outside of the intended control sphere.",
      "ExtendedDescription": "This may allow the resource to be manipulated by actors outside of the intended control sphere.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-5101",
          "Description": "File system sets wrong ownership and group when creating a new file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5101"
        },
        {
          "Reference": "CVE-2007-4238",
          "Description": "OS installs program with bin owner/group, allowing modification.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4238"
        },
        {
          "Reference": "CVE-2007-1716",
          "Description": "Manager does not properly restore ownership of a reusable resource when a user logs out, allowing privilege escalation.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1716"
        },
        {
          "Reference": "CVE-2005-3148",
          "Description": "Backup software restores symbolic links with incorrect uid/gid.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3148"
        },
        {
          "Reference": "CVE-2005-1064",
          "Description": "Product changes the ownership of files that a symlink points to, instead of the symlink itself.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1064"
        },
        {
          "Reference": "CVE-2011-1551",
          "Description": "Component assigns ownership of sensitive directory tree to a user account, which can be leveraged to perform privileged operations.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-1551"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "710",
      "Name": "Improper Adherence to Coding Standards",
      "Abstraction": "Pillar",
      "Description": "The product does not follow certain coding rules for development, which can lead to resultant weaknesses or increase the severity of the associated vulnerabilities.",
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "72",
      "Name": "Improper Handling of Apple HFS+ Alternate Data Stream Path",
      "Abstraction": "Variant",
      "Description": "The product does not properly handle special paths that may identify the data or resource fork of a file on the HFS+ file system.",
      "ExtendedDescription": "If the product chooses actions to take based on the file name, then if an attacker provides the data or resource fork, the product may take unexpected actions. Further, if the product intends to restrict access to a file, then an attacker might still be able to bypass intended access restrictions by requesting the data or resource fork for that file.",
      "BackgroundDetails": [
        "\n\nThe Apple HFS+ file system permits files to have multiple data input streams, accessible through special paths. The Mac OS X operating system provides a way to access the different data input streams through special paths and as an extended attribute:\n\n```\n\t\t- Resource fork: file/..namedfork/rsrc, file/rsrc (deprecated), xattr:com.apple.ResourceFork\n\t\t- Data fork: file/..namedfork/data (only versions prior to Mac OS X v10.5)\n```\nAdditionally, on filesystems that lack native support for multiple streams, the resource fork and file metadata may be stored in a file with \"._\" prepended to the name.\n\nForks can also be accessed through non-portable APIs.\n\n\nForks inherit the file system access controls of the file they belong to.\n\n\nPrograms need to control access to these paths, if the processing of a file system object is dependent on the structure of its path.\n"
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-1084",
          "Description": "Server allows remote attackers to read files and resource fork content via HTTP requests to certain special file names related to multiple data streams in HFS+.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1084"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "73",
      "Name": "External Control of File Name or Path",
      "Abstraction": "Base",
      "Description": "The product allows user input to control or influence paths or file names that are used in filesystem operations.",
      "ExtendedDescription": "\n\nThis could allow an attacker to access or modify system files or other files that are critical to the application.\n\n\nPath manipulation errors occur when the following two conditions are met:\n\n```\n\t\t1. An attacker can specify a path used in an operation on the filesystem.\n\t\t2. By specifying the resource, the attacker gains a capability that would not otherwise be permitted.\n```\nFor example, the program may give the attacker the ability to overwrite the specified file or run with a configuration controlled by the attacker.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-45918",
          "Description": "Chain: a learning management tool debugger uses external input to locate previous session logs (CWE-73) and does not properly validate the given path (CWE-20), allowing for filesystem path traversal using \"../\" sequences (CWE-24)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-45918"
        },
        {
          "Reference": "CVE-2008-5748",
          "Description": "Chain: external control of values for user's desired language and theme enables path traversal.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5748"
        },
        {
          "Reference": "CVE-2008-5764",
          "Description": "Chain: external control of user's target language enables remote file inclusion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5764"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "732",
      "Name": "Incorrect Permission Assignment for Critical Resource",
      "Abstraction": "Class",
      "Description": "The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.",
      "ExtendedDescription": "When a resource is given a permission setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution, or sensitive user data. For example, consider a misconfigured storage account for the cloud that can be read or written by a public or anonymous user.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-29527",
          "Description": "Go application for cloud management creates a world-writable sudoers file that allows local attackers to inject sudo rules and escalate privileges to root by winning a race condition.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29527"
        },
        {
          "Reference": "CVE-2009-3482",
          "Description": "Anti-virus product sets insecure \"Everyone: Full Control\" permissions for files under the \"Program Files\" folder, allowing attackers to replace executables with Trojan horses.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3482"
        },
        {
          "Reference": "CVE-2009-3897",
          "Description": "Product creates directories with 0777 permissions at installation, allowing users to gain privileges and access a socket used for authentication.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3897"
        },
        {
          "Reference": "CVE-2009-3489",
          "Description": "Photo editor installs a service with an insecure security descriptor, allowing users to stop or start the service, or execute commands as SYSTEM.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3489"
        },
        {
          "Reference": "CVE-2020-15708",
          "Description": "socket created with insecure permissions",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-15708"
        },
        {
          "Reference": "CVE-2009-3289",
          "Description": "Library function copies a file to a new target and uses the source file's permissions for the target, which is incorrect when the source file is a symbolic link, which typically has 0777 permissions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3289"
        },
        {
          "Reference": "CVE-2009-0115",
          "Description": "Device driver uses world-writable permissions for a socket file, allowing attackers to inject arbitrary commands.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0115"
        },
        {
          "Reference": "CVE-2009-1073",
          "Description": "LDAP server stores a cleartext password in a world-readable file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1073"
        },
        {
          "Reference": "CVE-2009-0141",
          "Description": "Terminal emulator creates TTY devices with world-writable permissions, allowing an attacker to write to the terminals of other users.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0141"
        },
        {
          "Reference": "CVE-2008-0662",
          "Description": "VPN product stores user credentials in a registry key with \"Everyone: Full Control\" permissions, allowing attackers to steal the credentials.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0662"
        },
        {
          "Reference": "CVE-2008-0322",
          "Description": "Driver installs its device interface with \"Everyone: Write\" permissions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0322"
        },
        {
          "Reference": "CVE-2009-3939",
          "Description": "Driver installs a file with world-writable permissions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3939"
        },
        {
          "Reference": "CVE-2009-3611",
          "Description": "Product changes permissions to 0777 before deleting a backup; the permissions stay insecure for subsequent backups.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3611"
        },
        {
          "Reference": "CVE-2007-6033",
          "Description": "Product creates a share with \"Everyone: Full Control\" permissions, allowing arbitrary program execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-6033"
        },
        {
          "Reference": "CVE-2007-5544",
          "Description": "Product uses \"Everyone: Full Control\" permissions for memory-mapped files (shared memory) in inter-process communication, allowing attackers to tamper with a session.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5544"
        },
        {
          "Reference": "CVE-2005-4868",
          "Description": "Database product uses read/write permissions for everyone for its shared memory, allowing theft of credentials.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-4868"
        },
        {
          "Reference": "CVE-2004-1714",
          "Description": "Security product uses \"Everyone: Full Control\" permissions for its configuration files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1714"
        },
        {
          "Reference": "CVE-2001-0006",
          "Description": "\"Everyone: Full Control\" permissions assigned to a mutex allows users to disable network connectivity.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0006"
        },
        {
          "Reference": "CVE-2002-0969",
          "Description": "Chain: database product contains buffer overflow that is only reachable through a .ini configuration file - which has \"Everyone: Full Control\" permissions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0969"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "733",
      "Name": "Compiler Optimization Removal or Modification of Security-critical Code",
      "Abstraction": "Base",
      "Description": "The developer builds a security-critical protection mechanism into the software, but the compiler optimizes the program such that the mechanism is removed or modified.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2008-1685",
          "Description": "C compiler optimization, as allowed by specifications, removes code that is used to perform checks to detect integer overflows.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1685"
        },
        {
          "Reference": "CVE-2019-1010006",
          "Description": "Chain: compiler optimization (CWE-733) removes or modifies code used to detect integer overflow (CWE-190), allowing out-of-bounds write (CWE-787).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-1010006"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "74",
      "Name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
      "Abstraction": "Class",
      "Description": "The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.",
      "ExtendedDescription": "Software or other automated logic has certain assumptions about what constitutes data and control respectively. It is the lack of verification of these assumptions for user-controlled input that leads to injection problems. Injection problems encompass a wide variety of issues -- all mitigated in very different ways and usually attempted in order to alter the control flow of the process. For this reason, the most effective way to discuss these weaknesses is to note the distinct features that classify them as injection weaknesses. The most important issue to note is that all injection problems share one thing in common -- i.e., they allow for the injection of control plane data into the user-controlled data plane. This means that the execution of the process may be altered by sending code in through legitimate data channels, using no other mechanism. While buffer overflows, and many other flaws, involve the use of some further issue to gain execution, injection problems need only for the data to be parsed.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-36069",
          "Description": "Python-based dependency management tool avoids OS command injection when generating Git commands but allows injection of optional arguments with input beginning with a dash (CWE-88), potentially allowing for code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-36069"
        },
        {
          "Reference": "CVE-1999-0067",
          "Description": "Canonical example of OS command injection. CGI program does not neutralize \"|\" metacharacter when invoking a phonebook program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0067"
        },
        {
          "Reference": "CVE-2022-1509",
          "Description": "injection of sed script syntax (\"sed injection\")",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-1509"
        },
        {
          "Reference": "CVE-2020-9054",
          "Description": "Chain: improper input validation (CWE-20) in username parameter, leading to OS command injection (CWE-78), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-9054"
        },
        {
          "Reference": "CVE-2021-44228",
          "Description": "Product does not neutralize ${xyz} style expressions, allowing remote code execution. (log4shell vulnerability)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-44228"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "749",
      "Name": "Exposed Dangerous Method or Function",
      "Abstraction": "Base",
      "Description": "The product provides an Applications Programming Interface (API) or similar interface for interaction with external actors, but the interface includes a dangerous method or function that is not properly restricted.",
      "ExtendedDescription": "\n\nThis weakness can lead to a wide variety of resultant weaknesses, depending on the behavior of the exposed method. It can apply to any number of technologies and approaches, such as ActiveX controls, Java functions, IOCTLs, and so on.\n\n\nThe exposure can occur in a few different ways:\n\n\n  - The function/method was never intended to be exposed to outside actors.\n\n  - The function/method was only intended to be accessible to a limited set of actors, such as Internet-based access from a single web site.\n\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-6382",
          "Description": "arbitrary Java code execution via exposed method",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-6382"
        },
        {
          "Reference": "CVE-2007-1112",
          "Description": "security tool ActiveX control allows download or upload of files",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1112"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "75",
      "Name": "Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)",
      "Abstraction": "Class",
      "Description": "The product does not adequately filter user-controlled input for special elements with control implications.",
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "754",
      "Name": "Improper Check for Unusual or Exceptional Conditions",
      "Abstraction": "Class",
      "Description": "The product does not check or incorrectly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the product.",
      "ExtendedDescription": "\n\nThe programmer may assume that certain events or conditions will never occur or do not need to be worried about, such as low memory conditions, lack of access to resources due to restrictive permissions, or misbehaving clients or components. However, attackers may intentionally trigger these unusual conditions, thus violating the programmer's assumptions, possibly introducing instability, incorrect behavior, or a vulnerability.\n\n\nNote that this entry is not exclusively about the use of exceptions and exception handling, which are mechanisms for both checking and handling unusual or unexpected conditions.\n",
      "BackgroundDetails": [
        "Many functions will return some value about the success of their actions. This will alert the program whether or not to handle any errors caused by that function."
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2023-49286",
          "Description": "Chain: function in web caching proxy does not correctly check a return value (CWE-253) leading to a reachable assertion (CWE-617)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2023-49286"
        },
        {
          "Reference": "CVE-2007-3798",
          "Description": "Unchecked return value leads to resultant integer overflow and code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3798"
        },
        {
          "Reference": "CVE-2006-4447",
          "Description": "Program does not check return value when invoking functions to drop privileges, which could leave users with higher privileges than expected by forcing those functions to fail.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4447"
        },
        {
          "Reference": "CVE-2006-2916",
          "Description": "Program does not check return value when invoking functions to drop privileges, which could leave users with higher privileges than expected by forcing those functions to fail.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2916"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "755",
      "Name": "Improper Handling of Exceptional Conditions",
      "Abstraction": "Class",
      "Description": "The product does not handle or incorrectly handles an exceptional condition.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2023-41151",
          "Description": "SDK for OPC Unified Architecture (OPC UA) server has uncaught exception when a socket is blocked for writing but the server tries to send an error",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2023-41151"
        },
        {
          "Reference": "[REF-1374]",
          "Description": "Chain: JavaScript-based cryptocurrency library can fall back to the insecure Math.random() function instead of reporting a failure (CWE-392), thus reducing the entropy (CWE-332) and leading to generation of non-unique cryptographic keys for Bitcoin wallets (CWE-1391)",
          "Link": "https://www.unciphered.com/blog/randstorm-you-cant-patch-a-house-of-cards"
        },
        {
          "Reference": "CVE-2021-3011",
          "Description": "virtual interrupt controller in a virtualization product allows crash of host by writing a certain invalid value to a register, which triggers a fatal error instead of returning an error code",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-3011"
        },
        {
          "Reference": "CVE-2008-4302",
          "Description": "Chain: OS kernel does not properly handle a failure of a function call (CWE-755), leading to an unlock of a resource that was not locked (CWE-832), with resultant crash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4302"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "756",
      "Name": "Missing Custom Error Page",
      "Abstraction": "Base",
      "Description": "The product does not return custom error pages to the user, possibly exposing sensitive information.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "757",
      "Name": "Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade')",
      "Abstraction": "Base",
      "Description": "A protocol or its implementation supports interaction between multiple actors and allows those actors to negotiate which algorithm should be used as a protection mechanism such as encryption or authentication, but it does not select the strongest algorithm that is available to both parties.",
      "ExtendedDescription": "When a security mechanism can be forced to downgrade to use a less secure algorithm, this can make it easier for attackers to compromise the product by exploiting weaker algorithm. The victim might not be aware that the less secure algorithm is being used. For example, if an attacker can force a communications channel to use cleartext instead of strongly-encrypted data, then the attacker could read the channel by sniffing, instead of going through extra effort of trying to decrypt the data using brute force techniques.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2006-4302",
          "Description": "Attacker can select an older version of the software to exploit its vulnerabilities.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4302"
        },
        {
          "Reference": "CVE-2006-4407",
          "Description": "Improper prioritization of encryption ciphers during negotiation leads to use of a weaker cipher.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4407"
        },
        {
          "Reference": "CVE-2005-2969",
          "Description": "chain: SSL/TLS implementation disables a verification step (CWE-325) that enables a downgrade attack to a weaker protocol.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2969"
        },
        {
          "Reference": "CVE-2001-1444",
          "Description": "Telnet protocol implementation allows downgrade to weaker authentication and encryption using an Adversary-in-the-Middle AITM attack.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1444"
        },
        {
          "Reference": "CVE-2002-1646",
          "Description": "SSH server implementation allows override of configuration setting to use weaker authentication schemes. This may be a composite with CWE-642.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1646"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "758",
      "Name": "Reliance on Undefined, Unspecified, or Implementation-Defined Behavior",
      "Abstraction": "Class",
      "Description": "The product uses an API function, data structure, or other entity in a way that relies on properties that are not always guaranteed to hold for that entity.",
      "ExtendedDescription": "This can lead to resultant weaknesses when the required properties change, such as when the product is ported to a different platform or if an interaction error (CWE-435) occurs.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2006-1902",
          "Description": "Change in C compiler behavior causes resultant buffer overflows in programs that depend on behaviors that were undefined in the C standard.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-1902"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "759",
      "Name": "Use of a One-Way Hash without a Salt",
      "Abstraction": "Variant",
      "Description": "The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product does not also use a salt as part of the input.",
      "ExtendedDescription": "\n\nThis makes it easier for attackers to pre-compute the hash value using dictionary attack techniques such as rainbow tables.\n\n\nIt should be noted that, despite common perceptions, the use of a good salt with a hash does not sufficiently increase the effort for an attacker who is targeting an individual password, or who has a large amount of computing resources available, such as with cloud-based services or specialized, inexpensive hardware. Offline password cracking can still be effective if the hash function is not expensive to compute; many cryptographic functions are designed to be efficient and can be vulnerable to attacks using massive computing resources, even if the hash is cryptographically strong. The use of a salt only slightly increases the computing requirements for an attacker compared to other strategies such as adaptive hash functions. See CWE-916 for more details.\n",
      "BackgroundDetails": [
        "In cryptography, salt refers to some random addition of data to an input before hashing to make dictionary attacks more difficult."
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2008-1526",
          "Description": "Router does not use a salt with a hash, making it easier to crack passwords.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1526"
        },
        {
          "Reference": "CVE-2006-1058",
          "Description": "Router does not use a salt with a hash, making it easier to crack passwords.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-1058"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "76",
      "Name": "Improper Neutralization of Equivalent Special Elements",
      "Abstraction": "Base",
      "Description": "The product correctly neutralizes certain special elements, but it improperly neutralizes equivalent special elements.",
      "ExtendedDescription": "The product may have a fixed list of special characters it believes is complete. However, there may be alternate encodings, or representations that also have the same meaning. For example, the product may filter out a leading slash (/) to prevent absolute path names, but does not account for a tilde (~) followed by a user name, which on some *nix systems could be expanded to an absolute pathname. Alternately, the product might filter a dangerous \"-e\" command-line switch when calling an external program, but it might not account for \"--exec\" or other switches that have the same semantics.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "760",
      "Name": "Use of a One-Way Hash with a Predictable Salt",
      "Abstraction": "Variant",
      "Description": "The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product uses a predictable salt as part of the input.",
      "ExtendedDescription": "\n\nThis makes it easier for attackers to pre-compute the hash value using dictionary attack techniques such as rainbow tables, effectively disabling the protection that an unpredictable salt would provide.\n\n\nIt should be noted that, despite common perceptions, the use of a good salt with a hash does not sufficiently increase the effort for an attacker who is targeting an individual password, or who has a large amount of computing resources available, such as with cloud-based services or specialized, inexpensive hardware. Offline password cracking can still be effective if the hash function is not expensive to compute; many cryptographic functions are designed to be efficient and can be vulnerable to attacks using massive computing resources, even if the hash is cryptographically strong. The use of a salt only slightly increases the computing requirements for an attacker compared to other strategies such as adaptive hash functions. See CWE-916 for more details.\n",
      "BackgroundDetails": [
        "In cryptography, salt refers to some random addition of data to an input before hashing to make dictionary attacks more difficult."
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2008-4905",
          "Description": "Blogging software uses a hard-coded salt when calculating a password hash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4905"
        },
        {
          "Reference": "CVE-2002-1657",
          "Description": "Database server uses the username for a salt when encrypting passwords, simplifying brute force attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1657"
        },
        {
          "Reference": "CVE-2001-0967",
          "Description": "Server uses a constant salt when encrypting passwords, simplifying brute force attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0967"
        },
        {
          "Reference": "CVE-2005-0408",
          "Description": "chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0408"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "761",
      "Name": "Free of Pointer not at Start of Buffer",
      "Abstraction": "Variant",
      "Description": "The product calls free() on a pointer to a memory resource that was allocated on the heap, but the pointer is not at the start of the buffer.",
      "ExtendedDescription": "\n\nThis can cause the product to crash, or in some cases, modify critical program variables or execute code.\n\n\nThis weakness often occurs when the memory is allocated explicitly on the heap with one of the malloc() family functions and free() is called, but pointer arithmetic has caused the pointer to be in the interior or end of the buffer.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-11930",
          "Description": "function \"internally calls 'calloc' and returns a pointer at an index... inside the allocated buffer. This led to freeing invalid memory.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-11930"
        }
      ],
      "AffectedResources": [
        "Memory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "762",
      "Name": "Mismatched Memory Management Routines",
      "Abstraction": "Variant",
      "Description": "The product attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource.",
      "ExtendedDescription": "\n\nThis weakness can be generally described as mismatching memory management routines, such as:\n\n\n  - The memory was allocated on the stack (automatically), but it was deallocated using the memory management routine free() (CWE-590), which is intended for explicitly allocated heap memory.\n\n  - The memory was allocated explicitly using one set of memory management functions, and deallocated using a different set. For example, memory might be allocated with malloc() in C++ instead of the new operator, and then deallocated with the delete operator.\n\nWhen the memory management functions are mismatched, the consequences may be as severe as code execution, memory corruption, or program crash. Consequences and ease of exploit will vary depending on the implementation of the routines and the object being managed.",
      "AffectedResources": [
        "Memory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "763",
      "Name": "Release of Invalid Pointer or Reference",
      "Abstraction": "Base",
      "Description": "The product attempts to return a memory resource to the system, but it calls the wrong release function or calls the appropriate release function incorrectly.",
      "ExtendedDescription": "\n\nThis weakness can take several forms, such as:\n\n\n  - The memory was allocated, explicitly or implicitly, via one memory management method and deallocated using a different, non-compatible function (CWE-762).\n\n  - The function calls or memory management routines chosen are appropriate, however they are used incorrectly, such as in CWE-761.\n\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-11930",
          "Description": "function \"internally calls 'calloc' and returns a pointer at an index... inside the allocated buffer. This led to freeing invalid memory.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-11930"
        }
      ],
      "AffectedResources": [
        "Memory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "764",
      "Name": "Multiple Locks of a Critical Resource",
      "Abstraction": "Base",
      "Description": "The product locks a critical resource more times than intended, leading to an unexpected state in the system.",
      "ExtendedDescription": "When a product is operating in a concurrent environment and repeatedly locks a critical resource, the consequences will vary based on the type of lock, the lock's implementation, and the resource being protected. In some situations such as with semaphores, the resources are pooled and extra locking calls will reduce the size of the total available pool, possibly leading to degraded performance or a denial of service. If this can be triggered by an attacker, it will be similar to an unrestricted lock (CWE-412). In the context of a binary lock, it is likely that any duplicate locking attempts will never succeed since the lock is already held and progress may not be possible.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "765",
      "Name": "Multiple Unlocks of a Critical Resource",
      "Abstraction": "Base",
      "Description": "The product unlocks a critical resource more times than intended, leading to an unexpected state in the system.",
      "ExtendedDescription": "When the product is operating in a concurrent environment and repeatedly unlocks a critical resource, the consequences will vary based on the type of lock, the lock's implementation, and the resource being protected. In some situations such as with semaphores, the resources are pooled and extra calls to unlock will increase the count for the number of available resources, likely resulting in a crash or unpredictable behavior when the system nears capacity.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2009-0935",
          "Description": "Attacker provides invalid address to a memory-reading function, causing a mutex to be unlocked twice",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0935"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "766",
      "Name": "Critical Data Element Declared Public",
      "Abstraction": "Base",
      "Description": "The product declares a critical variable, field, or member to be public when intended security policy requires it to be private.",
      "ExtendedDescription": "\n\nThis issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2010-3860",
          "Description": "variables declared public allow remote read of system properties such as user name and home directory.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-3860"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "767",
      "Name": "Access to Critical Private Variable via Public Method",
      "Abstraction": "Base",
      "Description": "The product defines a public method that reads or modifies a private variable.",
      "ExtendedDescription": "If an attacker modifies the variable to contain unexpected values, this could violate assumptions from other parts of the code. Additionally, if an attacker can read the private variable, it may expose sensitive information or make it easier to launch further attacks.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "768",
      "Name": "Incorrect Short Circuit Evaluation",
      "Abstraction": "Variant",
      "Description": "The product contains a conditional statement with multiple logical expressions in which one of the non-leading expressions may produce side effects. This may lead to an unexpected state in the program after the execution of the conditional, because short-circuiting logic may prevent the side effects from occurring.",
      "ExtendedDescription": "\n\nUsage of short circuit evaluation, though well-defined in the C standard, may alter control flow in a way that introduces logic errors that are difficult to detect, possibly causing errors later during the product's execution. If an attacker can discover such an inconsistency, it may be exploitable to gain arbitrary control over a system.\n\n\nIf the first condition of an \"or\" statement is assumed to be true under normal circumstances, or if the first condition of an \"and\" statement is assumed to be false, then any subsequent conditional may contain its own logic errors that are not detected during code review or testing.\n\n\nFinally, the usage of short circuit evaluation may decrease the maintainability of the code.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "77",
      "Name": "Improper Neutralization of Special Elements used in a Command ('Command Injection')",
      "Abstraction": "Class",
      "Diagram": "/data/images/CWE-77-Diagram.png",
      "Description": "The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.",
      "ExtendedDescription": "\n\nMany protocols and products have their own custom command language. While OS or shell command strings are frequently discovered and targeted, developers may not realize that these other command languages might also be vulnerable to attacks.\n",
      "AlternateTerms": [
        {
          "Term": "Command injection",
          "Description": "an attack-oriented phrase for this weakness. Note: often used when \"OS command injection\" (CWE-78) was intended."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-1509",
          "Description": "injection of sed script syntax (\"sed injection\")",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-1509"
        },
        {
          "Reference": "CVE-2024-5184",
          "Description": "API service using a large generative AI model allows direct prompt injection to leak hard-coded system prompts or execute other prompts.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2024-5184"
        },
        {
          "Reference": "CVE-2020-11698",
          "Description": "anti-spam product allows injection of SNMP commands into confiuration file",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-11698"
        },
        {
          "Reference": "CVE-2019-12921",
          "Description": "image program allows injection of commands in \"Magick Vector Graphics (MVG)\" language.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-12921"
        },
        {
          "Reference": "CVE-2022-36069",
          "Description": "Python-based dependency management tool avoids OS command injection when generating Git commands but allows injection of optional arguments with input beginning with a dash (CWE-88), potentially allowing for code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-36069"
        },
        {
          "Reference": "CVE-1999-0067",
          "Description": "Canonical example of OS command injection. CGI program does not neutralize \"|\" metacharacter when invoking a phonebook program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0067"
        },
        {
          "Reference": "CVE-2020-9054",
          "Description": "Chain: improper input validation (CWE-20) in username parameter, leading to OS command injection (CWE-78), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-9054"
        },
        {
          "Reference": "CVE-2021-41282",
          "Description": "injection of sed script syntax (\"sed injection\")",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-41282"
        },
        {
          "Reference": "CVE-2019-13398",
          "Description": "injection of sed script syntax (\"sed injection\")",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-13398"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review",
        "Suggestions": [
          {
            "CweID": "78",
            "Comment": "OS Command Injection"
          }
        ]
      },
      "1003_view": "Yes"
    },
    {
      "ID": "770",
      "Name": "Allocation of Resources Without Limits or Throttling",
      "Abstraction": "Base",
      "Description": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
      "ExtendedDescription": "\n\nCode frequently has to work with limited resources, so programmers must be careful to ensure that resources are not consumed too quickly, or too easily. Without use of quotas, resource limits, or other protection mechanisms, it can be easy for an attacker to consume many resources by rapidly making many requests, or causing larger resources to be used than is needed. When too many resources are allocated, or if a single resource is too large, then it can prevent the code from working correctly, possibly leading to a denial of service.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-21668",
          "Description": "Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-21668"
        },
        {
          "Reference": "CVE-2009-4017",
          "Description": "Language interpreter does not restrict the number of temporary files being created when handling a MIME request with a large number of parts..",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-4017"
        },
        {
          "Reference": "CVE-2009-2726",
          "Description": "Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2726"
        },
        {
          "Reference": "CVE-2009-2540",
          "Description": "Large integer value for a length property in an object causes a large amount of memory allocation.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2540"
        },
        {
          "Reference": "CVE-2009-2054",
          "Description": "Product allows exhaustion of file descriptors when processing a large number of TCP packets.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2054"
        },
        {
          "Reference": "CVE-2008-5180",
          "Description": "Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5180"
        },
        {
          "Reference": "CVE-2008-1700",
          "Description": "Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1700"
        },
        {
          "Reference": "CVE-2005-4650",
          "Description": "CMS does not restrict the number of searches that can occur simultaneously, leading to resource exhaustion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-4650"
        },
        {
          "Reference": "CVE-2020-15100",
          "Description": "web application scanner attempts to read an excessively large file created by a user, causing process termination",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-15100"
        },
        {
          "Reference": "CVE-2020-7218",
          "Description": "Go-based workload orchestrator does not limit resource usage with unauthenticated connections, allowing a DoS by flooding the service",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-7218"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "771",
      "Name": "Missing Reference to Active Allocated Resource",
      "Abstraction": "Base",
      "Description": "The product does not properly maintain a reference to a resource that has been allocated, which prevents the resource from being reclaimed.",
      "ExtendedDescription": "This does not necessarily apply in languages or frameworks that automatically perform garbage collection, since the removal of all references may act as a signal that the resource is ready to be reclaimed.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "772",
      "Name": "Missing Release of Resource after Effective Lifetime",
      "Abstraction": "Base",
      "Description": "The product does not release a resource after its effective lifetime has ended, i.e., after the resource is no longer needed.",
      "ExtendedDescription": "When a resource is not released after use, it can allow attackers to cause a denial of service by causing the allocation of resources without triggering their release. Frequently-affected resources include memory, CPU, disk space, power or battery, etc.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-0897",
          "Description": "Chain: anti-virus product encounters a malformed file but returns from a function without closing a file descriptor (CWE-775) leading to file descriptor consumption (CWE-400) and failed scans.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-0897"
        },
        {
          "Reference": "CVE-2001-0830",
          "Description": "Sockets not properly closed when attacker repeatedly connects and disconnects from server.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0830"
        },
        {
          "Reference": "CVE-1999-1127",
          "Description": "Does not shut down named pipe connections if malformed data is sent.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1127"
        },
        {
          "Reference": "CVE-2009-2858",
          "Description": "Chain: memory leak (CWE-404) leads to resource exhaustion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2858"
        },
        {
          "Reference": "CVE-2009-2054",
          "Description": "Product allows exhaustion of file descriptors when processing a large number of TCP packets.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2054"
        },
        {
          "Reference": "CVE-2008-2122",
          "Description": "Port scan triggers CPU consumption with processes that attempt to read data from closed sockets.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2122"
        },
        {
          "Reference": "CVE-2007-4103",
          "Description": "Product allows resource exhaustion via a large number of calls that do not complete a 3-way handshake.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4103"
        },
        {
          "Reference": "CVE-2002-1372",
          "Description": "Chain: Return values of file/socket operations are not checked (CWE-252), allowing resultant consumption of file descriptors (CWE-772).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1372"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "773",
      "Name": "Missing Reference to Active File Descriptor or Handle",
      "Abstraction": "Variant",
      "Description": "The product does not properly maintain references to a file descriptor or handle, which prevents that file descriptor/handle from being reclaimed.",
      "ExtendedDescription": "This can cause the product to consume all available file descriptors or handles, which can prevent other processes from performing critical file processing operations.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "774",
      "Name": "Allocation of File Descriptors or Handles Without Limits or Throttling",
      "Abstraction": "Variant",
      "Description": "The product allocates file descriptors or handles on behalf of an actor without imposing any restrictions on how many descriptors can be allocated, in violation of the intended security policy for that actor.",
      "ExtendedDescription": "This can cause the product to consume all available file descriptors or handles, which can prevent other processes from performing critical file processing operations.",
      "AlternateTerms": [
        {
          "Term": "File Descriptor Exhaustion"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "775",
      "Name": "Missing Release of File Descriptor or Handle after Effective Lifetime",
      "Abstraction": "Variant",
      "Description": "The product does not release a file descriptor or handle after its effective lifetime has ended, i.e., after the file descriptor/handle is no longer needed.",
      "ExtendedDescription": "When a file descriptor or handle is not released after use (typically by explicitly closing it), attackers can cause a denial of service by consuming all available file descriptors/handles, or otherwise preventing other system processes from obtaining their own file descriptors/handles.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-0897",
          "Description": "Chain: anti-virus product encounters a malformed file but returns from a function without closing a file descriptor (CWE-775) leading to file descriptor consumption (CWE-400) and failed scans.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-0897"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "776",
      "Name": "Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')",
      "Abstraction": "Base",
      "Description": "The product uses XML documents and allows their structure to be defined with a Document Type Definition (DTD), but it does not properly control the number of recursive definitions of entities.",
      "ExtendedDescription": "If the DTD contains a large number of nested or recursive entities, this can lead to explosive growth of data when parsed, causing a denial of service.",
      "AlternateTerms": [
        {
          "Term": "XEE",
          "Description": "XEE is the acronym commonly used for XML Entity Expansion."
        },
        {
          "Term": "Billion Laughs Attack"
        },
        {
          "Term": "XML Bomb",
          "Description": "While the \"XML Bomb\" term was used in the early years of knowledge of this issue, the XEE term seems to be more commonly used."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2008-3281",
          "Description": "XEE in XML-parsing library.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3281"
        },
        {
          "Reference": "CVE-2011-3288",
          "Description": "XML bomb / XEE in enterprise communication product.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-3288"
        },
        {
          "Reference": "CVE-2011-1755",
          "Description": "\"Billion laughs\" attack in XMPP server daemon.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-1755"
        },
        {
          "Reference": "CVE-2009-1955",
          "Description": "XML bomb in web server module",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1955"
        },
        {
          "Reference": "CVE-2003-1564",
          "Description": "Parsing library allows XML bomb",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1564"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "777",
      "Name": "Regular Expression without Anchors",
      "Abstraction": "Variant",
      "Description": "The product uses a regular expression to perform neutralization, but the regular expression is not anchored and may allow malicious or malformed data to slip through.",
      "ExtendedDescription": "When performing tasks such as validating against a set of allowed inputs (allowlist), data is examined and possibly modified to ensure that it is well-formed and adheres to a list of safe values. If the regular expression is not anchored, malicious or malformed data may be included before or after any string matching the regular expression. The type of malicious data that is allowed will depend on the context of the application and which anchors are omitted from the regular expression.",
      "BackgroundDetails": [
        "Regular expressions are typically used to match a pattern of text. Anchors are used in regular expressions to specify where the pattern should match: at the beginning, the end, or both (the whole input)."
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-30034",
          "Description": "Chain: Web UI for a Python RPC framework does not use regex anchors to validate user login emails (CWE-777), potentially allowing bypass of OAuth (CWE-1390).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30034"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "778",
      "Name": "Insufficient Logging",
      "Abstraction": "Base",
      "Description": "When a security-critical event occurs, the product either does not record the event or omits important details about the event when logging it.",
      "ExtendedDescription": "\n\nWhen security-critical events are not logged properly, such as a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analysis after an attack succeeds.\n\n\nAs organizations adopt cloud storage resources, these technologies often require configuration changes to enable detailed logging information, since detailed logging can incur additional costs. This could lead to telemetry gaps in critical audit logs. For example, in Azure, the default value for logging is disabled. \n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2008-4315",
          "Description": "server does not log failed authentication attempts, making it easier for attackers to perform brute force password guessing without being detected",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4315"
        },
        {
          "Reference": "CVE-2008-1203",
          "Description": "admin interface does not log failed authentication attempts, making it easier for attackers to perform brute force password guessing without being detected",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1203"
        },
        {
          "Reference": "CVE-2007-3730",
          "Description": "default configuration for POP server does not log source IP or username for login attempts",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3730"
        },
        {
          "Reference": "CVE-2007-1225",
          "Description": "proxy does not log requests without \"http://\" in the URL, allowing web surfers to access restricted web content without detection",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1225"
        },
        {
          "Reference": "CVE-2003-1566",
          "Description": "web server does not log requests for a non-standard request type",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1566"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "779",
      "Name": "Logging of Excessive Data",
      "Abstraction": "Base",
      "Description": "The product logs too much information, making log files hard to process and possibly hindering recovery efforts or forensic analysis after an attack.",
      "ExtendedDescription": "While logging is a good practice in general, and very high levels of logging are appropriate for debugging stages of development, too much logging in a production environment might hinder a system administrator's ability to detect anomalous conditions. This can provide cover for an attacker while attempting to penetrate a system, clutter the audit trail for forensic analysis, or make it more difficult to debug problems in a production environment.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-0421",
          "Description": "server records a large amount of data to the server log when it receives malformed headers",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-0421"
        },
        {
          "Reference": "CVE-2002-1154",
          "Description": "chain: application does not restrict access to front-end for updates, which allows attacker to fill the error log",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1154"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "78",
      "Name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
      "Abstraction": "Base",
      "Diagram": "/data/images/CWE-78-Diagram.png",
      "Description": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
      "ExtendedDescription": "\n\nThis weakness can lead to a vulnerability in environments in which the attacker does not have direct access to the operating system, such as in web applications. Alternately, if the weakness occurs in a privileged program, it could allow the attacker to specify commands that normally would not be accessible, or to call alternate commands with privileges that the attacker does not have. The problem is exacerbated if the compromised process does not follow the principle of least privilege, because the attacker-controlled commands may run with special system privileges that increases the amount of damage.\n\n\nThere are at least two subtypes of OS command injection:\n\n\n  - The application intends to execute a single, fixed program that is under its own control. It intends to use externally-supplied inputs as arguments to that program. For example, the program might use system(\"nslookup [HOSTNAME]\") to run nslookup and allow the user to supply a HOSTNAME, which is used as an argument. Attackers cannot prevent nslookup from executing. However, if the program does not remove command separators from the HOSTNAME argument, attackers could place the separators into the arguments, which allows them to execute their own program after nslookup has finished executing.\n\n  - The application accepts an input that it uses to fully select which program to run, as well as which commands to use. The application simply redirects this entire command to the operating system. For example, the program might use \"exec([COMMAND])\" to execute the [COMMAND] that was supplied by the user. If the COMMAND is under attacker control, then the attacker can execute arbitrary commands or programs. If the command is being executed using functions like exec() and CreateProcess(), the attacker might not be able to combine multiple commands together in the same line.\n\nFrom a weakness standpoint, these variants represent distinct programmer errors. In the first variant, the programmer clearly intends that input from untrusted parties will be part of the arguments in the command to be executed. In the second variant, the programmer does not intend for the command to be accessible to any untrusted party, but the programmer probably has not accounted for alternate ways in which malicious attackers can provide input.",
      "AlternateTerms": [
        {
          "Term": "Shell injection"
        },
        {
          "Term": "Shell metacharacters"
        },
        {
          "Term": "OS Command Injection"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-10987",
          "Description": "OS command injection in Wi-Fi router, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-10987"
        },
        {
          "Reference": "CVE-2020-10221",
          "Description": "Template functionality in network configuration management tool allows OS command injection, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-10221"
        },
        {
          "Reference": "CVE-2020-9054",
          "Description": "Chain: improper input validation (CWE-20) in username parameter, leading to OS command injection (CWE-78), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-9054"
        },
        {
          "Reference": "CVE-1999-0067",
          "Description": "Canonical example of OS command injection. CGI program does not neutralize \"|\" metacharacter when invoking a phonebook program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0067"
        },
        {
          "Reference": "CVE-2001-1246",
          "Description": "Language interpreter's mail function accepts another argument that is concatenated to a string used in a dangerous popen() call. Since there is no neutralization of this argument, both OS Command Injection (CWE-78) and Argument Injection (CWE-88) are possible.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1246"
        },
        {
          "Reference": "CVE-2002-0061",
          "Description": "Web server allows command execution using \"|\" (pipe) character.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0061"
        },
        {
          "Reference": "CVE-2003-0041",
          "Description": "FTP client does not filter \"|\" from filenames returned by the server, allowing for OS command injection.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0041"
        },
        {
          "Reference": "CVE-2008-2575",
          "Description": "Shell metacharacters in a filename in a ZIP archive",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2575"
        },
        {
          "Reference": "CVE-2002-1898",
          "Description": "Shell metacharacters in a telnet:// link are not properly handled when the launching application processes the link.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1898"
        },
        {
          "Reference": "CVE-2008-4304",
          "Description": "OS command injection through environment variable.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4304"
        },
        {
          "Reference": "CVE-2008-4796",
          "Description": "OS command injection through https:// URLs",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4796"
        },
        {
          "Reference": "CVE-2007-3572",
          "Description": "Chain: incomplete denylist for OS command injection",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3572"
        },
        {
          "Reference": "CVE-2012-1988",
          "Description": "Product allows remote users to execute arbitrary commands by creating a file whose pathname contains shell metacharacters.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-1988"
        }
      ],
      "FunctionalAreas": [
        "Program Invocation"
      ],
      "AffectedResources": [
        "System Process"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "780",
      "Name": "Use of RSA Algorithm without OAEP",
      "Abstraction": "Variant",
      "Description": "The product uses the RSA algorithm but does not incorporate Optimal Asymmetric Encryption Padding (OAEP), which might weaken the encryption.",
      "ExtendedDescription": "Padding schemes are often used with cryptographic algorithms to make the plaintext less predictable and complicate attack efforts. The OAEP scheme is often used with RSA to nullify the impact of predictable common text.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "781",
      "Name": "Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code",
      "Abstraction": "Variant",
      "Description": "The product defines an IOCTL that uses METHOD_NEITHER for I/O, but it does not validate or incorrectly validates the addresses that are provided.",
      "ExtendedDescription": "When an IOCTL uses the METHOD_NEITHER option for I/O control, it is the responsibility of the IOCTL to validate the addresses that have been supplied to it. If validation is missing or incorrect, attackers can supply arbitrary memory addresses, leading to code execution or a denial of service.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2006-2373",
          "Description": "Driver for file-sharing and messaging protocol allows attackers to execute arbitrary code.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2373"
        },
        {
          "Reference": "CVE-2009-0686",
          "Description": "Anti-virus product does not validate addresses, allowing attackers to gain SYSTEM privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0686"
        },
        {
          "Reference": "CVE-2009-0824",
          "Description": "DVD software allows attackers to cause a crash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0824"
        },
        {
          "Reference": "CVE-2008-5724",
          "Description": "Personal firewall allows attackers to gain SYSTEM privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5724"
        },
        {
          "Reference": "CVE-2007-5756",
          "Description": "chain: device driver for packet-capturing software allows access to an unintended IOCTL with resultant array index error.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5756"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "782",
      "Name": "Exposed IOCTL with Insufficient Access Control",
      "Abstraction": "Variant",
      "Description": "The product implements an IOCTL with functionality that should be restricted, but it does not properly enforce access control for the IOCTL.",
      "ExtendedDescription": "\n\nWhen an IOCTL contains privileged functionality and is exposed unnecessarily, attackers may be able to access this functionality by invoking the IOCTL. Even if the functionality is benign, if the programmer has assumed that the IOCTL would only be accessed by a trusted process, there may be little or no validation of the incoming data, exposing weaknesses that would never be reachable if the attacker cannot call the IOCTL directly.\n\n\nThe implementations of IOCTLs will differ between operating system types and versions, so the methods of attack and prevention may vary widely.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2009-2208",
          "Description": "Operating system does not enforce permissions on an IOCTL that can be used to modify network settings.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2208"
        },
        {
          "Reference": "CVE-2008-3831",
          "Description": "Device driver does not restrict ioctl calls to its direct rendering manager.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3831"
        },
        {
          "Reference": "CVE-2008-3525",
          "Description": "ioctl does not check for a required capability before processing certain requests.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3525"
        },
        {
          "Reference": "CVE-2008-0322",
          "Description": "Chain: insecure device permissions allows access to an IOCTL, allowing arbitrary memory to be overwritten.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0322"
        },
        {
          "Reference": "CVE-2007-4277",
          "Description": "Chain: anti-virus product uses weak permissions for a device, leading to resultant buffer overflow in an exposed IOCTL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4277"
        },
        {
          "Reference": "CVE-2007-1400",
          "Description": "Chain: sandbox allows opening of a TTY device, enabling shell commands through an exposed ioctl.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1400"
        },
        {
          "Reference": "CVE-2006-4926",
          "Description": "Anti-virus product uses insecure security descriptor for a device driver, allowing access to a privileged IOCTL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4926"
        },
        {
          "Reference": "CVE-1999-0728",
          "Description": "Unauthorized user can disable keyboard or mouse by directly invoking a privileged IOCTL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0728"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "783",
      "Name": "Operator Precedence Logic Error",
      "Abstraction": "Base",
      "Description": "The product uses an expression in which operator precedence causes incorrect logic to be used.",
      "ExtendedDescription": "While often just a bug, operator precedence logic errors can have serious consequences if they are used in security-critical code, such as making an authentication decision.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2008-2516",
          "Description": "Authentication module allows authentication bypass because it uses \"(x = call(args) == SUCCESS)\" instead of \"((x = call(args)) == SUCCESS)\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2516"
        },
        {
          "Reference": "CVE-2008-0599",
          "Description": "Chain: Language interpreter calculates wrong buffer size (CWE-131) by using \"size = ptr ? X : Y\" instead of \"size = (ptr ? X : Y)\" expression.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0599"
        },
        {
          "Reference": "CVE-2001-1155",
          "Description": "Chain: product does not properly check the result of a reverse DNS lookup because of operator precedence (CWE-783), allowing bypass of DNS-based access restrictions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1155"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "784",
      "Name": "Reliance on Cookies without Validation and Integrity Checking in a Security Decision",
      "Abstraction": "Variant",
      "Description": "The product uses a protection mechanism that relies on the existence or values of a cookie, but it does not properly ensure that the cookie is valid for the associated user.",
      "ExtendedDescription": "Attackers can easily modify cookies, within the browser or by implementing the client-side code outside of the browser. Attackers can bypass protection mechanisms such as authorization and authentication by modifying the cookie to contain an expected value.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2009-1549",
          "Description": "Attacker can bypass authentication by setting a cookie to a specific value.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1549"
        },
        {
          "Reference": "CVE-2009-1619",
          "Description": "Attacker can bypass authentication and gain admin privileges by setting an \"admin\" cookie to 1.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1619"
        },
        {
          "Reference": "CVE-2009-0864",
          "Description": "Content management system allows admin privileges by setting a \"login\" cookie to \"OK.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0864"
        },
        {
          "Reference": "CVE-2008-5784",
          "Description": "e-dating application allows admin privileges by setting the admin cookie to 1.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5784"
        },
        {
          "Reference": "CVE-2008-6291",
          "Description": "Web-based email list manager allows attackers to gain admin privileges by setting a login cookie to \"admin.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-6291"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "785",
      "Name": "Use of Path Manipulation Function without Maximum-sized Buffer",
      "Abstraction": "Variant",
      "Description": "The product invokes a function for normalizing paths or file names, but it provides an output buffer that is smaller than the maximum possible size, such as PATH_MAX.",
      "ExtendedDescription": "Passing an inadequately-sized output buffer to a path manipulation function can result in a buffer overflow. Such functions include realpath(), readlink(), PathAppend(), and others.",
      "BackgroundDetails": [
        "Windows provides a large number of utility functions that manipulate buffers containing filenames. In most cases, the result is returned in a buffer that is passed in as input. (Usually the filename is modified in place.) Most functions require the buffer to be at least MAX_PATH bytes in length, but you should check the documentation for each function individually. If the buffer is not large enough to store the result of the manipulation, a buffer overflow can occur."
      ],
      "AffectedResources": [
        "Memory",
        "File or Directory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "786",
      "Name": "Access of Memory Location Before Start of Buffer",
      "Abstraction": "Base",
      "Description": "The product reads or writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
      "ExtendedDescription": "This typically occurs when a pointer or its index is decremented to a position before the buffer, when pointer arithmetic results in a position before the beginning of the valid memory location, or when a negative index is used.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-2227",
          "Description": "Unchecked length of SSLv2 challenge value leads to buffer underflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2227"
        },
        {
          "Reference": "CVE-2007-4580",
          "Description": "Buffer underflow from a small size value with a large buffer (length parameter inconsistency, CWE-130)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4580"
        },
        {
          "Reference": "CVE-2007-1584",
          "Description": "Buffer underflow from an all-whitespace string, which causes a counter to be decremented before the buffer while looking for a non-whitespace character.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1584"
        },
        {
          "Reference": "CVE-2007-0886",
          "Description": "Buffer underflow resultant from encoded data that triggers an integer overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-0886"
        },
        {
          "Reference": "CVE-2006-6171",
          "Description": "Product sets an incorrect buffer size limit, leading to \"off-by-two\" buffer underflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6171"
        },
        {
          "Reference": "CVE-2006-4024",
          "Description": "Negative value is used in a memcpy() operation, leading to buffer underflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4024"
        },
        {
          "Reference": "CVE-2004-2620",
          "Description": "Buffer underflow due to mishandled special characters",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2620"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "787",
      "Name": "Out-of-bounds Write",
      "Abstraction": "Base",
      "Diagram": "/data/images/CWE-787-Diagram.png",
      "Description": "The product writes data past the end, or before the beginning, of the intended buffer.",
      "AlternateTerms": [
        {
          "Term": "Memory Corruption",
          "Description": "Often used to describe the consequences of writing to memory outside the bounds of a buffer, or to memory that is otherwise invalid."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-21220",
          "Description": "Chain: insufficient input validation (CWE-20) in browser allows heap corruption (CWE-787), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-21220"
        },
        {
          "Reference": "CVE-2021-28664",
          "Description": "GPU kernel driver allows memory corruption because a user can obtain read/write access to read-only pages, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-28664"
        },
        {
          "Reference": "CVE-2020-17087",
          "Description": "Chain: integer truncation (CWE-197) causes small buffer allocation (CWE-131) leading to out-of-bounds write (CWE-787) in kernel pool, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-17087"
        },
        {
          "Reference": "CVE-2020-1054",
          "Description": "Out-of-bounds write in kernel-mode driver, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-1054"
        },
        {
          "Reference": "CVE-2020-0041",
          "Description": "Escape from browser sandbox using out-of-bounds write due to incorrect bounds check, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-0041"
        },
        {
          "Reference": "CVE-2020-0968",
          "Description": "Memory corruption in web browser scripting engine, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-0968"
        },
        {
          "Reference": "CVE-2020-0022",
          "Description": "chain: mobile phone Bluetooth implementation does not include offset when calculating packet length (CWE-682), leading to out-of-bounds write (CWE-787)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-0022"
        },
        {
          "Reference": "CVE-2019-1010006",
          "Description": "Chain: compiler optimization (CWE-733) removes or modifies code used to detect integer overflow (CWE-190), allowing out-of-bounds write (CWE-787).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-1010006"
        },
        {
          "Reference": "CVE-2009-1532",
          "Description": "malformed inputs cause accesses of uninitialized or previously-deleted objects, leading to memory corruption",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1532"
        },
        {
          "Reference": "CVE-2009-0269",
          "Description": "chain: -1 value from a function call was intended to indicate an error, but is used as an array index instead.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0269"
        },
        {
          "Reference": "CVE-2002-2227",
          "Description": "Unchecked length of SSLv2 challenge value leads to buffer underflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2227"
        },
        {
          "Reference": "CVE-2007-4580",
          "Description": "Buffer underflow from a small size value with a large buffer (length parameter inconsistency, CWE-130)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4580"
        },
        {
          "Reference": "CVE-2007-4268",
          "Description": "Chain: integer signedness error (CWE-195) passes signed comparison, leading to heap overflow (CWE-122)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4268"
        },
        {
          "Reference": "CVE-2009-2550",
          "Description": "Classic stack-based buffer overflow in media player using a long entry in a playlist",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2550"
        },
        {
          "Reference": "CVE-2009-2403",
          "Description": "Heap-based buffer overflow in media player using a long entry in a playlist",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2403"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "788",
      "Name": "Access of Memory Location After End of Buffer",
      "Abstraction": "Base",
      "Description": "The product reads or writes to a buffer using an index or pointer that references a memory location after the end of the buffer.",
      "ExtendedDescription": "This typically occurs when a pointer or its index is incremented to a position after the buffer; or when pointer arithmetic results in a position after the buffer.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2009-2550",
          "Description": "Classic stack-based buffer overflow in media player using a long entry in a playlist",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2550"
        },
        {
          "Reference": "CVE-2009-2403",
          "Description": "Heap-based buffer overflow in media player using a long entry in a playlist",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2403"
        },
        {
          "Reference": "CVE-2009-0689",
          "Description": "large precision value in a format string triggers overflow",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0689"
        },
        {
          "Reference": "CVE-2009-0558",
          "Description": "attacker-controlled array index leads to code execution",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0558"
        },
        {
          "Reference": "CVE-2008-4113",
          "Description": "OS kernel trusts userland-supplied length value, allowing reading of sensitive information",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4113"
        },
        {
          "Reference": "CVE-2007-4268",
          "Description": "Chain: integer signedness error (CWE-195) passes signed comparison, leading to heap overflow (CWE-122)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4268"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "No"
    },
    {
      "ID": "789",
      "Name": "Memory Allocation with Excessive Size Value",
      "Abstraction": "Variant",
      "Description": "The product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated.",
      "AlternateTerms": [
        {
          "Term": "Stack Exhaustion",
          "Description": "When a weakness allocates excessive memory on the stack, it is often described as \"stack exhaustion,\" which is a technical impact of the weakness. This technical impact is often encountered as a consequence of CWE-789 and/or CWE-1325."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-21668",
          "Description": "Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-21668"
        },
        {
          "Reference": "CVE-2010-3701",
          "Description": "program uses ::alloca() for encoding messages, but large messages trigger segfault",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-3701"
        },
        {
          "Reference": "CVE-2008-1708",
          "Description": "memory consumption and daemon exit by specifying a large value in a length field",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1708"
        },
        {
          "Reference": "CVE-2008-0977",
          "Description": "large value in a length field leads to memory consumption and crash when no more memory is available",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0977"
        },
        {
          "Reference": "CVE-2006-3791",
          "Description": "large key size in game program triggers crash when a resizing function cannot allocate enough memory",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-3791"
        },
        {
          "Reference": "CVE-2004-2589",
          "Description": "large Content-Length HTTP header value triggers application crash in instant messaging application due to failure in memory allocation",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2589"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "79",
      "Name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "Abstraction": "Base",
      "Description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
      "ExtendedDescription": "\n\nCross-site scripting (XSS) vulnerabilities occur when:\n\n\n  1. Untrusted data enters a web application, typically from a web request.\n\n  1. The web application dynamically generates a web page that contains this untrusted data.\n\n  1. During page generation, the application does not prevent the data from containing content that is executable by a web browser, such as JavaScript, HTML tags, HTML attributes, mouse events, Flash, ActiveX, etc.\n\n  1. A victim visits the generated web page through a web browser, which contains malicious script that was injected using the untrusted data.\n\n  1. Since the script comes from a web page that was sent by the web server, the victim's web browser executes the malicious script in the context of the web server's domain.\n\n  1. This effectively violates the intention of the web browser's same-origin policy, which states that scripts in one domain should not be able to access resources or run code in a different domain.\n\nThere are three main kinds of XSS:\n\n  -  **Type 1: Reflected XSS (or Non-Persistent)**  - The server reads data directly from the HTTP request and reflects it back in the HTTP response. Reflected XSS exploits occur when an attacker causes a victim to supply dangerous content to a vulnerable web application, which is then reflected back to the victim and executed by the web browser. The most common mechanism for delivering malicious content is to include it as a parameter in a URL that is posted publicly or e-mailed directly to the victim. URLs constructed in this manner constitute the core of many phishing schemes, whereby an attacker convinces a victim to visit a URL that refers to a vulnerable site. After the site reflects the attacker's content back to the victim, the content is executed by the victim's browser.\n\n  -  **Type 2: Stored XSS (or Persistent)**  - The application stores dangerous data in a database, message forum, visitor log, or other trusted data store. At a later time, the dangerous data is subsequently read back into the application and included in dynamic content. From an attacker's perspective, the optimal place to inject malicious content is in an area that is displayed to either many users or particularly interesting users. Interesting users typically have elevated privileges in the application or interact with sensitive data that is valuable to the attacker. If one of these users executes malicious content, the attacker may be able to perform privileged operations on behalf of the user or gain access to sensitive data belonging to the user. For example, the attacker might inject XSS into a log message, which might not be handled properly when an administrator views the logs. \n\n  -  **Type 0: DOM-Based XSS**  - In DOM-based XSS, the client performs the injection of XSS into the page; in the other types, the server performs the injection. DOM-based XSS generally involves server-controlled, trusted script that is sent to the client, such as Javascript that performs sanity checks on a form before the user submits it. If the server-supplied script processes user-supplied data and then injects it back into the web page (such as with dynamic HTML), then DOM-based XSS is possible. \n\nOnce the malicious script is injected, the attacker can perform a variety of malicious activities. The attacker could transfer private information, such as cookies that may include session information, from the victim's machine to the attacker. The attacker could send malicious requests to a web site on behalf of the victim, which could be especially dangerous to the site if the victim has administrator privileges to manage that site. Phishing attacks could be used to emulate trusted web sites and trick the victim into entering a password, allowing the attacker to compromise the victim's account on that web site. Finally, the script could exploit a vulnerability in the web browser itself possibly taking over the victim's machine, sometimes referred to as \"drive-by hacking.\"\n\nIn many cases, the attack can be launched without the victim even being aware of it. Even with careful users, attackers frequently use a variety of methods to encode the malicious portion of the attack, such as URL encoding or Unicode, so the request looks less suspicious.\n",
      "BackgroundDetails": [
        "\n\nThe Same Origin Policy states that browsers should limit the resources accessible to scripts running on a given web site, or \"origin\", to the resources associated with that web site on the client-side, and not the client-side resources of any other sites or \"origins\". The goal is to prevent one site from being able to modify or read the contents of an unrelated site. Since the World Wide Web involves interactions between many sites, this policy is important for browsers to enforce.\n\n\nWhen referring to XSS, the Domain of a website is roughly equivalent to the resources associated with that website on the client-side of the connection. That is, the domain can be thought of as all resources the browser is storing for the user's interactions with this particular site.\n"
      ],
      "AlternateTerms": [
        {
          "Term": "XSS",
          "Description": "A common abbreviation for Cross-Site Scripting."
        },
        {
          "Term": "HTML Injection",
          "Description": "Used as a synonym of stored (Type 2) XSS."
        },
        {
          "Term": "CSS",
          "Description": "In the early years after initial discovery of XSS, \"CSS\" was a commonly-used acronym. However, this would cause confusion with \"Cascading Style Sheets,\" so usage of this acronym has declined significantly."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-25926",
          "Description": "Python Library Manager did not sufficiently neutralize a user-supplied search term, allowing reflected XSS.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-25926"
        },
        {
          "Reference": "CVE-2021-25963",
          "Description": "Python-based e-commerce platform did not escape returned content on error pages, allowing for reflected Cross-Site Scripting attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-25963"
        },
        {
          "Reference": "CVE-2021-1879",
          "Description": "Universal XSS in mobile operating system, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-1879"
        },
        {
          "Reference": "CVE-2020-3580",
          "Description": "Chain: improper input validation (CWE-20) in firewall product leads to XSS (CWE-79), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-3580"
        },
        {
          "Reference": "CVE-2014-8958",
          "Description": "Admin GUI allows XSS through cookie.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-8958"
        },
        {
          "Reference": "CVE-2017-9764",
          "Description": "Web stats program allows XSS through crafted HTTP header.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-9764"
        },
        {
          "Reference": "CVE-2014-5198",
          "Description": "Web log analysis product allows XSS through crafted HTTP Referer header.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-5198"
        },
        {
          "Reference": "CVE-2008-5080",
          "Description": "Chain: protection mechanism failure allows XSS",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5080"
        },
        {
          "Reference": "CVE-2006-4308",
          "Description": "Chain: incomplete denylist (CWE-184) only checks \"javascript:\" tag, allowing XSS (CWE-79) using other tags",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4308"
        },
        {
          "Reference": "CVE-2007-5727",
          "Description": "Chain: incomplete denylist (CWE-184) only removes SCRIPT tags, enabling XSS (CWE-79)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5727"
        },
        {
          "Reference": "CVE-2008-5770",
          "Description": "Reflected XSS using the PATH_INFO in a URL",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5770"
        },
        {
          "Reference": "CVE-2008-4730",
          "Description": "Reflected XSS not properly handled when generating an error message",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4730"
        },
        {
          "Reference": "CVE-2008-5734",
          "Description": "Reflected XSS sent through email message.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5734"
        },
        {
          "Reference": "CVE-2008-0971",
          "Description": "Stored XSS in a security product.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0971"
        },
        {
          "Reference": "CVE-2008-5249",
          "Description": "Stored XSS using a wiki page.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5249"
        },
        {
          "Reference": "CVE-2006-3568",
          "Description": "Stored XSS in a guestbook application.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-3568"
        },
        {
          "Reference": "CVE-2006-3211",
          "Description": "Stored XSS in a guestbook application using a javascript: URI in a bbcode img tag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-3211"
        },
        {
          "Reference": "CVE-2006-3295",
          "Description": "Chain: library file is not protected against a direct request (CWE-425), leading to reflected XSS (CWE-79).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-3295"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "790",
      "Name": "Improper Filtering of Special Elements",
      "Abstraction": "Class",
      "Description": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "791",
      "Name": "Incomplete Filtering of Special Elements",
      "Abstraction": "Base",
      "Description": "The product receives data from an upstream component, but does not completely filter special elements before sending it to a downstream component.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "792",
      "Name": "Incomplete Filtering of One or More Instances of Special Elements",
      "Abstraction": "Variant",
      "Description": "The product receives data from an upstream component, but does not completely filter one or more instances of special elements before sending it to a downstream component.",
      "ExtendedDescription": "\n\nIncomplete filtering of this nature involves either:\n\n\n  - only filtering a single instance of a special element when more exist, or\n\n  - not filtering all instances or all elements where multiple special elements exist.\n\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "793",
      "Name": "Only Filtering One Instance of a Special Element",
      "Abstraction": "Variant",
      "Description": "The product receives data from an upstream component, but only filters a single instance of a special element before sending it to a downstream component.",
      "ExtendedDescription": "Incomplete filtering of this nature may be location-dependent, as in only the first or last element is filtered.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "794",
      "Name": "Incomplete Filtering of Multiple Instances of Special Elements",
      "Abstraction": "Variant",
      "Description": "The product receives data from an upstream component, but does not filter all instances of a special element before sending it to a downstream component.",
      "ExtendedDescription": "\n\nIncomplete filtering of this nature may be applied to:\n\n\n  - sequential elements (special elements that appear next to each other) or\n\n  - non-sequential elements (special elements that appear multiple times in different locations).\n\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "795",
      "Name": "Only Filtering Special Elements at a Specified Location",
      "Abstraction": "Base",
      "Description": "The product receives data from an upstream component, but only accounts for special elements at a specified location, thereby missing remaining special elements that may exist before sending it to a downstream component.",
      "ExtendedDescription": "\n\nA filter might only account for instances of special elements when they occur:\n\n\n  - relative to a marker (e.g. \"at the beginning/end of string; the second argument\"), or\n\n  - at an absolute position (e.g. \"byte number 10\").\n\nThis may leave special elements in the data that did not match the filter position, but still may be dangerous.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "796",
      "Name": "Only Filtering Special Elements Relative to a Marker",
      "Abstraction": "Variant",
      "Description": "The product receives data from an upstream component, but only accounts for special elements positioned relative to a marker (e.g. \"at the beginning/end of a string; the second argument\"), thereby missing remaining special elements that may exist before sending it to a downstream component.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "797",
      "Name": "Only Filtering Special Elements at an Absolute Position",
      "Abstraction": "Variant",
      "Description": "The product receives data from an upstream component, but only accounts for special elements at an absolute position (e.g. \"byte number 10\"), thereby missing remaining special elements that may exist before sending it to a downstream component.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "798",
      "Name": "Use of Hard-coded Credentials",
      "Abstraction": "Base",
      "Diagram": "/data/images/CWE-798-Diagram.png",
      "Description": "The product contains hard-coded credentials, such as a password or cryptographic key.",
      "ExtendedDescription": "\n\nThere are two main variations:\n\n\n  - Inbound: the product contains an authentication mechanism that checks the input credentials against a hard-coded set of credentials. In this variant, a default administration account is created, and a simple password is hard-coded into the product and associated with that account. This hard-coded password is the same for each installation of the product, and it usually cannot be changed or disabled by system administrators without manually modifying the program, or otherwise patching the product. It can also be difficult for the administrator to detect.\n\n  - Outbound: the product connects to another system or component, and it contains hard-coded credentials for connecting to that component. This variant applies to front-end systems that authenticate with a back-end service. The back-end service may require a fixed password that can be easily discovered. The programmer may simply hard-code those back-end credentials into the front-end product.\n\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-29953",
          "Description": "Condition Monitor firmware has a maintenance interface with hard-coded credentials",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29953"
        },
        {
          "Reference": "CVE-2022-29960",
          "Description": "Engineering Workstation uses hard-coded cryptographic keys that could allow for unathorized filesystem access and privilege escalation",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29960"
        },
        {
          "Reference": "CVE-2022-29964",
          "Description": "Distributed Control System (DCS) has hard-coded passwords for local shell access",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29964"
        },
        {
          "Reference": "CVE-2022-30997",
          "Description": "Programmable Logic Controller (PLC) has a maintenance service that uses undocumented, hard-coded credentials",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30997"
        },
        {
          "Reference": "CVE-2022-30314",
          "Description": "Firmware for a Safety Instrumented System (SIS) has hard-coded credentials for access to boot configuration",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30314"
        },
        {
          "Reference": "CVE-2022-30271",
          "Description": "Remote Terminal Unit (RTU) uses a hard-coded SSH private key that is likely to be used in typical deployments",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30271"
        },
        {
          "Reference": "CVE-2021-37555",
          "Description": "Telnet service for IoT feeder for dogs and cats has hard-coded password [REF-1288]",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-37555"
        },
        {
          "Reference": "CVE-2021-35033",
          "Description": "Firmware for a WiFi router uses a hard-coded password for a BusyBox shell, allowing bypass of authentication through the UART port",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-35033"
        },
        {
          "Reference": "CVE-2012-3503",
          "Description": "Installation script has a hard-coded secret token value, allowing attackers to bypass authentication",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-3503"
        },
        {
          "Reference": "CVE-2010-2772",
          "Description": "SCADA system uses a hard-coded password to protect back-end database containing authorization information, exploited by Stuxnet worm",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2772"
        },
        {
          "Reference": "CVE-2010-2073",
          "Description": "FTP server library uses hard-coded usernames and passwords for three default accounts",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2073"
        },
        {
          "Reference": "CVE-2010-1573",
          "Description": "Chain: Router firmware uses hard-coded username and password for access to debug functionality, which can be used to execute arbitrary code",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-1573"
        },
        {
          "Reference": "CVE-2008-2369",
          "Description": "Server uses hard-coded authentication key",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2369"
        },
        {
          "Reference": "CVE-2008-0961",
          "Description": "Backup product uses hard-coded username and password, allowing attackers to bypass authentication via the RPC interface",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0961"
        },
        {
          "Reference": "CVE-2008-1160",
          "Description": "Security appliance uses hard-coded password allowing attackers to gain root access",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1160"
        },
        {
          "Reference": "CVE-2006-7142",
          "Description": "Drive encryption product stores hard-coded cryptographic keys for encrypted configuration files in executable programs",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-7142"
        },
        {
          "Reference": "CVE-2005-3716",
          "Description": "VoIP product uses hard-coded public credentials that cannot be changed, which allows attackers to obtain sensitive information",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3716"
        },
        {
          "Reference": "CVE-2005-3803",
          "Description": "VoIP product uses hard coded public and private SNMP community strings that cannot be changed, which allows remote attackers to obtain sensitive information",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3803"
        },
        {
          "Reference": "CVE-2005-0496",
          "Description": "Backup product contains hard-coded credentials that effectively serve as a back door, which allows remote attackers to access the file system",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0496"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "799",
      "Name": "Improper Control of Interaction Frequency",
      "Abstraction": "Class",
      "Description": "The product does not properly limit the number or frequency of interactions that it has with an actor, such as the number of incoming requests.",
      "ExtendedDescription": "This can allow the actor to perform actions more frequently than expected. The actor could be a human or an automated process such as a virus or bot. This could be used to cause a denial of service, compromise program logic (such as limiting humans to a single vote), or other consequences. For example, an authentication routine might not limit the number of times an attacker can guess a password. Or, a web site might conduct a poll but only expect humans to vote a maximum of once a day.",
      "AlternateTerms": [
        {
          "Term": "Insufficient anti-automation",
          "Description": "The term \"insufficient anti-automation\" focuses primarly on non-human actors such as viruses or bots, but the scope of this CWE entry is broader."
        },
        {
          "Term": "Brute force",
          "Description": "Vulnerabilities that can be targeted using brute force attacks are often symptomatic of this weakness."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1876",
          "Description": "Mail server allows attackers to prevent other users from accessing mail by sending large number of rapid requests.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1876"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "8",
      "Name": "J2EE Misconfiguration: Entity Bean Declared Remote",
      "Abstraction": "Variant",
      "Description": "When an application exposes a remote interface for an entity bean, it might also expose methods that get or set the bean's data. These methods could be leveraged to read sensitive information, or to change data in ways that violate the application's expectations, potentially leading to other vulnerabilities.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "80",
      "Name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.",
      "ExtendedDescription": "This may allow such characters to be treated as control characters, which are executed client-side in the context of the user's session. Although this can be classified as an injection problem, the more pertinent issue is the improper conversion of such special characters to respective context-appropriate entities before displaying them to the user.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0938",
          "Description": "XSS in parameter in a link.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0938"
        },
        {
          "Reference": "CVE-2002-1495",
          "Description": "XSS in web-based email product via attachment filenames.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1495"
        },
        {
          "Reference": "CVE-2003-1136",
          "Description": "HTML injection in posted message.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1136"
        },
        {
          "Reference": "CVE-2004-2171",
          "Description": "XSS not quoted in error page.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2171"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "804",
      "Name": "Guessable CAPTCHA",
      "Abstraction": "Base",
      "Description": "The product uses a CAPTCHA challenge, but the challenge can be guessed or automatically recognized by a non-human actor.",
      "ExtendedDescription": "\n\nAn automated attacker could bypass the intended protection of the CAPTCHA challenge and perform actions at a higher frequency than humanly possible, such as launching spam attacks.\n\n\nThere can be several different causes of a guessable CAPTCHA:\n\n\n  - An audio or visual image that does not have sufficient distortion from the unobfuscated source image.\n\n  - A question is generated with a format that can be automatically recognized, such as a math question.\n\n  - A question for which the number of possible answers is limited, such as birth years or favorite sports teams.\n\n  - A general-knowledge or trivia question for which the answer can be accessed using a data base, such as country capitals or popular entertainers.\n\n  - Other data associated with the CAPTCHA may provide hints about its contents, such as an image whose filename contains the word that is used in the CAPTCHA.\n\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-4036",
          "Description": "Chain: appointment booking app uses a weak hash (CWE-328) for generating a CAPTCHA, making it guessable (CWE-804)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-4036"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "805",
      "Name": "Buffer Access with Incorrect Length Value",
      "Abstraction": "Base",
      "Description": "The product uses a sequential operation to read or write a buffer, but it uses an incorrect length value that causes it to access memory that is outside of the bounds of the buffer.",
      "ExtendedDescription": "When the length value exceeds the size of the destination, a buffer overflow could occur.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2011-1959",
          "Description": "Chain: large length value causes buffer over-read (CWE-126)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-1959"
        },
        {
          "Reference": "CVE-2011-1848",
          "Description": "Use of packet length field to make a calculation, then copy into a fixed-size buffer",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-1848"
        },
        {
          "Reference": "CVE-2011-0105",
          "Description": "Chain: retrieval of length value from an uninitialized memory location",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-0105"
        },
        {
          "Reference": "CVE-2011-0606",
          "Description": "Crafted length value in document reader leads to buffer overflow",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-0606"
        },
        {
          "Reference": "CVE-2011-0651",
          "Description": "SSL server overflow when the sum of multiple length fields exceeds a given value",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-0651"
        },
        {
          "Reference": "CVE-2010-4156",
          "Description": "Language interpreter API function doesn't validate length argument, leading to information exposure",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-4156"
        }
      ],
      "AffectedResources": [
        "Memory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "806",
      "Name": "Buffer Access Using Size of Source Buffer",
      "Abstraction": "Variant",
      "Description": "The product uses the size of a source buffer when reading from or writing to a destination buffer, which may cause it to access memory that is outside of the bounds of the buffer.",
      "ExtendedDescription": "When the size of the destination is smaller than the size of the source, a buffer overflow could occur.",
      "AffectedResources": [
        "Memory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "807",
      "Name": "Reliance on Untrusted Inputs in a Security Decision",
      "Abstraction": "Base",
      "Description": "The product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.",
      "ExtendedDescription": "\n\nDevelopers may assume that inputs such as cookies, environment variables, and hidden form fields cannot be modified. However, an attacker could change these inputs using customized clients or other attacks. This change might not be detected. When security decisions such as authentication and authorization are made based on the values of these inputs, attackers can bypass the security of the software.\n\n\nWithout sufficient encryption, integrity checking, or other mechanism, any input that originates from an outsider cannot be trusted.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2009-1549",
          "Description": "Attacker can bypass authentication by setting a cookie to a specific value.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1549"
        },
        {
          "Reference": "CVE-2009-1619",
          "Description": "Attacker can bypass authentication and gain admin privileges by setting an \"admin\" cookie to 1.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1619"
        },
        {
          "Reference": "CVE-2009-0864",
          "Description": "Content management system allows admin privileges by setting a \"login\" cookie to \"OK.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0864"
        },
        {
          "Reference": "CVE-2008-5784",
          "Description": "e-dating application allows admin privileges by setting the admin cookie to 1.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5784"
        },
        {
          "Reference": "CVE-2008-6291",
          "Description": "Web-based email list manager allows attackers to gain admin privileges by setting a login cookie to \"admin.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-6291"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "81",
      "Name": "Improper Neutralization of Script in an Error Message Web Page",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters that could be interpreted as web-scripting elements when they are sent to an error page.",
      "ExtendedDescription": "\n\nError pages may include customized 403 Forbidden or 404 Not Found pages.\n\n\nWhen an attacker can trigger an error that contains script syntax within the attacker's input, then cross-site scripting attacks may be possible.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0840",
          "Description": "XSS in default error page from Host: header.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0840"
        },
        {
          "Reference": "CVE-2002-1053",
          "Description": "XSS in error message.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1053"
        },
        {
          "Reference": "CVE-2002-1700",
          "Description": "XSS in error page from targeted parameter.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1700"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "82",
      "Name": "Improper Neutralization of Script in Attributes of IMG Tags in a Web Page",
      "Abstraction": "Variant",
      "Description": "The web application does not neutralize or incorrectly neutralizes scripting elements within attributes of HTML IMG tags, such as the src attribute.",
      "ExtendedDescription": "Attackers can embed XSS exploits into the values for IMG attributes (e.g. SRC) that is streamed and then executed in a victim's browser. Note that when the page is loaded into a user's browsers, the exploit will automatically execute.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2006-3211",
          "Description": "Stored XSS in a guestbook application using a javascript: URI in a bbcode img tag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-3211"
        },
        {
          "Reference": "CVE-2002-1649",
          "Description": "javascript URI scheme in IMG tag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1649"
        },
        {
          "Reference": "CVE-2002-1803",
          "Description": "javascript URI scheme in IMG tag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1803"
        },
        {
          "Reference": "CVE-2002-1804",
          "Description": "javascript URI scheme in IMG tag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1804"
        },
        {
          "Reference": "CVE-2002-1805",
          "Description": "javascript URI scheme in IMG tag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1805"
        },
        {
          "Reference": "CVE-2002-1806",
          "Description": "javascript URI scheme in IMG tag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1806"
        },
        {
          "Reference": "CVE-2002-1807",
          "Description": "javascript URI scheme in IMG tag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1807"
        },
        {
          "Reference": "CVE-2002-1808",
          "Description": "javascript URI scheme in IMG tag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1808"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "820",
      "Name": "Missing Synchronization",
      "Abstraction": "Base",
      "Description": "The product utilizes a shared resource in a concurrent manner but does not attempt to synchronize access to the resource.",
      "ExtendedDescription": "If access to a shared resource is not synchronized, then the resource may not be in a state that is expected by the product. This might lead to unexpected or insecure behaviors, especially if an attacker can influence the shared resource.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "821",
      "Name": "Incorrect Synchronization",
      "Abstraction": "Base",
      "Description": "The product utilizes a shared resource in a concurrent manner, but it does not correctly synchronize access to the resource.",
      "ExtendedDescription": "If access to a shared resource is not correctly synchronized, then the resource may not be in a state that is expected by the product. This might lead to unexpected or insecure behaviors, especially if an attacker can influence the shared resource.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "822",
      "Name": "Untrusted Pointer Dereference",
      "Abstraction": "Base",
      "Description": "The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer.",
      "ExtendedDescription": "\n\nAn attacker can supply a pointer for memory locations that the product is not expecting. If the pointer is dereferenced for a write operation, the attack might allow modification of critical state variables, cause a crash, or execute code. If the dereferencing operation is for a read, then the attack might allow reading of sensitive data, cause a crash, or set a variable to an unexpected value (since the value will be read from an unexpected memory location).\n\n\nThere are several variants of this weakness, including but not necessarily limited to:\n\n\n  - The untrusted value is directly invoked as a function call.\n\n  - In OS kernels or drivers where there is a boundary between \"userland\" and privileged memory spaces, an untrusted pointer might enter through an API or system call (see CWE-781 for one such example).\n\n  - Inadvertently accepting the value from an untrusted control sphere when it did not have to be accepted as input at all. This might occur when the code was originally developed to be run by a single user in a non-networked environment, and the code is then ported to or otherwise exposed to a networked environment.\n\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2007-5655",
          "Description": "message-passing framework interprets values in packets as pointers, causing a crash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5655"
        },
        {
          "Reference": "CVE-2010-2299",
          "Description": "labeled as a \"type confusion\" issue, also referred to as a \"stale pointer.\" However, the bug ID says \"contents are simply interpreted as a pointer... renderer ordinarily doesn't supply this pointer directly\". The \"handle\" in the untrusted area is replaced in one function, but not another - thus also, effectively, exposure to wrong sphere (CWE-668).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2299"
        },
        {
          "Reference": "CVE-2009-1719",
          "Description": "Untrusted dereference using undocumented constructor.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1719"
        },
        {
          "Reference": "CVE-2009-1250",
          "Description": "An error code is incorrectly checked and interpreted as a pointer, leading to a crash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1250"
        },
        {
          "Reference": "CVE-2009-0311",
          "Description": "An untrusted value is obtained from a packet and directly called as a function pointer, leading to code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0311"
        },
        {
          "Reference": "CVE-2010-1818",
          "Description": "Undocumented attribute in multimedia software allows \"unmarshaling\" of an untrusted pointer.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-1818"
        },
        {
          "Reference": "CVE-2010-3189",
          "Description": "ActiveX control for security software accepts a parameter that is assumed to be an initialized pointer.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-3189"
        },
        {
          "Reference": "CVE-2010-1253",
          "Description": "Spreadsheet software treats certain record values that lead to \"user-controlled pointer\" (might be untrusted offset, not untrusted pointer).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-1253"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "823",
      "Name": "Use of Out-of-range Pointer Offset",
      "Abstraction": "Base",
      "Description": "The product performs pointer arithmetic on a valid pointer, but it uses an offset that can point outside of the intended range of valid memory locations for the resulting pointer.",
      "ExtendedDescription": "\n\nWhile a pointer can contain a reference to any arbitrary memory location, a program typically only intends to use the pointer to access limited portions of memory, such as contiguous memory used to access an individual array.\n\n\nPrograms may use offsets in order to access fields or sub-elements stored within structured data. The offset might be out-of-range if it comes from an untrusted source, is the result of an incorrect calculation, or occurs because of another error.\n\n\nIf an attacker can control or influence the offset so that it points outside of the intended boundaries of the structure, then the attacker may be able to read or write to memory locations that are used elsewhere in the product. As a result, the attack might change the state of the product as accessed through program variables, cause a crash or instable behavior, and possibly lead to code execution.\n",
      "AlternateTerms": [
        {
          "Term": "Untrusted pointer offset",
          "Description": "This term is narrower than the concept of \"out-of-range\" offset, since the offset might be the result of a calculation or other error that does not depend on any externally-supplied values."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2010-2160",
          "Description": "Invalid offset in undocumented opcode leads to memory corruption.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2160"
        },
        {
          "Reference": "CVE-2010-1281",
          "Description": "Multimedia player uses untrusted value from a file when using file-pointer calculations.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-1281"
        },
        {
          "Reference": "CVE-2009-3129",
          "Description": "Spreadsheet program processes a record with an invalid size field, which is later used as an offset.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3129"
        },
        {
          "Reference": "CVE-2009-2694",
          "Description": "Instant messaging library does not validate an offset value specified in a packet.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2694"
        },
        {
          "Reference": "CVE-2009-2687",
          "Description": "Language interpreter does not properly handle invalid offsets in JPEG image, leading to out-of-bounds memory access and crash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2687"
        },
        {
          "Reference": "CVE-2009-0690",
          "Description": "negative offset leads to out-of-bounds read",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0690"
        },
        {
          "Reference": "CVE-2008-4114",
          "Description": "untrusted offset in kernel",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4114"
        },
        {
          "Reference": "CVE-2010-2873",
          "Description": "\"blind trust\" of an offset value while writing heap memory allows corruption of function pointer,leading to code execution",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2873"
        },
        {
          "Reference": "CVE-2010-2866",
          "Description": "negative value (signed) causes pointer miscalculation",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2866"
        },
        {
          "Reference": "CVE-2010-2872",
          "Description": "signed values cause incorrect pointer calculation",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2872"
        },
        {
          "Reference": "CVE-2007-5657",
          "Description": "values used as pointer offsets",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5657"
        },
        {
          "Reference": "CVE-2010-2867",
          "Description": "a return value from a function is sign-extended if the value is signed, then used as an offset for pointer arithmetic",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2867"
        },
        {
          "Reference": "CVE-2009-1097",
          "Description": "portions of a GIF image used as offsets, causing corruption of an object pointer.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1097"
        },
        {
          "Reference": "CVE-2008-1807",
          "Description": "invalid numeric field leads to a free of arbitrary memory locations, then code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1807"
        },
        {
          "Reference": "CVE-2007-2500",
          "Description": "large number of elements leads to a free of an arbitrary address",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-2500"
        },
        {
          "Reference": "CVE-2008-1686",
          "Description": "array index issue (CWE-129) with negative offset, used to dereference a function pointer",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1686"
        },
        {
          "Reference": "CVE-2010-2878",
          "Description": "\"buffer seek\" value - basically an offset?",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2878"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "824",
      "Name": "Access of Uninitialized Pointer",
      "Abstraction": "Base",
      "Description": "The product accesses or uses a pointer that has not been initialized.",
      "ExtendedDescription": "\n\nIf the pointer contains an uninitialized value, then the value might not point to a valid memory location. This could cause the product to read from or write to unexpected memory locations, leading to a denial of service. If the uninitialized pointer is used as a function call, then arbitrary functions could be invoked. If an attacker can influence the portion of uninitialized memory that is contained in the pointer, this weakness could be leveraged to execute code or perform other attacks.\n\n\nDepending on memory layout, associated memory management behaviors, and product operation, the attacker might be able to influence the contents of the uninitialized pointer, thus gaining more fine-grained control of the memory location to be accessed.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2024-32878",
          "Description": "LLM product has a free of an uninitialized pointer",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2024-32878"
        },
        {
          "Reference": "CVE-2010-0211",
          "Description": "chain: unchecked return value (CWE-252) leads to free of invalid, uninitialized pointer (CWE-824).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-0211"
        },
        {
          "Reference": "CVE-2009-2768",
          "Description": "Pointer in structure is not initialized, leading to NULL pointer dereference (CWE-476) and system crash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2768"
        },
        {
          "Reference": "CVE-2009-1721",
          "Description": "Free of an uninitialized pointer.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1721"
        },
        {
          "Reference": "CVE-2009-1415",
          "Description": "Improper handling of invalid signatures leads to free of invalid pointer.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1415"
        },
        {
          "Reference": "CVE-2009-0846",
          "Description": "Invalid encoding triggers free of uninitialized pointer.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0846"
        },
        {
          "Reference": "CVE-2009-0040",
          "Description": "Crafted PNG image leads to free of uninitialized pointer.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0040"
        },
        {
          "Reference": "CVE-2008-2934",
          "Description": "Crafted GIF image leads to free of uninitialized pointer.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2934"
        },
        {
          "Reference": "CVE-2007-4682",
          "Description": "Access of uninitialized pointer might lead to code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4682"
        },
        {
          "Reference": "CVE-2007-4639",
          "Description": "Step-based manipulation: invocation of debugging function before the primary initialization function leads to access of an uninitialized pointer and code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4639"
        },
        {
          "Reference": "CVE-2007-4000",
          "Description": "Unchecked return values can lead to a write to an uninitialized pointer.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4000"
        },
        {
          "Reference": "CVE-2007-2442",
          "Description": "zero-length input leads to free of uninitialized pointer.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-2442"
        },
        {
          "Reference": "CVE-2007-1213",
          "Description": "Crafted font leads to uninitialized function pointer.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1213"
        },
        {
          "Reference": "CVE-2006-6143",
          "Description": "Uninitialized function pointer in freed memory is invoked",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6143"
        },
        {
          "Reference": "CVE-2006-4175",
          "Description": "LDAP server mishandles malformed BER queries, leading to free of uninitialized memory",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4175"
        },
        {
          "Reference": "CVE-2006-0054",
          "Description": "Firewall can crash with certain ICMP packets that trigger access of an uninitialized pointer.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-0054"
        },
        {
          "Reference": "CVE-2003-1201",
          "Description": "LDAP server does not initialize members of structs, which leads to free of uninitialized pointer if an LDAP request fails.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1201"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "825",
      "Name": "Expired Pointer Dereference",
      "Abstraction": "Base",
      "Description": "The product dereferences a pointer that contains a location for memory that was previously valid, but is no longer valid.",
      "ExtendedDescription": "When a product releases memory, but it maintains a pointer to that memory, then the memory might be re-allocated at a later time. If the original pointer is accessed to read or write data, then this could cause the product to read or modify data that is in use by a different function or process. Depending on how the newly-allocated memory is used, this could lead to a denial of service, information exposure, or code execution.",
      "AlternateTerms": [
        {
          "Term": "Dangling pointer"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2008-5013",
          "Description": "access of expired memory address leads to arbitrary code execution",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5013"
        },
        {
          "Reference": "CVE-2010-3257",
          "Description": "stale pointer issue leads to denial of service and possibly other consequences",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-3257"
        },
        {
          "Reference": "CVE-2008-0062",
          "Description": "Chain: a message having an unknown message type may cause a reference to uninitialized memory resulting in a null pointer dereference (CWE-476) or dangling pointer (CWE-825), possibly crashing the system or causing heap corruption.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0062"
        },
        {
          "Reference": "CVE-2007-1211",
          "Description": "read of value at an offset into a structure after the offset is no longer valid",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1211"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "826",
      "Name": "Premature Release of Resource During Expected Lifetime",
      "Abstraction": "Base",
      "Description": "The product releases a resource that is still intended to be used by itself or another actor.",
      "ExtendedDescription": "\n\nThis weakness focuses on errors in which the product should not release a resource, but performs the release anyway. This is different than a weakness in which the product releases a resource at the appropriate time, but it maintains a reference to the resource, which it later accesses. For this weakness, the resource should still be valid upon the subsequent access.\n\n\nWhen a product releases a resource that is still being used, it is possible that operations will still be taken on this resource, which may have been repurposed in the meantime, leading to issues similar to CWE-825. Consequences may include denial of service, information exposure, or code execution.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2009-3547",
          "Description": "Chain: race condition (CWE-362) might allow resource to be released before operating on it, leading to NULL dereference (CWE-476)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3547"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "827",
      "Name": "Improper Control of Document Type Definition",
      "Abstraction": "Variant",
      "Description": "The product does not restrict a reference to a Document Type Definition (DTD) to the intended control sphere. This might allow attackers to reference arbitrary DTDs, possibly causing the product to expose files, consume excessive system resources, or execute arbitrary http requests on behalf of the attacker.",
      "ExtendedDescription": "\n\nAs DTDs are processed, they might try to read or include files on the machine performing the parsing. If an attacker is able to control the DTD, then the attacker might be able to specify sensitive resources or requests or provide malicious content.\n\n\nFor example, the SOAP specification prohibits SOAP messages from containing DTDs.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2010-2076",
          "Description": "Product does not properly reject DTDs in SOAP messages, which allows remote attackers to read arbitrary files, send HTTP requests to intranet servers, or cause a denial of service.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2076"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "828",
      "Name": "Signal Handler with Functionality that is not Asynchronous-Safe",
      "Abstraction": "Variant",
      "Description": "The product defines a signal handler that contains code sequences that are not asynchronous-safe, i.e., the functionality is not reentrant, or it can be interrupted.",
      "ExtendedDescription": "\n\nThis can lead to an unexpected system state with a variety of potential consequences depending on context, including denial of service and code execution.\n\n\nSignal handlers are typically intended to interrupt normal functionality of a program, or even other signals, in order to notify the process of an event. When a signal handler uses global or static variables, or invokes functions that ultimately depend on such state or its associated metadata, then it could corrupt system state that is being used by normal functionality. This could subject the program to race conditions or other weaknesses that allow an attacker to cause the program state to be corrupted. While denial of service is frequently the consequence, in some cases this weakness could be leveraged for code execution.\n\n\nThere are several different scenarios that introduce this issue:\n\n\n  - Invocation of non-reentrant functions from within the handler. One example is malloc(), which modifies internal global variables as it manages memory. Very few functions are actually reentrant.\n\n  - Code sequences (not necessarily function calls) contain non-atomic use of global variables, or associated metadata or structures, that can be accessed by other functionality of the program, including other signal handlers. Frequently, the same function is registered to handle multiple signals.\n\n  - The signal handler function is intended to run at most one time, but instead it can be invoked multiple times. This could happen by repeated delivery of the same signal, or by delivery of different signals that have the same handler function (CWE-831).\n\nNote that in some environments or contexts, it might be possible for the signal handler to be interrupted itself.\n\nIf both a signal handler and the normal behavior of the product have to operate on the same set of state variables, and a signal is received in the middle of the normal execution's modifications of those variables, the variables may be in an incorrect or corrupt state during signal handler execution, and possibly still incorrect or corrupt upon return.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2008-4109",
          "Description": "Signal handler uses functions that ultimately call the unsafe syslog/malloc/s*printf, leading to denial of service via multiple login attempts",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4109"
        },
        {
          "Reference": "CVE-2006-5051",
          "Description": "Chain: Signal handler contains too much functionality (CWE-828), introducing a race condition (CWE-362) that leads to a double free (CWE-415).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-5051"
        },
        {
          "Reference": "CVE-2001-1349",
          "Description": "unsafe calls to library functions from signal handler",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1349"
        },
        {
          "Reference": "CVE-2004-0794",
          "Description": "SIGURG can be used to remotely interrupt signal handler; other variants exist.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0794"
        },
        {
          "Reference": "CVE-2004-2259",
          "Description": "SIGCHLD signal to FTP server can cause crash under heavy load while executing non-reentrant functions like malloc/free.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2259"
        },
        {
          "Reference": "CVE-2002-1563",
          "Description": "SIGCHLD not blocked in a daemon loop while counter is modified, causing counter to get out of sync.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1563"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "829",
      "Name": "Inclusion of Functionality from Untrusted Control Sphere",
      "Abstraction": "Base",
      "Description": "The product imports, requires, or includes executable functionality (such as a library) from a source that is outside of the intended control sphere.",
      "ExtendedDescription": "\n\nWhen including third-party functionality, such as a web widget, library, or other source of functionality, the product must effectively trust that functionality. Without sufficient protection mechanisms, the functionality could be malicious in nature (either by coming from an untrusted source, being spoofed, or being modified in transit from a trusted source). The functionality might also contain its own weaknesses, or grant access to additional functionality and state information that should be kept private to the base system, such as system state information, sensitive application data, or the DOM of a web application.\n\n\nThis might lead to many different consequences depending on the included functionality, but some examples include injection of malware, information exposure by granting excessive privileges or permissions to the untrusted functionality, DOM-based XSS vulnerabilities, stealing user's cookies, or open redirect to malware (CWE-601).\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2010-2076",
          "Description": "Product does not properly reject DTDs in SOAP messages, which allows remote attackers to read arbitrary files, send HTTP requests to intranet servers, or cause a denial of service.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2076"
        },
        {
          "Reference": "CVE-2004-0285",
          "Description": "Modification of assumed-immutable configuration variable in include file allows file inclusion via direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0285"
        },
        {
          "Reference": "CVE-2004-0030",
          "Description": "Modification of assumed-immutable configuration variable in include file allows file inclusion via direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0030"
        },
        {
          "Reference": "CVE-2004-0068",
          "Description": "Modification of assumed-immutable configuration variable in include file allows file inclusion via direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0068"
        },
        {
          "Reference": "CVE-2005-2157",
          "Description": "Modification of assumed-immutable configuration variable in include file allows file inclusion via direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2157"
        },
        {
          "Reference": "CVE-2005-2162",
          "Description": "Modification of assumed-immutable configuration variable in include file allows file inclusion via direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2162"
        },
        {
          "Reference": "CVE-2005-2198",
          "Description": "Modification of assumed-immutable configuration variable in include file allows file inclusion via direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2198"
        },
        {
          "Reference": "CVE-2004-0128",
          "Description": "Modification of assumed-immutable variable in configuration script leads to file inclusion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0128"
        },
        {
          "Reference": "CVE-2005-1864",
          "Description": "PHP file inclusion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1864"
        },
        {
          "Reference": "CVE-2005-1869",
          "Description": "PHP file inclusion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1869"
        },
        {
          "Reference": "CVE-2005-1870",
          "Description": "PHP file inclusion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1870"
        },
        {
          "Reference": "CVE-2005-2154",
          "Description": "PHP local file inclusion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2154"
        },
        {
          "Reference": "CVE-2002-1704",
          "Description": "PHP remote file include.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1704"
        },
        {
          "Reference": "CVE-2002-1707",
          "Description": "PHP remote file include.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1707"
        },
        {
          "Reference": "CVE-2005-1964",
          "Description": "PHP remote file include.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1964"
        },
        {
          "Reference": "CVE-2005-1681",
          "Description": "PHP remote file include.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1681"
        },
        {
          "Reference": "CVE-2005-2086",
          "Description": "PHP remote file include.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2086"
        },
        {
          "Reference": "CVE-2004-0127",
          "Description": "Directory traversal vulnerability in PHP include statement.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0127"
        },
        {
          "Reference": "CVE-2005-1971",
          "Description": "Directory traversal vulnerability in PHP include statement.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1971"
        },
        {
          "Reference": "CVE-2005-3335",
          "Description": "PHP file inclusion issue, both remote and local; local include uses \"..\" and \"%00\" characters as a manipulation, but many remote file inclusion issues probably have this vector.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3335"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "83",
      "Name": "Improper Neutralization of Script in Attributes in a Web Page",
      "Abstraction": "Variant",
      "Description": "The product does not neutralize or incorrectly neutralizes \"javascript:\" or other URIs from dangerous attributes within tags, such as onmouseover, onload, onerror, or style.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2001-0520",
          "Description": "Bypass filtering of SCRIPT tags using onload in BODY, href in A, BUTTON, INPUT, and others.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0520"
        },
        {
          "Reference": "CVE-2002-1493",
          "Description": "guestbook XSS in STYLE or IMG SRC attributes.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1493"
        },
        {
          "Reference": "CVE-2002-1965",
          "Description": "Javascript in onerror attribute of IMG tag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1965"
        },
        {
          "Reference": "CVE-2002-1495",
          "Description": "XSS in web-based email product via onmouseover event.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1495"
        },
        {
          "Reference": "CVE-2002-1681",
          "Description": "XSS via script in <P> tag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1681"
        },
        {
          "Reference": "CVE-2004-1935",
          "Description": "Onload, onmouseover, and other events in an e-mail attachment.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1935"
        },
        {
          "Reference": "CVE-2005-0945",
          "Description": "Onmouseover and onload events in img, link, and mail tags.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0945"
        },
        {
          "Reference": "CVE-2003-1136",
          "Description": "Javascript in onmouseover attribute in e-mail address or URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1136"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "830",
      "Name": "Inclusion of Web Functionality from an Untrusted Source",
      "Abstraction": "Variant",
      "Description": "The product includes web functionality (such as a web widget) from another domain, which causes it to operate within the domain of the product, potentially granting total access and control of the product to the untrusted source.",
      "ExtendedDescription": "\n\nIncluding third party functionality in a web-based environment is risky, especially if the source of the functionality is untrusted.\n\n\nEven if the third party is a trusted source, the product may still be exposed to attacks and malicious behavior if that trusted source is compromised, or if the code is modified in transmission from the third party to the product.\n\n\nThis weakness is common in \"mashup\" development on the web, which may include source functionality from other domains. For example, Javascript-based web widgets may be inserted by using '<SCRIPT SRC=\"http://other.domain.here\">' tags, which causes the code to run in the domain of the product, not the remote site from which the widget was loaded. As a result, the included code has access to the local DOM, including cookies and other data that the developer might not want the remote site to be able to access.\n\n\nSuch dependencies may be desirable, or even required, but sometimes programmers are not aware that a dependency exists.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "831",
      "Name": "Signal Handler Function Associated with Multiple Signals",
      "Abstraction": "Variant",
      "Description": "The product defines a function that is used as a handler for more than one signal.",
      "ExtendedDescription": "\n\nWhile sometimes intentional and safe, when the same function is used to handle multiple signals, a race condition could occur if the function uses any state outside of its local declaration, such as global variables or non-reentrant functions, or has any side effects.\n\n\nAn attacker could send one signal that invokes the handler function; in many OSes, this will typically prevent the same signal from invoking the handler again, at least until the handler function has completed execution. However, the attacker could then send a different signal that is associated with the same handler function. This could interrupt the original handler function while it is still executing. If there is shared state, then the state could be corrupted. This can lead to a variety of potential consequences depending on context, including denial of service and code execution.\n\n\nAnother rarely-explored possibility arises when the signal handler is only designed to be executed once (if at all). By sending multiple signals, an attacker could invoke the function more than once. This may generate extra, unintended side effects. A race condition might not even be necessary; the attacker could send one signal, wait until it is handled, then send the other signal.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "832",
      "Name": "Unlock of a Resource that is not Locked",
      "Abstraction": "Base",
      "Description": "The product attempts to unlock a resource that is not locked.",
      "ExtendedDescription": "Depending on the locking functionality, an unlock of a non-locked resource might cause memory corruption or other modification to the resource (or its associated metadata that is used for tracking locks).",
      "ObservedExamples": [
        {
          "Reference": "CVE-2010-4210",
          "Description": "function in OS kernel unlocks a mutex that was not previously locked, causing a panic or overwrite of arbitrary memory.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-4210"
        },
        {
          "Reference": "CVE-2008-4302",
          "Description": "Chain: OS kernel does not properly handle a failure of a function call (CWE-755), leading to an unlock of a resource that was not locked (CWE-832), with resultant crash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4302"
        },
        {
          "Reference": "CVE-2009-1243",
          "Description": "OS kernel performs an unlock in some incorrect circumstances, leading to panic.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1243"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "833",
      "Name": "Deadlock",
      "Abstraction": "Base",
      "Description": "The product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock.",
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-1476",
          "Description": "A bug in some Intel Pentium processors allow DoS (hang) via an invalid \"CMPXCHG8B\" instruction, causing a deadlock",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1476"
        },
        {
          "Reference": "CVE-2009-2857",
          "Description": "OS deadlock",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2857"
        },
        {
          "Reference": "CVE-2009-1961",
          "Description": "OS deadlock involving 3 separate functions",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1961"
        },
        {
          "Reference": "CVE-2009-2699",
          "Description": "deadlock in library",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2699"
        },
        {
          "Reference": "CVE-2009-4272",
          "Description": "deadlock triggered by packets that force collisions in a routing table",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-4272"
        },
        {
          "Reference": "CVE-2002-1850",
          "Description": "read/write deadlock between web server and script",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1850"
        },
        {
          "Reference": "CVE-2004-0174",
          "Description": "web server deadlock involving multiple listening connections",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0174"
        },
        {
          "Reference": "CVE-2009-1388",
          "Description": "multiple simultaneous calls to the same function trigger deadlock.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1388"
        },
        {
          "Reference": "CVE-2006-5158",
          "Description": "chain: other weakness leads to NULL pointer dereference (CWE-476) or deadlock (CWE-833).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-5158"
        },
        {
          "Reference": "CVE-2006-4342",
          "Description": "deadlock when an operation is performed on a resource while it is being removed.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4342"
        },
        {
          "Reference": "CVE-2006-2374",
          "Description": "Deadlock in device driver triggered by using file handle of a related device.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2374"
        },
        {
          "Reference": "CVE-2006-2275",
          "Description": "Deadlock when large number of small messages cannot be processed quickly enough.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2275"
        },
        {
          "Reference": "CVE-2005-3847",
          "Description": "OS kernel has deadlock triggered by a signal during a core dump.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3847"
        },
        {
          "Reference": "CVE-2005-3106",
          "Description": "Race condition leads to deadlock.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3106"
        },
        {
          "Reference": "CVE-2005-2456",
          "Description": "Chain: array index error (CWE-129) leads to deadlock (CWE-833)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2456"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "834",
      "Name": "Excessive Iteration",
      "Abstraction": "Class",
      "Description": "The product performs an iteration or loop without sufficiently limiting the number of times that the loop is executed.",
      "ExtendedDescription": "If the iteration can be influenced by an attacker, this weakness could allow attackers to consume excessive resources such as CPU or memory. In many cases, a loop does not need to be infinite in order to cause enough resource consumption to adversely affect the product or its host system; it depends on the amount of resources consumed per iteration.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2011-1027",
          "Description": "Chain: off-by-one error (CWE-193) leads to infinite loop (CWE-835) using invalid hex-encoded characters.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-1027"
        },
        {
          "Reference": "CVE-2006-6499",
          "Description": "Chain: web browser crashes due to infinite loop - \"bad looping logic [that relies on] floating point math [CWE-1339] to exit the loop [CWE-835]\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6499"
        }
      ],
      "MappingNotes": {
        "Usage": "Discouraged"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "835",
      "Name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "Abstraction": "Base",
      "Description": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.",
      "ExtendedDescription": "If the loop can be influenced by an attacker, this weakness could allow attackers to consume excessive resources such as CPU or memory.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-22224",
          "Description": "Chain: an operating system does not properly process malformed Open Shortest Path First (OSPF) Type/Length/Value Identifiers (TLV) (CWE-703), which can cause the process to enter an infinite loop (CWE-835)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-22224"
        },
        {
          "Reference": "CVE-2022-25304",
          "Description": "A Python machine communication platform did not account for receiving a malformed packet with a null size, causing the receiving function to never update the message buffer and be caught in an infinite loop.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-25304"
        },
        {
          "Reference": "CVE-2011-1027",
          "Description": "Chain: off-by-one error (CWE-193) leads to infinite loop (CWE-835) using invalid hex-encoded characters.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-1027"
        },
        {
          "Reference": "CVE-2011-1142",
          "Description": "Chain: self-referential values in recursive definitions lead to infinite loop.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-1142"
        },
        {
          "Reference": "CVE-2011-1002",
          "Description": "NULL UDP packet is never cleared from a queue, leading to infinite loop.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-1002"
        },
        {
          "Reference": "CVE-2006-6499",
          "Description": "Chain: web browser crashes due to infinite loop - \"bad looping logic [that relies on] floating point math [CWE-1339] to exit the loop [CWE-835]\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6499"
        },
        {
          "Reference": "CVE-2010-4476",
          "Description": "Floating point conversion routine cycles back and forth between two different values.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-4476"
        },
        {
          "Reference": "CVE-2010-4645",
          "Description": "Floating point conversion routine cycles back and forth between two different values.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-4645"
        },
        {
          "Reference": "CVE-2010-2534",
          "Description": "Chain: improperly clearing a pointer in a linked list leads to infinite loop.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2534"
        },
        {
          "Reference": "CVE-2013-1591",
          "Description": "Chain: an integer overflow (CWE-190) in the image size calculation causes an infinite loop (CWE-835) which sequentially allocates buffers without limits (CWE-1325) until the stack is full.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2013-1591"
        },
        {
          "Reference": "CVE-2008-3688",
          "Description": "Chain: A denial of service may be caused by an uninitialized variable (CWE-457) allowing an infinite loop (CWE-835) resulting from a connection to an unresponsive server.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3688"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "836",
      "Name": "Use of Password Hash Instead of Password for Authentication",
      "Abstraction": "Base",
      "Description": "The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.",
      "ExtendedDescription": "\n\nSome authentication mechanisms rely on the client to generate the hash for a password, possibly to reduce load on the server or avoid sending the password across the network. However, when the client is used to generate the hash, an attacker can bypass the authentication by obtaining a copy of the hash, e.g. by using SQL injection to compromise a database of authentication credentials, or by exploiting an information exposure. The attacker could then use a modified client to replay the stolen hash without having knowledge of the original password.\n\n\nAs a result, the server-side comparison against a client-side hash does not provide any more security than the use of passwords without hashing.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2009-1283",
          "Description": "Product performs authentication with user-supplied password hashes that can be obtained from a separate SQL injection vulnerability (CVE-2009-1282).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1283"
        },
        {
          "Reference": "CVE-2005-3435",
          "Description": "Product allows attackers to bypass authentication by obtaining the password hash for another user and specifying the hash in the pwd argument.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3435"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "837",
      "Name": "Improper Enforcement of a Single, Unique Action",
      "Abstraction": "Base",
      "Description": "The product requires that an actor should only be able to perform an action once, or to have only one unique action, but the product does not enforce or improperly enforces this restriction.",
      "ExtendedDescription": "In various applications, a user is only expected to perform a certain action once, such as voting, requesting a refund, or making a purchase. When this restriction is not enforced, sometimes this can have security implications. For example, in a voting application, an attacker could attempt to \"stuff the ballot box\" by voting multiple times. If these votes are counted separately, then the attacker could directly affect who wins the vote. This could have significant business impact depending on the purpose of the product.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2008-0294",
          "Description": "Ticket-booking web application allows a user to lock a seat more than once.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0294"
        },
        {
          "Reference": "CVE-2005-4051",
          "Description": "CMS allows people to rate downloads by voting more than once.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-4051"
        },
        {
          "Reference": "CVE-2002-216",
          "Description": "Polling software allows people to vote more than once by setting a cookie.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-216"
        },
        {
          "Reference": "CVE-2003-1433",
          "Description": "Chain: lack of validation of a challenge key in a game allows a player to register multiple times and lock other players out of the game.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1433"
        },
        {
          "Reference": "CVE-2002-1018",
          "Description": "Library feature allows attackers to check out the same e-book multiple times, preventing other users from accessing copies of the e-book.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1018"
        },
        {
          "Reference": "CVE-2009-2346",
          "Description": "Protocol implementation allows remote attackers to cause a denial of service (call-number exhaustion) by initiating many message exchanges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2346"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "838",
      "Name": "Inappropriate Encoding for Output Context",
      "Abstraction": "Base",
      "Description": "The product uses or specifies an encoding when generating output to a downstream component, but the specified encoding is not the same as the encoding that is expected by the downstream component.",
      "ExtendedDescription": "\n\nThis weakness can cause the downstream component to use a decoding method that produces different data than what the product intended to send. When the wrong encoding is used - even if closely related - the downstream component could decode the data incorrectly. This can have security consequences when the provided boundaries between control and data are inadvertently broken, because the resulting data could introduce control characters or special elements that were not sent by the product. The resulting data could then be used to bypass protection mechanisms such as input validation, and enable injection attacks.\n\n\nWhile using output encoding is essential for ensuring that communications between components are accurate, the use of the wrong encoding - even if closely related - could cause the downstream component to misinterpret the output.\n\n\nFor example, HTML entity encoding is used for elements in the HTML body of a web page. However, a programmer might use entity encoding when generating output for that is used within an attribute of an HTML tag, which could contain functional Javascript that is not affected by the HTML encoding.\n\n\nWhile web applications have received the most attention for this problem, this weakness could potentially apply to any type of product that uses a communications stream that could support multiple encodings.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2009-2814",
          "Description": "Server does not properly handle requests that do not contain UTF-8 data; browser assumes UTF-8, allowing XSS.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2814"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "839",
      "Name": "Numeric Range Comparison Without Minimum Check",
      "Abstraction": "Base",
      "Description": "The product checks a value to ensure that it is less than or equal to a maximum, but it does not also verify that the value is greater than or equal to the minimum.",
      "ExtendedDescription": "\n\nSome products use signed integers or floats even when their values are only expected to be positive or 0. An input validation check might assume that the value is positive, and only check for the maximum value. If the value is negative, but the code assumes that the value is positive, this can produce an error. The error may have security consequences if the negative value is used for memory allocation, array access, buffer access, etc. Ultimately, the error could lead to a buffer overflow or other type of memory corruption.\n\n\nThe use of a negative number in a positive-only context could have security implications for other types of resources. For example, a shopping cart might check that the user is not requesting more than 10 items, but a request for -3 items could cause the application to calculate a negative price and credit the attacker's account.\n",
      "AlternateTerms": [
        {
          "Term": "Signed comparison",
          "Description": "The \"signed comparison\" term is often used to describe when the product uses a signed variable and checks it to ensure that it is less than a maximum value (typically a maximum buffer size), but does not verify that it is greater than 0."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2010-1866",
          "Description": "Chain: integer overflow (CWE-190) causes a negative signed value, which later bypasses a maximum-only check (CWE-839), leading to heap-based buffer overflow (CWE-122).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-1866"
        },
        {
          "Reference": "CVE-2009-1099",
          "Description": "Chain: 16-bit counter can be interpreted as a negative value, compared to a 32-bit maximum value, leading to buffer under-write.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1099"
        },
        {
          "Reference": "CVE-2011-0521",
          "Description": "Chain: kernel's lack of a check for a negative value leads to memory corruption.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-0521"
        },
        {
          "Reference": "CVE-2010-3704",
          "Description": "Chain: parser uses atoi() but does not check for a negative value, which can happen on some platforms, leading to buffer under-write.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-3704"
        },
        {
          "Reference": "CVE-2010-2530",
          "Description": "Chain: Negative value stored in an int bypasses a size check and causes allocation of large amounts of memory.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2530"
        },
        {
          "Reference": "CVE-2009-3080",
          "Description": "Chain: negative offset value to IOCTL bypasses check for maximum index, then used as an array index for buffer under-read.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3080"
        },
        {
          "Reference": "CVE-2008-6393",
          "Description": "chain: file transfer client performs signed comparison, leading to integer overflow and heap-based buffer overflow.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-6393"
        },
        {
          "Reference": "CVE-2008-4558",
          "Description": "chain: negative ID in media player bypasses check for maximum index, then used as an array index for buffer under-read.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4558"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "84",
      "Name": "Improper Neutralization of Encoded URI Schemes in a Web Page",
      "Abstraction": "Variant",
      "Description": "The web application improperly neutralizes user-controlled input for executable script disguised with URI encodings.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2005-0563",
          "Description": "Cross-site scripting (XSS) vulnerability in Microsoft Outlook Web Access (OWA) component in Exchange Server 5.5 allows remote attackers to inject arbitrary web script or HTML via an email message with an encoded javascript: URL (\"jav&#X41sc&#0010;ript:\") in an IMG tag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0563"
        },
        {
          "Reference": "CVE-2005-2276",
          "Description": "Cross-site scripting (XSS) vulnerability in Novell Groupwise WebAccess 6.5 before July 11, 2005 allows remote attackers to inject arbitrary web script or HTML via an e-mail message with an encoded javascript URI (e.g. \"j&#X41vascript\" in an IMG tag).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2276"
        },
        {
          "Reference": "CVE-2005-0692",
          "Description": "Encoded script within BBcode IMG tag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0692"
        },
        {
          "Reference": "CVE-2002-0117",
          "Description": "Encoded \"javascript\" in IMG tag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0117"
        },
        {
          "Reference": "CVE-2002-0118",
          "Description": "Encoded \"javascript\" in IMG tag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0118"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "841",
      "Name": "Improper Enforcement of Behavioral Workflow",
      "Abstraction": "Base",
      "Description": "The product supports a session in which more than one behavior must be performed by an actor, but it does not properly ensure that the actor performs the behaviors in the required sequence.",
      "ExtendedDescription": "\n\nBy performing actions in an unexpected order, or by omitting steps, an attacker could manipulate the business logic of the product or cause it to enter an invalid state. In some cases, this can also expose resultant weaknesses.\n\n\nFor example, a file-sharing protocol might require that an actor perform separate steps to provide a username, then a password, before being able to transfer files. If the file-sharing server accepts a password command followed by a transfer command, without any username being provided, the product might still perform the transfer.\n\n\nNote that this is different than CWE-696, which focuses on when the product performs actions in the wrong sequence; this entry is closely related, but it is focused on ensuring that the actor performs actions in the correct sequence.\n\n\nWorkflow-related behaviors include:\n\n\n  - Steps are performed in the expected order.\n\n  - Required steps are not omitted.\n\n  - Steps are not interrupted.\n\n  - Steps are performed in a timely fashion.\n\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2011-0348",
          "Description": "Bypass of access/billing restrictions by sending traffic to an unrestricted destination before sending to a restricted destination.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-0348"
        },
        {
          "Reference": "CVE-2007-3012",
          "Description": "Attacker can access portions of a restricted page by canceling out of a dialog.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3012"
        },
        {
          "Reference": "CVE-2009-5056",
          "Description": "Ticket-tracking system does not enforce a permission setting.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-5056"
        },
        {
          "Reference": "CVE-2004-2164",
          "Description": "Shopping cart does not close a database connection when user restores a previous order, leading to connection exhaustion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2164"
        },
        {
          "Reference": "CVE-2003-0777",
          "Description": "Chain: product does not properly handle dropped connections, leading to missing NULL terminator (CWE-170) and segmentation fault.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0777"
        },
        {
          "Reference": "CVE-2005-3327",
          "Description": "Chain: Authentication bypass by skipping the first startup step as required by the protocol.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3327"
        },
        {
          "Reference": "CVE-2004-0829",
          "Description": "Chain: File server crashes when sent a \"find next\" request without an initial \"find first.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0829"
        },
        {
          "Reference": "CVE-2010-2620",
          "Description": "FTP server allows remote attackers to bypass authentication by sending (1) LIST, (2) RETR, (3) STOR, or other commands without performing the required login steps first.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2620"
        },
        {
          "Reference": "CVE-2005-3296",
          "Description": "FTP server allows remote attackers to list arbitrary directories as root by running the LIST command before logging in.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3296"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "842",
      "Name": "Placement of User into Incorrect Group",
      "Abstraction": "Base",
      "Description": "The product or the administrator places a user into an incorrect group.",
      "ExtendedDescription": "If the incorrect group has more access or privileges than the intended group, the user might be able to bypass intended security policy to access unexpected resources or perform unexpected actions. The access-control system might not be able to detect malicious usage of this group membership.",
      "ObservedExamples": [
        {
          "Reference": "CVE-1999-1193",
          "Description": "Operating system assigns user to privileged wheel group, allowing the user to gain root privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1193"
        },
        {
          "Reference": "CVE-2010-3716",
          "Description": "Chain: drafted web request allows the creation of users with arbitrary group membership.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-3716"
        },
        {
          "Reference": "CVE-2008-5397",
          "Description": "Chain: improper processing of configuration options causes users to contain unintended group memberships.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5397"
        },
        {
          "Reference": "CVE-2007-6644",
          "Description": "CMS does not prevent remote administrators from promoting other users to the administrator group, in violation of the intended security model.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-6644"
        },
        {
          "Reference": "CVE-2007-3260",
          "Description": "Product assigns members to the root group, allowing escalation of privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3260"
        },
        {
          "Reference": "CVE-2002-0080",
          "Description": "Chain: daemon does not properly clear groups before dropping privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0080"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "843",
      "Name": "Access of Resource Using Incompatible Type ('Type Confusion')",
      "Abstraction": "Base",
      "Description": "The product allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type.",
      "ExtendedDescription": "\n\nWhen the product accesses the resource using an incompatible type, this could trigger logical errors because the resource does not have expected properties. In languages without memory safety, such as C and C++, type confusion can lead to out-of-bounds memory access.\n\n\nWhile this weakness is frequently associated with unions when parsing data with many different embedded object types in C, it can be present in any application that can interpret the same variable or memory location in multiple ways.\n\n\nThis weakness is not unique to C and C++. For example, errors in PHP applications can be triggered by providing array parameters when scalars are expected, or vice versa. Languages such as Perl, which perform automatic conversion of a variable of one type when it is accessed as if it were another type, can also contain these issues.\n",
      "AlternateTerms": [
        {
          "Term": "Object Type Confusion"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2010-4577",
          "Description": "Type confusion in CSS sequence leads to out-of-bounds read.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-4577"
        },
        {
          "Reference": "CVE-2011-0611",
          "Description": "Size inconsistency allows code execution, first discovered when it was actively exploited in-the-wild.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-0611"
        },
        {
          "Reference": "CVE-2010-0258",
          "Description": "Improperly-parsed file containing records of different types leads to code execution when a memory location is interpreted as a different object than intended.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-0258"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "85",
      "Name": "Doubled Character XSS Manipulations",
      "Abstraction": "Variant",
      "Description": "The web application does not filter user-controlled input for executable script disguised using doubling of the involved characters.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-2086",
          "Description": "XSS using \"<script\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2086"
        },
        {
          "Reference": "CVE-2000-0116",
          "Description": "Encoded \"javascript\" in IMG tag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0116"
        },
        {
          "Reference": "CVE-2001-1157",
          "Description": "Extra \"<\" in front of SCRIPT tag.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1157"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "86",
      "Name": "Improper Neutralization of Invalid Characters in Identifiers in Web Pages",
      "Abstraction": "Variant",
      "Description": "The product does not neutralize or incorrectly neutralizes invalid characters or byte sequences in the middle of tag names, URI schemes, and other identifiers.",
      "ExtendedDescription": "Some web browsers may remove these sequences, resulting in output that may have unintended control implications. For example, the product may attempt to remove a \"javascript:\" URI scheme, but a \"java%00script:\" URI may bypass this check and still be rendered as active javascript by some browsers, allowing XSS or other attacks.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-0595",
          "Description": "XSS filter doesn't filter null characters before looking for dangerous tags, which are ignored by web browsers. Multiple Interpretation Error (MIE) and validate-before-cleanse.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0595"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "862",
      "Name": "Missing Authorization",
      "Abstraction": "Class",
      "Description": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
      "ExtendedDescription": "\n\nAssuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.\n\n\nWhen access control checks are not applied, users are able to access data or perform actions that they should not be allowed to perform. This can lead to a wide range of problems, including information exposures, denial of service, and arbitrary code execution.\n",
      "BackgroundDetails": [
        "An access control list (ACL) represents who/what has permissions to a given object. Different operating systems implement (ACLs) in different ways. In UNIX, there are three types of permissions: read, write, and execute. Users are divided into three classes for file access: owner, group owner, and all other users where each class has a separate set of rights. In Windows NT, there are four basic types of permissions for files: \"No access\", \"Read access\", \"Change access\", and \"Full control\". Windows NT extends the concept of three types of users in UNIX to include a list of users and groups along with their associated permissions. A user can create an object (file) and assign specified permissions to that object."
      ],
      "AlternateTerms": [
        {
          "Term": "AuthZ",
          "Description": "\"AuthZ\" is typically used as an abbreviation of \"authorization\" within the web application security community. It is distinct from \"AuthN\" (or, sometimes, \"AuthC\") which is an abbreviation of \"authentication.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-24730",
          "Description": "Go-based continuous deployment product does not check that a user has certain privileges to update or create an app, allowing adversaries to read sensitive repository information",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-24730"
        },
        {
          "Reference": "CVE-2009-3168",
          "Description": "Web application does not restrict access to admin scripts, allowing authenticated users to reset administrative passwords.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3168"
        },
        {
          "Reference": "CVE-2009-3597",
          "Description": "Web application stores database file under the web root with insufficient access control (CWE-219), allowing direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3597"
        },
        {
          "Reference": "CVE-2009-2282",
          "Description": "Terminal server does not check authorization for guest access.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2282"
        },
        {
          "Reference": "CVE-2008-5027",
          "Description": "System monitoring software allows users to bypass authorization by creating custom forms.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5027"
        },
        {
          "Reference": "CVE-2009-3781",
          "Description": "Content management system does not check access permissions for private files, allowing others to view those files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3781"
        },
        {
          "Reference": "CVE-2008-6548",
          "Description": "Product does not check the ACL of a page accessed using an \"include\" directive, allowing attackers to read unauthorized files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-6548"
        },
        {
          "Reference": "CVE-2009-2960",
          "Description": "Web application does not restrict access to admin scripts, allowing authenticated users to modify passwords of other users.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2960"
        },
        {
          "Reference": "CVE-2009-3230",
          "Description": "Database server does not use appropriate privileges for certain sensitive operations.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3230"
        },
        {
          "Reference": "CVE-2009-2213",
          "Description": "Gateway uses default \"Allow\" configuration for its authorization settings.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2213"
        },
        {
          "Reference": "CVE-2009-0034",
          "Description": "Chain: product does not properly interpret a configuration option for a system group, allowing users to gain privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0034"
        },
        {
          "Reference": "CVE-2008-6123",
          "Description": "Chain: SNMP product does not properly parse a configuration option for which hosts are allowed to connect, allowing unauthorized IP addresses to connect.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-6123"
        },
        {
          "Reference": "CVE-2008-7109",
          "Description": "Chain: reliance on client-side security (CWE-602) allows attackers to bypass authorization using a custom client.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-7109"
        },
        {
          "Reference": "CVE-2008-3424",
          "Description": "Chain: product does not properly handle wildcards in an authorization policy list, allowing unintended access.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3424"
        },
        {
          "Reference": "CVE-2005-1036",
          "Description": "Chain: Bypass of access restrictions due to improper authorization (CWE-862) of a user results from an improperly initialized (CWE-909) I/O permission bitmap",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1036"
        },
        {
          "Reference": "CVE-2008-4577",
          "Description": "ACL-based protection mechanism treats negative access rights as if they are positive, allowing bypass of intended restrictions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4577"
        },
        {
          "Reference": "CVE-2007-2925",
          "Description": "Default ACL list for a DNS server does not set certain ACLs, allowing unauthorized DNS queries.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-2925"
        },
        {
          "Reference": "CVE-2006-6679",
          "Description": "Product relies on the X-Forwarded-For HTTP header for authorization, allowing unintended access by spoofing the header.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6679"
        },
        {
          "Reference": "CVE-2005-3623",
          "Description": "OS kernel does not check for a certain privilege before setting ACLs for files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3623"
        },
        {
          "Reference": "CVE-2005-2801",
          "Description": "Chain: file-system code performs an incorrect comparison (CWE-697), preventing default ACLs from being properly applied.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2801"
        },
        {
          "Reference": "CVE-2001-1155",
          "Description": "Chain: product does not properly check the result of a reverse DNS lookup because of operator precedence (CWE-783), allowing bypass of DNS-based access restrictions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1155"
        },
        {
          "Reference": "CVE-2020-17533",
          "Description": "Chain: unchecked return value (CWE-252) of some functions for policy enforcement leads to authorization bypass (CWE-862)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-17533"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "863",
      "Name": "Incorrect Authorization",
      "Abstraction": "Class",
      "Description": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check. This allows attackers to bypass intended access restrictions.",
      "ExtendedDescription": "\n\nAssuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.\n\n\nWhen access control checks are incorrectly applied, users are able to access data or perform actions that they should not be allowed to perform. This can lead to a wide range of problems, including information exposures, denial of service, and arbitrary code execution.\n",
      "BackgroundDetails": [
        "An access control list (ACL) represents who/what has permissions to a given object. Different operating systems implement (ACLs) in different ways. In UNIX, there are three types of permissions: read, write, and execute. Users are divided into three classes for file access: owner, group owner, and all other users where each class has a separate set of rights. In Windows NT, there are four basic types of permissions for files: \"No access\", \"Read access\", \"Change access\", and \"Full control\". Windows NT extends the concept of three types of users in UNIX to include a list of users and groups along with their associated permissions. A user can create an object (file) and assign specified permissions to that object."
      ],
      "AlternateTerms": [
        {
          "Term": "AuthZ",
          "Description": "\"AuthZ\" is typically used as an abbreviation of \"authorization\" within the web application security community. It is distinct from \"AuthN\" (or, sometimes, \"AuthC\") which is an abbreviation of \"authentication.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-39155",
          "Description": "Chain: A microservice integration and management platform compares the hostname in the HTTP Host header in a case-sensitive way (CWE-178, CWE-1289), allowing bypass of the authorization policy (CWE-863) using a hostname with mixed case or other variations.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-39155"
        },
        {
          "Reference": "CVE-2019-15900",
          "Description": "Chain: sscanf() call is used to check if a username and group exists, but the return value of sscanf() call is not checked (CWE-252), causing an uninitialized variable to be checked (CWE-457), returning success to allow authorization bypass for executing a privileged (CWE-863).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-15900"
        },
        {
          "Reference": "CVE-2009-2213",
          "Description": "Gateway uses default \"Allow\" configuration for its authorization settings.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2213"
        },
        {
          "Reference": "CVE-2009-0034",
          "Description": "Chain: product does not properly interpret a configuration option for a system group, allowing users to gain privileges.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0034"
        },
        {
          "Reference": "CVE-2008-6123",
          "Description": "Chain: SNMP product does not properly parse a configuration option for which hosts are allowed to connect, allowing unauthorized IP addresses to connect.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-6123"
        },
        {
          "Reference": "CVE-2008-7109",
          "Description": "Chain: reliance on client-side security (CWE-602) allows attackers to bypass authorization using a custom client.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-7109"
        },
        {
          "Reference": "CVE-2008-3424",
          "Description": "Chain: product does not properly handle wildcards in an authorization policy list, allowing unintended access.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3424"
        },
        {
          "Reference": "CVE-2008-4577",
          "Description": "ACL-based protection mechanism treats negative access rights as if they are positive, allowing bypass of intended restrictions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4577"
        },
        {
          "Reference": "CVE-2006-6679",
          "Description": "Product relies on the X-Forwarded-For HTTP header for authorization, allowing unintended access by spoofing the header.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6679"
        },
        {
          "Reference": "CVE-2005-2801",
          "Description": "Chain: file-system code performs an incorrect comparison (CWE-697), preventing default ACLs from being properly applied.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2801"
        },
        {
          "Reference": "CVE-2001-1155",
          "Description": "Chain: product does not properly check the result of a reverse DNS lookup because of operator precedence (CWE-783), allowing bypass of DNS-based access restrictions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1155"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "87",
      "Name": "Improper Neutralization of Alternate XSS Syntax",
      "Abstraction": "Variant",
      "Description": "The product does not neutralize or incorrectly neutralizes user-controlled input for alternate script syntax.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0738",
          "Description": "XSS using \"&={script}\".",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0738"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "88",
      "Name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
      "Abstraction": "Base",
      "Description": "The product constructs a string for a command to be executed by a separate component\nin another control sphere, but it does not properly delimit the\nintended arguments, options, or switches within that command string.",
      "ExtendedDescription": "\n\nWhen creating commands using interpolation into a string, developers may assume that only the arguments/options that they specify will be processed. This assumption may be even stronger when the programmer has encoded the command in a way that prevents separate commands from being provided maliciously, e.g. in the case of shell metacharacters. When constructing the command, the developer may use whitespace or other delimiters that are required to separate arguments when the command. However, if an attacker can provide an untrusted input that contains argument-separating delimiters, then the resulting command will have more arguments than intended by the developer. The attacker may then be able to change the behavior of the command. Depending on the functionality supported by the extraneous arguments, this may have security-relevant consequences.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-36069",
          "Description": "Python-based dependency management tool avoids OS command injection when generating Git commands but allows injection of optional arguments with input beginning with a dash (CWE-88), potentially allowing for code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-36069"
        },
        {
          "Reference": "CVE-1999-0113",
          "Description": "Canonical Example - \"-froot\" argument is passed on to another program, where the \"-f\" causes execution as user \"root\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0113"
        },
        {
          "Reference": "CVE-2001-0150",
          "Description": "Web browser executes Telnet sessions using command line arguments that are specified by the web site, which could allow remote attackers to execute arbitrary commands.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0150"
        },
        {
          "Reference": "CVE-2001-0667",
          "Description": "Web browser allows remote attackers to execute commands by spawning Telnet with a log file option on the command line and writing arbitrary code into an executable file which is later executed.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0667"
        },
        {
          "Reference": "CVE-2002-0985",
          "Description": "Argument injection vulnerability in the mail function for PHP may allow attackers to bypass safe mode restrictions and modify command line arguments to the MTA (e.g. sendmail) possibly executing commands.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0985"
        },
        {
          "Reference": "CVE-2003-0907",
          "Description": "Help and Support center in windows does not properly validate HCP URLs, which allows remote attackers to execute arbitrary code via quotation marks in an \"hcp://\" URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0907"
        },
        {
          "Reference": "CVE-2004-0121",
          "Description": "Mail client does not sufficiently filter parameters of mailto: URLs when using them as arguments to mail executable, which allows remote attackers to execute arbitrary programs.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0121"
        },
        {
          "Reference": "CVE-2004-0473",
          "Description": "Web browser doesn't filter \"-\" when invoking various commands, allowing command-line switches to be specified.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0473"
        },
        {
          "Reference": "CVE-2004-0480",
          "Description": "Mail client allows remote attackers to execute arbitrary code via a URI that uses a UNC network share pathname to provide an alternate configuration file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0480"
        },
        {
          "Reference": "CVE-2004-0489",
          "Description": "SSH URI handler for web browser allows remote attackers to execute arbitrary code or conduct port forwarding via the a command line option.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0489"
        },
        {
          "Reference": "CVE-2004-0411",
          "Description": "Web browser doesn't filter \"-\" when invoking various commands, allowing command-line switches to be specified.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0411"
        },
        {
          "Reference": "CVE-2005-4699",
          "Description": "Argument injection vulnerability in TellMe 1.2 and earlier allows remote attackers to modify command line arguments for the Whois program and obtain sensitive information via \"--\" style options in the q_Host parameter.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-4699"
        },
        {
          "Reference": "CVE-2006-1865",
          "Description": "Beagle before 0.2.5 can produce certain insecure command lines to launch external helper applications while indexing, which allows attackers to execute arbitrary commands. NOTE: it is not immediately clear whether this issue involves argument injection, shell metacharacters, or other issues.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-1865"
        },
        {
          "Reference": "CVE-2006-2056",
          "Description": "Argument injection vulnerability in Internet Explorer 6 for Windows XP SP2 allows user-assisted remote attackers to modify command line arguments to an invoked mail client via \" (double quote) characters in a mailto: scheme handler, as demonstrated by launching Microsoft Outlook with an arbitrary filename as an attachment. NOTE: it is not clear whether this issue is implementation-specific or a problem in the Microsoft API.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2056"
        },
        {
          "Reference": "CVE-2006-2057",
          "Description": "Argument injection vulnerability in Mozilla Firefox 1.0.6 allows user-assisted remote attackers to modify command line arguments to an invoked mail client via \" (double quote) characters in a mailto: scheme handler, as demonstrated by launching Microsoft Outlook with an arbitrary filename as an attachment. NOTE: it is not clear whether this issue is implementation-specific or a problem in the Microsoft API.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2057"
        },
        {
          "Reference": "CVE-2006-2058",
          "Description": "Argument injection vulnerability in Avant Browser 10.1 Build 17 allows user-assisted remote attackers to modify command line arguments to an invoked mail client via \" (double quote) characters in a mailto: scheme handler, as demonstrated by launching Microsoft Outlook with an arbitrary filename as an attachment. NOTE: it is not clear whether this issue is implementation-specific or a problem in the Microsoft API.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2058"
        },
        {
          "Reference": "CVE-2006-2312",
          "Description": "Argument injection vulnerability in the URI handler in Skype 2.0.*.104 and 2.5.*.0 through 2.5.*.78 for Windows allows remote authorized attackers to download arbitrary files via a URL that contains certain command-line switches.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2312"
        },
        {
          "Reference": "CVE-2006-3015",
          "Description": "Argument injection vulnerability in WinSCP 3.8.1 build 328 allows remote attackers to upload or download arbitrary files via encoded spaces and double-quote characters in a scp or sftp URI.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-3015"
        },
        {
          "Reference": "CVE-2006-4692",
          "Description": "Argument injection vulnerability in the Windows Object Packager (packager.exe) in Microsoft Windows XP SP1 and SP2 and Server 2003 SP1 and earlier allows remote user-assisted attackers to execute arbitrary commands via a crafted file with a \"/\" (slash) character in the filename of the Command Line property, followed by a valid file extension, which causes the command before the slash to be executed, aka \"Object Packager Dialogue Spoofing Vulnerability.\"",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4692"
        },
        {
          "Reference": "CVE-2006-6597",
          "Description": "Argument injection vulnerability in HyperAccess 8.4 allows user-assisted remote attackers to execute arbitrary vbscript and commands via the /r option in a telnet:// URI, which is configured to use hawin32.exe.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6597"
        },
        {
          "Reference": "CVE-2007-0882",
          "Description": "Argument injection vulnerability in the telnet daemon (in.telnetd) in Solaris 10 and 11 (SunOS 5.10 and 5.11) misinterprets certain client \"-f\" sequences as valid requests for the login program to skip authentication, which allows remote attackers to log into certain accounts, as demonstrated by the bin account.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-0882"
        },
        {
          "Reference": "CVE-2001-1246",
          "Description": "Language interpreter's mail function accepts another argument that is concatenated to a string used in a dangerous popen() call. Since there is no neutralization of this argument, both OS Command Injection (CWE-78) and Argument Injection (CWE-88) are possible.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1246"
        },
        {
          "Reference": "CVE-2019-13475",
          "Description": "Argument injection allows execution of arbitrary commands by injecting a \"-exec\" option, which is executed by the command.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-13475"
        },
        {
          "Reference": "CVE-2016-10033",
          "Description": "Argument injection in mail-processing function allows writing unxpected files and executing programs using tecnically-valid email addresses that insert \"-o\" and \"-X\" switches.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2016-10033"
        }
      ],
      "AffectedResources": [
        "System Process"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "89",
      "Name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
      "Abstraction": "Base",
      "Diagram": "/data/images/CWE-89-Diagram.png",
      "Description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
      "AlternateTerms": [
        {
          "Term": "SQL injection",
          "Description": "a common attack-oriented phrase"
        },
        {
          "Term": "SQLi",
          "Description": "a common abbreviation for \"SQL injection\""
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2023-32530",
          "Description": "SQL injection in security product dashboard using crafted certificate fields",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2023-32530"
        },
        {
          "Reference": "CVE-2021-42258",
          "Description": "SQL injection in time and billing software, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-42258"
        },
        {
          "Reference": "CVE-2021-27101",
          "Description": "SQL injection in file-transfer system via a crafted Host header, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-27101"
        },
        {
          "Reference": "CVE-2020-12271",
          "Description": "SQL injection in firewall product's admin interface or user portal, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-12271"
        },
        {
          "Reference": "CVE-2019-3792",
          "Description": "An automation system written in Go contains an API that is vulnerable to SQL injection allowing the attacker to read privileged data.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-3792"
        },
        {
          "Reference": "CVE-2004-0366",
          "Description": "chain: SQL injection in library intended for database authentication allows SQL injection and authentication bypass.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0366"
        },
        {
          "Reference": "CVE-2008-2790",
          "Description": "SQL injection through an ID that was supposed to be numeric.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2790"
        },
        {
          "Reference": "CVE-2008-2223",
          "Description": "SQL injection through an ID that was supposed to be numeric.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2223"
        },
        {
          "Reference": "CVE-2007-6602",
          "Description": "SQL injection via user name.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-6602"
        },
        {
          "Reference": "CVE-2008-5817",
          "Description": "SQL injection via user name or password fields.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5817"
        },
        {
          "Reference": "CVE-2003-0377",
          "Description": "SQL injection in security product, using a crafted group name.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0377"
        },
        {
          "Reference": "CVE-2008-2380",
          "Description": "SQL injection in authentication library.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2380"
        },
        {
          "Reference": "CVE-2017-11508",
          "Description": "SQL injection in vulnerability management and reporting tool, using a crafted password.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2017-11508"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "9",
      "Name": "J2EE Misconfiguration: Weak Access Permissions for EJB Methods",
      "Abstraction": "Variant",
      "Description": "If elevated access rights are assigned to EJB methods, then an attacker can take advantage of the permissions to exploit the product.",
      "ExtendedDescription": "If the EJB deployment descriptor contains one or more method permissions that grant access to the special ANYONE role, it indicates that access control for the application has not been fully thought through or that the application is structured in such a way that reasonable access control restrictions are impossible.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "90",
      "Name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
      "Abstraction": "Base",
      "Description": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-41232",
          "Description": "Chain: authentication routine in Go-based agile development product does not escape user name (CWE-116), allowing LDAP injection (CWE-90)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-41232"
        },
        {
          "Reference": "CVE-2005-2301",
          "Description": "Server does not properly escape LDAP queries, which allows remote attackers to cause a DoS and possibly conduct an LDAP injection attack.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2301"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "908",
      "Name": "Use of Uninitialized Resource",
      "Abstraction": "Base",
      "Description": "The product uses or accesses a resource that has not been initialized.",
      "ExtendedDescription": "When a resource has not been properly initialized, the product may behave unexpectedly. This may lead to a crash or invalid memory access, but the consequences vary depending on the type of resource and how it is used within the product.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2019-9805",
          "Description": "Chain: Creation of the packet client occurs before initialization is complete (CWE-696) resulting in a read from uninitialized memory (CWE-908), causing memory corruption.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2019-9805"
        },
        {
          "Reference": "CVE-2008-4197",
          "Description": "Use of uninitialized memory may allow code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4197"
        },
        {
          "Reference": "CVE-2008-2934",
          "Description": "Free of an uninitialized pointer leads to crash and possible code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2934"
        },
        {
          "Reference": "CVE-2008-0063",
          "Description": "Product does not clear memory contents when generating an error message, leading to information leak.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0063"
        },
        {
          "Reference": "CVE-2008-0062",
          "Description": "Lack of initialization triggers NULL pointer dereference or double-free.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0062"
        },
        {
          "Reference": "CVE-2008-0081",
          "Description": "Uninitialized variable leads to code execution in popular desktop application.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0081"
        },
        {
          "Reference": "CVE-2008-3688",
          "Description": "Chain: Uninitialized variable leads to infinite loop.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3688"
        },
        {
          "Reference": "CVE-2008-3475",
          "Description": "Chain: Improper initialization leads to memory corruption.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3475"
        },
        {
          "Reference": "CVE-2005-1036",
          "Description": "Chain: Bypass of access restrictions due to improper authorization (CWE-862) of a user results from an improperly initialized (CWE-909) I/O permission bitmap",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1036"
        },
        {
          "Reference": "CVE-2008-3597",
          "Description": "Chain: game server can access player data structures before initialization has happened leading to NULL dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3597"
        },
        {
          "Reference": "CVE-2009-2692",
          "Description": "Chain: uninitialized function pointers can be dereferenced allowing code execution",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2692"
        },
        {
          "Reference": "CVE-2009-0949",
          "Description": "Chain: improper initialization of memory can lead to NULL dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0949"
        },
        {
          "Reference": "CVE-2009-3620",
          "Description": "Chain: some unprivileged ioctls do not verify that a structure has been initialized before invocation, leading to NULL dereference",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3620"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "909",
      "Name": "Missing Initialization of Resource",
      "Abstraction": "Class",
      "Description": "The product does not initialize a critical resource.",
      "ExtendedDescription": "Many resources require initialization before they can be properly used. If a resource is not initialized, it could contain unpredictable or expired data, or it could be initialized to defaults that are invalid. This can have security implications when the resource is expected to have certain properties or values.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2020-20739",
          "Description": "A variable that has its value set in a conditional statement is sometimes used when the conditional fails, sometimes causing data leakage",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-20739"
        },
        {
          "Reference": "CVE-2005-1036",
          "Description": "Chain: Bypass of access restrictions due to improper authorization (CWE-862) of a user results from an improperly initialized (CWE-909) I/O permission bitmap",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1036"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "91",
      "Name": "XML Injection (aka Blind XPath Injection)",
      "Abstraction": "Base",
      "Description": "The product does not properly neutralize special elements that are used in XML, allowing attackers to modify the syntax, content, or commands of the XML before it is processed by an end system.",
      "ExtendedDescription": "Within XML, special elements could include reserved words or characters such as \"<\", \">\", \"\"\", and \"&\", which could then be used to add new data or modify XML syntax.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "910",
      "Name": "Use of Expired File Descriptor",
      "Abstraction": "Base",
      "Description": "The product uses or accesses a file descriptor after it has been closed.",
      "ExtendedDescription": "After a file descriptor for a particular file or device has been released, it can be reused. The code might not write to the original file, since the reused file descriptor might reference a different file or device.",
      "AlternateTerms": [
        {
          "Term": "Stale file descriptor"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "911",
      "Name": "Improper Update of Reference Count",
      "Abstraction": "Base",
      "Description": "The product uses a reference count to manage a resource, but it does not update or incorrectly updates the reference count.",
      "ExtendedDescription": "Reference counts can be used when tracking how many objects contain a reference to a particular resource, such as in memory management or garbage collection. When the reference count reaches zero, the resource can be de-allocated or reused because there are no more objects that use it. If the reference count accidentally reaches zero, then the resource might be released too soon, even though it is still in use. If all objects no longer use the resource, but the reference count is not zero, then the resource might not ever be released.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0574",
          "Description": "chain: reference count is not decremented, leading to memory leak in OS by sending ICMP packets.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0574"
        },
        {
          "Reference": "CVE-2004-0114",
          "Description": "Reference count for shared memory not decremented when a function fails, potentially allowing unprivileged users to read kernel memory.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0114"
        },
        {
          "Reference": "CVE-2006-3741",
          "Description": "chain: improper reference count tracking leads to file descriptor consumption",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-3741"
        },
        {
          "Reference": "CVE-2007-1383",
          "Description": "chain: integer overflow in reference counter causes the same variable to be destroyed twice.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1383"
        },
        {
          "Reference": "CVE-2007-1700",
          "Description": "Incorrect reference count calculation leads to improper object destruction and code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1700"
        },
        {
          "Reference": "CVE-2008-2136",
          "Description": "chain: incorrect update of reference count leads to memory leak.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2136"
        },
        {
          "Reference": "CVE-2008-2785",
          "Description": "chain/composite: use of incorrect data type for a reference counter allows an overflow of the counter, leading to a free of memory that is still in use.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2785"
        },
        {
          "Reference": "CVE-2008-5410",
          "Description": "Improper reference counting leads to failure of cryptographic operations.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5410"
        },
        {
          "Reference": "CVE-2009-1709",
          "Description": "chain: improper reference counting in a garbage collection routine leads to use-after-free",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1709"
        },
        {
          "Reference": "CVE-2009-3553",
          "Description": "chain: reference count not correctly maintained when client disconnects during a large operation, leading to a use-after-free.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3553"
        },
        {
          "Reference": "CVE-2009-3624",
          "Description": "Reference count not always incremented, leading to crash or code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3624"
        },
        {
          "Reference": "CVE-2010-0176",
          "Description": "improper reference counting leads to expired pointer dereference.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-0176"
        },
        {
          "Reference": "CVE-2010-0623",
          "Description": "OS kernel increments reference count twice but only decrements once, leading to resource consumption and crash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-0623"
        },
        {
          "Reference": "CVE-2010-2549",
          "Description": "OS kernel driver allows code execution",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2549"
        },
        {
          "Reference": "CVE-2010-4593",
          "Description": "improper reference counting leads to exhaustion of IP addresses",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-4593"
        },
        {
          "Reference": "CVE-2011-0695",
          "Description": "Race condition causes reference counter to be decremented prematurely, leading to the destruction of still-active object and an invalid pointer dereference.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-0695"
        },
        {
          "Reference": "CVE-2012-4787",
          "Description": "improper reference counting leads to use-after-free",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-4787"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "912",
      "Name": "Hidden Functionality",
      "Abstraction": "Class",
      "Description": "The product contains functionality that is not documented, not part of the specification, and not accessible through an interface or command sequence that is obvious to the product's users or administrators.",
      "ExtendedDescription": "Hidden functionality can take many forms, such as intentionally malicious code, \"Easter Eggs\" that contain extraneous functionality such as games, developer-friendly shortcuts that reduce maintenance or support costs such as hard-coded accounts, etc. From a security perspective, even when the functionality is not intentionally malicious or damaging, it can increase the product's attack surface and expose additional weaknesses beyond what is already exposed by the intended functionality. Even if it is not easily accessible, the hidden functionality could be useful for attacks that modify the control flow of the application.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-31260",
          "Description": "Chain: a digital asset management program has an undisclosed backdoor in the legacy version of a PHP script (CWE-912) that could allow an unauthenticated user to export metadata (CWE-306)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-31260"
        },
        {
          "Reference": "CVE-2022-3203",
          "Description": "A wireless access point manual specifies that the only method of configuration is via web interface (CWE-1059), but there is an undisclosed telnet server that was activated by default (CWE-912).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-3203"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "913",
      "Name": "Improper Control of Dynamically-Managed Code Resources",
      "Abstraction": "Class",
      "Description": "The product does not properly restrict reading from or writing to dynamically-managed code resources such as variables, objects, classes, attributes, functions, or executable instructions or statements.",
      "ExtendedDescription": "Many languages offer powerful features that allow the programmer to dynamically create or modify existing code, or resources used by code such as variables and objects. While these features can offer significant flexibility and reduce development time, they can be extremely dangerous if attackers can directly influence these code resources in unexpected ways.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-2054",
          "Description": "Python compiler uses eval() to execute malicious strings as Python code.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-2054"
        },
        {
          "Reference": "CVE-2018-1000613",
          "Description": "Cryptography API uses unsafe reflection when deserializing a private key",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2018-1000613"
        },
        {
          "Reference": "CVE-2015-8103",
          "Description": "Deserialization issue in commonly-used Java library allows remote execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2015-8103"
        },
        {
          "Reference": "CVE-2006-7079",
          "Description": "Chain: extract used for register_globals compatibility layer, enables path traversal (CWE-22)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-7079"
        },
        {
          "Reference": "CVE-2012-2055",
          "Description": "Source version control product allows modification of trusted key using mass assignment.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-2055"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "914",
      "Name": "Improper Control of Dynamically-Identified Variables",
      "Abstraction": "Base",
      "Description": "The product does not properly restrict reading from or writing to dynamically-identified variables.",
      "ExtendedDescription": "Many languages offer powerful features that allow the programmer to access arbitrary variables that are specified by an input string. While these features can offer significant flexibility and reduce development time, they can be extremely dangerous if attackers can modify unintended variables that have security implications.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2006-7135",
          "Description": "extract issue enables file inclusion",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-7135"
        },
        {
          "Reference": "CVE-2006-7079",
          "Description": "Chain: extract used for register_globals compatibility layer, enables path traversal (CWE-22)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-7079"
        },
        {
          "Reference": "CVE-2007-0649",
          "Description": "extract() buried in include files makes post-disclosure analysis confusing; original report had seemed incorrect.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-0649"
        },
        {
          "Reference": "CVE-2006-6661",
          "Description": "extract() enables static code injection",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6661"
        },
        {
          "Reference": "CVE-2006-2828",
          "Description": "import_request_variables() buried in include files makes post-disclosure analysis confusing",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2828"
        },
        {
          "Reference": "CVE-2009-0422",
          "Description": "Chain: Dynamic variable evaluation allows resultant remote file inclusion and path traversal.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0422"
        },
        {
          "Reference": "CVE-2007-2431",
          "Description": "Chain: dynamic variable evaluation in PHP program used to modify critical, unexpected $_SERVER variable for resultant XSS.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-2431"
        },
        {
          "Reference": "CVE-2006-4904",
          "Description": "Chain: dynamic variable evaluation in PHP program used to conduct remote file inclusion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4904"
        },
        {
          "Reference": "CVE-2006-4019",
          "Description": "Dynamic variable evaluation in mail program allows reading and modifying attachments and preferences of other users.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4019"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "915",
      "Name": "Improperly Controlled Modification of Dynamically-Determined Object Attributes",
      "Abstraction": "Base",
      "Description": "The product receives input from an upstream component that specifies multiple attributes, properties, or fields that are to be initialized or updated in an object, but it does not properly control which attributes can be modified.",
      "ExtendedDescription": "\n\nIf the object contains attributes that were only intended for internal use, then their unexpected modification could lead to a vulnerability.\n\n\nThis weakness is sometimes known by the language-specific mechanisms that make it possible, such as mass assignment, autobinding, or object injection.\n",
      "AlternateTerms": [
        {
          "Term": "Mass Assignment",
          "Description": "\"Mass assignment\" is the name of a feature in Ruby on Rails that allows simultaneous modification of multiple object attributes."
        },
        {
          "Term": "AutoBinding",
          "Description": "The \"Autobinding\" term is used in frameworks such as Spring MVC and ASP.NET MVC."
        },
        {
          "Term": "PHP Object Injection",
          "Description": "Some PHP application researchers use this term for attacking unsafe use of the unserialize() function, but it is also used for CWE-502."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2024-3283",
          "Description": "Application for using LLMs allows modification of a sensitive variable using mass assignment.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2024-3283"
        },
        {
          "Reference": "CVE-2012-2054",
          "Description": "Mass assignment allows modification of arbitrary attributes using modified URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-2054"
        },
        {
          "Reference": "CVE-2012-2055",
          "Description": "Source version control product allows modification of trusted key using mass assignment.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-2055"
        },
        {
          "Reference": "CVE-2008-7310",
          "Description": "Attackers can bypass payment step in e-commerce product.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-7310"
        },
        {
          "Reference": "CVE-2013-1465",
          "Description": "Use of PHP unserialize function on untrusted input allows attacker to modify application configuration.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2013-1465"
        },
        {
          "Reference": "CVE-2012-3527",
          "Description": "Use of PHP unserialize function on untrusted input in content management system might allow code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-3527"
        },
        {
          "Reference": "CVE-2012-0911",
          "Description": "Use of PHP unserialize function on untrusted input in content management system allows code execution using a crafted cookie value.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-0911"
        },
        {
          "Reference": "CVE-2012-0911",
          "Description": "Content management system written in PHP allows unserialize of arbitrary objects, possibly allowing code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-0911"
        },
        {
          "Reference": "CVE-2011-4962",
          "Description": "Content management system written in PHP allows code execution through page comments.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-4962"
        },
        {
          "Reference": "CVE-2009-4137",
          "Description": "Use of PHP unserialize function on cookie value allows remote code execution or upload of arbitrary files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-4137"
        },
        {
          "Reference": "CVE-2007-5741",
          "Description": "Content management system written in Python interprets untrusted data as pickles, allowing code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5741"
        },
        {
          "Reference": "CVE-2011-2520",
          "Description": "Python script allows local users to execute code via pickled data.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-2520"
        },
        {
          "Reference": "CVE-2005-2875",
          "Description": "Python script allows remote attackers to execute arbitrary code using pickled objects.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2875"
        },
        {
          "Reference": "CVE-2013-0277",
          "Description": "Ruby on Rails allows deserialization of untrusted YAML to execute arbitrary code.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2013-0277"
        },
        {
          "Reference": "CVE-2011-2894",
          "Description": "Spring framework allows deserialization of objects from untrusted sources to execute arbitrary code.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2011-2894"
        },
        {
          "Reference": "CVE-2012-1833",
          "Description": "Grails allows binding of arbitrary parameters to modify arbitrary object properties.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-1833"
        },
        {
          "Reference": "CVE-2010-3258",
          "Description": "Incorrect deserialization in web browser allows escaping the sandbox.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-3258"
        },
        {
          "Reference": "CVE-2008-1013",
          "Description": "Media library allows deserialization of objects by untrusted Java applets, leading to arbitrary code execution.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1013"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "916",
      "Name": "Use of Password Hash With Insufficient Computational Effort",
      "Abstraction": "Base",
      "Description": "The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.",
      "ExtendedDescription": "\n\nMany password storage mechanisms compute a hash and store the hash, instead of storing the original password in plaintext. In this design, authentication involves accepting an incoming password, computing its hash, and comparing it to the stored hash.\n\n\nMany hash algorithms are designed to execute quickly with minimal overhead, even cryptographic hashes. However, this efficiency is a problem for password storage, because it can reduce an attacker's workload for brute-force password cracking. If an attacker can obtain the hashes through some other method (such as SQL injection on a database that stores hashes), then the attacker can store the hashes offline and use various techniques to crack the passwords by computing hashes efficiently. Without a built-in workload, modern attacks can compute large numbers of hashes, or even exhaust the entire space of all possible passwords, within a very short amount of time, using massively-parallel computing (such as cloud computing) and GPU, ASIC, or FPGA hardware. In such a scenario, an efficient hash algorithm helps the attacker.\n\n\nThere are several properties of a hash scheme that are relevant to its strength against an offline, massively-parallel attack:\n\n\n  - The amount of CPU time required to compute the hash (\"stretching\")\n\n  - The amount of memory required to compute the hash (\"memory-hard\" operations)\n\n  - Including a random value, along with the password, as input to the hash computation (\"salting\")\n\n  - Given a hash, there is no known way of determining an input (e.g., a password) that produces this hash value, other than by guessing possible inputs (\"one-way\" hashing)\n\n  - Relative to the number of all possible hashes that can be generated by the scheme, there is a low likelihood of producing the same hash for multiple different inputs (\"collision resistance\")\n\nNote that the security requirements for the product may vary depending on the environment and the value of the passwords. Different schemes might not provide all of these properties, yet may still provide sufficient security for the environment. Conversely, a solution might be very strong in preserving one property, which still being very weak for an attack against another property, or it might not be able to significantly reduce the efficiency of a massively-parallel attack.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2008-1526",
          "Description": "Router does not use a salt with a hash, making it easier to crack passwords.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1526"
        },
        {
          "Reference": "CVE-2006-1058",
          "Description": "Router does not use a salt with a hash, making it easier to crack passwords.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-1058"
        },
        {
          "Reference": "CVE-2008-4905",
          "Description": "Blogging software uses a hard-coded salt when calculating a password hash.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4905"
        },
        {
          "Reference": "CVE-2002-1657",
          "Description": "Database server uses the username for a salt when encrypting passwords, simplifying brute force attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1657"
        },
        {
          "Reference": "CVE-2001-0967",
          "Description": "Server uses a constant salt when encrypting passwords, simplifying brute force attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0967"
        },
        {
          "Reference": "CVE-2005-0408",
          "Description": "chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0408"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "917",
      "Name": "Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')",
      "Abstraction": "Base",
      "Description": "The product constructs all or part of an expression language (EL) statement in a framework such as a Java Server Page (JSP) using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended EL statement before it is executed.",
      "ExtendedDescription": "Frameworks such as Java Server Page (JSP) allow a developer to insert executable expressions within otherwise-static content. When the developer is not aware of the executable nature of these expressions and/or does not disable them, then if an attacker can inject expressions, this could lead to code execution or other unexpected behaviors.",
      "AlternateTerms": [
        {
          "Term": "EL Injection"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-44228",
          "Description": "Product does not neutralize ${xyz} style expressions, allowing remote code execution. (log4shell vulnerability in log4j)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-44228"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "918",
      "Name": "Server-Side Request Forgery (SSRF)",
      "Abstraction": "Base",
      "Description": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
      "ExtendedDescription": "By providing URLs to unexpected hosts or ports, attackers can make it appear that the server is sending the request, possibly bypassing access controls such as firewalls that prevent the attackers from accessing the URLs directly. The server can be used as a proxy to conduct port scanning of hosts in internal networks, use other URLs such as that can access documents on the system (using file://), or use other protocols such as gopher:// or tftp://, which may provide greater control over the contents of requests.",
      "AlternateTerms": [
        {
          "Term": "XSPA",
          "Description": "Cross Site Port Attack"
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2021-26855",
          "Description": "Server Side Request Forgery (SSRF) in mail server, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-26855"
        },
        {
          "Reference": "CVE-2021-21973",
          "Description": "Server Side Request Forgery in cloud platform, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-21973"
        },
        {
          "Reference": "CVE-2016-4029",
          "Description": "Chain: incorrect validation of intended decimal-based IP address format (CWE-1286) enables parsing of octal or hexadecimal formats (CWE-1389), allowing bypass of an SSRF protection mechanism (CWE-918).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2016-4029"
        },
        {
          "Reference": "CVE-2002-1484",
          "Description": "Web server allows attackers to request a URL from another server, including other ports, which allows proxied scanning.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1484"
        },
        {
          "Reference": "CVE-2004-2061",
          "Description": "CGI script accepts and retrieves incoming URLs.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2061"
        },
        {
          "Reference": "CVE-2010-1637",
          "Description": "Web-based mail program allows internal network scanning using a modified POP3 port number.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-1637"
        },
        {
          "Reference": "CVE-2009-0037",
          "Description": "URL-downloading library automatically follows redirects to file:// and scp:// URLs",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0037"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "920",
      "Name": "Improper Restriction of Power Consumption",
      "Abstraction": "Base",
      "Description": "The product operates in an environment in which power is a limited resource that cannot be automatically replenished, but the product does not properly restrict the amount of power that its operation consumes.",
      "ExtendedDescription": "\n\nIn environments such as embedded or mobile devices, power can be a limited resource such as a battery, which cannot be automatically replenished by the product itself, and the device might not always be directly attached to a reliable power source. If the product uses too much power too quickly, then this could cause the device (and subsequently, the product) to stop functioning until power is restored, or increase the financial burden on the device owner because of increased power costs.\n\n\nNormal operation of an application will consume power. However, in some cases, an attacker could cause the application to consume more power than intended, using components such as:\n\n\n  - Display\n\n  - CPU\n\n  - Disk I/O\n\n  - GPS\n\n  - Sound\n\n  - Microphone\n\n  - USB interface\n\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "921",
      "Name": "Storage of Sensitive Data in a Mechanism without Access Control",
      "Abstraction": "Base",
      "Description": "The product stores sensitive information in a file system or device that does not have built-in access control.",
      "ExtendedDescription": "\n\nWhile many modern file systems or devices utilize some form of access control in order to restrict access to data, not all storage mechanisms have this capability. For example, memory cards, floppy disks, CDs, and USB devices are typically made accessible to any user within the system. This can become a problem when sensitive data is stored in these mechanisms in a multi-user environment, because anybody on the system can read or write this data.\n\n\nOn Android devices, external storage is typically globally readable and writable by other applications on the device. External storage may also be easily accessible through the mobile device's USB connection or physically accessible through the device's memory card port.\n",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "922",
      "Name": "Insecure Storage of Sensitive Information",
      "Abstraction": "Class",
      "Description": "The product stores sensitive information without properly limiting read or write access by unauthorized actors.",
      "ExtendedDescription": "If read access is not properly restricted, then attackers can steal the sensitive information. If write access is not properly restricted, then attackers can modify and possibly delete the data, causing incorrect results and possibly a denial of service.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2009-2272",
          "Description": "password and username stored in cleartext in a cookie",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2272"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "923",
      "Name": "Improper Restriction of Communication Channel to Intended Endpoints",
      "Abstraction": "Class",
      "Description": "The product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.",
      "ExtendedDescription": "\n\nAttackers might be able to spoof the intended endpoint from a different system or process, thus gaining the same level of access as the intended endpoint.\n\n\nWhile this issue frequently involves authentication between network-based clients and servers, other types of communication channels and endpoints can have this weakness.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-30319",
          "Description": "S-bus functionality in a home automation product performs access control using an IP allowlist, which can be bypassed by a forged IP address.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30319"
        },
        {
          "Reference": "CVE-2022-22547",
          "Description": "A troubleshooting tool exposes a web server on a random port between 9000-65535 that could be used for information gathering",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-22547"
        },
        {
          "Reference": "CVE-2022-4390",
          "Description": "A WAN interface on a router has firewall restrictions enabled for IPv4, but it does not for IPv6, which is enabled by default",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-4390"
        },
        {
          "Reference": "CVE-2012-2292",
          "Description": "Product has a Silverlight cross-domain policy that does not restrict access to another application, which allows remote attackers to bypass the Same Origin Policy.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-2292"
        },
        {
          "Reference": "CVE-2012-5810",
          "Description": "Mobile banking application does not verify hostname, leading to financial loss.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5810"
        },
        {
          "Reference": "CVE-2014-1266",
          "Description": "chain: incorrect \"goto\" in Apple SSL product bypasses certificate validation, allowing Adversry-in-the-Middle (AITM) attack (Apple \"goto fail\" bug). CWE-705 (Incorrect Control Flow Scoping) -> CWE-561 (Dead Code) -> CWE-295 (Improper Certificate Validation) -> CWE-393 (Return of Wrong Status Code) -> CWE-300 (Channel Accessible by Non-Endpoint).",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-1266"
        },
        {
          "Reference": "CVE-2000-1218",
          "Description": "DNS server can accept DNS updates from hosts that it did not query, leading to cache poisoning",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1218"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "924",
      "Name": "Improper Enforcement of Message Integrity During Transmission in a Communication Channel",
      "Abstraction": "Base",
      "Description": "The product establishes a communication channel with an endpoint and receives a message from that endpoint, but it does not sufficiently ensure that the message was not modified during transmission.",
      "ExtendedDescription": "Attackers might be able to modify the message and spoof the endpoint by interfering with the data as it crosses the network or by redirecting the connection to a system under their control.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "925",
      "Name": "Improper Verification of Intent by Broadcast Receiver",
      "Abstraction": "Variant",
      "Description": "The Android application uses a Broadcast Receiver that receives an Intent but does not properly verify that the Intent came from an authorized source.",
      "ExtendedDescription": "Certain types of Intents, identified by action string, can only be broadcast by the operating system itself, not by third-party applications. However, when an application registers to receive these implicit system intents, it is also registered to receive any explicit intents. While a malicious application cannot send an implicit system intent, it can send an explicit intent to the target application, which may assume that any received intent is a valid implicit system intent and not an explicit intent from another application. This may lead to unintended behavior.",
      "AlternateTerms": [
        {
          "Term": "Intent Spoofing"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "926",
      "Name": "Improper Export of Android Application Components",
      "Abstraction": "Variant",
      "Description": "The Android application exports a component for use by other applications, but does not properly restrict which applications can launch the component or access the data it contains.",
      "ExtendedDescription": "\n\nThe attacks and consequences of improperly exporting a component may depend on the exported component:\n\n\n  - If access to an exported Activity is not restricted, any application will be able to launch the activity. This may allow a malicious application to gain access to sensitive information, modify the internal state of the application, or trick a user into interacting with the victim application while believing they are still interacting with the malicious application.\n\n  - If access to an exported Service is not restricted, any application may start and bind to the Service. Depending on the exposed functionality, this may allow a malicious application to perform unauthorized actions, gain access to sensitive information, or corrupt the internal state of the application.\n\n  - If access to a Content Provider is not restricted to only the expected applications, then malicious applications might be able to access the sensitive data. Note that in Android before 4.2, the Content Provider is automatically exported unless it has been explicitly declared as NOT exported.\n\n",
      "BackgroundDetails": [
        "\n\nThere are three types of components that can be exported in an Android application.\n\n\n  - An Activity is an application component that provides a UI for users to interact with. A typical application will have multiple Activity screens that perform different functions, such as a main Activity screen and a separate settings Activity screen.\n\n  - A Service is an application component that is started by another component to execute an operation in the background, even after the invoking component is terminated. Services do not have a UI component visible to the user.\n\n  - The Content Provider mechanism can be used to share data with other applications or internally within the same application.\n\n"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "927",
      "Name": "Use of Implicit Intent for Sensitive Communication",
      "Abstraction": "Variant",
      "Description": "The Android application uses an implicit intent for transmitting sensitive data to other applications.",
      "ExtendedDescription": "\n\nSince an implicit intent does not specify a particular application to receive the data, any application can process the intent by using an Intent Filter for that intent. This can allow untrusted applications to obtain sensitive data. There are two variations on the standard broadcast intent, ordered and sticky.\n\n\nOrdered broadcast intents are delivered to a series of registered receivers in order of priority as declared by the Receivers. A malicious receiver can give itself a high priority and cause a denial of service by stopping the broadcast from propagating further down the chain. There is also the possibility of malicious data modification, as a receiver may also alter the data within the Intent before passing it on to the next receiver. The downstream components have no way of asserting that the data has not been altered earlier in the chain.\n\n\nSticky broadcast intents remain accessible after the initial broadcast. An old sticky intent will be broadcast again to any new receivers that register for it in the future, greatly increasing the chances of information exposure over time. Also, sticky broadcasts cannot be protected by permissions that may apply to other kinds of intents.\n\n\nIn addition, any broadcast intent may include a URI that references data that the receiving component does not normally have the privileges to access. The sender of the intent can include special privileges that grant the receiver read or write access to the specific URI included in the intent. A malicious receiver that intercepts this intent will also gain those privileges and be able to read or write the resource at the specified URI.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2022-4903",
          "Description": "An Android application does not use FLAG_IMMUTABLE when creating a PendingIntent.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-4903"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "93",
      "Name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
      "Abstraction": "Base",
      "Description": "The product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-1771",
          "Description": "CRLF injection enables spam proxy (add mail headers) using email address or name.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1771"
        },
        {
          "Reference": "CVE-2002-1783",
          "Description": "CRLF injection in API function arguments modify headers for outgoing requests.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1783"
        },
        {
          "Reference": "CVE-2004-1513",
          "Description": "Spoofed entries in web server log file via carriage returns",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1513"
        },
        {
          "Reference": "CVE-2006-4624",
          "Description": "Chain: inject fake log entries with fake timestamps using CRLF injection",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4624"
        },
        {
          "Reference": "CVE-2005-1951",
          "Description": "Chain: Application accepts CRLF in an object ID, allowing HTTP response splitting.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1951"
        },
        {
          "Reference": "CVE-2004-1687",
          "Description": "Chain: HTTP response splitting via CRLF in parameter related to URL.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1687"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "939",
      "Name": "Improper Authorization in Handler for Custom URL Scheme",
      "Abstraction": "Base",
      "Description": "The product uses a handler for a custom URL scheme, but it does not properly restrict which actors can invoke the handler using the scheme.",
      "ExtendedDescription": "Mobile platforms and other architectures allow the use of custom URL schemes to facilitate communication between applications. In the case of iOS, this is the only method to do inter-application communication. The implementation is at the developer's discretion which may open security flaws in the application. An example could be potentially dangerous functionality such as modifying files through a custom URL scheme.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2013-5725",
          "Description": "URL scheme has action replace which requires no user prompt and allows remote attackers to perform undesired actions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2013-5725"
        },
        {
          "Reference": "CVE-2013-5726",
          "Description": "URL scheme has action follow and favorite which allows remote attackers to force user to perform undesired actions.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2013-5726"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "94",
      "Name": "Improper Control of Generation of Code ('Code Injection')",
      "Abstraction": "Base",
      "Description": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
      "ExtendedDescription": "\n\nWhen a product allows a user's input to contain code syntax, it might be possible for an attacker to craft the code in such a way that it will alter the intended control flow of the product. Such an alteration could lead to arbitrary code execution.\n\n\nInjection problems encompass a wide variety of issues -- all mitigated in very different ways. For this reason, the most effective way to discuss these weaknesses is to note the distinct features which classify them as injection weaknesses. The most important issue to note is that all injection problems share one thing in common -- i.e., they allow for the injection of control plane data into the user-controlled data plane. This means that the execution of the process may be altered by sending code in through legitimate data channels, using no other mechanism. While buffer overflows, and many other flaws, involve the use of some further issue to gain execution, injection problems need only for the data to be parsed. The most classic instantiations of this category of weakness are SQL injection and format string vulnerabilities.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2023-29374",
          "Description": "Math component in an LLM framework translates user input into a Python expression that is input into the Python exec() method, allowing code execution - one variant of a \"prompt injection\" attack.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2023-29374"
        },
        {
          "Reference": "CVE-2024-5565",
          "Description": "Python-based library uses an LLM prompt containing user input to dynamically generate code that is then fed as input into the Python exec() method, allowing code execution - one variant of a \"prompt injection\" attack.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2024-5565"
        },
        {
          "Reference": "CVE-2024-4181",
          "Description": "Framework for LLM applications allows eval injection via a crafted response from a hosting provider.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2024-4181"
        },
        {
          "Reference": "CVE-2022-2054",
          "Description": "Python compiler uses eval() to execute malicious strings as Python code.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-2054"
        },
        {
          "Reference": "CVE-2021-22204",
          "Description": "Chain: regex in EXIF processor code does not correctly determine where a string ends (CWE-625), enabling eval injection (CWE-95), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-22204"
        },
        {
          "Reference": "CVE-2020-8218",
          "Description": "\"Code injection\" in VPN product, as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8218"
        },
        {
          "Reference": "CVE-2008-5071",
          "Description": "Eval injection in PHP program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5071"
        },
        {
          "Reference": "CVE-2002-1750",
          "Description": "Eval injection in Perl program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1750"
        },
        {
          "Reference": "CVE-2008-5305",
          "Description": "Eval injection in Perl program using an ID that should only contain hyphens and numbers.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5305"
        },
        {
          "Reference": "CVE-2002-1752",
          "Description": "Direct code injection into Perl eval function.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1752"
        },
        {
          "Reference": "CVE-2002-1753",
          "Description": "Eval injection in Perl program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1753"
        },
        {
          "Reference": "CVE-2005-1527",
          "Description": "Direct code injection into Perl eval function.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1527"
        },
        {
          "Reference": "CVE-2005-2837",
          "Description": "Direct code injection into Perl eval function.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2837"
        },
        {
          "Reference": "CVE-2005-1921",
          "Description": "MFV. code injection into PHP eval statement using nested constructs that should not be nested.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1921"
        },
        {
          "Reference": "CVE-2005-2498",
          "Description": "MFV. code injection into PHP eval statement using nested constructs that should not be nested.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2498"
        },
        {
          "Reference": "CVE-2005-3302",
          "Description": "Code injection into Python eval statement from a field in a formatted file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3302"
        },
        {
          "Reference": "CVE-2007-1253",
          "Description": "Eval injection in Python program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1253"
        },
        {
          "Reference": "CVE-2001-1471",
          "Description": "chain: Resultant eval injection. An invalid value prevents initialization of variables, which can be modified by attacker and later injected into PHP eval statement.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1471"
        },
        {
          "Reference": "CVE-2002-0495",
          "Description": "Perl code directly injected into CGI library file from parameters to another CGI program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0495"
        },
        {
          "Reference": "CVE-2005-1876",
          "Description": "Direct PHP code injection into supporting template file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1876"
        },
        {
          "Reference": "CVE-2005-1894",
          "Description": "Direct code injection into PHP script that can be accessed by attacker.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1894"
        },
        {
          "Reference": "CVE-2003-0395",
          "Description": "PHP code from User-Agent HTTP header directly inserted into log file implemented as PHP script.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0395"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "Yes"
    },
    {
      "ID": "940",
      "Name": "Improper Verification of Source of a Communication Channel",
      "Abstraction": "Base",
      "Description": "The product establishes a communication channel to handle an incoming request that has been initiated by an actor, but it does not properly verify that the request is coming from the expected origin.",
      "ExtendedDescription": "When an attacker can successfully establish a communication channel from an untrusted origin, the attacker may be able to gain privileges and access unexpected functionality.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2000-1218",
          "Description": "DNS server can accept DNS updates from hosts that it did not query, leading to cache poisoning",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1218"
        },
        {
          "Reference": "CVE-2005-0877",
          "Description": "DNS server can accept DNS updates from hosts that it did not query, leading to cache poisoning",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0877"
        },
        {
          "Reference": "CVE-2001-1452",
          "Description": "DNS server caches glue records received from non-delegated name servers",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1452"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "941",
      "Name": "Incorrectly Specified Destination in a Communication Channel",
      "Abstraction": "Base",
      "Description": "The product creates a communication channel to initiate an outgoing request to an actor, but it does not correctly specify the intended destination for that actor.",
      "ExtendedDescription": "\n\nAttackers at the destination may be able to spoof trusted servers to steal data or cause a denial of service.\n\n\nThere are at least two distinct weaknesses that can cause the product to communicate with an unintended destination:\n\n\n  - If the product allows an attacker to control which destination is specified, then the attacker can cause it to connect to an untrusted or malicious destination. For example, because UDP is a connectionless protocol, UDP packets can be spoofed by specifying a false source address in the packet; when the server receives the packet and sends a reply, it will specify a destination by using the source of the incoming packet - i.e., the false source. The server can then be tricked into sending traffic to the wrong host, which is effective for hiding the real source of an attack and for conducting a distributed denial of service (DDoS). As another example, server-side request forgery (SSRF) and XML External Entity (XXE) can be used to trick a server into making outgoing requests to hosts that cannot be directly accessed by the attacker due to firewall restrictions.\n\n  - If the product incorrectly specifies the destination, then an attacker who can control this destination might be able to spoof trusted servers. While the most common occurrence is likely due to misconfiguration by an administrator, this can be resultant from other weaknesses. For example, the product might incorrectly parse an e-mail or IP address and send sensitive data to an unintended destination. As another example, an Android application may use a \"sticky broadcast\" to communicate with a receiver for a particular application, but since sticky broadcasts can be processed by *any* receiver, this can allow a malicious application to access restricted data that was only intended for a different application.\n\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2013-5211",
          "Description": "composite: NTP feature generates large responses (high amplification factor) with spoofed UDP source addresses.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2013-5211"
        },
        {
          "Reference": "CVE-1999-0513",
          "Description": "Classic \"Smurf\" attack, using spoofed ICMP packets to broadcast addresses.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0513"
        },
        {
          "Reference": "CVE-1999-1379",
          "Description": "DNS query with spoofed source address causes more traffic to be returned to spoofed address than was sent by the attacker.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1379"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "942",
      "Name": "Permissive Cross-domain Policy with Untrusted Domains",
      "Abstraction": "Variant",
      "Description": "The product uses a cross-domain policy file that includes domains that should not be trusted.",
      "ExtendedDescription": "\n\nA cross-domain policy file (\"crossdomain.xml\" in Flash and \"clientaccesspolicy.xml\" in Silverlight) defines a list of domains from which a server is allowed to make cross-domain requests. When making a cross-domain request, the Flash or Silverlight client will first look for the policy file on the target server. If it is found, and the domain hosting the application is explicitly allowed to make requests, the request is made.\n\n\nTherefore, if a cross-domain policy file includes domains that should not be trusted, such as when using wildcards, then the application could be attacked by these untrusted domains.\n\n\nAn overly permissive policy file allows many of the same attacks seen in Cross-Site Scripting (CWE-79). Once the user has executed a malicious Flash or Silverlight application, they are vulnerable to a variety of attacks. The attacker could transfer private information, such as cookies that may include session information, from the victim's machine to the attacker. The attacker could send malicious requests to a web site on behalf of the victim, which could be especially dangerous to the site if the victim has administrator privileges to manage that site.\n\n\nIn many cases, the attack can be launched without the victim even being aware of it.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2012-2292",
          "Description": "Product has a Silverlight cross-domain policy that does not restrict access to another application, which allows remote attackers to bypass the Same Origin Policy.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2012-2292"
        },
        {
          "Reference": "CVE-2014-2049",
          "Description": "The default Flash Cross Domain policies in a product allows remote attackers to access user files.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-2049"
        },
        {
          "Reference": "CVE-2007-6243",
          "Description": "Chain: Adobe Flash Player does not sufficiently restrict the interpretation and usage of cross-domain policy files, which makes it easier for remote attackers to conduct cross-domain and cross-site scripting (XSS) attacks.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-6243"
        },
        {
          "Reference": "CVE-2008-4822",
          "Description": "Chain: Adobe Flash Player and earlier does not properly interpret policy files, which allows remote attackers to bypass a non-root domain policy.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4822"
        },
        {
          "Reference": "CVE-2010-3636",
          "Description": "Chain: Adobe Flash Player does not properly handle unspecified encodings during the parsing of a cross-domain policy file, which allows remote web servers to bypass intended access restrictions via unknown vectors.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2010-3636"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "943",
      "Name": "Improper Neutralization of Special Elements in Data Query Logic",
      "Abstraction": "Class",
      "Description": "The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.",
      "ExtendedDescription": "\n\nDepending on the capabilities of the query language, an attacker could inject additional logic into the query to:\n\n\n  - Modify the intended selection criteria, thus changing which data entities (e.g., records) are returned, modified, or otherwise manipulated\n\n  - Append additional commands to the query\n\n  - Return more entities than intended\n\n  - Return fewer entities than intended\n\n  - Cause entities to be sorted in an unexpected way\n\nThe ability to execute additional commands or change which entities are returned has obvious risks. But when the product logic depends on the order or number of entities, this can also lead to vulnerabilities. For example, if the query expects to return only one entity that specifies an administrative user, but an attacker can change which entities are returned, this could cause the logic to return information for a regular user and incorrectly assume that the user has administrative privileges.\n\nWhile this weakness is most commonly associated with SQL injection, there are many other query languages that are also subject to injection attacks, including HTSQL, LDAP, DQL, XQuery, Xpath, and \"NoSQL\" languages.\n",
      "ObservedExamples": [
        {
          "Reference": "CVE-2014-2503",
          "Description": "Injection using Documentum Query Language (DQL)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-2503"
        },
        {
          "Reference": "CVE-2014-2508",
          "Description": "Injection using Documentum Query Language (DQL)",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2014-2508"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    },
    {
      "ID": "95",
      "Name": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
      "Abstraction": "Variant",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. \"eval\").",
      "ExtendedDescription": "This may allow an attacker to execute arbitrary code, or at least modify what code can be executed.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2024-4181",
          "Description": "Framework for LLM applications allows eval injection via a crafted response from a hosting provider.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2024-4181"
        },
        {
          "Reference": "CVE-2022-2054",
          "Description": "Python compiler uses eval() to execute malicious strings as Python code.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2022-2054"
        },
        {
          "Reference": "CVE-2021-22204",
          "Description": "Chain: regex in EXIF processor code does not correctly determine where a string ends (CWE-625), enabling eval injection (CWE-95), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-22204"
        },
        {
          "Reference": "CVE-2021-22205",
          "Description": "Chain: backslash followed by a newline can bypass a validation step (CWE-20), leading to eval injection (CWE-95), as exploited in the wild per CISA KEV.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2021-22205"
        },
        {
          "Reference": "CVE-2008-5071",
          "Description": "Eval injection in PHP program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5071"
        },
        {
          "Reference": "CVE-2002-1750",
          "Description": "Eval injection in Perl program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1750"
        },
        {
          "Reference": "CVE-2008-5305",
          "Description": "Eval injection in Perl program using an ID that should only contain hyphens and numbers.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5305"
        },
        {
          "Reference": "CVE-2002-1752",
          "Description": "Direct code injection into Perl eval function.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1752"
        },
        {
          "Reference": "CVE-2002-1753",
          "Description": "Eval injection in Perl program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1753"
        },
        {
          "Reference": "CVE-2005-1527",
          "Description": "Direct code injection into Perl eval function.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1527"
        },
        {
          "Reference": "CVE-2005-2837",
          "Description": "Direct code injection into Perl eval function.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2837"
        },
        {
          "Reference": "CVE-2005-1921",
          "Description": "MFV. code injection into PHP eval statement using nested constructs that should not be nested.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1921"
        },
        {
          "Reference": "CVE-2005-2498",
          "Description": "MFV. code injection into PHP eval statement using nested constructs that should not be nested.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2498"
        },
        {
          "Reference": "CVE-2005-3302",
          "Description": "Code injection into Python eval statement from a field in a formatted file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3302"
        },
        {
          "Reference": "CVE-2007-1253",
          "Description": "Eval injection in Python program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1253"
        },
        {
          "Reference": "CVE-2001-1471",
          "Description": "chain: Resultant eval injection. An invalid value prevents initialization of variables, which can be modified by attacker and later injected into PHP eval statement.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1471"
        },
        {
          "Reference": "CVE-2007-2713",
          "Description": "Chain: Execution after redirect triggers eval injection.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-2713"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "96",
      "Name": "Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')",
      "Abstraction": "Base",
      "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.",
      "ObservedExamples": [
        {
          "Reference": "CVE-2002-0495",
          "Description": "Perl code directly injected into CGI library file from parameters to another CGI program.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0495"
        },
        {
          "Reference": "CVE-2005-1876",
          "Description": "Direct PHP code injection into supporting template file.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1876"
        },
        {
          "Reference": "CVE-2005-1894",
          "Description": "Direct code injection into PHP script that can be accessed by attacker.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1894"
        },
        {
          "Reference": "CVE-2003-0395",
          "Description": "PHP code from User-Agent HTTP header directly inserted into log file implemented as PHP script.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0395"
        },
        {
          "Reference": "CVE-2007-6652",
          "Description": "chain: execution after redirect allows non-administrator to perform static code injection.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2007-6652"
        }
      ],
      "AffectedResources": [
        "File or Directory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "97",
      "Name": "Improper Neutralization of Server-Side Includes (SSI) Within a Web Page",
      "Abstraction": "Variant",
      "Description": "The product generates a web page, but does not neutralize or incorrectly neutralizes user-controllable input that could be interpreted as a server-side include (SSI) directive.",
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "98",
      "Name": "Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
      "Abstraction": "Variant",
      "Description": "The PHP application receives input from an upstream component, but it does not restrict or incorrectly restricts the input before its usage in \"require,\" \"include,\" or similar functions.",
      "ExtendedDescription": "In certain versions and configurations of PHP, this can allow an attacker to specify a URL to a remote location from which the product will obtain the code to execute. In other cases in association with path traversal, the attacker can specify a local file that may contain executable statements that can be parsed by PHP.",
      "AlternateTerms": [
        {
          "Term": "Remote file include"
        },
        {
          "Term": "RFI",
          "Description": "The Remote File Inclusion (RFI) acronym is often used by vulnerability researchers."
        },
        {
          "Term": "Local file inclusion",
          "Description": "This term is frequently used in cases in which remote download is disabled, or when the first part of the filename is not under the attacker's control, which forces use of relative path traversal (CWE-23) attack techniques to access files that may contain previously-injected PHP code, such as web access logs."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2004-0285",
          "Description": "Modification of assumed-immutable configuration variable in include file allows file inclusion via direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0285"
        },
        {
          "Reference": "CVE-2004-0030",
          "Description": "Modification of assumed-immutable configuration variable in include file allows file inclusion via direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0030"
        },
        {
          "Reference": "CVE-2004-0068",
          "Description": "Modification of assumed-immutable configuration variable in include file allows file inclusion via direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0068"
        },
        {
          "Reference": "CVE-2005-2157",
          "Description": "Modification of assumed-immutable configuration variable in include file allows file inclusion via direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2157"
        },
        {
          "Reference": "CVE-2005-2162",
          "Description": "Modification of assumed-immutable configuration variable in include file allows file inclusion via direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2162"
        },
        {
          "Reference": "CVE-2005-2198",
          "Description": "Modification of assumed-immutable configuration variable in include file allows file inclusion via direct request.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2198"
        },
        {
          "Reference": "CVE-2004-0128",
          "Description": "Modification of assumed-immutable variable in configuration script leads to file inclusion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0128"
        },
        {
          "Reference": "CVE-2005-1864",
          "Description": "PHP file inclusion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1864"
        },
        {
          "Reference": "CVE-2005-1869",
          "Description": "PHP file inclusion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1869"
        },
        {
          "Reference": "CVE-2005-1870",
          "Description": "PHP file inclusion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1870"
        },
        {
          "Reference": "CVE-2005-2154",
          "Description": "PHP local file inclusion.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2154"
        },
        {
          "Reference": "CVE-2002-1704",
          "Description": "PHP remote file include.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1704"
        },
        {
          "Reference": "CVE-2002-1707",
          "Description": "PHP remote file include.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1707"
        },
        {
          "Reference": "CVE-2005-1964",
          "Description": "PHP remote file include.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1964"
        },
        {
          "Reference": "CVE-2005-1681",
          "Description": "PHP remote file include.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1681"
        },
        {
          "Reference": "CVE-2005-2086",
          "Description": "PHP remote file include.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2086"
        },
        {
          "Reference": "CVE-2004-0127",
          "Description": "Directory traversal vulnerability in PHP include statement.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0127"
        },
        {
          "Reference": "CVE-2005-1971",
          "Description": "Directory traversal vulnerability in PHP include statement.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1971"
        },
        {
          "Reference": "CVE-2005-3335",
          "Description": "PHP file inclusion issue, both remote and local; local include uses \"..\" and \"%00\" characters as a manipulation, but many remote file inclusion issues probably have this vector.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3335"
        },
        {
          "Reference": "CVE-2009-1936",
          "Description": "chain: library file sends a redirect if it is directly requested but continues to execute, allowing remote file inclusion and path traversal.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1936"
        }
      ],
      "AffectedResources": [
        "File or Directory"
      ],
      "MappingNotes": {
        "Usage": "Allowed"
      },
      "1003_view": "No"
    },
    {
      "ID": "99",
      "Name": "Improper Control of Resource Identifiers ('Resource Injection')",
      "Abstraction": "Class",
      "Description": "The product receives input from an upstream component, but it does not restrict or incorrectly restricts the input before it is used as an identifier for a resource that may be outside the intended sphere of control.",
      "ExtendedDescription": "\n\nA resource injection issue occurs when the following two conditions are met:\n\n\n  1. An attacker can specify the identifier used to access a system resource. For example, an attacker might be able to specify part of the name of a file to be opened or a port number to be used.\n\n  1. By specifying the resource, the attacker gains a capability that would not otherwise be permitted. For example, the program may give the attacker the ability to overwrite the specified file, run with a configuration controlled by the attacker, or transmit sensitive information to a third-party server.\n\nThis may enable an attacker to access or modify otherwise protected system resources.",
      "AlternateTerms": [
        {
          "Term": "Insecure Direct Object Reference",
          "Description": "OWASP uses this term, although it is effectively the same as resource injection."
        }
      ],
      "ObservedExamples": [
        {
          "Reference": "CVE-2013-4787",
          "Description": "chain: mobile OS verifies cryptographic signature of file in an archive, but then installs a different file with the same name that is also listed in the archive.",
          "Link": "https://www.cve.org/CVERecord?id=CVE-2013-4787"
        }
      ],
      "MappingNotes": {
        "Usage": "Allowed-with-Review"
      },
      "1003_view": "No"
    }
  ]
}