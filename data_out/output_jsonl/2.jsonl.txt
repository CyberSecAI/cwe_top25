{"ID": "125", "Name": "Out-of-bounds Read", "Abstraction": "Base", "Diagram": "/data/images/CWE-125-Diagram.png", "Description": "The product reads data past the end, or before the beginning, of the intended buffer.", "AlternateTerms": [{"Term": "OOB read", "Description": "Shorthand for \"Out of bounds\" read"}], "ObservedExamples": [{"Reference": "CVE-2020-11899", "Description": "Out-of-bounds read in IP stack used in embedded systems, as exploited in the wild per CISA KEV.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-11899"}, {"Reference": "CVE-2014-0160", "Description": "Chain: \"Heartbleed\" bug receives an inconsistent length parameter (CWE-130) enabling an out-of-bounds read (CWE-126), returning memory that could include private cryptographic keys and other sensitive data.", "Link": "https://www.cve.org/CVERecord?id=CVE-2014-0160"}, {"Reference": "CVE-2021-40985", "Description": "HTML conversion package has a buffer under-read, allowing a crash", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-40985"}, {"Reference": "CVE-2018-10887", "Description": "Chain: unexpected sign extension (CWE-194) leads to integer overflow (CWE-190), causing an out-of-bounds read (CWE-125)", "Link": "https://www.cve.org/CVERecord?id=CVE-2018-10887"}, {"Reference": "CVE-2009-2523", "Description": "Chain: product does not handle when an input string is not NULL terminated (CWE-170), leading to buffer over-read (CWE-125) or heap-based buffer overflow (CWE-122).", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2523"}, {"Reference": "CVE-2018-16069", "Description": "Chain: series of floating-point precision errors (CWE-1339) in a web browser rendering engine causes out-of-bounds read (CWE-125), giving access to cross-origin data", "Link": "https://www.cve.org/CVERecord?id=CVE-2018-16069"}, {"Reference": "CVE-2004-0112", "Description": "out-of-bounds read due to improper length check", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0112"}, {"Reference": "CVE-2004-0183", "Description": "packet with large number of specified elements cause out-of-bounds read.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0183"}, {"Reference": "CVE-2004-0221", "Description": "packet with large number of specified elements cause out-of-bounds read.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0221"}, {"Reference": "CVE-2004-0184", "Description": "out-of-bounds read, resultant from integer underflow", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0184"}, {"Reference": "CVE-2004-1940", "Description": "large length value causes out-of-bounds read", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1940"}, {"Reference": "CVE-2004-0421", "Description": "malformed image causes out-of-bounds read", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0421"}, {"Reference": "CVE-2008-4113", "Description": "OS kernel trusts userland-supplied length value, allowing reading of sensitive information", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4113"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "Yes", "Top25Examples": [{"Reference": "CVE-2021-1001", "Description": "In PVInitVideoEncoder of mp4enc_api.cpp, there is a possible out of bounds read due to a heap buffer overflow. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-12Android ID: A-190435883"}, {"Reference": "CVE-2021-3674", "Description": "A flaw was found in rizin. The create_section_from_phdr function allocates space for ELF section data by processing the headers. Crafted values in the headers can cause out of bounds reads, which can lead to memory corruption and possibly code execution through the binary object's callback function."}, {"Reference": "CVE-2021-37041", "Description": "There is an Improper verification vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may cause out-of-bounds read."}, {"Reference": "CVE-2021-37042", "Description": "There is an Improper verification vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may cause out-of-bounds read."}, {"Reference": "CVE-2021-39688", "Description": "In TBD of TBD, there is a possible out of bounds read due to TBD. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-206039140References: N/A"}, {"Reference": "CVE-2021-40167", "Description": "A malicious crafted dwf or .pct file when consumed through DesignReview.exe application could lead to memory corruption vulnerability by read access violation. This vulnerability in conjunction with other vulnerabilities could lead to code execution in the context of the current process."}, {"Reference": "CVE-2021-4093", "Description": "A flaw was found in the KVM's AMD code for supporting the Secure Encrypted Virtualization-Encrypted State (SEV-ES). A KVM guest using SEV-ES can trigger out-of-bounds reads and writes in the host kernel via a malicious VMGEXIT for a string I/O instruction (for example, outs or ins) using the exit reason SVM_EXIT_IOIO. This issue results in a crash of the entire system or a potential guest-to-host escape scenario."}, {"Reference": "CVE-2021-4100", "Description": "Object lifecycle issue in ANGLE in Google Chrome prior to 96.0.4664.110 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page."}, {"Reference": "CVE-2021-4156", "Description": "An out-of-bounds read flaw was found in libsndfile's FLAC codec functionality. An attacker who is able to submit a specially crafted file (via tricking a user to open or otherwise) to an application linked with libsndfile and using the FLAC codec, could trigger an out-of-bounds read that would most likely cause a crash but could potentially leak memory information that could be used in further exploitation of other flaws."}, {"Reference": "CVE-2021-43453", "Description": "A Heap-based Buffer Overflow vulnerability exists in JerryScript 2.4.0 and prior versions via an out-of-bounds read in parser_parse_for_statement_start in the js-parser-statm.c file. This issue is similar to CVE-2020-29657."}, {"Reference": "CVE-2021-46814", "Description": "The video framework has an out-of-bounds memory read/write vulnerability. Successful exploitation of this vulnerability may affect system availability."}, {"Reference": "CVE-2022-20131", "Description": "In nci_proc_rf_management_ntf of nci_hrcv.cc, there is a possible out of bounds read due to a missing bounds check. This could lead to remote information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12LAndroid ID: A-221856662"}, {"Reference": "CVE-2022-24314", "Description": "A CWE-125: Out-of-bounds Read vulnerability exists that could cause memory leaks potentially resulting in denial of service when an attacker repeatedly sends a specially crafted message. Affected Product: Interactive Graphical SCADA System Data Server (V15.0.0.22020 and prior)"}, {"Reference": "CVE-2022-28285", "Description": "When generating the assembly code for <code>MLoadTypedArrayElementHole</code>, an incorrect AliasSet was used. In conjunction with another vulnerability this could have been used for an out of bounds memory read. This vulnerability affects Thunderbird < 91.8, Firefox < 99, and Firefox ESR < 91.8."}, {"Reference": "CVE-2022-2964", "Description": "A flaw was found in the Linux kernel\u2019s driver for the ASIX AX88179_178A-based USB 2.0/3.0 Gigabit Ethernet Devices. The vulnerability contains multiple out-of-bounds reads and possible out-of-bounds writes."}, {"Reference": "CVE-2022-32142", "Description": "Multiple CODESYS Products are prone to a out-of bounds read or write access. A low privileged remote attacker may craft a request with invalid offset, which can cause an out-of-bounds read or write access, resulting in denial-of-service condition or local memory overwrite, which can lead to a change of local files. User interaction is not required."}, {"Reference": "CVE-2022-35260", "Description": "curl can be told to parse a `.netrc` file for credentials. If that file endsin a line with 4095 consecutive non-white space letters and no newline, curlwould first read past the end of the stack-based buffer, and if the readworks, write a zero byte beyond its boundary.This will in most cases cause a segfault or similar, but circumstances might also cause different outcomes.If a malicious user can provide a custom netrc file to an application or otherwise affect its contents, this flaw could be used as denial-of-service."}, {"Reference": "CVE-2022-39392", "Description": "Wasmtime is a standalone runtime for WebAssembly. Prior to version 2.0.2, there is a bug in Wasmtime's implementation of its pooling instance allocator when the allocator is configured to give WebAssembly instances a maximum of zero pages of memory. In this configuration, the virtual memory mapping for WebAssembly memories did not meet the compiler-required configuration requirements for safely executing WebAssembly modules. Wasmtime's default settings require virtual memory page faults to indicate that wasm reads/writes are out-of-bounds, but the pooling allocator's configuration would not create an appropriate virtual memory mapping for this meaning out of bounds reads/writes can successfully read/write memory unrelated to the wasm sandbox within range of the base address of the memory mapping created by the pooling allocator. This bug is not applicable with the default settings of the `wasmtime` crate. This bug can only be triggered by setting `InstanceLimits::memory_pages` to zero. This is expected to be a very rare configuration since this means that wasm modules cannot allocate any pages of linear memory. All wasm modules produced by all current toolchains are highly likely to use linear memory, so it's expected to be unlikely that this configuration is set to zero by any production embedding of Wasmtime. This bug has been patched and users should upgrade to Wasmtime 2.0.2. This bug can be worked around by increasing the `memory_pages` allotment when configuring the pooling allocator to a value greater than zero. If an embedding wishes to still prevent memory from actually being used then the `Store::limiter` method can be used to dynamically disallow growth of memory beyond 0 bytes large. Note that the default `memory_pages` value is greater than zero."}, {"Reference": "CVE-2022-41902", "Description": "TensorFlow is an open source platform for machine learning. The function MakeGrapplerFunctionItem takes arguments that determine the sizes of inputs and outputs. If the inputs given are greater than or equal to the sizes of the outputs, an out-of-bounds memory read or a crash is triggered. We have patched the issue in GitHub commit a65411a1d69edfb16b25907ffb8f73556ce36bb7. The fix will be included in TensorFlow 2.11.0. We will also cherrypick this commit on TensorFlow 2.8.4, 2.9.3, and 2.10.1."}, {"Reference": "CVE-2022-41981", "Description": "A stack-based buffer overflow vulnerability exists in the TGA file format parser of OpenImageIO v2.3.19.0. A specially-crafted targa file can lead to out of bounds read and write on the process stack, which can lead to arbitrary code execution. An attacker can provide a malicious file to trigger this vulnerability."}, {"Reference": "CVE-2022-4203", "Description": "A read buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. The read buffer overrun might result in a crash which could lead to a denial of service attack. In theory it could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext) although we are not aware of any working exploit leading to memory contents disclosure as of the time of release of this advisory. In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects. "}, {"Reference": "CVE-2022-48303", "Description": "GNU Tar through 1.34 has a one-byte out-of-bounds read that results in use of uninitialized memory for a conditional jump. Exploitation to change the flow of control has not been demonstrated. The issue occurs in from_header in list.c via a V7 archive in which mtime has approximately 11 whitespace characters."}, {"Reference": "CVE-2022-42901", "Description": "Bentley MicroStation and MicroStation-based applications may be affected by out-of-bounds and stack overflow issues when opening crafted XMT files. Exploiting these issues could lead to information disclosure and code execution. The fixed versions are 10.17.01.58* for MicroStation and 10.17.01.19* for Bentley View."}, {"Reference": "CVE-2021-35452", "Description": "An Incorrect Access Control vulnerability exists in libde265 v1.0.8 due to a SEGV in slice.cc."}, {"Reference": "CVE-2021-36411", "Description": "An issue has been found in libde265 v1.0.8 due to incorrect access control. A SEGV caused by a READ memory access in function derive_boundaryStrength of deblock.cc has occurred. The vulnerability causes a segmentation fault and application crash, which leads to remote denial of service."}, {"Reference": "CVE-2022-0806", "Description": "Data leak in Canvas in Google Chrome prior to 99.0.4844.51 allowed a remote attacker who convinced a user to engage in screen sharing to potentially leak cross-origin data via a crafted HTML page."}, {"Reference": "CVE-2021-3605", "Description": "There's a flaw in OpenEXR's rleUncompress functionality in versions prior to 3.0.5. An attacker who is able to submit a crafted file to an application linked with OpenEXR could cause an out-of-bounds read. The greatest risk from this flaw is to application availability."}, {"Reference": "CVE-2022-1441", "Description": "MP4Box is a component of GPAC-2.0.0, which is a widely-used third-party package on RPM Fusion. When MP4Box tries to parse a MP4 file, it calls the function `diST_box_read()` to read from video. In this function, it allocates a buffer `str` with fixed length. However, content read from `bs` is controllable by user, so is the length, which causes a buffer overflow."}, {"Reference": "CVE-2022-3435", "Description": "A vulnerability classified as problematic has been found in Linux Kernel. This affects the function fib_nh_match of the file net/ipv4/fib_semantics.c of the component IPv4 Handler. The manipulation leads to out-of-bounds read. It is possible to initiate the attack remotely. It is recommended to apply a patch to fix this issue. The identifier VDB-210357 was assigned to this vulnerability."}, {"Reference": "CVE-2022-34529", "Description": "WASM3 v0.5.0 was discovered to contain a segmentation fault via the component Compile_Memory_CopyFill."}, {"Reference": "CVE-2022-35100", "Description": "SWFTools commit 772e55a2 was discovered to contain a segmentation violation via gfxline_getbbox at /lib/gfxtools.c."}, {"Reference": "CVE-2022-35106", "Description": "SWFTools commit 772e55a2 was discovered to contain a segmentation violation via FoFiTrueType::computeTableChecksum(unsigned char*, int) at /xpdf/FoFiTrueType.cc."}, {"Reference": "CVE-2022-35114", "Description": "SWFTools commit 772e55a2 was discovered to contain a segmentation violation via extractFrame at /readers/swf.c."}, {"Reference": "CVE-2022-35476", "Description": "OTFCC v0.10.4 was discovered to contain a segmentation violation via /release-x64/otfccdump+0x4fbc0b."}, {"Reference": "CVE-2022-35477", "Description": "OTFCC v0.10.4 was discovered to contain a segmentation violation via /release-x64/otfccdump+0x4fe954."}, {"Reference": "CVE-2022-35478", "Description": "OTFCC v0.10.4 was discovered to contain a segmentation violation via /release-x64/otfccdump+0x6babea."}, {"Reference": "CVE-2022-35479", "Description": "OTFCC v0.10.4 was discovered to contain a segmentation violation via /release-x64/otfccdump+0x4fbbb6."}, {"Reference": "CVE-2022-35481", "Description": "OTFCC v0.10.4 was discovered to contain a segmentation violation via /multiarch/memmove-vec-unaligned-erms.S."}, {"Reference": "CVE-2022-35482", "Description": "OTFCC v0.10.4 was discovered to contain a segmentation violation via /release-x64/otfccdump+0x65f724."}, {"Reference": "CVE-2022-35483", "Description": "OTFCC v0.10.4 was discovered to contain a segmentation violation via /release-x64/otfccdump+0x5266a8."}, {"Reference": "CVE-2022-35485", "Description": "OTFCC v0.10.4 was discovered to contain a segmentation violation via /release-x64/otfccdump+0x703969."}, {"Reference": "CVE-2022-3964", "Description": "A vulnerability classified as problematic has been found in ffmpeg. This affects an unknown part of the file libavcodec/rpzaenc.c of the component QuickTime RPZA Video Encoder. The manipulation of the argument y_size leads to out-of-bounds read. It is possible to initiate the attack remotely. The name of the patch is 92f9b28ed84a77138105475beba16c146bdaf984. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-213543."}, {"Reference": "CVE-2022-3965", "Description": "A vulnerability classified as problematic was found in ffmpeg. This vulnerability affects the function smc_encode_stream of the file libavcodec/smcenc.c of the component QuickTime Graphics Video Encoder. The manipulation of the argument y_size leads to out-of-bounds read. The attack can be initiated remotely. The name of the patch is 13c13109759090b7f7182480d075e13b36ed8edd. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-213544."}, {"Reference": "CVE-2021-26388", "Description": "Improper validation of the BIOS directory may allow for searches to read beyond the directory table copy in RAM, exposing out of bounds memory contents, resulting in a potential denial of service."}, {"Reference": "CVE-2021-40606", "Description": "The gf_bs_write_data function in GPAC 1.0.1 allows attackers to cause a denial of service via a crafted file in the MP4Box command."}, {"Reference": "CVE-2022-35087", "Description": "SWFTools commit 772e55a2 was discovered to contain a segmentation violation via MovieAddFrame at /src/gif2swf.c."}]}
{"ID": "1250", "Name": "Improper Preservation of Consistency Between Independent Representations of Shared State", "Abstraction": "Base", "Description": "The product has or supports multiple distributed components or sub-systems that are each required to keep their own local copy of shared data - such as state or cache - but the product does not ensure that all local copies remain consistent with each other.", "ExtendedDescription": "\n\nIn highly distributed environments, or on systems with distinct physical components that operate independently, there is often a need for each component to store and update its own local copy of key data such as state or cache, so that all components have the same \"view\" of the overall system and operate in a coordinated fashion. For example, users of a social media service or a massively multiplayer online game might be using their own personal computers while also interacting with different physical hosts in a globally distributed service, but all participants must be able to have the same \"view\" of the world. Alternately, a processor's Memory Management Unit (MMU) might have \"shadow\" MMUs to distribute its workload, and all shadow MMUs are expected to have the same accessible ranges of memory.\n\n\nIn such environments, it becomes critical for the product to ensure that this \"shared state\" is consistently modified across all distributed systems. If state is not consistently maintained across all systems, then critical transactions might take place out of order, or some users might not get the same data as other users. When this inconsistency affects correctness of operations, it can introduce vulnerabilities in mechanisms that depend on consistent state.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2022-22234", "Description": "An Improper Preservation of Consistency Between Independent Representations of Shared State vulnerability in the Packet Forwarding Engine (PFE) of Juniper Networks Junos OS allows a locally authenticated attacker with low privileges to cause a Denial of Service (DoS). If the device is very busy for example while executing a series of show commands on the CLI one or more SFPs might not be detected anymore. The system then changes its state to \"unplugged\" which is leading to traffic impact and at least a partial DoS. Once the system is less busy the port states return to their actual value. Indicators of compromise are log messages about unplugged SFPs and corresponding syspld messages without any physical or environmental cause. These can be checked by issuing the following commands: user@device# show log messages | match unplugged %PFE-6: fpc0 sfp-0/1/2 SFP unplugged %PFE-6: fpc0 sfp-0/1/3 SFP unplugged The following log messages will also be seen when this issue happens: fpc0 Error tvp_drv_syspld_read: syspld read failed for address <address> fpc0 Error[-1]:tvp_optics_presence_get - Syspld read failed for port <pic/port> fpc0 optics pres failed(-1) for pic <pic> port <port> fpc0 tvp_drv_syspld_read: i2c access retry count 200 This issue affects Juniper Networks Junos OS on EX2300 Series, EX3400 Series: All versions prior to 18.4R3-S11; 19.1 versions prior to 19.1R3-S9; 19.2 versions prior to 19.2R1-S9, 19.2R3-S5; 19.3 versions prior to 19.3R3-S6; 19.4 versions prior to 19.4R2-S7, 19.4R3-S8; 20.1 versions prior to 20.1R3-S4; 20.2 versions prior to 20.2R3-S4; 20.3 versions prior to 20.3R3-S4; 20.4 versions prior to 20.4R3-S3; 21.1 versions prior to 21.1R3-S1; 21.2 versions prior to 21.2R3; 21.3 versions prior to 21.3R2; 21.4 versions prior to 21.4R2."}]}
{"ID": "1251", "Name": "Mirrored Regions with Different Values", "Abstraction": "Base", "Description": "The product's architecture mirrors regions without ensuring that their contents always stay in sync.", "ExtendedDescription": "\n\nHaving mirrored regions with different values might result in the exposure of sensitive information or possibly system compromise.\n\n\nIn the interest of increased performance, one might need to duplicate a resource. A cache memory is a common example of this concept, which keeps a \"local\" copy of a data element in the high speed cache memory. Unfortunately, this speed improvement comes with a downside, since the product needs to ensure that the local copy always mirrors the original copy truthfully. If they get out of sync, the computational result is no longer true.\n\n\nDuring hardware design, memory is not the only item which gets mirrored. There are many other entities that get mirrored, as well: registers, memory regions, and, in some cases, even whole computational units. For example, within a multi-core processor, if all memory accesses for each and every core goes through a single Memory-Management Unit (MMU) then the MMU will become a performance bottleneck. In such cases, duplicating local MMUs that will serve only a subset of the cores rather than all of them may resolve the performance issue. These local copies are also called \"shadow copies\" or \"mirrored copies.\"\n\n\nIf the original resource never changed, local duplicate copies getting out of sync would never be an issue. However, the values of the original copy will sometimes change. When the original copy changes, the mirrored copies must also change, and change fast.\n\n\nThis situation of shadow-copy-possibly-out-of-sync-with-original-copy might occur as a result of multiple scenarios, including the following: \n\n\n  - After the values in the original copy change, due to some reason the original copy does not send the \"update\" request to its shadow copies.\n\n  - After the values in the original copy change, the original copy dutifully sends the \"update\" request to its shadow copies, but due to some reason the shadow copy does not \"execute\" this update request.\n\n  - After the values in the original copy change, the original copy sends the \"update\" request to its shadow copies, and the shadow copy executes this update request faithfully. However, during the small time period when the original copy has \"new\" values and the shadow copy is still holding the \"old\" values, an attacker can exploit the old values. Then it becomes a race condition between the attacker and the update process of who can reach the target, shadow copy first, and, if the attacker reaches first, the attacker wins.\n\n  - The attacker might send a \"spoofed\" update request to the target shadow copy, pretending that this update request is coming from the original copy. This spoofed request might cause the targeted shadow copy to update its values to some attacker-friendly values, while the original copies remain unchanged by the attacker.\n\n  - Suppose a situation where the original copy has a system of reverting back to its original value if it does not hear back from all the shadow copies that such copies have successfully completed the update request. In such a case, an attack might occur as follows: (1) the original copy might send an update request; (2) the shadow copy updates it; (3) the shadow copy sends back the successful completion message; (4) through a separate issue, the attacker is able to intercept the shadow copy's completion message. In this case, the original copy thinks that the update did not succeed, hence it reverts to its original value. Now there is a situation where the original copy has the \"old\" value, and the shadow copy has the \"new\" value.\n\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1252", "Name": "CPU Hardware Not Configured to Support Exclusivity of Write and Execute Operations", "Abstraction": "Base", "Description": "The CPU is not configured to provide hardware support for exclusivity of write and execute operations on memory. This allows an attacker to execute data from all of memory.", "ExtendedDescription": "\n\nCPUs provide a special bit that supports exclusivity of write and execute operations. This bit is used to segregate areas of memory to either mark them as code (instructions, which can be executed) or data (which should not be executed). In this way, if a user can write to a region of memory, the user cannot execute from that region and vice versa. This exclusivity provided by special hardware bit is leveraged by the operating system to protect executable space. While this bit is available in most modern processors by default, in some CPUs the exclusivity is implemented via a memory-protection unit (MPU) and memory-management unit (MMU) in which memory regions can be carved out with exact read, write, and execute permissions. However, if the CPU does not have an MMU/MPU, then there is no write exclusivity. Without configuring exclusivity of operations via segregated areas of memory, an attacker may be able to inject malicious code onto memory and later execute it.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1253", "Name": "Incorrect Selection of Fuse Values", "Abstraction": "Base", "Description": "The logic level used to set a system to a secure state relies on a fuse being unblown. An attacker can set the system to an insecure state merely by blowing the fuse.", "ExtendedDescription": "\n\nFuses are often used to store secret data, including security configuration data. When not blown, a fuse is considered to store a logic 0, and, when blown, it indicates a logic 1. Fuses are generally considered to be one-directional, i.e., once blown to logic 1, it cannot be reset to logic 0. However, if the logic used to determine system-security state (by leveraging the values sensed from the fuses) uses negative logic, an attacker might blow the fuse and drive the system to an insecure state.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1254", "Name": "Incorrect Comparison Logic Granularity", "Abstraction": "Base", "Description": "The product's comparison logic is performed over a series of steps rather than across the entire string in one operation. If there is a comparison logic failure on one of these steps, the operation may be vulnerable to a timing attack that can result in the interception of the process for nefarious purposes.", "ExtendedDescription": "\n\nComparison logic is used to compare a variety of objects including passwords, Message Authentication Codes (MACs), and responses to verification challenges. When comparison logic is implemented at a finer granularity (e.g., byte-by-byte comparison) and breaks in the case of a comparison failure, an attacker can exploit this implementation to identify when exactly the failure occurred. With multiple attempts, the attacker may be able to guesses the correct password/response to challenge and elevate their privileges.\n", "ObservedExamples": [{"Reference": "CVE-2019-10482", "Description": "Smartphone OS uses comparison functions that are not in constant time, allowing side channels", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-10482"}, {"Reference": "CVE-2019-10071", "Description": "Java-oriented framework compares HMAC signatures using String.equals() instead of a constant-time algorithm, causing timing discrepancies", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-10071"}, {"Reference": "CVE-2014-0984", "Description": "Password-checking function in router terminates validation of a password entry when it encounters the first incorrect character, which allows remote attackers to obtain passwords via a brute-force attack that relies on timing differences in responses to incorrect password guesses, aka a timing side-channel attack.", "Link": "https://www.cve.org/CVERecord?id=CVE-2014-0984"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2022-39308", "Description": "GoCD is a continuous delivery server. GoCD helps you automate and streamline the build-test-release cycle for continuous delivery of your product. GoCD versions from 19.2.0 to 19.10.0 (inclusive) are subject to a timing attack in validation of access tokens due to use of regular string comparison for validation of the token rather than a constant time algorithm. This could allow a brute force attack on GoCD server API calls to observe timing differences in validations in order to guess an access token generated by a user for API access. This issue is fixed in GoCD version 19.11.0. As a workaround, users can apply rate limiting or insert random delays to API calls made to GoCD Server via a reverse proxy or other fronting web server. Another workaround, users may disallow use of access tokens by users by having an administrator revoke all access tokens through the \"Access Token Management\" admin function."}]}
{"ID": "1255", "Name": "Comparison Logic is Vulnerable to Power Side-Channel Attacks", "Abstraction": "Variant", "Description": "A device's real time power consumption may be monitored during security token evaluation and the information gleaned may be used to determine the value of the reference token.", "ExtendedDescription": "\n\nThe power consumed by a device may be instrumented and monitored in real time. If the algorithm for evaluating security tokens is not sufficiently robust, the power consumption may vary by token entry comparison against the reference value. Further, if retries are unlimited, the power difference between a \"good\" entry and a \"bad\" entry may be observed and used to determine whether each entry itself is correct thereby allowing unauthorized parties to calculate the reference value.\n", "ObservedExamples": [{"Reference": "CVE-2020-12788", "Description": "CMAC verification vulnerable to timing and power attacks.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-12788"}], "FunctionalAreas": ["Power"], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1256", "Name": "Improper Restriction of Software Interfaces to Hardware Features", "Abstraction": "Base", "Description": "The product provides software-controllable\n\t\t\tdevice functionality for capabilities such as power and\n\t\t\tclock management, but it does not properly limit\n\t\t\tfunctionality that can lead to modification of\n\t\t\thardware memory or register bits, or the ability to\n\t\t\tobserve physical side channels.", "ExtendedDescription": "\n\nIt is frequently assumed that physical attacks such as fault injection and side-channel analysis require an attacker to have physical access to the target device. This assumption may be false if the device has improperly secured power management features, or similar features. For mobile devices, minimizing power consumption is critical, but these devices run a wide variety of applications with different performance requirements. Software-controllable mechanisms to dynamically scale device voltage and frequency and monitor power consumption are common features in today's chipsets, but they also enable attackers to mount fault injection and side-channel attacks without having physical access to the device.\n\n\nFault injection attacks involve strategic manipulation of bits in a device to achieve a desired effect such as skipping an authentication step, elevating privileges, or altering the output of a cryptographic operation. Manipulation of the device clock and voltage supply is a well-known technique to inject faults and is cheap to implement with physical device access. Poorly protected power management features allow these attacks to be performed from software. Other features, such as the ability to write repeatedly to DRAM at a rapid rate from unprivileged software, can result in bit flips in other memory locations (Rowhammer, [REF-1083]).\n\n\nSide channel analysis requires gathering measurement traces of physical quantities such as power consumption. Modern processors often include power metering capabilities in the hardware itself (e.g., Intel RAPL) which if not adequately protected enable attackers to gather measurements necessary for performing side-channel attacks from software.\n", "ObservedExamples": [{"Reference": "CVE-2019-11157", "Description": "Plundervolt: Improper conditions check in voltage settings for some Intel(R) Processors may allow a privileged user to potentially enable escalation of privilege and/or information disclosure via local access [REF-1081].", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-11157"}, {"Reference": "CVE-2020-8694", "Description": "PLATYPUS Attack: Insufficient access control in the Linux kernel driver for some Intel processors allows information disclosure.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8694"}, {"Reference": "CVE-2020-8695", "Description": "Observable discrepancy in the RAPL interface for some Intel processors allows information disclosure.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8695"}, {"Reference": "CVE-2020-12912", "Description": "AMD extension to a Linux service does not require privileged access to the RAPL interface, allowing side-channel attacks.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-12912"}, {"Reference": "CVE-2015-0565", "Description": "NaCl in 2015 allowed the CLFLUSH instruction, making Rowhammer attacks possible.", "Link": "https://www.cve.org/CVERecord?id=CVE-2015-0565"}], "FunctionalAreas": ["Power", "Clock"], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1257", "Name": "Improper Access Control Applied to Mirrored or Aliased Memory Regions", "Abstraction": "Base", "Description": "Aliased or mirrored memory regions in hardware designs may have inconsistent read/write permissions enforced by the hardware. A possible result is that an untrusted agent is blocked from accessing a memory region but is not blocked from accessing the corresponding aliased memory region.\n\t\t\t", "ExtendedDescription": "\n\nHardware product designs often need to implement memory protection features that enable privileged software to define isolated memory regions and access control (read/write) policies. Isolated memory regions can be defined on different memory spaces in a design (e.g. system physical address, virtual address, memory mapped IO).\n\n\nEach memory cell should be mapped and assigned a system address that the core software can use to read/write to that memory. It is possible to map the same memory cell to multiple system addresses such that read/write to any of the aliased system addresses would be decoded to the same memory cell.\n\n\nThis is commonly done in hardware designs for redundancy and simplifying address decoding logic. If one of the memory regions is corrupted or faulty, then that hardware can switch to using the data in the mirrored memory region. Memory aliases can also be created in the system address map if the address decoder unit ignores higher order address bits when mapping a smaller address region into the full system address.\n\n\nA common security weakness that can exist in such memory mapping is that aliased memory regions could have different read/write access protections enforced by the hardware such that an untrusted agent is blocked from accessing a memory address but is not blocked from accessing the corresponding aliased memory address. Such inconsistency can then be used to bypass the access protection of the primary memory block and read or modify the protected memory.\n\n\nAn untrusted agent could also possibly create memory aliases in the system address map for malicious purposes if it is able to change the mapping of an address region or modify memory region sizes.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1258", "Name": "Exposure of Sensitive System Information Due to Uncleared Debug Information", "Abstraction": "Base", "Description": "The hardware does not fully clear security-sensitive values, such as keys and intermediate values in cryptographic operations, when debug mode is entered.", "ExtendedDescription": "\n\nSecurity sensitive values, keys, intermediate steps of cryptographic operations, etc. are stored in temporary registers in the hardware. If these values are not cleared when debug mode is entered they may be accessed by a debugger allowing sensitive information to be accessible by untrusted parties.\n", "ObservedExamples": [{"Reference": "CVE-2021-33080", "Description": "Uncleared debug information in memory accelerator for SSD product exposes sensitive system information", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-33080"}, {"Reference": "CVE-2022-31162", "Description": "Rust library leaks Oauth client details in application debug logs", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-31162"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2022-31162", "Description": "Slack Morphism is an async client library for Rust. Prior to 0.41.0, it was possible for Slack OAuth client information to leak in application debug logs. Stricter and more secure debug formatting was introduced in v0.41.0 for OAuth secret types to reduce the possibility of printing sensitive information in application logs. As a workaround, do not print/output requests and responses for OAuth and client configurations in logs."}]}
{"ID": "1259", "Name": "Improper Restriction of Security Token Assignment", "Abstraction": "Base", "Description": "The System-On-A-Chip (SoC) implements a Security Token mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Tokens are improperly protected.", "ExtendedDescription": "Systems-On-A-Chip (Integrated circuits and hardware engines) implement Security Tokens to differentiate and identify which actions originated from which agent. These actions may be one of the directives: 'read', 'write', 'program', 'reset', 'fetch', 'compute', etc. Security Tokens are assigned to every agent in the System that is capable of generating an action or receiving an action from another agent. Multiple Security Tokens may be assigned to an agent and may be unique based on the agent's trust level or allowed privileges. Since the Security Tokens are integral for the maintenance of security in an SoC, they need to be protected properly. A common weakness afflicting Security Tokens is improperly restricting the assignment to trusted components. Consequently, an improperly protected Security Token may be able to be programmed by a malicious agent (i.e., the Security Token is mutable) to spoof the action as if it originated from a trusted agent.", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "126", "Name": "Buffer Over-read", "Abstraction": "Variant", "Description": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.", "ExtendedDescription": "This typically occurs when the pointer or its index is incremented to a position beyond the bounds of the buffer or when pointer arithmetic results in a position outside of the valid memory location to name a few. This may result in exposure of sensitive information or possibly a crash.", "ObservedExamples": [{"Reference": "CVE-2022-1733", "Description": "Text editor has out-of-bounds read past end of line while indenting C code", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-1733"}, {"Reference": "CVE-2014-0160", "Description": "Chain: \"Heartbleed\" bug receives an inconsistent length parameter (CWE-130) enabling an out-of-bounds read (CWE-126), returning memory that could include private cryptographic keys and other sensitive data.", "Link": "https://www.cve.org/CVERecord?id=CVE-2014-0160"}, {"Reference": "CVE-2009-2523", "Description": "Chain: product does not handle when an input string is not NULL terminated, leading to buffer over-read or heap-based buffer overflow.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2523"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2021-44018", "Description": "A vulnerability has been identified in JT2Go (All versions < V13.2.0.7), Solid Edge SE2021 (All versions < SE2021MP9), Solid Edge SE2022 (All versions < SE2022MP1), Teamcenter Visualization V13.1 (All versions < V13.1.0.9), Teamcenter Visualization V13.2 (All versions < V13.2.0.7), Teamcenter Visualization V13.3 (All versions < V13.3.0.1). The plmxmlAdapterSE70.dll library is vulnerable to memory corruption condition while parsing specially crafted PAR files. An attacker could leverage this vulnerability to execute code in the context of the current process. (ZDI-CAN-15112)"}, {"Reference": "CVE-2022-1629", "Description": "Buffer Over-read in function find_next_quote in GitHub repository vim/vim prior to 8.2.4925. This vulnerabilities are capable of crashing software, Modify Memory, and possible remote execution"}, {"Reference": "CVE-2022-1714", "Description": "Out-of-bounds Read in GitHub repository radareorg/radare2 prior to 5.7.0. The bug causes the program reads data past the end of the intented buffer. Typically, this can allow attackers to read sensitive information from other memory locations or cause a crash."}, {"Reference": "CVE-2022-1720", "Description": "Buffer Over-read in function grab_file_name in GitHub repository vim/vim prior to 8.2.4956. This vulnerability is capable of crashing the software, memory modification, and possible remote execution."}, {"Reference": "CVE-2022-1769", "Description": "Buffer Over-read in GitHub repository vim/vim prior to 8.2.4974."}, {"Reference": "CVE-2022-1927", "Description": "Buffer Over-read in GitHub repository vim/vim prior to 8.2."}, {"Reference": "CVE-2022-2175", "Description": "Buffer Over-read in GitHub repository vim/vim prior to 8.2."}, {"Reference": "CVE-2022-22519", "Description": "A remote, unauthenticated attacker can send a specific crafted HTTP or HTTPS requests causing a buffer over-read resulting in a crash of the webserver of the CODESYS Control runtime system."}, {"Reference": "CVE-2022-23537", "Description": "PJSIP is a free and open source multimedia communication library written in C language implementing standard based protocols such as SIP, SDP, RTP, STUN, TURN, and ICE. Buffer overread is possible when parsing a specially crafted STUN message with unknown attribute. The vulnerability affects applications that uses STUN including PJNATH and PJSUA-LIB. The patch is available as a commit in the master branch (2.13.1)."}, {"Reference": "CVE-2022-23547", "Description": "PJSIP is a free and open source multimedia communication library written in C language implementing standard based protocols such as SIP, SDP, RTP, STUN, TURN, and ICE. This issue is similar to GHSA-9pfh-r8x4-w26w. Possible buffer overread when parsing a certain STUN message. The vulnerability affects applications that uses STUN including PJNATH and PJSUA-LIB. The patch is available as commit in the master branch."}, {"Reference": "CVE-2022-3178", "Description": "Buffer Over-read in GitHub repository gpac/gpac prior to 2.1.0-DEV."}, {"Reference": "CVE-2022-32141", "Description": "Multiple CODESYS Products are prone to a buffer over read. A low privileged remote attacker may craft a request with an invalid offset, which can cause an internal buffer over-read, resulting in a denial-of-service condition. User interaction is not required."}, {"Reference": "CVE-2022-33236", "Description": "Transient DOS due to buffer over-read in WLAN firmware while parsing cipher suite info attributes. in Snapdragon Compute, Snapdragon Connectivity, Snapdragon Mobile, Snapdragon Wired Infrastructure and Networking"}, {"Reference": "CVE-2022-27940", "Description": "tcprewrite in Tcpreplay 4.4.1 has a heap-based buffer over-read in get_ipv6_next in common/get.c."}, {"Reference": "CVE-2022-27941", "Description": "tcprewrite in Tcpreplay 4.4.1 has a heap-based buffer over-read in get_l2len_protocol in common/get.c."}, {"Reference": "CVE-2022-27942", "Description": "tcpprep in Tcpreplay 4.4.1 has a heap-based buffer over-read in parse_mpls in common/get.c."}, {"Reference": "CVE-2022-1907", "Description": "Buffer Over-read in GitHub repository bfabiszewski/libmobi prior to 0.11."}, {"Reference": "CVE-2022-1908", "Description": "Buffer Over-read in GitHub repository bfabiszewski/libmobi prior to 0.11."}, {"Reference": "CVE-2022-1987", "Description": "Buffer Over-read in GitHub repository bfabiszewski/libmobi prior to 0.11."}, {"Reference": "CVE-2022-2124", "Description": "Buffer Over-read in GitHub repository vim/vim prior to 8.2."}, {"Reference": "CVE-2022-22816", "Description": "path_getbbox in path.c in Pillow before 9.0.0 has a buffer over-read during initialization of ImagePath.Path."}, {"Reference": "CVE-2022-2301", "Description": "Buffer Over-read in GitHub repository hpjansson/chafa prior to 1.10.3."}, {"Reference": "CVE-2022-23130", "Description": "Buffer Over-read vulnerability in Mitsubishi Electric MC Works64 versions 4.00A (10.95.201.23) to 4.04E (10.95.210.01), ICONICS GENESIS64 versions 10.97 and prior and ICONICS Hyper Historian versions 10.97 and prior allows an attacker to cause a DoS condition in the database server by getting a legitimate user to import a configuration file containing specially crafted stored procedures into GENESIS64 or MC Works64 and execute commands against the database from GENESIS64 or MC Works64."}, {"Reference": "CVE-2022-25653", "Description": "Information disclosure in video due to buffer over-read while processing avi file in Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Wearables"}, {"Reference": "CVE-2022-25676", "Description": "Information disclosure in video due to buffer over-read while parsing avi files in Snapdragon Auto, Snapdragon Compute, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Wearables"}, {"Reference": "CVE-2022-25706", "Description": "Information disclosure in Bluetooth driver due to buffer over-read while reading l2cap length in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Wearables"}, {"Reference": "CVE-2022-25728", "Description": "Information disclosure in modem due to buffer over-read while processing response from DNS server"}, {"Reference": "CVE-2022-25749", "Description": "Transient Denial-of-Service in WLAN due to buffer over-read while parsing MDNS frames. in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer Electronics Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon IoT, Snapdragon Mobile, Snapdragon Voice & Music, Snapdragon Wearables, Snapdragon Wired Infrastructure and Networking"}, {"Reference": "CVE-2022-27523", "Description": "A buffer over-read can be exploited in Autodesk TrueView 2022 may lead to an exposure of sensitive information or a crash through using a maliciously crafted DWG file as an Input. This vulnerability in conjunction with other vulnerabilities could lead to code execution in the context of the current process."}, {"Reference": "CVE-2022-27607", "Description": "Bento4 1.6.0-639 has a heap-based buffer over-read in the AP4_HvccAtom class, a different issue than CVE-2018-14531."}, {"Reference": "CVE-2022-28739", "Description": "There is a buffer over-read in Ruby before 2.6.10, 2.7.x before 2.7.6, 3.x before 3.0.4, and 3.1.x before 3.1.2. It occurs in String-to-Float conversion, including Kernel#Float and String#to_f."}, {"Reference": "CVE-2022-28805", "Description": "singlevar in lparser.c in Lua from (including) 5.4.0 up to (excluding) 5.4.4 lacks a certain luaK_exp2anyregup call, leading to a heap-based buffer over-read that might affect a system that compiles untrusted Lua code."}, {"Reference": "CVE-2022-29537", "Description": "gp_rtp_builder_do_hevc in ietf/rtp_pck_mpeg4.c in GPAC 2.0.0 has a heap-based buffer over-read, as demonstrated by MP4Box."}, {"Reference": "CVE-2022-33221", "Description": "Information disclosure in Trusted Execution Environment due to buffer over-read while processing metadata verification requests."}, {"Reference": "CVE-2022-33229", "Description": "Information disclosure due to buffer over-read in Modem while using static array to process IPv4 packets."}, {"Reference": "CVE-2022-33235", "Description": "Information disclosure due to buffer over-read in WLAN firmware while parsing security context info attributes. in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer Electronics Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music, Snapdragon Wearables, Snapdragon Wired Infrastructure and Networking"}, {"Reference": "CVE-2022-33237", "Description": "Transient DOS due to buffer over-read in WLAN firmware while processing PPE threshold. in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer Electronics Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music, Snapdragon Wearables, Snapdragon Wired Infrastructure and Networking"}, {"Reference": "CVE-2022-33252", "Description": "Information disclosure due to buffer over-read in WLAN while handling IBSS beacons frame."}, {"Reference": "CVE-2022-33253", "Description": "Transient DOS due to buffer over-read in WLAN while parsing corrupted NAN frames."}, {"Reference": "CVE-2022-33255", "Description": "Information disclosure due to buffer over-read in Bluetooth HOST while processing GetFolderItems and GetItemAttribute Cmds from peer device."}, {"Reference": "CVE-2022-33268", "Description": "Information disclosure due to buffer over-read in Bluetooth HOST while pairing and connecting A2DP. in Snapdragon Auto, Snapdragon Compute, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music, Snapdragon Wearables"}, {"Reference": "CVE-2022-33271", "Description": "Information disclosure due to buffer over-read in WLAN while parsing NMF frame."}, {"Reference": "CVE-2022-33283", "Description": "Information disclosure due to buffer over-read in WLAN while WLAN frame parsing due to missing frame length check."}, {"Reference": "CVE-2022-33284", "Description": "Information disclosure due to buffer over-read in WLAN while parsing BTM action frame."}, {"Reference": "CVE-2022-33285", "Description": "Transient DOS due to buffer over-read in WLAN while parsing WLAN CSA action frames."}, {"Reference": "CVE-2022-33286", "Description": "Transient DOS due to buffer over-read in WLAN while processing 802.11 management frames."}, {"Reference": "CVE-2022-33306", "Description": "Transient DOS due to buffer over-read in WLAN while processing an incoming management frame with incorrectly filled IEs."}, {"Reference": "CVE-2022-33309", "Description": "Transient DOS due to buffer over-read in WLAN Firmware while parsing secure FTMR frame with size lesser than 39 Bytes."}, {"Reference": "CVE-2022-33968", "Description": "In BIG-IP Versions 17.0.x before 17.0.0.1, 16.1.x before 16.1.3.1, 15.1.x before 15.1.6.1, 14.1.x before 14.1.5.1, and all versions of 13.1.x, when an LTM monitor or APM SSO is configured on a virtual server, and NTLM challenge-response is in use, undisclosed traffic can cause a buffer over-read. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated."}, {"Reference": "CVE-2022-34145", "Description": "Transient DOS due to buffer over-read in WLAN Host while parsing frame information."}, {"Reference": "CVE-2022-40320", "Description": "cfg_tilde_expand in confuse.c in libConfuse 3.3 has a heap-based buffer over-read."}, {"Reference": "CVE-2022-40512", "Description": "Transient DOS in WLAN Firmware due to buffer over-read while processing probe response or beacon."}, {"Reference": "CVE-2022-40535", "Description": "Transient DOS due to buffer over-read in WLAN while sending a packet to device."}, {"Reference": "CVE-2022-40737", "Description": "An issue was discovered in Bento4 through 1.6.0-639. A buffer over-read exists in the function AP4_StdcFileByteStream::WritePartial located in System/StdC/Ap4StdCFileByteStream.cpp, called from AP4_ByteStream::Write and AP4_HdlrAtom::WriteFields."}, {"Reference": "CVE-2022-42905", "Description": "In wolfSSL before 5.5.2, if callback functions are enabled (via the WOLFSSL_CALLBACKS flag), then a malicious TLS 1.3 client or network attacker can trigger a buffer over-read on the heap of 5 bytes. (WOLFSSL_CALLBACKS is only intended for debugging.)"}, {"Reference": "CVE-2022-43995", "Description": "Sudo 1.8.0 through 1.9.12, with the crypt() password backend, contains a plugins/sudoers/auth/passwd.c array-out-of-bounds error that can result in a heap-based buffer over-read. This can be triggered by arbitrary local users with access to Sudo by entering a password of seven characters or fewer. The impact could vary depending on the system libraries, compiler, and processor architecture."}, {"Reference": "CVE-2022-4432", "Description": "A buffer over-read vulnerability was reported in the ThinkPadX13s BIOS PersistenceConfigDxe driver that could allow a local attacker with elevated privileges to cause information disclosure."}, {"Reference": "CVE-2022-4433", "Description": "A buffer over-read vulnerability was reported in the ThinkPadX13s BIOS LenovoSetupConfigDxe driver that could allow a local attacker with elevated privileges to cause information disclosure."}, {"Reference": "CVE-2022-4434", "Description": "A buffer over-read vulnerability was reported in the ThinkPadX13s BIOS driver that could allow a local attacker with elevated privileges to cause information disclosure."}, {"Reference": "CVE-2022-4435", "Description": "A buffer over-read vulnerability was reported in the ThinkPadX13s BIOS LenovoRemoteConfigUpdateDxe driver that could allow a local attacker with elevated privileges to cause information disclosure."}, {"Reference": "CVE-2022-45909", "Description": "drachtio-server before 0.8.19 has a heap-based buffer over-read via a long Request-URI in an INVITE request."}, {"Reference": "CVE-2022-30976", "Description": "GPAC 2.0.0 misuses a certain Unicode utf8_wcslen (renamed gf_utf8_wcslen) function in utils/utf.c, resulting in a heap-based buffer over-read, as demonstrated by MP4Box."}, {"Reference": "CVE-2022-31212", "Description": "An issue was discovered in dbus-broker before 31. It depends on c-uitl/c-shquote to parse the DBus service's Exec line. c-shquote contains a stack-based buffer over-read if a malicious Exec line is supplied."}, {"Reference": "CVE-2022-31796", "Description": "libjpeg 1.63 has a heap-based buffer over-read in HierarchicalBitmapRequester::FetchRegion in hierarchicalbitmaprequester.cpp because the MCU size can be different between allocation and use."}, {"Reference": "CVE-2022-32166", "Description": "In ovs versions v0.90.0 through v2.5.0 are vulnerable to heap buffer over-read in flow.c. An unsafe comparison of \u201cminimasks\u201d function could lead access to an unmapped region of memory. This vulnerability is capable of crashing the software, memory modification, and possible remote execution."}, {"Reference": "CVE-2022-32200", "Description": "libdwarf 0.4.0 has a heap-based buffer over-read in _dwarf_check_string_valid in dwarf_util.c."}, {"Reference": "CVE-2022-34299", "Description": "There is a heap-based buffer over-read in libdwarf 0.4.0. This issue is related to dwarf_global_formref_b."}, {"Reference": "CVE-2022-34300", "Description": "In tinyexr 1.0.1, there is a heap-based buffer over-read in tinyexr::DecodePixelData."}, {"Reference": "CVE-2022-35409", "Description": "An issue was discovered in Mbed TLS before 2.28.1 and 3.x before 3.2.0. In some configurations, an unauthenticated attacker can send an invalid ClientHello message to a DTLS server that causes a heap-based buffer over-read of up to 255 bytes. This can cause a server crash or possibly information disclosure based on error responses. Affected configurations have MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE enabled and MBEDTLS_SSL_IN_CONTENT_LEN less than a threshold that depends on the configuration: 258 bytes if using mbedtls_ssl_cookie_check, and possibly up to 571 bytes with a custom cookie check function."}, {"Reference": "CVE-2022-1533", "Description": "Buffer Over-read in GitHub repository bfabiszewski/libmobi prior to 0.11. This vulnerability is capable of arbitrary code execution."}, {"Reference": "CVE-2022-1534", "Description": "Buffer Over-read at parse_rawml.c:1416 in GitHub repository bfabiszewski/libmobi prior to 0.11. The bug causes the program reads data past the end of the intented buffer. Typically, this can allow attackers to read sensitive information from other memory locations or cause a crash."}]}
{"ID": "1260", "Name": "Improper Handling of Overlap Between Protected Memory Ranges", "Abstraction": "Base", "Description": "The product allows address regions to overlap, which can result in the bypassing of intended memory protection.", "ExtendedDescription": "\n\nIsolated memory regions and access control (read/write) policies are used by hardware to protect privileged software. Software components are often allowed to change or remap memory region definitions in order to enable flexible and dynamically changeable memory management by system software.\n\n\nIf a software component running at lower privilege can program a memory address region to overlap with other memory regions used by software running at higher privilege, privilege escalation may be available to attackers. The memory protection unit (MPU) logic can incorrectly handle such an address overlap and allow the lower-privilege software to read or write into the protected memory region, resulting in privilege escalation attack. An address overlap weakness can also be used to launch a denial of service attack on the higher-privilege software memory regions.\n", "ObservedExamples": [{"Reference": "CVE-2008-7096", "Description": "virtualization product allows compromise of hardware product by accessing certain remapping registers.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-7096"}, {"Reference": "[REF-1100]", "Description": "processor design flaw allows ring 0 code to access more privileged rings by causing a register window to overlap a range of protected system RAM [REF-1100]", "Link": "https://github.com/xoreaxeaxeax/sinkhole/blob/master/us-15-Domas-TheMemorySinkhole-wp.pdf"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1261", "Name": "Improper Handling of Single Event Upsets", "Abstraction": "Base", "Description": "The hardware logic does not effectively handle when single-event upsets (SEUs) occur.", "ExtendedDescription": "\n\nTechnology trends such as CMOS-transistor down-sizing, use of new materials, and system-on-chip architectures continue to increase the sensitivity of systems to soft errors. These errors are random, and their causes might be internal (e.g., interconnect coupling) or external (e.g., cosmic radiation). These soft errors are not permanent in nature and cause temporary bit flips known as single-event upsets (SEUs). SEUs are induced errors in circuits caused when charged particles lose energy by ionizing the medium through which they pass, leaving behind a wake of electron-hole pairs that cause temporary failures. If these failures occur in security-sensitive modules in a chip, it might compromise the security guarantees of the chip. For instance, these temporary failures could be bit flips that change the privilege of a regular user to root.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1262", "Name": "Improper Access Control for Register Interface", "Abstraction": "Base", "Description": "The product uses memory-mapped I/O registers that act as an interface to hardware functionality from software, but there is improper access control to those registers.", "ExtendedDescription": "\n\nSoftware commonly accesses peripherals in a System-on-Chip (SoC) or other device through a memory-mapped register interface. Malicious software could tamper with any security-critical hardware data that is accessible directly or indirectly through the register interface, which could lead to a loss of confidentiality and integrity.\n", "ObservedExamples": [{"Reference": "CVE-2014-2915", "Description": "virtualization product does not restrict access to debug and other processor registers in the hardware, allowing a crash of the host or guest OS", "Link": "https://www.cve.org/CVERecord?id=CVE-2014-2915"}, {"Reference": "CVE-2021-3011", "Description": "virtual interrupt controller in a virtualization product allows crash of host by writing a certain invalid value to a register, which triggers a fatal error instead of returning an error code", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-3011"}, {"Reference": "CVE-2020-12446", "Description": "Driver exposes access to Model Specific Register (MSR) registers, allowing admin privileges.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-12446"}, {"Reference": "CVE-2015-2150", "Description": "Virtualization product does not restrict access to PCI command registers, allowing host crash from the guest.", "Link": "https://www.cve.org/CVERecord?id=CVE-2015-2150"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1263", "Name": "Improper Physical Access Control", "Abstraction": "Class", "Description": "The product is designed with access restricted to certain information, but it does not sufficiently protect against an unauthorized actor with physical access to these areas.", "ExtendedDescription": "Sections of a product intended to have restricted access may be inadvertently or intentionally rendered accessible when the implemented physical protections are insufficient. The specific requirements around how robust the design of the physical protection mechanism needs to be depends on the type of product being protected. Selecting the correct physical protection mechanism and properly enforcing it through implementation and manufacturing are critical to the overall physical security of the product.", "MappingNotes": {"Usage": "Allowed-with-Review"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2022-36443", "Description": "An issue was discovered in Zebra Enterprise Home Screen 4.1.19. The device allows the administrator to lock some communication channels (wireless and SD card) but it is still possible to use a physical connection (Ethernet cable) without restriction."}, {"Reference": "CVE-2022-41505", "Description": "An access control issue on TP-LInk Tapo C200 V1 devices allows physically proximate attackers to obtain root access by connecting to the UART pins, interrupting the boot process, and setting an init=/bin/sh value."}]}
{"ID": "1264", "Name": "Hardware Logic with Insecure De-Synchronization between Control and Data Channels", "Abstraction": "Base", "Description": "The hardware logic for error handling and security checks can incorrectly forward data before the security check is complete.", "ExtendedDescription": "\n\nMany high-performance on-chip bus protocols and processor data-paths employ separate channels for control and data to increase parallelism and maximize throughput. Bugs in the hardware logic that handle errors and security checks can make it possible for data to be forwarded before the completion of the security checks. If the data can propagate to a location in the hardware observable to an attacker, loss of data confidentiality can occur. 'Meltdown' is a concrete example of how de-synchronization between data and permissions checking logic can violate confidentiality requirements. Data loaded from a page marked as privileged was returned to the cpu regardless of current privilege level for performance reasons. The assumption was that the cpu could later remove all traces of this data during the handling of the illegal memory access exception, but this assumption was proven false as traces of the secret data were not removed from the microarchitectural state.\n", "ObservedExamples": [{"Reference": "CVE-2017-5754", "Description": "Systems with microprocessors utilizing speculative execution and indirect branch prediction may allow unauthorized disclosure of information to an attacker with local user access via a side-channel analysis of the data cache.", "Link": "https://www.cve.org/CVERecord?id=CVE-2017-5754"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1265", "Name": "Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls", "Abstraction": "Base", "Description": "During execution of non-reentrant code, the product performs a call that unintentionally produces a nested invocation of the non-reentrant code.", "ExtendedDescription": "In a complex product, a single function call may lead to many different possible code paths, some of which may involve deeply nested calls. It may be difficult to foresee all possible code paths that could emanate from a given function call. In some systems, an external actor can manipulate inputs to the system and thereby achieve a wide range of possible control flows. This is frequently a concern in products that execute scripts from untrusted sources. Examples of such products are web browsers and PDF readers. A weakness is present when one of the possible code paths resulting from a function call alters program state that the original caller assumes to be unchanged during the call.", "ObservedExamples": [{"Reference": "CVE-2014-1772", "Description": "In this vulnerability, by registering a malicious onerror handler, an adversary can produce unexpected re-entrance of a CDOMRange object. [REF-1098]", "Link": "https://www.cve.org/CVERecord?id=CVE-2014-1772"}, {"Reference": "CVE-2018-8174", "Description": "This CVE covers several vulnerable scenarios enabled by abuse of the Class_Terminate feature in Microsoft VBScript. In one scenario, Class_Terminate is used to produce an undesirable re-entrance of ScriptingDictionary during execution of that object's destructor. In another scenario, a vulnerable condition results from a recursive entrance of a property setter method. This recursive invocation produces a second, spurious call to the Release method of a reference-counted object, causing a UAF when that object is freed prematurely. This vulnerability pattern has been popularized as \"Double Kill\". [REF-1099]", "Link": "https://www.cve.org/CVERecord?id=CVE-2018-8174"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1266", "Name": "Improper Scrubbing of Sensitive Data from Decommissioned Device", "Abstraction": "Base", "Description": "The product does not properly provide a capability for the product administrator to remove sensitive data at the time the product is decommissioned.  A scrubbing capability could be missing, insufficient, or incorrect.", "ExtendedDescription": "\n\nWhen a product is decommissioned - i.e., taken out of service - best practices or regulatory requirements may require the administrator to remove or overwrite sensitive data first, i.e. \"scrubbing.\" Improper scrubbing of sensitive data from a decommissioned device leaves that data vulnerable to acquisition by a malicious actor. Sensitive data may include, but is not limited to, device/manufacturer proprietary information, user/device credentials, network configurations, and other forms of sensitive data.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1267", "Name": "Policy Uses Obsolete Encoding", "Abstraction": "Base", "Description": "The product uses an obsolete encoding mechanism to implement access controls.", "ExtendedDescription": "\n\nWithin a System-On-a-Chip (SoC), various circuits and hardware engines generate transactions for the purpose of accessing (read/write) assets or performing various actions (e.g., reset, fetch, compute, etc.). Among various types of message information, a typical transaction is comprised of source identity (identifying the originator of the transaction) and a destination identity (routing the transaction to the respective entity). Sometimes the transactions are qualified with a Security Token. This Security Token helps the destination agent decide on the set of allowed actions (e.g., access to an asset for reads and writes). A policy encoder is used to map the bus transactions to Security Tokens that in turn are used as access-controls/protection mechanisms. A common weakness involves using an encoding which is no longer trusted, i.e., an obsolete encoding.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1268", "Name": "Policy Privileges are not Assigned Consistently Between Control and Data Agents", "Abstraction": "Base", "Description": "The product's hardware-enforced access control for a particular resource improperly accounts for privilege discrepancies between control and write policies.\n\t\t\t   ", "ExtendedDescription": "\n\nIntegrated circuits and hardware engines may provide access to resources (device-configuration, encryption keys, etc.) belonging to trusted firmware or software modules (commonly set by a BIOS or a bootloader). These accesses are typically controlled and limited by the hardware. Hardware design access control is sometimes implemented using a policy. A policy defines which entity or agent may or may not be allowed to perform an action. When a system implements multiple levels of policies, a control policy may allow direct access to a resource as well as changes to the policies themselves.\n\n\nResources that include agents in their control policy but not in their write policy could unintentionally allow an untrusted agent to insert itself in the write policy register. Inclusion in the write policy register could allow a malicious or misbehaving agent write access to resources. This action could result in security compromises including leaked information, leaked encryption keys, or modification of device configuration.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1269", "Name": "Product Released in Non-Release Configuration", "Abstraction": "Base", "Description": "The product released to market is released in pre-production or manufacturing configuration.", "ExtendedDescription": "\n\nProducts in the pre-production or manufacturing stages are configured to have many debug hooks and debug capabilities, including but not limited to:\n\n\n  - Ability to override/bypass various cryptographic checks (including authentication, authorization, and integrity)\n\n  - Ability to read/write/modify/dump internal state (including registers and memory)\n\n  - Ability to change system configurations\n\n  - Ability to run hidden or private commands that are not allowed during production (as they expose IP).\n\nThe above is by no means an exhaustive list, but it alludes to the greater capability and the greater state of vulnerability of a product during it's preproduction or manufacturing state.\n\nComplexity increases when multiple parties are involved in executing the tests before the final production version. For example, a chipmaker might fabricate a chip and run its own preproduction tests, following which the chip would be delivered to the Original Equipment Manufacturer (OEM), who would now run a second set of different preproduction tests on the same chip. Only after both of these sets of activities are complete, can the overall manufacturing phase be called \"complete\" and have the \"Manufacturing Complete\" fuse blown. However, if the OEM forgets to blow the Manufacturing Complete fuse, then the system remains in the manufacturing stage, rendering the system both exposed and vulnerable.\n", "ObservedExamples": [{"Reference": "CVE-2019-13945", "Description": "Regarding SSA-686531, a hardware based manufacturing access on S7-1200 and S7-200 SMART has occurred. A vulnerability has been identified in SIMATIC S7-1200 CPU family (incl. SIPLUS variants) (All versions), SIMATIC S7-200 SMART CPU family (All versions). There is an access mode used during manufacturing of S7-1200 CPUs that allows additional diagnostic functionality. The security vulnerability could be exploited by an attacker with physical access to the UART interface during boot process. At the time of advisory publication, no public exploitation of this security vulnerability was known.", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-13945"}, {"Reference": "CVE-2018-4251", "Description": "Laptops with Intel chipsets were found to be running in Manufacturing Mode. After this information was reported to the OEM, the vulnerability (CVE-2018-4251) was patched disallowing access to the interface.", "Link": "https://www.cve.org/CVERecord?id=CVE-2018-4251"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "127", "Name": "Buffer Under-read", "Abstraction": "Variant", "Description": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations prior to the targeted buffer.", "ExtendedDescription": "This typically occurs when the pointer or its index is decremented to a position before the buffer, when pointer arithmetic results in a position before the beginning of the valid memory location, or when a negative index is used. This may result in exposure of sensitive information or possibly a crash.", "ObservedExamples": [{"Reference": "CVE-2021-40985", "Description": "HTML conversion package has a buffer under-read, allowing a crash", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-40985"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2021-40985", "Description": "A stack-based buffer under-read in htmldoc before 1.9.12, allows attackers to cause a denial of service via a crafted BMP image to image_load_bmp."}]}
{"ID": "1270", "Name": "Generation of Incorrect Security Tokens", "Abstraction": "Base", "Description": "The product implements a Security Token mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Tokens generated in the system are incorrect.", "ExtendedDescription": "\n\nSystems-On-a-Chip (SoC) (Integrated circuits and hardware engines) implement Security Tokens to differentiate and identify actions originated from various agents. These actions could be \"read\", \"write\", \"program\", \"reset\", \"fetch\", \"compute\", etc. Security Tokens are generated and assigned to every agent on the SoC that is either capable of generating an action or receiving an action from another agent. Every agent could be assigned a unique, Security Token based on its trust level or privileges. Incorrectly generated Security Tokens could result in the same token used for multiple agents or multiple tokens being used for the same agent. This condition could result in a Denial-of-Service (DoS) or the execution of an action that in turn could result in privilege escalation or unintended access.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2022-31122", "Description": "Wire is an encrypted communication and collaboration platform. Versions prior to 2022-07-12/Chart 4.19.0 are subject to Token Recipient Confusion. If an attacker has certain details of SAML IdP metadata, and configures their own SAML on the same backend, the attacker can delete all SAML authenticated accounts of a targeted team, Authenticate as a user of the attacked team and create arbitrary accounts in the context of the team if it is not managed by SCIM. This issue is fixed in wire-server 2022-07-12 and is already deployed on all Wire managed services. On-premise instances of wire-server need to be updated to 2022-07-12/Chart 4.19.0, so that their backends are no longer affected. As a workaround, the risk of an attack can be reduced by disabling SAML configuration for teams (galley.config.settings.featureFlags.sso). Helm overrides are located in `values/wire-server/values.yaml` Note that the ability to configure SAML SSO as a team is disabled by default for on-premise installations."}]}
{"ID": "1271", "Name": "Uninitialized Value on Reset for Registers Holding Security Settings", "Abstraction": "Base", "Description": "Security-critical logic is not set to a known value on reset.", "ExtendedDescription": "\n\nWhen the device is first brought out of reset, the state of registers will be indeterminate if they have not been initialized by the logic. Before the registers are initialized, there will be a window during which the device is in an insecure state and may be vulnerable to attack.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1272", "Name": "Sensitive Information Uncleared Before Debug/Power State Transition", "Abstraction": "Base", "Description": "The product performs a power or debug state transition, but it does not clear sensitive information that should no longer be accessible due to changes to information access restrictions.", "ExtendedDescription": "\n\nA device or system frequently employs many power and sleep states during its normal operation (e.g., normal power, additional power, low power, hibernate, deep sleep, etc.). A device also may be operating within a debug condition. State transitions can happen from one power or debug state to another. If there is information available in the previous state which should not be available in the next state and is not properly removed before the transition into the next state, sensitive information may leak from the system.\n", "ObservedExamples": [{"Reference": "CVE-2020-12926", "Description": "Product software does not set a flag as per TPM specifications, thereby preventing a failed authorization attempt from being recorded after a loss of power.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-12926"}], "FunctionalAreas": ["Power"], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1273", "Name": "Device Unlock Credential Sharing", "Abstraction": "Base", "Description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.", "ExtendedDescription": "\n\n\"Unlocking a device\" often means activating certain unadvertised debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, suppose a device contains the ability to dump the content of the full system memory by disabling the memory-protection mechanisms. Since this is a highly security-sensitive capability, this capability is \"locked\" in the production part. Unless the device gets unlocked by supplying the proper credentials, the debug capabilities are not available. For cases where the chip designer, chip manufacturer (fabricator), and manufacturing and assembly testers are all employed by the same company, the risk of compromise of the credentials is greatly reduced. However, the risk is greater when the chip designer is employed by one company, the chip manufacturer is employed by another company (a foundry), and the assemblers and testers are employed by yet a third company. Since these different companies will need to perform various tests on the device to verify correct device function, they all need to share the unlock key. Unfortunately, the level of secrecy and policy might be quite different at each company, greatly increasing the risk of sensitive credentials being compromised.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1274", "Name": "Improper Access Control for Volatile Memory Containing Boot Code", "Abstraction": "Base", "Description": "The product conducts a secure-boot process that transfers bootloader code from Non-Volatile Memory (NVM) into Volatile Memory (VM), but it does not have sufficient access control or other protections for the Volatile Memory.", "ExtendedDescription": "\n\nAdversaries could bypass the secure-boot process and execute their own untrusted, malicious boot code.\n\n\nAs a part of a secure-boot process, the read-only-memory (ROM) code for a System-on-Chip (SoC) or other system fetches bootloader code from Non-Volatile Memory (NVM) and stores the code in Volatile Memory (VM), such as dynamic, random-access memory (DRAM) or static, random-access memory (SRAM). The NVM is usually external to the SoC, while the VM is internal to the SoC. As the code is transferred from NVM to VM, it is authenticated by the SoC's ROM code.\n\n\nIf the volatile-memory-region protections or access controls are insufficient to prevent modifications from an adversary or untrusted agent, the secure boot may be bypassed or replaced with the execution of an adversary's code.\n", "ObservedExamples": [{"Reference": "CVE-2019-2267", "Description": "Locked memory regions may be modified through other interfaces in a secure-boot-loader image due to improper access control.", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-2267"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1275", "Name": "Sensitive Cookie with Improper SameSite Attribute", "Abstraction": "Variant", "Description": "The SameSite attribute for sensitive cookies is not set, or an insecure value is used.", "ExtendedDescription": "The SameSite attribute controls how cookies are sent for cross-domain requests. This attribute may have three values: 'Lax', 'Strict', or 'None'. If the 'None' value is used, a website may create a cross-domain POST HTTP request to another website, and the browser automatically adds cookies to this request. This may lead to Cross-Site-Request-Forgery (CSRF) attacks if there are no additional protections in place (such as Anti-CSRF tokens).", "ObservedExamples": [{"Reference": "CVE-2022-24045", "Description": "Web application for a room automation system has client-side JavaScript that sets a sensitive cookie without the SameSite security attribute, allowing the cookie to be sniffed", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-24045"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1276", "Name": "Hardware Child Block Incorrectly Connected to Parent System", "Abstraction": "Base", "Description": "Signals between a hardware IP and the parent system design are incorrectly connected causing security risks.", "ExtendedDescription": "\n\nIndividual hardware IP must communicate with the parent system in order for the product to function correctly and as intended. If implemented incorrectly, while not causing any apparent functional issues, may cause security issues. For example, if the IP should only be reset by a system-wide hard reset, but instead the reset input is connected to a software-triggered debug mode reset (which is also asserted during a hard reset), integrity of data inside the IP can be violated.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1277", "Name": "Firmware Not Updateable", "Abstraction": "Base", "Description": "The product does not provide its\n\t\t\tusers with the ability to update or patch its\n\t\t\tfirmware to address any vulnerabilities or\n\t\t\tweaknesses that may be present.", "ExtendedDescription": "Without the ability to patch or update firmware, consumers will be left vulnerable to exploitation of any known vulnerabilities, or any vulnerabilities that are discovered in the future. This can expose consumers to permanent risk throughout the entire lifetime of the device, which could be years or decades. Some external protective measures and mitigations might be employed to aid in preventing or reducing the risk of malicious attack, but the root weakness cannot be corrected.", "ObservedExamples": [{"Reference": "CVE-2020-9054", "Description": "Chain: network-attached storage (NAS) device has a critical OS command injection (CWE-78) vulnerability that is actively exploited to place IoT devices into a botnet, but some products are \"end-of-support\" and cannot be patched (CWE-1277). [REF-1097]", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-9054"}, {"Reference": "[REF-1095]", "Description": "A hardware \"smart lock\" has weak key generation that allows attackers to steal the key by BLE sniffing, but the device's firmware cannot be upgraded and hence remains vulnerable [REF-1095].", "Link": "https://www.theregister.com/2019/12/11/f_secure_keywe/"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1278", "Name": "Missing Protection Against Hardware Reverse Engineering Using Integrated Circuit (IC) Imaging Techniques", "Abstraction": "Base", "Description": "Information stored in hardware may be recovered by an attacker with the capability to capture and analyze images of the integrated circuit using techniques such as scanning electron microscopy.", "ExtendedDescription": "\n\nThe physical structure of a device, viewed at high enough magnification, can reveal the information stored inside. Typical steps in IC reverse engineering involve removing the chip packaging (decapsulation) then using various imaging techniques ranging from high resolution x-ray microscopy to invasive techniques involving removing IC layers and imaging each layer using a scanning electron microscope.\n\n\nThe goal of such activities is to recover secret keys, unique device identifiers, and proprietary code and circuit designs embedded in hardware that the attacker has been unsuccessful at accessing through other means. These secrets may be stored in non-volatile memory or in the circuit netlist. Memory technologies such as masked ROM allow easier to extraction of secrets than One-time Programmable (OTP) memory.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1279", "Name": "Cryptographic Operations are run Before Supporting Units are Ready", "Abstraction": "Base", "Description": "Performing cryptographic operations without ensuring that the supporting inputs are ready to supply valid data may compromise the cryptographic result.", "ExtendedDescription": "Many cryptographic hardware units depend upon other hardware units to supply information to them to produce a securely encrypted result. For example, a cryptographic unit that depends on an external random-number-generator (RNG) unit for entropy must wait until the RNG unit is producing random numbers. If a cryptographic unit retrieves a private encryption key from a fuse unit, the fuse unit must be up and running before a key may be supplied.", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "128", "Name": "Wrap-around Error", "Abstraction": "Base", "Description": "Wrap around errors occur whenever a value is incremented past the maximum value for its type and therefore \"wraps around\" to a very small, negative, or undefined value.", "BackgroundDetails": ["Due to how addition is performed by computers, if a primitive is incremented past the maximum value possible for its storage space, the system will not recognize this, and therefore increment each bit as if it still had extra space. Because of how negative numbers are represented in binary, primitives interpreted as signed may \"wrap\" to very large negative values."], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1280", "Name": "Access Control Check Implemented After Asset is Accessed", "Abstraction": "Base", "Description": "A product's hardware-based access control check occurs after the asset has been accessed.", "ExtendedDescription": "\n\nThe product implements a hardware-based access control check. The asset should be accessible only after the check is successful. If, however, this operation is not atomic and the asset is accessed before the check is complete, the security of the system may be compromised.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1281", "Name": "Sequence of Processor Instructions Leads to Unexpected Behavior", "Abstraction": "Base", "Description": "Specific combinations of processor instructions lead to undesirable behavior such as locking the processor until a hard reset performed.", "ExtendedDescription": "\n\nIf the instruction set architecture (ISA) and processor logic are not designed carefully and tested thoroughly, certain combinations of instructions may lead to locking the processor or other unexpected and undesirable behavior. Upon encountering unimplemented instruction opcodes or illegal instruction operands, the processor should throw an exception and carry on without negatively impacting security. However, specific combinations of legal and illegal instructions may cause unexpected behavior with security implications such as allowing unprivileged programs to completely lock the CPU. \n", "ObservedExamples": [{"Reference": "CVE-2021-26339", "Description": "A bug in AMD CPU's core logic allows a potential DoS by using a specific x86 instruction sequence to hang the processor", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-26339"}, {"Reference": "CVE-1999-1476", "Description": "A bug in some Intel Pentium processors allow DoS (hang) via an invalid \"CMPXCHG8B\" instruction, causing a deadlock", "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1476"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1282", "Name": "Assumed-Immutable Data is Stored in Writable Memory", "Abstraction": "Base", "Description": "Immutable data, such as a first-stage bootloader, device identifiers, and \"write-once\" configuration settings are stored in writable memory that can be re-programmed or updated in the field.", "ExtendedDescription": "\n\nSecurity services such as secure boot, authentication of code and data, and device attestation all require assets such as the first stage bootloader, public keys, golden hash digests, etc. which are implicitly trusted. Storing these assets in read-only memory (ROM), fuses, or one-time programmable (OTP) memory provides strong integrity guarantees and provides a root of trust for securing the rest of the system. Security is lost if assets assumed to be immutable can be modified.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1283", "Name": "Mutable Attestation or Measurement Reporting Data", "Abstraction": "Base", "Description": "The register contents used for attestation or measurement reporting data to verify boot flow are modifiable by an adversary.", "ExtendedDescription": "\n\nA System-on-Chip (SoC) implements secure boot or verified boot. During this boot flow, the SoC often measures the code that it authenticates. The measurement is usually done by calculating the one-way hash of the code binary and extending it to the previous hash. The hashing algorithm should be a Secure One-Way hash function. The final hash, i.e., the value obtained after the completion of the boot flow, serves as the measurement data used in reporting or in attestation. The calculated hash is often stored in registers that can later be read by the party of interest to determine tampering of the boot flow. A common weakness is that the contents in these registers are modifiable by an adversary, thus spoofing the measurement.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2022-1740", "Description": "The tested version of Dominion Voting Systems ImageCast X\u2019s on-screen application hash display feature, audit log export, and application export functionality rely on self-attestation mechanisms. An attacker could leverage this vulnerability to disguise malicious applications on a device."}]}
{"ID": "1284", "Name": "Improper Validation of Specified Quantity in Input", "Abstraction": "Base", "Description": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.", "ExtendedDescription": "\n\nSpecified quantities include size, length, frequency, price, rate, number of operations, time, and others. Code may rely on specified quantities to allocate resources, perform calculations, control iteration, etc. When the quantity is not properly validated, then attackers can specify malicious quantities to cause excessive resource allocation, trigger unexpected failures, enable buffer overflows, etc.\n", "ObservedExamples": [{"Reference": "CVE-2022-21668", "Description": "Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-21668"}, {"Reference": "CVE-2008-1440", "Description": "lack of validation of length field leads to infinite loop", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1440"}, {"Reference": "CVE-2008-2374", "Description": "lack of validation of string length fields allows memory consumption or buffer over-read", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2374"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "Yes", "Top25Examples": [{"Reference": "CVE-2021-21939", "Description": "A heap-based buffer overflow vulnerability exists in the XWD parser functionality of Accusoft ImageGear 19.10. A specially-crafted file can lead to code execution. An attacker can provide a malicious file to trigger this vulnerability."}, {"Reference": "CVE-2021-21943", "Description": "A heap-based buffer overflow vulnerability exists in the XWD parser functionality of Accusoft ImageGear 19.10. A specially-crafted file can lead to code execution. An attacker can provide a malicious file to trigger this vulnerability."}, {"Reference": "CVE-2021-21950", "Description": "An out-of-bounds write vulnerability exists in the CMD_DEVICE_GET_SERVER_LIST_REQUEST functionality of the home_security binary of Anker Eufy Homebase 2 2.1.6.9h in function recv_server_device_response_msg_process. A specially-crafted network packet can lead to code execution."}, {"Reference": "CVE-2021-21951", "Description": "An out-of-bounds write vulnerability exists in the CMD_DEVICE_GET_SERVER_LIST_REQUEST functionality of the home_security binary of Anker Eufy Homebase 2 2.1.6.9h in function read_udp_push_config_file. A specially-crafted network packet can lead to code execution."}, {"Reference": "CVE-2021-21960", "Description": "A stack-based buffer overflow vulnerability exists in both the LLMNR functionality of Sealevel Systems, Inc. SeaConnect 370W v1.3.34. A specially-crafted network packet can lead to remote code execution. An attacker can send a malicious packet to trigger this vulnerability."}, {"Reference": "CVE-2021-26347", "Description": "Failure to validate the integer operand in ASP (AMD Secure Processor) bootloader may allow an attacker to introduce an integer overflow in the L2 directory table in SPI flash resulting in a potential denial of service."}, {"Reference": "CVE-2021-30350", "Description": "Lack of MBN header size verification against input buffer can lead to memory corruption in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Wearables"}, {"Reference": "CVE-2021-35132", "Description": "Out of bound write in DSP service due to improper bound check for response buffer size in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Wearables"}, {"Reference": "CVE-2021-44158", "Description": "ASUS RT-AX56U Wi-Fi Router is vulnerable to stack-based buffer overflow due to improper validation for httpd parameter length. An authenticated local area network attacker can launch arbitrary code execution to control the system or disrupt service."}, {"Reference": "CVE-2021-45918", "Description": "NHI\u2019s health insurance web service component has insufficient validation for input string length, which can result in heap-based buffer overflow attack. A remote attacker can exploit this vulnerability to flood the memory space reserved for the program, in order to terminate service without authentication, which requires a system restart to recover service."}, {"Reference": "CVE-2021-45972", "Description": "The giftrans function in giftrans 1.12.2 contains a stack-based buffer overflow because a value inside the input file determines the amount of data to write. This allows an attacker to overwrite up to 250 bytes outside of the allocated buffer with arbitrary data."}, {"Reference": "CVE-2021-46154", "Description": "A vulnerability has been identified in Simcenter Femap V2020.2 (All versions), Simcenter Femap V2021.1 (All versions). Affected application contains a stack based buffer overflow vulnerability while parsing NEU files. This could allow an attacker to execute code in the context of the current process. (ZDI-CAN-14646, ZDI-CAN-14679, ZDI-CAN-15084, ZDI-CAN-15304)"}, {"Reference": "CVE-2021-46155", "Description": "A vulnerability has been identified in Simcenter Femap V2020.2 (All versions), Simcenter Femap V2021.1 (All versions). Affected application contains a stack based buffer overflow vulnerability while parsing NEU files. This could allow an attacker to execute code in the context of the current process. (ZDI-CAN-14683, ZDI-CAN-15283, ZDI-CAN-15303, ZDI-CAN-15593)"}, {"Reference": "CVE-2021-46158", "Description": "A vulnerability has been identified in Simcenter Femap V2020.2 (All versions), Simcenter Femap V2021.1 (All versions). Affected application contains a stack based buffer overflow vulnerability while parsing NEU files. This could allow an attacker to execute code in the context of the current process. (ZDI-CAN-15085, ZDI-CAN-15289, ZDI-CAN-15602)"}, {"Reference": "CVE-2022-20689", "Description": "Multiple vulnerabilities in the Cisco Discovery Protocol functionality of Cisco ATA 190 Series Analog Telephone Adapter firmware could allow an unauthenticated, adjacent attacker to cause Cisco Discovery Protocol memory corruption on an affected device. These vulnerabilities are due to missing length validation checks when processing Cisco Discovery Protocol messages. An attacker could exploit these vulnerabilities by sending a malicious Cisco Discovery Protocol packet to an affected device. A successful exploit could allow the attacker to cause an out-of-bounds read of the valid Cisco Discovery Protocol packet data, which could allow the attacker to cause corruption in the internal Cisco Discovery Protocol database of the affected device."}, {"Reference": "CVE-2022-20690", "Description": "Multiple vulnerabilities in the Cisco Discovery Protocol functionality of Cisco ATA 190 Series Analog Telephone Adapter firmware could allow an unauthenticated, adjacent attacker to cause Cisco Discovery Protocol memory corruption on an affected device. These vulnerabilities are due to missing length validation checks when processing Cisco Discovery Protocol messages. An attacker could exploit these vulnerabilities by sending a malicious Cisco Discovery Protocol packet to an affected device. A successful exploit could allow the attacker to cause an out-of-bounds read of the valid Cisco Discovery Protocol packet data, which could allow the attacker to cause corruption in the internal Cisco Discovery Protocol database of the affected device."}, {"Reference": "CVE-2022-22072", "Description": "Buffer overflow can occur due to improper validation of NDP application information length in Snapdragon Auto, Snapdragon Compute, Snapdragon Consumer Electronics Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music"}, {"Reference": "CVE-2022-24903", "Description": "Rsyslog is a rocket-fast system for log processing. Modules for TCP syslog reception have a potential heap buffer overflow when octet-counted framing is used. This can result in a segfault or some other malfunction. As of our understanding, this vulnerability can not be used for remote code execution. But there may still be a slight chance for experts to do that. The bug occurs when the octet count is read. While there is a check for the maximum number of octets, digits are written to a heap buffer even when the octet count is over the maximum, This can be used to overrun the memory buffer. However, once the sequence of digits stop, no additional characters can be added to the buffer. In our opinion, this makes remote exploits impossible or at least highly complex. Octet-counted framing is one of two potential framing modes. It is relatively uncommon, but enabled by default on receivers. Modules `imtcp`, `imptcp`, `imgssapi`, and `imhttp` are used for regular syslog message reception. It is best practice not to directly expose them to the public. When this practice is followed, the risk is considerably lower. Module `imdiag` is a diagnostics module primarily intended for testbench runs. We do not expect it to be present on any production installation. Octet-counted framing is not very common. Usually, it needs to be specifically enabled at senders. If users do not need it, they can turn it off for the most important modules. This will mitigate the vulnerability."}, {"Reference": "CVE-2022-25727", "Description": "Memory Corruption in modem due to improper length check while copying into memory in Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Voice & Music"}, {"Reference": "CVE-2022-25793", "Description": "A Stack-based Buffer Overflow Vulnerability in Autodesk 3ds Max 2022, 2021, and 2020 may lead to code execution through the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length stack-based buffer when parsing ActionScript Byte Code files. This vulnerability may allow arbitrary code execution on affected installations of Autodesk 3ds Max."}, {"Reference": "CVE-2022-2845", "Description": "Improper Validation of Specified Quantity in Input in GitHub repository vim/vim prior to 9.0.0218. "}, {"Reference": "CVE-2022-35928", "Description": "AES Crypt is a file encryption software for multiple platforms. AES Crypt for Linux built using the source on GitHub and having the version number 3.11 has a vulnerability with respect to reading user-provided passwords and confirmations via command-line prompts. Passwords lengths were not checked before being read. This vulnerability may lead to buffer overruns. This does _not_ affect source code found on aescrypt.com, nor is the vulnerability present when providing a password or a key via the `-p` or `-k` command-line options. The problem was fixed via in commit 68761851b and will be included in release 3.16. Users are advised to upgrade. Users unable to upgrade should us the `-p` or `-k` options to provide a password or key."}, {"Reference": "CVE-2022-36063", "Description": "Azure RTOS USBx is a USB host, device, and on-the-go (OTG) embedded stack, fully integrated with Azure RTOS ThreadX and available for all Azure RTOS ThreadX\u2013supported processors. Azure RTOS USBX implementation of host support for USB CDC ECM includes an integer underflow and a buffer overflow in the `_ux_host_class_cdc_ecm_mac_address_get` function which may be potentially exploited to achieve remote code execution or denial of service. Setting mac address string descriptor length to a `0` or `1` allows an attacker to introduce an integer underflow followed (string_length) by a buffer overflow of the `cdc_ecm -> ux_host_class_cdc_ecm_node_id` array. This may allow one to redirect the code execution flow or introduce a denial of service. The fix has been included in USBX release [6.1.12](https://github.com/azure-rtos/usbx/releases/tag/v6.1.12_rel). Improved mac address string descriptor length validation to check for unexpectedly small values may be used as a workaround."}, {"Reference": "CVE-2022-36620", "Description": "D-link DIR-816 A2_v1.10CNB04, DIR-878 DIR_878_FW1.30B08.img is vulnerable to Buffer Overflow via /goform/addRouting."}, {"Reference": "CVE-2022-37134", "Description": "D-link DIR-816 A2_v1.10CNB04.img is vulnerable to Buffer Overflow via /goform/form2Wan.cgi. When wantype is 3, l2tp_usrname will be decrypted by base64, and the result will be stored in v94, which does not check the size of l2tp_usrname, resulting in stack overflow."}, {"Reference": "CVE-2022-41877", "Description": "FreeRDP is a free remote desktop protocol library and clients. Affected versions of FreeRDP are missing input length validation in `drive` channel. A malicious server can trick a FreeRDP based client to read out of bound data and send it back to the server. This issue has been addressed in version 2.9.0 and all users are advised to upgrade. Users unable to upgrade should not use the drive redirection channel - command line options `/drive`, `+drives` or `+home-drive`."}, {"Reference": "CVE-2022-4904", "Description": "A flaw was found in the c-ares package. The ares_set_sortlist is missing checks about the validity of the input string, which allows a possible arbitrary length stack overflow. This issue may cause a denial of service or a limited impact on confidentiality and integrity."}, {"Reference": "CVE-2022-20699", "Description": "Multiple vulnerabilities in Cisco Small Business RV160, RV260, RV340, and RV345 Series Routers could allow an attacker to do any of the following: Execute arbitrary code Elevate privileges Execute arbitrary commands Bypass authentication and authorization protections Fetch and run unsigned software Cause denial of service (DoS) For more information about these vulnerabilities, see the Details section of this advisory."}, {"Reference": "CVE-2022-24754", "Description": "PJSIP is a free and open source multimedia communication library written in C language. In versions prior to and including 2.12 PJSIP there is a stack-buffer overflow vulnerability which only impacts PJSIP users who accept hashed digest credentials (credentials with data_type `PJSIP_CRED_DATA_DIGEST`). This issue has been patched in the master branch of the PJSIP repository and will be included with the next release. Users unable to upgrade need to check that the hashed digest data length must be equal to `PJSIP_MD5STRLEN` before passing to PJSIP."}, {"Reference": "CVE-2021-3581", "Description": "Buffer Access with Incorrect Length Value in zephyr. Zephyr versions >= >=2.5.0 contain Buffer Access with Incorrect Length Value (CWE-805). For more information, see https://github.com/zephyrproject-rtos/zephyr/security/advisories/GHSA-8q65-5gqf-fmw5"}, {"Reference": "CVE-2022-0414", "Description": "Improper Validation of Specified Quantity in Input in Packagist dolibarr/dolibarr prior to 16.0."}, {"Reference": "CVE-2022-0596", "Description": "Improper Validation of Specified Quantity in Input in Packagist microweber/microweber prior to 1.2.11."}, {"Reference": "CVE-2022-20445", "Description": "In process_service_search_rsp of sdp_discovery.cc, there is a possible out of bounds read due to improper input validation. This could lead to remote information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-225876506"}, {"Reference": "CVE-2022-22166", "Description": "An Improper Validation of Specified Quantity in Input vulnerability in the routing protocol daemon (rpd) of Juniper Networks Junos OS allows an unauthenticated networked attacker to cause an rdp crash and thereby a Denial of Service (DoS). If a BGP update message is received over an established BGP session where a BGP SR-TE policy tunnel attribute is malformed and BGP update tracing flag is enabled, the rpd will core. This issue can happen with any BGP session as long as the previous conditions are met. This issue can not propagate as the crash occurs as soon as the malformed update is received. This issue affects Juniper Networks Junos OS: 20.4 versions prior to 20.4R3-S1; 21.1 versions prior to 21.1R2-S2, 21.1R3. This issue does not affect Juniper Networks Junos OS versions prior to 20.4R1."}, {"Reference": "CVE-2022-4171", "Description": "The demon image annotation plugin for WordPress is vulnerable to improper input validation in versions up to, and including 5.0. This is due to the plugin improperly validating the number of characters supplied during an annotation despite there being a setting to limit the number characters input. This means that unauthenticated attackers can bypass the length restrictions and input more characters than allowed via the settings."}, {"Reference": "CVE-2022-25375", "Description": "An issue was discovered in drivers/usb/gadget/function/rndis.c in the Linux kernel before 5.16.10. The RNDIS USB gadget lacks validation of the size of the RNDIS_MSG_SET command. Attackers can obtain sensitive information from kernel memory."}, {"Reference": "CVE-2022-23635", "Description": "Istio is an open platform to connect, manage, and secure microservices. In affected versions the Istio control plane, `istiod`, is vulnerable to a request processing error, allowing a malicious attacker that sends a specially crafted message which results in the control plane crashing. This endpoint is served over TLS port 15012, but does not require any authentication from the attacker. For simple installations, Istiod is typically only reachable from within the cluster, limiting the blast radius. However, for some deployments, especially [multicluster](https://istio.io/latest/docs/setup/install/multicluster/primary-remote/) topologies, this port is exposed over the public internet. There are no effective workarounds, beyond upgrading. Limiting network access to Istiod to the minimal set of clients can help lessen the scope of the vulnerability to some extent."}, {"Reference": "CVE-2021-31556", "Description": "An issue was discovered in the Oauth extension for MediaWiki through 1.35.2. MWOAuthConsumerSubmitControl.php does not ensure that the length of an RSA key will fit in a MySQL blob."}, {"Reference": "CVE-2022-20686", "Description": "Multiple vulnerabilities in the Link Layer Discovery Protocol (LLDP) functionality of Cisco ATA 190 Series Analog Telephone Adapter firmware could allow an unauthenticated, remote attacker to execute arbitrary code on an affected device and cause the LLDP service to restart. These vulnerabilities are due to missing length validation of certain LLDP packet header fields. An attacker could exploit these vulnerabilities by sending a malicious LLDP packet to an affected device. A successful exploit could allow the attacker to execute code on the affected device and cause LLDP to restart unexpectedly, resulting in a denial of service (DoS) condition."}, {"Reference": "CVE-2022-20385", "Description": "a function called 'nla_parse', do not check the len of para, it will check nla_type (which can be controlled by userspace) with 'maxtype' (in this case, it is GSCAN_MAX), then it access polciy array 'policy[type]', which OOB access happens.Product: AndroidVersions: Android SoCAndroid ID: A-238379819"}, {"Reference": "CVE-2022-26125", "Description": "Buffer overflow vulnerabilities exist in FRRouting through 8.1.0 due to wrong checks on the input packet length in isisd/isis_tlvs.c."}, {"Reference": "CVE-2022-26127", "Description": "A buffer overflow vulnerability exists in FRRouting through 8.1.0 due to missing a check on the input packet length in the babel_packet_examin function in babeld/message.c."}, {"Reference": "CVE-2022-26128", "Description": "A buffer overflow vulnerability exists in FRRouting through 8.1.0 due to a wrong check on the input packet length in the babel_packet_examin function in babeld/message.c."}, {"Reference": "CVE-2022-36086", "Description": "linked_list_allocator is an allocator usable for no_std systems. Prior to version 0.10.2, the heap initialization methods were missing a minimum size check for the given heap size argument. This could lead to out-of-bound writes when a heap was initialized with a size smaller than `3 * size_of::<usize>` because of metadata write operations. This vulnerability impacts all the initialization functions on the `Heap` and `LockedHeap` types, including `Heap::new`, `Heap::init`, `Heap::init_from_slice`, and `LockedHeap::new`. It also affects multiple uses of the `Heap::extend` method. Version 0.10.2 contains a patch for the issue. As a workaround, ensure that the heap is only initialized with a size larger than `3 * size_of::<usize>` and that the `Heap::extend` method is only called with sizes larger than `2 * size_of::<usize>()`. Also, ensure that the total heap size is (and stays) a multiple of `2 * size_of::<usize>()`."}, {"Reference": "CVE-2022-36938", "Description": "DexLoader function get_stringidx_fromdex() in Redex prior to commit 3b44c64 can load an out of bound address when loading the string index table, potentially allowing remote code execution during processing of a 3rd party Android APK file."}, {"Reference": "CVE-2021-1058", "Description": "NVIDIA vGPU software contains a vulnerability in the guest kernel mode driver and vGPU plugin, in which an input data size is not validated, which may lead to tampering of data or denial of service. This affects vGPU version 8.x (prior to 8.6) and version 11.0 (prior to 11.3)."}, {"Reference": "CVE-2021-1062", "Description": "NVIDIA vGPU manager contains a vulnerability in the vGPU plugin, in which an input data length is not validated, which may lead to tampering of data or denial of service. This affects vGPU version 8.x (prior to 8.6) and version 11.0 (prior to 11.3)."}, {"Reference": "CVE-2021-1081", "Description": "NVIDIA vGPU software contains a vulnerability in the guest kernel mode driver and Virtual GPU manager (vGPU plugin), in which an input length is not validated, which may lead to information disclosure, tampering of data, or denial of service. This affects vGPU version 12.x (prior to 12.2), version 11.x (prior to 11.4) and version 8.x (prior 8.7)."}, {"Reference": "CVE-2021-1082", "Description": "NVIDIA vGPU software contains a vulnerability in the Virtual GPU Manager (vGPU plugin), in which an input length is not validated, which may lead to information disclosure, tampering of data, or denial of service. vGPU version 12.x (prior to 12.2), version 11.x (prior to 11.4) and version 8.x (prior to 8.7)"}, {"Reference": "CVE-2021-1083", "Description": "NVIDIA vGPU software contains a vulnerability in the guest kernel mode driver and Virtual GPU Manager (vGPU plugin), in which an input length is not validated, which may lead to information disclosure, tampering of data, or denial of service. This affects vGPU version 12.x (prior to 12.2) and version 11.x (prior to 11.4)."}, {"Reference": "CVE-2021-37674", "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a denial of service via a segmentation fault in `tf.raw_ops.MaxPoolGrad` caused by missing validation. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/maxpooling_op.cc) misses some validation for the `orig_input` and `orig_output` tensors. The fixes for CVE-2021-29579 were incomplete. We have patched the issue in GitHub commit 136b51f10903e044308cf77117c0ed9871350475. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range."}, {"Reference": "CVE-2021-37677", "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the shape inference code for `tf.raw_ops.Dequantize` has a vulnerability that could trigger a denial of service via a segfault if an attacker provides invalid arguments. The shape inference [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/ops/array_ops.cc#L2999-L3014) uses `axis` to select between two different values for `minmax_rank` which is then used to retrieve tensor dimensions. However, code assumes that `axis` can be either `-1` or a value greater than `-1`, with no validation for the other values. We have patched the issue in GitHub commit da857cfa0fde8f79ad0afdbc94e88b5d4bbec764. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range."}, {"Reference": "CVE-2021-39193", "Description": "Frontier is Substrate's Ethereum compatibility layer. Prior to commit number 0b962f218f0cdd796dadfe26c3f09e68f7861b26, a bug in `pallet-ethereum` can cause invalid transactions to be included in the Ethereum block state in `pallet-ethereum` due to not validating the input data size. Any invalid transactions included this way have no possibility to alter the internal Ethereum or Substrate state. The transaction will appear to have be included, but is of no effect as it is rejected by the EVM engine. The impact is further limited by Substrate extrinsic size constraints. A patch is available in commit number 0b962f218f0cdd796dadfe26c3f09e68f7861b26. There are no workarounds aside from applying the patch."}, {"Reference": "CVE-2021-39690", "Description": "In setDisplayPadding of WallpaperManagerService.java, there is a possible way to cause a persistent DoS due to improper input validation. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-12Android ID: A-204316511"}, {"Reference": "CVE-2021-43267", "Description": "An issue was discovered in net/tipc/crypto.c in the Linux kernel before 5.14.16. The Transparent Inter-Process Communication (TIPC) functionality allows remote attackers to exploit insufficient validation of user-supplied sizes for the MSG_CRYPTO message type."}, {"Reference": "CVE-2021-45462", "Description": "In Open5GS 2.4.0, a crafted packet from UE can crash SGW-U/UPF."}, {"Reference": "CVE-2022-0174", "Description": "Improper Validation of Specified Quantity in Input vulnerability in dolibarr dolibarr/dolibarr."}, {"Reference": "CVE-2022-20493", "Description": "In Condition of Condition.java, there is a possible way to grant notification access due to improper input validation. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242846316"}, {"Reference": "CVE-2022-20543", "Description": "In multiple locations, there is a possible display crash loop due to improper input validation. This could lead to local denial of service with system execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-238178261"}, {"Reference": "CVE-2022-20687", "Description": "Multiple vulnerabilities in the Link Layer Discovery Protocol (LLDP) functionality of Cisco ATA 190 Series Analog Telephone Adapter firmware could allow an unauthenticated, remote attacker to execute arbitrary code on an affected device and cause the LLDP service to restart. These vulnerabilities are due to missing length validation of certain LLDP packet header fields. An attacker could exploit these vulnerabilities by sending a malicious LLDP packet to an affected device. A successful exploit could allow the attacker to execute code on the affected device and cause LLDP to restart unexpectedly, resulting in a denial of service (DoS) condition."}, {"Reference": "CVE-2022-20688", "Description": "A vulnerability in the Cisco Discovery Protocol functionality of Cisco ATA 190 Series Analog Telephone Adapter firmware could allow an unauthenticated, remote attacker to execute arbitrary code on an affected device and cause Cisco Discovery Protocol service to restart. This vulnerability is due to missing length validation of certain Cisco Discovery Protocol packet header fields. An attacker could exploit these vulnerabilities by sending a malicious Cisco Discovery Protocol packet to an affected device. A successful exploit could allow the attacker to execute code on the affected device and cause Cisco Discovery Protocol to restart unexpectedly, resulting in a DoS condition."}, {"Reference": "CVE-2022-2277", "Description": "Improper Input Validation vulnerability exists in the Hitachi Energy MicroSCADA X SYS600's ICCP stack during the ICCP communication establishment causes a denial-of-service when ICCP of SYS600 is request to forward any data item updates with timestamps too distant in the future to any remote ICCP system. By default, ICCP is not configured and not enabled. This issue affects: Hitachi Energy MicroSCADA X SYS600 version 10.2 to version 10.3.1. cpe:2.3:a:hitachienergy:microscada_x_sys600:10.2:*:*:*:*:*:*:* cpe:2.3:a:hitachienergy:microscada_x_sys600:10.2.1:*:*:*:*:*:*:* cpe:2.3:a:hitachienergy:microscada_x_sys600:10.3:*:*:*:*:*:*:* cpe:2.3:a:hitachienergy:microscada_x_sys600:10.3.1:*:*:*:*:*:*:*"}, {"Reference": "CVE-2022-2592", "Description": "A lack of length validation in Snippet descriptions in GitLab CE/EE affecting all versions prior to 15.1.6, 15.2 prior to 15.2.4 and 15.3 prior to 15.3.2 allows an authenticated attacker to create a maliciously large Snippet which when requested with or without authentication places excessive load on the server, potential leading to Denial of Service."}, {"Reference": "CVE-2022-28613", "Description": "A vulnerability in the HCI Modbus TCP COMPONENT of Hitachi Energy RTU500 series CMU Firmware that is caused by the validation error in the length information carried in MBAP header allows an ATTACKER to reboot the device by sending a special crafted message. This issue affects: Hitachi Energy RTU500 series CMU Firmware 12.0.*; 12.2.*; 12.4.*; 12.6.*; 12.7.*; 13.2.*."}, {"Reference": "CVE-2022-2868", "Description": "libtiff's tiffcrop utility has a improper input validation flaw that can lead to out of bounds read and ultimately cause a crash if an attacker is able to supply a crafted file to tiffcrop."}, {"Reference": "CVE-2022-3411", "Description": "A lack of length validation in GitLab CE/EE affecting all versions from 12.4 before 15.6.7, 15.7 before 15.7.6, and 15.8 before 15.8.1 allows an authenticated attacker to create a large Issue description via GraphQL which, when repeatedly requested, saturates CPU usage."}, {"Reference": "CVE-2022-39272", "Description": "Flux is an open and extensible continuous delivery solution for Kubernetes. Versions prior to 0.35.0 are subject to a Denial of Service. Users that have permissions to change Flux\u2019s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields `.spec.interval` or `.spec.timeout` (and structured variations of these fields), causing the entire object type to stop being processed. This issue is patched in version 0.35.0. As a workaround, Admission controllers can be employed to restrict the values that can be used for fields `.spec.interval` and `.spec.timeout`, however upgrading to the latest versions is still the recommended mitigation."}, {"Reference": "CVE-2022-39313", "Description": "Parse Server is an open source backend that can be deployed to any infrastructure that can run Node.js. Versions prior to 4.10.17, and prior to 5.2.8 on the 5.x branch, crash when a file download request is received with an invalid byte range, resulting in a Denial of Service. This issue has been patched in versions 4.10.17, and 5.2.8. There are no known workarounds."}, {"Reference": "CVE-2022-40761", "Description": "The function tee_obj_free in Samsung mTower through 0.3.0 allows a trusted application to trigger a Denial of Service (DoS) by invoking the function TEE_AllocateOperation with a disturbed heap layout, related to utee_cryp_obj_alloc."}, {"Reference": "CVE-2022-41896", "Description": "TensorFlow is an open source platform for machine learning. If `ThreadUnsafeUnigramCandidateSampler` is given input `filterbank_channel_count` greater than the allowed max size, TensorFlow will crash. We have patched the issue in GitHub commit 39ec7eaf1428e90c37787e5b3fbd68ebd3c48860. The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range."}, {"Reference": "CVE-2022-48297", "Description": "The geofencing kernel code has a vulnerability of not verifying the length of the input data. Successful exploitation of this vulnerability may cause out-of-bounds memory access."}, {"Reference": "CVE-2022-48298", "Description": "The geofencing kernel code does not verify the length of the input data. Successful exploitation of this vulnerability may cause out-of-bounds memory access."}, {"Reference": "CVE-2021-0934", "Description": "In findAllDeAccounts of AccountsDb.java, there is a possible denial of service due to resource exhaustion. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-169762606"}, {"Reference": "CVE-2021-28510", "Description": "For certain systems running EOS, a Precision Time Protocol (PTP) packet of a management/signaling message with an invalid Type-Length-Value (TLV) causes the PTP agent to restart. Repeated restarts of the service will make the service unavailable."}, {"Reference": "CVE-2022-0214", "Description": "The Custom Popup Builder WordPress plugin before 1.3.1 autoload data from its popup on every pages, as such data can be sent by unauthenticated user, and is not validated in length, this could cause a denial of service on the blog"}, {"Reference": "CVE-2022-1174", "Description": "A potential DoS vulnerability was discovered in Gitlab CE/EE versions 13.7 before 14.7.7, all versions starting from 14.8 before 14.8.5, all versions starting from 14.9 before 14.9.2 allowed an attacker to trigger high CPU usage via a special crafted input added in Issues, Merge requests, Milestones, Snippets, Wiki pages, etc."}, {"Reference": "CVE-2022-23319", "Description": "A segmentation fault during PCF file parsing in pcf2bdf versions >=1.05 allows an attacker to trigger a program crash via a specially crafted PCF font file. This crash affects the availability of the software and dependent downstream components."}, {"Reference": "CVE-2022-23580", "Description": "Tensorflow is an Open Source Machine Learning Framework. During shape inference, TensorFlow can allocate a large vector based on a value from a tensor controlled by the user. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range."}, {"Reference": "CVE-2022-29202", "Description": "TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.ragged.constant` does not fully validate the input arguments. This results in a denial of service by consuming all available memory. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue."}, {"Reference": "CVE-2022-36078", "Description": "Binary provides encoding/decoding in Borsh and other formats. The vulnerability is a memory allocation vulnerability that can be exploited to allocate slices in memory with (arbitrary) excessive size value, which can either exhaust available memory or crash the whole program. When using `github.com/gagliardetto/binary` to parse unchecked (or wrong type of) data from untrusted sources of input (e.g. the blockchain) into slices, it's possible to allocate memory with excessive size. When `dec.Decode(&val)` method is used to parse data into a structure that is or contains slices of values, the length of the slice was previously read directly from the data itself without any checks on the size of it, and then a slice was allocated. This could lead to an overflow and an allocation of memory with excessive size value. Users should upgrade to `v0.7.1` or higher. A workaround is not to rely on the `dec.Decode(&val)` function to parse the data, but to use a custom `UnmarshalWithDecoder()` method that reads and checks the length of any slice."}, {"Reference": "CVE-2022-37311", "Description": "OX App Suite through 7.10.6 has Uncontrolled Resource Consumption via a large location request parameter to the redirect servlet."}, {"Reference": "CVE-2022-37312", "Description": "OX App Suite through 7.10.6 has Uncontrolled Resource Consumption via a large request body containing a redirect URL to the deferrer servlet."}, {"Reference": "CVE-2022-39294", "Description": "conduit-hyper integrates a conduit application with the hyper server. Prior to version 0.4.2, `conduit-hyper` did not check any limit on a request's length before calling [`hyper::body::to_bytes`](https://docs.rs/hyper/latest/hyper/body/fn.to_bytes.html). An attacker could send a malicious request with an abnormally large `Content-Length`, which could lead to a panic if memory allocation failed for that request. In version 0.4.2, `conduit-hyper` sets an internal limit of 128 MiB per request, otherwise returning status 400 (\"Bad Request\"). This crate is part of the implementation of Rust's [crates.io](https://crates.io/), but that service is not affected due to its existing cloud infrastructure, which already drops such malicious requests. Even with the new limit in place, `conduit-hyper` is not recommended for production use, nor to directly serve the public Internet."}, {"Reference": "CVE-2022-4111", "Description": "Unrestricted file size limit can lead to DoS in tooljet/tooljet <1.27 by allowing a logged in attacker to upload profile pictures over 2MB. "}, {"Reference": "CVE-2022-41968", "Description": "Nextcloud Server is an open source personal cloud server. Prior to versions 23.0.10 and 24.0.5, calendar name lengths are not validated before writing to a database. As a result, an attacker can send unnecessary amounts of data against the database. Version 23.0.10 and 24.0.5 contain patches for the issue. No known workarounds are available."}, {"Reference": "CVE-2022-20488", "Description": "In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242703217"}, {"Reference": "CVE-2022-20491", "Description": "In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242703556"}, {"Reference": "CVE-2022-20691", "Description": "A vulnerability in the Cisco Discovery Protocol functionality of Cisco ATA 190 Series Adaptive Telephone Adapter firmware could allow an unauthenticated, adjacent attacker to cause a DoS condition of an affected device. This vulnerability is due to missing length validation of certain Cisco Discovery Protocol packet header fields. An attacker could exploit this vulnerability by sending crafted Cisco Discovery Protocol packets to an affected device. A successful exploit could allow the attacker to cause the device to exhaust available memory and cause the service to restart. Cisco has released firmware updates that address this vulnerability. "}, {"Reference": "CVE-2022-21208", "Description": "The package node-opcua before 2.74.0 are vulnerable to Denial of Service (DoS) due to a missing limitation on the number of received chunks - per single session or in total for all concurrent sessions. An attacker can exploit this vulnerability by sending an unlimited number of huge chunks (e.g. 2GB each) without sending the Final closing chunk."}, {"Reference": "CVE-2022-29212", "Description": "TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, certain TFLite models that were created using TFLite model converter would crash when loaded in the TFLite interpreter. The culprit is that during quantization the scale of values could be greater than 1 but code was always assuming sub-unit scaling. Thus, since code was calling `QuantizeMultiplierSmallerThanOneExp`, the `TFLITE_CHECK_LT` assertion would trigger and abort the process. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue."}, {"Reference": "CVE-2022-29196", "Description": "TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.raw_ops.Conv3DBackpropFilterV2` does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack. The code does not validate that the `filter_sizes` argument is a vector. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue."}, {"Reference": "CVE-2022-29200", "Description": "TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.raw_ops.LSTMBlockCell` does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack. The code does not validate the ranks of any of the arguments to this API call. This results in `CHECK`-failures when the elements of the tensor are accessed. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue."}]}
{"ID": "1285", "Name": "Improper Validation of Specified Index, Position, or Offset in Input", "Abstraction": "Base", "Description": "The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.", "ExtendedDescription": "\n\nOften, indexable resources such as memory buffers or files can be accessed using a specific position, index, or offset, such as an index for an array or a position for a file. When untrusted input is not properly validated before it is used as an index, attackers could access (or attempt to access) unauthorized portions of these resources. This could be used to cause buffer overflows, excessive resource allocation, or trigger unexpected failures. \n", "ObservedExamples": [{"Reference": "CVE-2005-0369", "Description": "large ID in packet used as array index", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0369"}, {"Reference": "CVE-2001-1009", "Description": "negative array index as argument to POP LIST command", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1009"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2022-20542", "Description": "In parseParamsBlob of types.cpp, there is a possible out of bounds write due to a missing bounds check. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-238083570"}, {"Reference": "CVE-2022-23523", "Description": "In versions prior to 0.8.1, the linux-loader crate uses the offsets and sizes provided in the ELF headers to determine the offsets to read from. If those offsets point beyond the end of the file this could lead to Virtual Machine Monitors using the `linux-loader` crate entering an infinite loop if the ELF header of the kernel they are loading was modified in a malicious manner. This issue has been addressed in 0.8.1. The issue can be mitigated by ensuring that only trusted kernel images are loaded or by verifying that the headers do not point beyond the end of the file."}, {"Reference": "CVE-2022-35893", "Description": "An issue was discovered in Insyde InsydeH2O with kernel 5.0 through 5.5. An SMM memory corruption vulnerability in the FvbServicesRuntimeDxe driver allows an attacker to write fixed or predictable data to SMRAM. Exploiting this issue could lead to escalating privileges to SMM."}, {"Reference": "CVE-2022-35896", "Description": "An issue SMM memory leak vulnerability in SMM driver (SMRAM was discovered in Insyde InsydeH2O with kernel 5.0 through 5.5. An attacker can dump SMRAM contents via the software SMI provided by the FvbServicesRuntimeDxe driver to read the contents of SMRAM, leading to information disclosure."}, {"Reference": "CVE-2022-36448", "Description": "An issue was discovered in Insyde InsydeH2O with kernel 5.0 through 5.5. There is an SMM memory corruption vulnerability in the Software SMI handler in the PnpSmm driver."}, {"Reference": "CVE-2021-1647", "Description": "Microsoft Defender Remote Code Execution Vulnerability"}, {"Reference": "CVE-2022-24521", "Description": "Windows Common Log File System Driver Elevation of Privilege Vulnerability"}, {"Reference": "CVE-2021-0076", "Description": "Improper Validation of Specified Index, Position, or Offset in Input in firmware for some Intel(R) PROSet/Wireless Wi-Fi in multiple operating systems and some Killer(TM) Wi-Fi in Windows 10 and 11 may allow a privileged user to potentially enable denial of service via local access."}, {"Reference": "CVE-2021-0175", "Description": "Improper Validation of Specified Index, Position, or Offset in Input in firmware for some Intel(R) PROSet/Wireless Wi-Fi in multiple operating systems and some Killer(TM) Wi-Fi in Windows 10 and 11 may allow an unauthenticated user to potentially enable denial of service via adjacent access."}, {"Reference": "CVE-2021-0183", "Description": "Improper Validation of Specified Index, Position, or Offset in Input in software for some Intel(R) PROSet/Wireless Wi-Fi in multiple operating systems and some Killer(TM) Wi-Fi in Windows 10 and 11 may allow an unauthenticated user to potentially enable denial of service via adjacent access."}, {"Reference": "CVE-2022-22179", "Description": "A Improper Validation of Specified Index, Position, or Offset in Input vulnerability in the Juniper DHCP daemon (jdhcpd) of Juniper Networks Junos OS allows an adjacent unauthenticated attacker to cause a crash of jdhcpd and thereby a Denial of Service (DoS). In a scenario where DHCP relay or local server is configured the problem can be triggered if a DHCPv4 packet with specific options is received leading to a corruption of the options read from the packet. This corruption can then lead to jdhcpd crash and restart. This issue affects: Juniper Networks Junos OS 17.4R1 and later versions prior to 18.4R3-S10; 19.1 versions prior to 19.1R3-S7; 19.2 versions prior to 19.2R1-S8, 19.2R3-S4; 19.3 versions prior to 19.3R3-S4; 19.4 versions prior to 19.4R3-S6; 20.1 versions prior to 20.1R3-S2; 20.2 versions prior to 20.2R3-S3; 20.3 versions prior to 20.3R3-S2; 20.4 versions prior to 20.4R3-S1; 21.1 versions prior to 21.1R2-S2, 21.1R3; 21.2 versions prior to 21.2R1-S2, 21.2R2, 21.2R3; 21.3 versions prior to 21.3R1-S1, 21.3R2."}, {"Reference": "CVE-2022-22201", "Description": "An Improper Validation of Specified Index, Position, or Offset in Input vulnerability in the Packet Forwarding Engine (PFE) of Juniper Networks Junos OS allows an unauthenticated network-based attacker to cause a Denial of Service (DoS). On SRX5000 Series with SPC3, SRX4000 Series, and vSRX, when PowerMode IPsec is configured and a malformed ESP packet matching an established IPsec tunnel is received the PFE crashes. This issue affects Juniper Networks Junos OS on SRX5000 Series with SPC3, SRX4000 Series, and vSRX: All versions prior to 19.4R2-S6, 19.4R3-S7; 20.1 versions prior to 20.1R3-S3; 20.2 versions prior to 20.2R3-S4; 20.3 versions prior to 20.3R3-S3; 20.4 versions prior to 20.4R3-S2; 21.1 versions prior to 21.1R3; 21.2 versions prior to 21.2R3; 21.3 versions prior to 21.3R1-S2, 21.3R2."}, {"Reference": "CVE-2022-22223", "Description": "On QFX10000 Series devices using Juniper Networks Junos OS when configured as transit IP/MPLS penultimate hop popping (PHP) nodes with link aggregation group (LAG) interfaces, an Improper Validation of Specified Index, Position, or Offset in Input weakness allows an attacker sending certain IP packets to cause multiple interfaces in the LAG to detach causing a Denial of Service (DoS) condition. Continued receipt and processing of these packets will sustain the Denial of Service. This issue affects IPv4 and IPv6 packets. Packets of either type can cause and sustain the DoS event. These packets can be destined to the device or be transit packets. On devices such as the QFX10008 with line cards, line cards can be restarted to restore service. On devices such as the QFX10002 you can restart the PFE service, or reboot device to restore service. This issue affects: Juniper Networks Junos OS on QFX10000 Series: All versions prior to 15.1R7-S11; 18.4 versions prior to 18.4R2-S10, 18.4R3-S10; 19.1 versions prior to 19.1R3-S8; 19.2 versions prior to 19.2R3-S4; 19.3 versions prior to 19.3R3-S5; 19.4 versions prior to 19.4R2-S6, 19.4R3-S7; 20.1 versions prior to 20.1R3-S3; 20.2 versions prior to 20.2R3-S3; 20.3 versions prior to 20.3R3-S2; 20.4 versions prior to 20.4R3-S4; 21.1 versions prior to 21.1R3; 21.2 versions prior to 21.2R3-S3; 21.3 versions prior to 21.3R3-S1. An indicator of compromise may be seen by issuing the command: request pfe execute target fpc0 command \"show jspec pechip[3] registers ps l2_node 10\" timeout 0 | refresh 1 | no-more and reviewing for backpressured output; for example: GOT: 0x220702a8 pe.ps.l2_node[10].pkt_cnt 00000076 GOT: 0x220702b4 pe.ps.l2_node[10].backpressured 00000002 <<<< STICKS HERE and requesting detail on the pepic wanio: request pfe execute target fpc0 command \"show pepic 0 wanio-info\" timeout 0 | no-more | match xe-0/0/0:2 GOT: 3 xe-0/0/0:2 10 6 3 0 1 10 189 10 0x6321b088 <<< LOOK HERE as well as looking for tail drops looking at the interface queue, for example: show interfaces queue xe-0/0/0:2 resulting in: Transmitted: Total-dropped packets: 1094137 0 pps << LOOK HERE"}, {"Reference": "CVE-2021-35092", "Description": "Processing DCB/AVB algorithm with an invalid queue index from IOCTL request could lead to arbitrary address modification in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music"}, {"Reference": "CVE-2022-30330", "Description": "In the KeepKey firmware before 7.3.2,Flaws in the supervisor interface can be exploited to bypass important security restrictions on firmware operations. Using these flaws, malicious firmware code can elevate privileges, permanently make the device inoperable or overwrite the trusted bootloader code to compromise the hardware wallet across reboots or storage wipes."}, {"Reference": "CVE-2021-26351", "Description": "Insufficient DRAM address validation in System Management Unit (SMU) may result in a DMA (Direct Memory Access) read/write from/to invalid DRAM address that could result in denial of service."}, {"Reference": "CVE-2022-26129", "Description": "Buffer overflow vulnerabilities exist in FRRouting through 8.1.0 due to wrong checks on the subtlv length in the functions, parse_hello_subtlv, parse_ihu_subtlv, and parse_update_subtlv in babeld/message.c."}, {"Reference": "CVE-2021-1060", "Description": "NVIDIA vGPU software contains a vulnerability in the guest kernel mode driver and vGPU plugin, in which an input index is not validated, which may lead to tampering of data or denial of service. This affects vGPU version 8.x (prior to 8.6) and version 11.0 (prior to 11.3)."}, {"Reference": "CVE-2021-26370", "Description": "Improper validation of destination address in SVC_LOAD_FW_IMAGE_BY_INSTANCE and SVC_LOAD_BINARY_BY_ATTRIB in a malicious UApp or ABL may allow an attacker to overwrite arbitrary bootloader memory with SPI ROM contents resulting in a loss of integrity and availability."}, {"Reference": "CVE-2022-23814", "Description": "Failure to validate addresses provided by software to BIOS commands may result in a potential loss of integrity of guest memory in a confidential compute environment. "}, {"Reference": "CVE-2022-36363", "Description": "A vulnerability has been identified in LOGO! 12/24RCE (All versions), LOGO! 12/24RCEo (All versions), LOGO! 230RCE (All versions), LOGO! 230RCEo (All versions), LOGO! 24CE (All versions), LOGO! 24CEo (All versions), LOGO! 24RCE (All versions), LOGO! 24RCEo (All versions), SIPLUS LOGO! 12/24RCE (All versions), SIPLUS LOGO! 12/24RCEo (All versions), SIPLUS LOGO! 230RCE (All versions), SIPLUS LOGO! 230RCEo (All versions), SIPLUS LOGO! 24CE (All versions), SIPLUS LOGO! 24CEo (All versions), SIPLUS LOGO! 24RCE (All versions), SIPLUS LOGO! 24RCEo (All versions). Affected devices do not properly validate an offset value which can be defined in TCP packets when calling a method. This could allow an attacker to retrieve parts of the content of the memory."}]}
{"ID": "1286", "Name": "Improper Validation of Syntactic Correctness of Input", "Abstraction": "Base", "Description": "The product receives input that is expected to be well-formed - i.e., to comply with a certain syntax - but it does not validate or incorrectly validates that the input complies with the syntax.", "ExtendedDescription": "\n\nOften, complex inputs are expected to follow a particular syntax, which is either assumed by the input itself, or declared within metadata such as headers. The syntax could be for data exchange formats, markup languages, or even programming languages. When untrusted input is not properly validated for the expected syntax, attackers could cause parsing failures, trigger unexpected errors, or expose latent vulnerabilities that might not be directly exploitable if the input had conformed to the syntax.\n", "ObservedExamples": [{"Reference": "CVE-2016-4029", "Description": "Chain: incorrect validation of intended decimal-based IP address format (CWE-1286) enables parsing of octal or hexadecimal formats (CWE-1389), allowing bypass of an SSRF protection mechanism (CWE-918).", "Link": "https://www.cve.org/CVERecord?id=CVE-2016-4029"}, {"Reference": "CVE-2007-5893", "Description": "HTTP request with missing protocol version number leads to crash", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5893"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2021-45687", "Description": "An issue was discovered in the raw-cpuid crate before 9.1.1 for Rust. If the serialize feature is used (which is not the the default), a Deserialize operation may lack sufficient validation, leading to memory corruption or a panic."}, {"Reference": "CVE-2022-22176", "Description": "An Improper Validation of Syntactic Correctness of Input vulnerability in the Juniper DHCP daemon (jdhcpd) of Juniper Networks Junos OS allows an adjacent unauthenticated attacker sending a malformed DHCP packet to cause a crash of jdhcpd and thereby a Denial of Service (DoS). If option-82 is configured in a DHCP snooping / -security scenario, jdhcpd crashes if a specific malformed DHCP request packet is received. The DHCP functionality is impacted while jdhcpd restarts, and continued exploitation of the vulnerability will lead to the unavailability of the DHCP service and thereby a sustained DoS. This issue affects Juniper Networks Junos OS 13.2 version 13.2R1 and later versions prior to 15.1R7-S11; 18.3 versions prior to 18.3R3-S6; 18.4 versions prior to 18.4R2-S9, 18.4R3-S10; 19.1 versions prior to 19.1R2-S3, 19.1R3-S7; 19.2 versions prior to 19.2R1-S8, 19.2R3-S4; 19.3 versions prior to 19.3R2-S7, 19.3R3-S4; 19.4 versions prior to 19.4R3-S6; 20.1 versions prior to 20.1R3-S3; 20.2 versions prior to 20.2R3-S3; 20.3 versions prior to 20.3R3-S1; 20.4 versions prior to 20.4R3; 21.1 versions prior to 21.1R2-S1, 21.1R3; 21.2 versions prior to 21.2R1-S1, 21.2R2. This issue does not affect Juniper Networks Junos OS version 12.3R12 and prior versions."}, {"Reference": "CVE-2022-22192", "Description": "An Improper Validation of Syntactic Correctness of Input vulnerability in the kernel of Juniper Networks Junos OS Evolved on PTX series allows a network-based, unauthenticated attacker to cause a Denial of Service (DoS). When an incoming TCP packet destined to the device is malformed there is a possibility of a kernel panic. Only TCP packets destined to the ports for BGP, LDP and MSDP can trigger this. This issue only affects PTX10004, PTX10008, PTX10016. No other PTX Series devices or other platforms are affected. This issue affects Juniper Networks Junos OS Evolved: 20.4-EVO versions prior to 20.4R3-S4-EVO; 21.3-EVO versions prior to 21.3R3-EVO; 21.4-EVO versions prior to 21.4R3-EVO; 22.1-EVO versions prior to 22.1R2-EVO. This issue does not affect Juniper Networks Junos OS Evolved versions prior to 20.4R1-EVO."}, {"Reference": "CVE-2022-45113", "Description": "Improper validation of syntactic correctness of input vulnerability exist in Movable Type series. Having a user to access a specially crafted URL may allow a remote unauthenticated attacker to set a specially crafted URL to the Reset Password page and conduct a phishing attack. Affected products/versions are as follows: Movable Type 7 r.5301 and earlier (Movable Type 7 Series), Movable Type Advanced 7 r.5301 and earlier (Movable Type Advanced 7 Series), Movable Type 6.8.7 and earlier (Movable Type 6 Series), Movable Type Advanced 6.8.7 and earlier (Movable Type Advanced 6 Series), Movable Type Premium 1.53 and earlier, and Movable Type Premium Advanced 1.53 and earlier."}, {"Reference": "CVE-2021-40017", "Description": "The HW_KEYMASTER module lacks the validity check of the key format. Successful exploitation of this vulnerability may result in out-of-bounds memory access."}, {"Reference": "CVE-2022-1941", "Description": "A parsing vulnerability for the MessageSet type in the ProtocolBuffers versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 3.21.5 for protobuf-cpp, and versions prior to and including 3.16.1, 3.17.3, 3.18.2, 3.19.4, 3.20.1 and 4.21.5 for protobuf-python can lead to out of memory failures. A specially crafted message with multiple key-value per elements creates parsing issues, and can lead to a Denial of Service against services receiving unsanitized input. We recommend upgrading to versions 3.18.3, 3.19.5, 3.20.2, 3.21.6 for protobuf-cpp and 3.18.3, 3.19.5, 3.20.2, 4.21.6 for protobuf-python. Versions for 3.16 and 3.17 are no longer updated."}, {"Reference": "CVE-2022-39376", "Description": "GLPI stands for Gestionnaire Libre de Parc Informatique. GLPI is a Free Asset and IT Management Software package that provides ITIL Service Desk features, licenses tracking and software auditing. Users may be able to inject custom fields values in `mailto` links. This issue has been patched, please upgrade to version 10.0.4. There are currently no known workarounds."}, {"Reference": "CVE-2022-40277", "Description": "Joplin version 2.8.8 allows an external attacker to execute arbitrary commands remotely on any client that opens a link in a malicious markdown file, via Joplin. This is possible because the application does not properly validate the schema/protocol of existing links in the markdown file before passing them to the 'shell.openExternal' function."}, {"Reference": "CVE-2022-41908", "Description": "TensorFlow is an open source platform for machine learning. An input `token` that is not a UTF-8 bytestring will trigger a `CHECK` fail in `tf.raw_ops.PyFunc`. We have patched the issue in GitHub commit 9f03a9d3bafe902c1e6beb105b2f24172f238645. The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range."}, {"Reference": "CVE-2022-1431", "Description": "An issue has been discovered in GitLab affecting all versions starting from 12.10 before 14.8.6, all versions starting from 14.9 before 14.9.4, all versions starting from 14.10 before 14.10.1. GitLab was not correctly handling malicious requests to the PyPi API endpoint allowing the attacker to cause uncontrolled resource consumption."}]}
{"ID": "1287", "Name": "Improper Validation of Specified Type of Input", "Abstraction": "Base", "Description": "The product receives input that is expected to be of a certain type, but it does not validate or incorrectly validates that the input is actually of the expected type.", "ExtendedDescription": "\n\nWhen input does not comply with the expected type, attackers could trigger unexpected errors, cause incorrect actions to take place, or exploit latent vulnerabilities that would not be possible if the input conformed with the expected type.\n\n\nThis weakness can appear in type-unsafe programming languages, or in programming languages that support casting or conversion of an input to another type.\n", "ObservedExamples": [{"Reference": "CVE-2024-37032", "Description": "Large language model (LLM) management tool does not validate the format of a digest value (CWE-1287) from a private, untrusted model registry, enabling relative path traversal (CWE-23), a.k.a. Probllama", "Link": "https://www.cve.org/CVERecord?id=CVE-2024-37032"}, {"Reference": "CVE-2008-2223", "Description": "SQL injection through an ID that was supposed to be numeric.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2223"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2022-22228", "Description": "An Improper Validation of Specified Type of Input vulnerability in the routing protocol daemon (rpd) of Juniper Networks Junos OS allows an attacker to cause an RPD memory leak leading to a Denial of Service (DoS). This memory leak only occurs when the attacker's packets are destined to any configured IPv6 address on the device. This issue affects: Juniper Networks Junos OS 21.1 versions prior to 21.1R3-S2; 21.2 versions prior to 21.2R3-S1; 21.3 versions prior to 21.3R3; 21.4 versions prior to 21.4R2; 22.1 versions prior to 22.1R2. This issue does not affect Juniper Networks Junos OS versions prior to 21.1R1."}, {"Reference": "CVE-2022-32226", "Description": "An improper access control vulnerability exists in Rocket.Chat <v5, <v4.8.2 and <v4.7.5 due to input data in the getUsersOfRoom Meteor server method is not type validated, so that MongoDB query operator objects are accepted by the server, so that instead of a matching rid String a$regex query can be executed, bypassing the room access permission check for every but the first matching room."}, {"Reference": "CVE-2021-0600", "Description": "In onCreate of DeviceAdminAdd.java, there is a possible way to mislead a user to activate a device admin app due to improper input validation. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android-8.1 Android-9 Android-10 Android-11Android ID: A-179042963"}, {"Reference": "CVE-2021-38455", "Description": "The affected product\u2019s OS Service does not verify any given parameter. A user can supply any type of parameter that will be passed to inner calls without checking the type of the parameter or the value."}, {"Reference": "CVE-2021-43802", "Description": "Etherpad is a real-time collaborative editor. In versions prior to 1.8.16, an attacker can craft an `*.etherpad` file that, when imported, might allow the attacker to gain admin privileges for the Etherpad instance. This, in turn, can be used to install a malicious Etherpad plugin that can execute arbitrary code (including system commands). To gain privileges, the attacker must be able to trigger deletion of `express-session` state or wait for old `express-session` state to be cleaned up. Core Etherpad does not delete any `express-session` state, so the only known attacks require either a plugin that can delete session state or a custom cleanup process (such as a cron job that deletes old `sessionstorage:*` records). The problem has been fixed in version 1.8.16. If users cannot upgrade to 1.8.16 or install patches manually, several workarounds are available. Users may configure their reverse proxies to reject requests to `/p/*/import`, which will block all imports, not just `*.etherpad` imports; limit all users to read-only access; and/or prevent the reuse of `express_sid` cookie values that refer to deleted express-session state. More detailed information and general mitigation strategies may be found in the GitHub Security Advisory."}, {"Reference": "CVE-2021-44354", "Description": "Multiple denial of service vulnerabilities exist in the cgiserver.cgi JSON command parser functionality of Reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44355", "Description": "Multiple denial of service vulnerabilities exist in the cgiserver.cgi JSON command parser functionality of Reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44356", "Description": "Multiple denial of service vulnerabilities exist in the cgiserver.cgi JSON command parser functionality of Reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44357", "Description": "Multiple denial of service vulnerabilities exist in the cgiserver.cgi JSON command parser functionality of Reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44358", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetRec param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44359", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetCrop param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44360", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetNorm param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44361", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. Set3G param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44362", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetCloudSchedule param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44363", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetPush param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44364", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetWifi param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44365", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetDevName param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44366", "Description": "Multiple denial of service vulnerabilities exist in the cgiserver.cgi JSON command parser functionality of Reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44367", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetUpnp param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44368", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetNetPort param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44369", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetNtp param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44370", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetFtp param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44371", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetEmail param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44372", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetLocalLink param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44373", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetAutoFocus param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44374", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetMask param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44375", "Description": "Multiple denial of service vulnerabilities exist in the cgiserver.cgi JSON command parser functionality of Reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44376", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetIsp param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44377", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetImage param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44378", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetEnc param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44379", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetAutoMaint param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44380", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetTime param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44381", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetPowerLed param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44382", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot.SetIrLights param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44383", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetAutoUpgrade param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44384", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetPtzTattern param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44385", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetPtzSerial param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44386", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetPtzPatrol param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44387", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. SetPtzPreset param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44388", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. Login param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44389", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. GetAbility param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44390", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. Format param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44391", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. GetEnc param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44392", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. GetImage param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44393", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. GetIsp param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44394", "Description": "Multiple denial of service vulnerabilities exist in the cgiserver.cgi JSON command parser functionality of Reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44395", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. GetMask param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44396", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. Preview param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44397", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. rtmp=start param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44398", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. rtmp=stop param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44399", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. GetPtzPreset param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44400", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. GetPtzPatrol param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44401", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. PtzCtrl param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44402", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. GetPtzSerial param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44403", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. GetPtzTattern param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44404", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. GetZoomFocus param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44405", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. StartZoomFocus param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44406", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. GetAutoFocus param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44407", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. TestEmail param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44408", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. TestFtp param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44409", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. TestWifi param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44410", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. UpgradePrepare param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44411", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. Search param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44412", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. GetRec param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44413", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. AddUser param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44414", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. DelUser param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44415", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. ModifyUser param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44416", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. Disconnect param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44417", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. GetAlarm param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44418", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. GetMdState param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2021-44419", "Description": "A denial of service vulnerability exists in the cgiserver.cgi JSON command parser functionality of reolink RLC-410W v3.0.0.136_20121102. A specially-crafted HTTP request can lead to a reboot. GetMdAlarm param is not object. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2022-20545", "Description": "In bindArtworkAndColors of MediaControlPanel.java, there is a possible way to crash the phone due to improper input validation. This could lead to remote denial of service with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-239368697"}, {"Reference": "CVE-2022-20783", "Description": "A vulnerability in the packet processing functionality of Cisco TelePresence Collaboration Endpoint (CE) Software and Cisco RoomOS Software could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on an affected device. This vulnerability is due to insufficient input validation. An attacker could exploit this vulnerability by sending crafted H.323 traffic to an affected device. A successful exploit could allow the attacker to cause the affected device to either reboot normally or reboot into maintenance mode, which could result in a DoS condition on the device."}, {"Reference": "CVE-2022-29191", "Description": "TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.raw_ops.GetSessionTensor` does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue."}, {"Reference": "CVE-2022-29192", "Description": "TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.raw_ops.QuantizeAndDequantizeV4Grad` does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue."}, {"Reference": "CVE-2022-29193", "Description": "TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.raw_ops.TensorSummaryV2` does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue."}, {"Reference": "CVE-2022-29194", "Description": "TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.raw_ops.DeleteSessionTensor` does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue."}, {"Reference": "CVE-2022-4033", "Description": "The Quiz and Survey Master plugin for WordPress is vulnerable to input validation bypass via the 'question[id]' parameter in versions up to, and including, 8.0.4 due to insufficient input validation that allows attackers to inject content other than the specified value (i.e. a number, file path, etc..). This makes it possible attackers to submit values other than the intended input type."}, {"Reference": "CVE-2022-43723", "Description": "A vulnerability has been identified in SICAM PAS/PQS (All versions < V7.0), SICAM PAS/PQS (All versions >= 7.0 < V8.06). Affected software does not properly validate the input for a certain parameter in the s7ontcp.dll. This could allow an unauthenticated remote attacker to send messages and create a denial of service condition as the application crashes. At the time of assigning the CVE, the affected firmware version of the component has already been superseded by succeeding mainline versions."}, {"Reference": "CVE-2022-44556", "Description": "Missing parameter type validation in the DRM module. Successful exploitation of this vulnerability may affect availability. "}, {"Reference": "CVE-2022-21144", "Description": "This affects all versions of package libxmljs. When invoking the libxmljs.parseXml function with a non-buffer argument the V8 code will attempt invoking the .toString method of the argument. If the argument's toString value is not a Function object V8 will crash."}, {"Reference": "CVE-2022-29195", "Description": "TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.raw_ops.StagePeek` does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack. The code assumes `index` is a scalar but there is no validation for this before accessing its value. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue."}, {"Reference": "CVE-2022-29197", "Description": "TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.raw_ops.UnsortedSegmentJoin` does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack. The code assumes `num_segments` is a scalar but there is no validation for this before accessing its value. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue."}, {"Reference": "CVE-2022-29198", "Description": "TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.raw_ops.SparseTensorToCSRSparseMatrix` does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack. The code assumes `dense_shape` is a vector and `indices` is a matrix (as part of requirements for sparse tensors) but there is no validation for this. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue."}, {"Reference": "CVE-2022-29199", "Description": "TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.raw_ops.LoadAndRemapMatrix does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack. The code assumes `initializing_values` is a vector but there is no validation for this before accessing its value. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue."}]}
{"ID": "1288", "Name": "Improper Validation of Consistency within Input", "Abstraction": "Base", "Description": "The product receives a complex input with multiple elements or fields that must be consistent with each other, but it does not validate or incorrectly validates that the input is actually consistent.", "ExtendedDescription": "\n\nSome input data can be structured with multiple elements or fields that must be consistent with each other, e.g. a number-of-items field that is followed by the expected number of elements. When such complex inputs are inconsistent, attackers could trigger unexpected errors, cause incorrect actions to take place, or exploit latent vulnerabilities.\n", "ObservedExamples": [{"Reference": "CVE-2018-16733", "Description": "product does not validate that the start block appears before the end block", "Link": "https://www.cve.org/CVERecord?id=CVE-2018-16733"}, {"Reference": "CVE-2006-3790", "Description": "size field that is inconsistent with packet size leads to buffer over-read", "Link": "https://www.cve.org/CVERecord?id=CVE-2006-3790"}, {"Reference": "CVE-2008-4114", "Description": "system crash with offset value that is inconsistent with packet size", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4114"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2021-0163", "Description": "Improper Validation of Consistency within input in software for Intel(R) PROSet/Wireless Wi-Fi and Killer(TM) Wi-Fi in Windows 10 and 11 may allow an unauthenticated user to potentially enable escalation of privilege via adjacent access."}, {"Reference": "CVE-2021-0173", "Description": "Improper Validation of Consistency within input in firmware for some Intel(R) PROSet/Wireless Wi-Fi in multiple operating systems and some Killer(TM) Wi-Fi in Windows 10 and 11 may allow a unauthenticated user to potentially enable denial of service via adjacent access."}, {"Reference": "CVE-2021-0177", "Description": "Improper Validation of Consistency within input in software for Intel(R) PROSet/Wireless Wi-Fi and Killer(TM) Wi-Fi in Windows 10 and 11 may allow an unauthenticated user to potentially enable denial of service via adjacent access."}, {"Reference": "CVE-2021-41531", "Description": "NLnet Labs Routinator prior to 0.10.0 produces invalid RTR payload if an RPKI CA uses too large values in the max-length parameter in a ROA. This will lead to RTR clients such as routers to reject the RPKI data set, effectively disabling Route Origin Validation."}]}
{"ID": "1289", "Name": "Improper Validation of Unsafe Equivalence in Input", "Abstraction": "Base", "Description": "The product receives an input value that is used as a resource identifier or other type of reference, but it does not validate or incorrectly validates that the input is equivalent to a potentially-unsafe value.", "ExtendedDescription": "\n\nAttackers can sometimes bypass input validation schemes by finding inputs that appear to be safe, but will be dangerous when processed at a lower layer or by a downstream component. For example, a simple XSS protection mechanism might try to validate that an input has no \"<script>\" tags using case-sensitive matching, but since HTML is case-insensitive when processed by web browsers, an attacker could inject \"<ScrIpT>\" and trigger XSS.\n", "ObservedExamples": [{"Reference": "CVE-2021-39155", "Description": "Chain: A microservice integration and management platform compares the hostname in the HTTP Host header in a case-sensitive way (CWE-178, CWE-1289), allowing bypass of the authorization policy (CWE-863) using a hostname with mixed case or other variations.", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-39155"}, {"Reference": "CVE-2020-11053", "Description": "Chain: Go-based Oauth2 reverse proxy can send the authenticated user to another site at the end of the authentication flow. A redirect URL with HTML-encoded whitespace characters can bypass the validation (CWE-1289) to redirect to a malicious site (CWE-601)", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-11053"}, {"Reference": "CVE-2005-0269", "Description": "File extension check in forum software only verifies extensions that contain all lowercase letters, which allows remote attackers to upload arbitrary files via file extensions that include uppercase letters.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0269"}, {"Reference": "CVE-2001-1238", "Description": "Task Manager does not allow local users to end processes with uppercase letters named (1) winlogon.exe, (2) csrss.exe, (3) smss.exe and (4) services.exe via the Process tab which could allow local users to install Trojan horses that cannot be stopped.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1238"}, {"Reference": "CVE-2004-2214", "Description": "HTTP server allows bypass of access restrictions using URIs with mixed case.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2214"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2021-29468", "Description": "Cygwin Git is a patch set for the git command line tool for the cygwin environment. A specially crafted repository that contains symbolic links as well as files with backslash characters in the file name may cause just-checked out code to be executed while checking out a repository using Git on Cygwin. The problem will be patched in the Cygwin Git v2.31.1-2 release. At time of writing, the vulnerability is present in the upstream Git source code; any Cygwin user who compiles Git for themselves from upstream sources should manually apply a patch to mitigate the vulnerability. As mitigation users should not clone or pull from repositories from untrusted sources. CVE-2019-1354 was an equivalent vulnerability in Git for Visual Studio."}, {"Reference": "CVE-2022-0675", "Description": "In certain situations it is possible for an unmanaged rule to exist on the target system that has the same comment as the rule specified in the manifest. This could allow for unmanaged rules to exist on the target system and leave the system in an unsafe state."}]}
{"ID": "129", "Name": "Improper Validation of Array Index", "Abstraction": "Variant", "Description": "The product uses untrusted input when calculating or using an array index, but the product does not validate or incorrectly validates the index to ensure the index references a valid position within the array.", "AlternateTerms": [{"Term": "out-of-bounds array index"}, {"Term": "index-out-of-range"}, {"Term": "array index underflow"}], "ObservedExamples": [{"Reference": "CVE-2005-0369", "Description": "large ID in packet used as array index", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0369"}, {"Reference": "CVE-2001-1009", "Description": "negative array index as argument to POP LIST command", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1009"}, {"Reference": "CVE-2003-0721", "Description": "Integer signedness error leads to negative array index", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0721"}, {"Reference": "CVE-2004-1189", "Description": "product does not properly track a count and a maximum number, which can lead to resultant array index overflow.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1189"}, {"Reference": "CVE-2007-5756", "Description": "Chain: device driver for packet-capturing software allows access to an unintended IOCTL with resultant array index error.", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5756"}, {"Reference": "CVE-2005-2456", "Description": "Chain: array index error (CWE-129) leads to deadlock (CWE-833)", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2456"}], "AffectedResources": ["Memory"], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "Yes", "Top25Examples": [{"Reference": "CVE-2021-21947", "Description": "Two heap-based buffer overflow vulnerabilities exists in the JPEG-JFIF lossless Huffman image parser functionality of Accusoft ImageGear 19.10. A specially-crafted file can lead to a heap buffer overflow. An attacker can provide a malicious file to trigger these vulnerabilities.This heap-based buffer overflow takes place when the `SOF3` precision is greater or equal than 9."}, {"Reference": "CVE-2021-30311", "Description": "Possible heap overflow due to lack of index validation before allocating and writing to heap buffer in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Industrial IOT, Snapdragon Mobile"}, {"Reference": "CVE-2021-35121", "Description": "An array index is improperly used to lock and unlock a mutex which can lead to a Use After Free condition In the Synx driver in Snapdragon Compute, Snapdragon Connectivity, Snapdragon Industrial IOT, Snapdragon Mobile"}, {"Reference": "CVE-2022-1237", "Description": "Improper Validation of Array Index in GitHub repository radareorg/radare2 prior to 5.6.8. This vulnerability is heap overflow and may be exploitable. For more general description of heap buffer overflow, see [CWE](https://cwe.mitre.org/data/definitions/122.html)."}, {"Reference": "CVE-2022-46152", "Description": "OP-TEE Trusted OS is the secure side implementation of OP-TEE project, a Trusted Execution Environment. Versions prior to 3.19.0, contain an Improper Validation of Array Index vulnerability. The function `cleanup_shm_refs()` is called by both `entry_invoke_command()` and `entry_open_session()`. The commands `OPTEE_MSG_CMD_OPEN_SESSION` and `OPTEE_MSG_CMD_INVOKE_COMMAND` can be executed from the normal world via an OP-TEE SMC. This function is not validating the `num_params` argument, which is only limited to `OPTEE_MSG_MAX_NUM_PARAMS` (127) in the function `get_cmd_buffer()`. Therefore, an attacker in the normal world can craft an SMC call that will cause out-of-bounds reading in `cleanup_shm_refs` and potentially freeing of fake-objects in the function `mobj_put()`. A normal-world attacker with permission to execute SMC instructions may exploit this flaw. Maintainers believe this problem permits local privilege escalation from the normal world to the secure world. Version 3.19.0 contains a fix for this issue. There are no known workarounds."}, {"Reference": "CVE-2022-47342", "Description": "In engineermode services, there is a missing permission check. This could lead to local denial of service in engineermode services."}, {"Reference": "CVE-2022-47343", "Description": "In engineermode services, there is a missing permission check. This could lead to local denial of service in engineermode services."}, {"Reference": "CVE-2022-47344", "Description": "In engineermode services, there is a missing permission check. This could lead to local denial of service in engineermode services."}, {"Reference": "CVE-2022-47345", "Description": "In engineermode services, there is a missing permission check. This could lead to local denial of service in engineermode services."}, {"Reference": "CVE-2022-47346", "Description": "In engineermode services, there is a missing permission check. This could lead to local denial of service in engineermode services."}, {"Reference": "CVE-2022-47347", "Description": "In engineermode services, there is a missing permission check. This could lead to local denial of service in engineermode services."}, {"Reference": "CVE-2022-47348", "Description": "In engineermode services, there is a missing permission check. This could lead to local denial of service in engineermode services."}, {"Reference": "CVE-2021-21949", "Description": "An improper array index validation vulnerability exists in the JPEG-JFIF Scan header parser functionality of Accusoft ImageGear 19.10. A specially-crafted file can lead to an out-of-bounds write and potential code exectuion. An attacker can provide a malicious file to trigger this vulnerability."}, {"Reference": "CVE-2022-21310", "Description": "Vulnerability in the MySQL Cluster product of Oracle MySQL (component: Cluster: General). Supported versions that are affected are 7.4.34 and prior, 7.5.24 and prior, 7.6.20 and prior and 8.0.27 and prior. Difficult to exploit vulnerability allows high privileged attacker with access to the physical communication segment attached to the hardware where the MySQL Cluster executes to compromise MySQL Cluster. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in takeover of MySQL Cluster. CVSS 3.1 Base Score 6.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:A/AC:H/PR:H/UI:R/S:U/C:H/I:H/A:H)."}]}
{"ID": "1290", "Name": "Incorrect Decoding of Security Identifiers ", "Abstraction": "Base", "Description": "The product implements a decoding mechanism to decode certain bus-transaction signals to security identifiers. If the decoding is implemented incorrectly, then untrusted agents can now gain unauthorized access to the asset.", "ExtendedDescription": "\n\nIn a System-On-Chip (SoC), various integrated circuits and hardware engines generate transactions such as to access (reads/writes) assets or perform certain actions (e.g., reset, fetch, compute, etc.). Among various types of message information, a typical transaction is comprised of source identity (to identify the originator of the transaction) and a destination identity (to route the transaction to the respective entity). Sometimes the transactions are qualified with a security identifier. The security identifier helps the destination agent decide on the set of allowed actions (e.g., access an asset for read and writes). A decoder decodes the bus transactions to map security identifiers into necessary access-controls/protections.\n\n\nA common weakness that can exist in this scenario is incorrect decoding because an untrusted agent's security identifier is decoded into a trusted agent's security identifier. Thus, an untrusted agent previously without access to an asset can now gain access to the asset.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1291", "Name": "Public Key Re-Use for Signing both Debug and Production Code", "Abstraction": "Base", "Description": "The same public key is used for signing both debug and production code.", "ExtendedDescription": "\n\nA common usage of public-key cryptography is to verify the integrity and authenticity of another entity (for example a firmware binary). If a company wants to ensure that its firmware runs only on its own hardware, before the firmware runs, an encrypted hash of the firmware image will be decrypted with the public key and then verified against the now-computed hash of the firmware image. This means that the public key forms the root of trust, which necessitates that the public key itself must be protected and used properly.\n\n\nDuring the development phase, debug firmware enables many hardware debug hooks, debug modes, and debug messages for testing. Those debug facilities provide significant, additional views about the firmware's capability and, in some cases, additional capability into the chip or SoC. If compromised, these capabilities could be exploited by an attacker to take full control of the system.\n\n\nOnce the product exits the manufacturing stage and enters production, it is good practice to use a different public key. Debug firmware images are known to leak. With the debug key being reused as the production key, the debug image will also work on the production image. Thus, it will open all the internal, debug capabilities to the attacker.\n\n\nIf a different public key is used for the production image, even if the attacker gains access to the debug firmware image, they will not be able to run it on a production machine. Thus, damage will be limited to the intellectual property leakage resulting from the debug image.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1292", "Name": "Incorrect Conversion of Security Identifiers", "Abstraction": "Base", "Description": "The product implements a conversion mechanism to map certain bus-transaction signals to security identifiers. However, if the conversion is incorrectly implemented, untrusted agents can gain unauthorized access to the asset.", "ExtendedDescription": "\n\nIn a System-On-Chip (SoC), various integrated circuits and hardware engines generate transactions such as to access (reads/writes) assets or perform certain actions (e.g., reset, fetch, compute, etc.). Among various types of message information, a typical transaction is comprised of source identity (to identify the originator of the transaction) and a destination identity (to route the transaction to the respective entity). Sometimes the transactions are qualified with a security identifier. This security identifier helps the destination agent decide on the set of allowed actions (e.g., access an asset for read and writes).\n\n\nA typical bus connects several leader and follower agents. Some follower agents implement bus protocols differently from leader agents. A protocol conversion happens at a bridge to seamlessly connect different protocols on the bus. One example is a system that implements a leader with the Advanced High-performance Bus (AHB) protocol and a follower with the Open-Core Protocol (OCP). A bridge AHB-to-OCP is needed to translate the transaction from one form to the other.\n\n\nA common weakness that can exist in this scenario is that this conversion between protocols is implemented incorrectly, whereupon an untrusted agent may gain unauthorized access to an asset.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1293", "Name": "Missing Source Correlation of Multiple Independent Data", "Abstraction": "Base", "Description": "The product relies on one source of data, preventing the ability to detect if an adversary has compromised a data source.", "ExtendedDescription": "\n\nTo operate successfully, a product sometimes has to implicitly trust the integrity of an information source. When information is implicitly signed, one can ensure that the data was not tampered in transit. This does not ensure that the information source was not compromised when responding to a request. By requesting information from multiple sources, one can check if all of the data is the same. If they are not, the system should report the information sources that respond with a different or minority value as potentially compromised. If there are not enough answers to provide a majority or plurality of responses, the system should report all of the sources as potentially compromised. As the seriousness of the impact of incorrect integrity increases, so should the number of independent information sources that would need to be queried.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1294", "Name": "Insecure Security Identifier Mechanism", "Abstraction": "Class", "Description": "The System-on-Chip (SoC) implements a Security Identifier mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Identifiers are not correctly implemented.", "ExtendedDescription": "\n\nSystems-On-Chip (Integrated circuits and hardware engines) implement Security Identifiers to differentiate/identify actions originated from various agents. These actions could be 'read', 'write', 'program', 'reset', 'fetch', 'compute', etc. Security identifiers are generated and assigned to every agent in the System (SoC) that is either capable of generating an action or receiving an action from another agent. Every agent could be assigned a unique, Security Identifier based on its trust level or privileges.\n\n\nA broad class of flaws can exist in the Security Identifier process, including but not limited to missing security identifiers, improper conversion of security identifiers, incorrect generation of security identifiers, etc.\n", "MappingNotes": {"Usage": "Allowed-with-Review"}, "1003_view": "No"}
{"ID": "1295", "Name": "Debug Messages Revealing Unnecessary Information", "Abstraction": "Base", "Description": "The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.", "ExtendedDescription": "\n\nDebug messages are messages that help troubleshoot an issue by revealing the internal state of the system. For example, debug data in design can be exposed through internal memory array dumps or boot logs through interfaces like UART via TAP commands, scan chain, etc. Thus, the more information contained in a debug message, the easier it is to debug. However, there is also the risk of revealing information that could help an attacker either decipher a vulnerability, and/or gain a better understanding of the system. Thus, this extra information could lower the \"security by obscurity\" factor. While \"security by obscurity\" alone is insufficient, it can help as a part of \"Defense-in-depth\". \n", "ObservedExamples": [{"Reference": "CVE-2021-25476", "Description": "Digital Rights Management (DRM) capability for mobile platform leaks pointer information, simplifying ASLR bypass", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-25476"}, {"Reference": "CVE-2020-24491", "Description": "Processor generates debug message that contains sensitive information (\"addresses of memory transactions\").", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-24491"}, {"Reference": "CVE-2017-18326", "Description": "modem debug messages include cryptographic keys", "Link": "https://www.cve.org/CVERecord?id=CVE-2017-18326"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2022-34364", "Description": " Dell BSAFE SSL-J, versions before 6.5 and version 7.0 contain a debug message revealing unnecessary information vulnerability. This may lead to disclosing sensitive information to a locally privileged user. . "}]}
{"ID": "1296", "Name": "Incorrect Chaining or Granularity of Debug Components", "Abstraction": "Base", "Description": "The product's debug components contain incorrect chaining or granularity of debug components.", "ExtendedDescription": "\n\nFor debugging and troubleshooting a chip, several hardware design elements are often implemented, including:\n\n\n  - Various Test Access Ports (TAPs) allow boundary scan commands to be executed.\n\n  - For scanning the internal components of a chip, there are scan cells that allow the chip to be used as a \"stimulus and response\" mechanism.\n\n  - Chipmakers might create custom methods to observe the internal components of their chips by placing various tracing hubs within their chip and creating hierarchical or interconnected structures among those hubs.\n\nLogic errors during design or synthesis could misconfigure the interconnection of the debug components, which could allow unintended access permissions.", "ObservedExamples": [{"Reference": "CVE-2017-18347", "Description": "Incorrect access control in RDP Level 1 on STMicroelectronics STM32F0 series devices allows physically present attackers to extract the device's protected firmware via a special sequence of Serial Wire Debug (SWD) commands because there is a race condition between full initialization of the SWD interface and the setup of flash protection.", "Link": "https://www.cve.org/CVERecord?id=CVE-2017-18347"}, {"Reference": "CVE-2020-1791", "Description": "There is an improper authorization vulnerability in several smartphones. The system has a logic-judging error, and, under certain scenarios, a successful exploit could allow the attacker to switch to third desktop after a series of operations in ADB mode. (Vulnerability ID: HWPSIRT-2019-10114).", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-1791"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1297", "Name": "Unprotected Confidential Information on Device is Accessible by OSAT Vendors", "Abstraction": "Base", "Description": "The product does not adequately protect confidential information on the device from being accessed by Outsourced Semiconductor Assembly and Test (OSAT) vendors.", "ExtendedDescription": "\n\nIn contrast to complete vertical integration of architecting, designing, manufacturing, assembling, and testing chips all within a single organization, an organization can choose to simply architect and design a chip before outsourcing the rest of the process to OSAT entities (e.g., external foundries and test houses). In the latter example, the device enters an OSAT facility in a much more vulnerable pre-production stage where many debug and test modes are accessible. Therefore, the chipmaker must place a certain level of trust with the OSAT. To counter this, the chipmaker often requires the OSAT partner to enter into restrictive non-disclosure agreements (NDAs). Nonetheless, OSAT vendors likely have many customers, which increases the risk of accidental sharing of information. There may also be a security vulnerability in the information technology (IT) system of the OSAT facility. Alternatively, a malicious insider at the OSAT facility may carry out an insider attack. Considering these factors, it behooves the chipmaker to minimize any confidential information in the device that may be accessible to the OSAT vendor.\n\n\nLogic errors during design or synthesis could misconfigure the interconnection of the debug components, which could provide improper authorization to sensitive information.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1298", "Name": "Hardware Logic Contains Race Conditions", "Abstraction": "Base", "Description": "A race condition in the hardware logic results in undermining security guarantees of the system.", "ExtendedDescription": "\n\nA race condition in logic circuits typically occurs when a logic gate gets inputs from signals that have traversed different paths while originating from the same source. Such inputs to the gate can change at slightly different times in response to a change in the source signal. This results in a timing error or a glitch (temporary or permanent) that causes the output to change to an unwanted state before settling back to the desired state. If such timing errors occur in access control logic or finite state machines that are implemented in security sensitive flows, an attacker might exploit them to circumvent existing protections.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1299", "Name": "Missing Protection Mechanism for Alternate Hardware Interface", "Abstraction": "Base", "Description": "The lack of protections on alternate paths to access\n                control-protected assets (such as unprotected shadow registers\n                and other external facing unguarded interfaces) allows an\n                attacker to bypass existing protections to the asset that are\n\t\tonly performed against the primary path.", "ExtendedDescription": "\n\nAn asset inside a chip might have access-control protections through one interface. However, if all paths to the asset are not protected, an attacker might compromise the asset through alternate paths. These alternate paths could be through shadow or mirror registers inside the IP core, or could be paths from other external-facing interfaces to the IP core or SoC.\n\n\nConsider an SoC with various interfaces such as UART, SMBUS, PCIe, USB, etc. If access control is implemented for SoC internal registers only over the PCIe interface, then an attacker could still modify the SoC internal registers through alternate paths by coming through interfaces such as UART, SMBUS, USB, etc. \n\n\nAlternatively, attackers might be able to bypass existing protections by exploiting unprotected, shadow registers. Shadow registers and mirror registers typically refer to registers that can be accessed from multiple addresses. Writing to or reading from the aliased/mirrored address has the same effect as writing to the address of the main register. They are typically implemented within an IP core or SoC to temporarily hold certain data. These data will later be updated to the main register, and both registers will be in synch. If the shadow registers are not access-protected, attackers could simply initiate transactions to the shadow registers and compromise system security. \n", "ObservedExamples": [{"Reference": "CVE-2022-38399", "Description": "Missing protection mechanism on serial connection allows for arbitrary OS command execution.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-38399"}, {"Reference": "CVE-2020-9285", "Description": "Mini-PCI Express slot does not restrict direct memory access.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-9285"}, {"Reference": "CVE-2020-8004", "Description": "When the internal flash is protected by blocking access on the Data Bus (DBUS), it can still be indirectly accessed through the Instruction Bus (IBUS).", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8004"}, {"Reference": "CVE-2017-18293", "Description": "When GPIO is protected by blocking access to corresponding GPIO resource registers, protection can be bypassed by writing to the corresponding banked GPIO registers instead.", "Link": "https://www.cve.org/CVERecord?id=CVE-2017-18293"}, {"Reference": "CVE-2020-15483", "Description": "monitor device allows access to physical UART debug port without authentication", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-15483"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2022-43557", "Description": "The BD BodyGuard\u2122 infusion pumps specified allow for access through the RS-232 (serial) port interface. If exploited, threat actors with physical access, specialized equipment and knowledge may be able to configure or disable the pump. No electronic protected health information (ePHI), protected health information (PHI) or personally identifiable information (PII) is stored in the pump."}, {"Reference": "CVE-2022-38399", "Description": "Missing protection mechanism for alternate hardware interface in SmaCam CS-QR10 all versions and SmaCam Night Vision CS-QR20 all versions allows an attacker to execute an arbitrary OS command by having the product connect to the product's specific serial connection"}]}
{"ID": "13", "Name": "ASP.NET Misconfiguration: Password in Configuration File", "Abstraction": "Variant", "Description": "Storing a plaintext password in a configuration file allows anyone who can read the file access to the password-protected resource making them an easy target for attackers.", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "130", "Name": "Improper Handling of Length Parameter Inconsistency", "Abstraction": "Base", "Description": "The product parses a formatted message or structure, but it does not handle or incorrectly handles a length field that is inconsistent with the actual length of the associated data.", "ExtendedDescription": "If an attacker can manipulate the length parameter associated with an input such that it is inconsistent with the actual length of the input, this can be leveraged to cause the target application to behave in unexpected, and possibly, malicious ways. One of the possible motives for doing so is to pass in arbitrarily large input to the application. Another possible motivation is the modification of application state by including invalid data for subsequent properties of the application. Such weaknesses commonly lead to attacks such as buffer overflows and execution of arbitrary code.", "AlternateTerms": [{"Term": "length manipulation"}, {"Term": "length tampering"}], "ObservedExamples": [{"Reference": "CVE-2014-0160", "Description": "Chain: \"Heartbleed\" bug receives an inconsistent length parameter (CWE-130) enabling an out-of-bounds read (CWE-126), returning memory that could include private cryptographic keys and other sensitive data.", "Link": "https://www.cve.org/CVERecord?id=CVE-2014-0160"}, {"Reference": "CVE-2009-2299", "Description": "Web application firewall consumes excessive memory when an HTTP request contains a large Content-Length value but no POST data.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2299"}, {"Reference": "CVE-2001-0825", "Description": "Buffer overflow in internal string handling routine allows remote attackers to execute arbitrary commands via a length argument of zero or less, which disables the length check.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0825"}, {"Reference": "CVE-2001-1186", "Description": "Web server allows remote attackers to cause a denial of service via an HTTP request with a content-length value that is larger than the size of the request, which prevents server from timing out the connection.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1186"}, {"Reference": "CVE-2001-0191", "Description": "Service does not properly check the specified length of a cookie, which allows remote attackers to execute arbitrary commands via a buffer overflow, or brute force authentication by using a short cookie length.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0191"}, {"Reference": "CVE-2003-0429", "Description": "Traffic analyzer allows remote attackers to cause a denial of service and possibly execute arbitrary code via invalid IPv4 or IPv6 prefix lengths, possibly triggering a buffer overflow.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0429"}, {"Reference": "CVE-2000-0655", "Description": "Chat client allows remote attackers to cause a denial of service or execute arbitrary commands via a JPEG image containing a comment with an illegal field length of 1.", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0655"}, {"Reference": "CVE-2004-0492", "Description": "Server allows remote attackers to cause a denial of service and possibly execute arbitrary code via a negative Content-Length HTTP header field causing a heap-based buffer overflow.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0492"}, {"Reference": "CVE-2004-0201", "Description": "Help program allows remote attackers to execute arbitrary commands via a heap-based buffer overflow caused by a .CHM file with a large length field", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0201"}, {"Reference": "CVE-2003-0825", "Description": "Name services does not properly validate the length of certain packets, which allows attackers to cause a denial of service and possibly execute arbitrary code. Can overlap zero-length issues", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0825"}, {"Reference": "CVE-2004-0095", "Description": "Policy manager allows remote attackers to cause a denial of service (memory consumption and crash) and possibly execute arbitrary code via an HTTP POST request with an invalid Content-Length value.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0095"}, {"Reference": "CVE-2004-0826", "Description": "Heap-based buffer overflow in library allows remote attackers to execute arbitrary code via a modified record length field in an SSLv2 client hello message.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0826"}, {"Reference": "CVE-2004-0808", "Description": "When domain logons are enabled, server allows remote attackers to cause a denial of service via a SAM_UAS_CHANGE request with a length value that is larger than the number of structures that are provided.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0808"}, {"Reference": "CVE-2002-1357", "Description": "Multiple SSH2 servers and clients do not properly handle packets or data elements with incorrect length specifiers, which may allow remote attackers to cause a denial of service or possibly execute arbitrary code.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1357"}, {"Reference": "CVE-2004-0774", "Description": "Server allows remote attackers to cause a denial of service (CPU and memory exhaustion) via a POST request with a Content-Length header set to -1.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0774"}, {"Reference": "CVE-2004-0989", "Description": "Multiple buffer overflows in xml library that may allow remote attackers to execute arbitrary code via long URLs.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0989"}, {"Reference": "CVE-2004-0568", "Description": "Application does not properly validate the length of a value that is saved in a session file, which allows remote attackers to execute arbitrary code via a malicious session file (.ht), web site, or Telnet URL contained in an e-mail message, triggering a buffer overflow.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0568"}, {"Reference": "CVE-2003-0327", "Description": "Server allows remote attackers to cause a denial of service via a remote password array with an invalid length, which triggers a heap-based buffer overflow.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0327"}, {"Reference": "CVE-2003-0345", "Description": "Product allows remote attackers to cause a denial of service and possibly execute arbitrary code via an SMB packet that specifies a smaller buffer length than is required.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0345"}, {"Reference": "CVE-2004-0430", "Description": "Server allows remote attackers to execute arbitrary code via a LoginExt packet for a Cleartext Password User Authentication Method (UAM) request with a PathName argument that includes an AFPName type string that is longer than the associated length field.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0430"}, {"Reference": "CVE-2005-0064", "Description": "PDF viewer allows remote attackers to execute arbitrary code via a PDF file with a large /Encrypt /Length keyLength value.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0064"}, {"Reference": "CVE-2004-0413", "Description": "SVN client trusts the length field of SVN protocol URL strings, which allows remote attackers to cause a denial of service and possibly execute arbitrary code via an integer overflow that leads to a heap-based buffer overflow.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0413"}, {"Reference": "CVE-2004-0940", "Description": "Is effectively an accidental double increment of a counter that prevents a length check conditional from exiting a loop.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0940"}, {"Reference": "CVE-2002-1235", "Description": "Length field of a request not verified.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1235"}, {"Reference": "CVE-2005-3184", "Description": "Buffer overflow by modifying a length value.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3184"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2022-1543", "Description": "Improper handling of Length parameter in GitHub repository erudika/scoold prior to 1.49.4. When the text size is large enough the service results in a momentary outage in a production environment. That can lead to memory corruption on the server."}, {"Reference": "CVE-2022-32959", "Description": "HiCOS\u2019 client-side citizen digital certificate component has a stack-based buffer overflow vulnerability when reading IC card due to insufficient parameter length validation for OS information. An unauthenticated physical attacker can exploit this vulnerability to execute arbitrary code, manipulate system data or terminate service."}, {"Reference": "CVE-2021-3454", "Description": "Truncated L2CAP K-frame causes assertion failure. Zephyr versions >= 2.4.0, >= v.2.50 contain Improper Handling of Length Parameter Inconsistency (CWE-130), Reachable Assertion (CWE-617). For more information, see https://github.com/zephyrproject-rtos/zephyr/security/advisories/GHSA-fx88-6c29-vrp3"}, {"Reference": "CVE-2021-20608", "Description": "Improper Handling of Length Parameter Inconsistency vulnerability in Mitsubishi Electric GX Works2 versions 1.606G and prior allows a remote unauthenticated attacker to cause a DoS condition in GX Works2 by getting GX Works2 to read a tampered program file from a Mitsubishi Electric PLC by sending malicious crafted packets to tamper with the program file."}, {"Reference": "CVE-2021-20610", "Description": "Improper Handling of Length Parameter Inconsistency vulnerability in Mitsubishi Electric MELSEC iQ-R Series R00/01/02CPU, MELSEC iQ-R Series R04/08/16/32/120(EN)CPU, MELSEC iQ-R Series R08/16/32/120SFCPU, MELSEC iQ-R Series R08/16/32/120PCPU, MELSEC iQ-R Series R08/16/32/120PSFCPU, MELSEC iQ-R Series R16/32/64MTCPU, MELSEC iQ-R Series R12CCPU-V, MELSEC Q Series Q03UDECPU, MELSEC Q Series Q04/06/10/13/20/26/50/100UDEHCPU, MELSEC Q Series Q03/04/06/13/26UDVCPU, MELSEC Q Series Q04/06/13/26UDPVCPU, MELSEC Q Series Q12DCCPU-V, MELSEC Q Series Q24DHCCPU-V(G), MELSEC Q Series Q24/26DHCCPU-LS, MELSEC Q Series MR-MQ100, MELSEC Q Series Q172/173DCPU-S1, MELSEC Q Series Q172/173DSCPU, MELSEC Q Series Q170MCPU, MELSEC Q Series Q170MSCPU(-S1), MELSEC L Series L02/06/26CPU(-P), MELSEC L Series L26CPU-(P)BT and MELIPC Series MI5122-VW allows a remote unauthenticated attacker to cause a denial-of-service (DoS) condition by sending specially crafted packets. System reset is required for recovery."}, {"Reference": "CVE-2022-0677", "Description": "Improper Handling of Length Parameter Inconsistency vulnerability in the Update Server component of Bitdefender Endpoint Security Tools (in relay role), GravityZone (in Update Server role) allows an attacker to cause a Denial-of-Service. This issue affects: Bitdefender Update Server versions prior to 3.4.0.276. Bitdefender GravityZone versions prior to 26.4-1. Bitdefender Endpoint Security Tools for Linux versions prior to 6.2.21.171. Bitdefender Endpoint Security Tools for Windows versions prior to 7.4.1.111."}, {"Reference": "CVE-2022-3272", "Description": "Improper Handling of Length Parameter Inconsistency in GitHub repository ikus060/rdiffweb prior to 2.4.8."}, {"Reference": "CVE-2022-3290", "Description": "Improper Handling of Length Parameter Inconsistency in GitHub repository ikus060/rdiffweb prior to 2.4.8."}, {"Reference": "CVE-2022-30556", "Description": "Apache HTTP Server 2.4.53 and earlier may return lengths to applications calling r:wsread() that point past the end of the storage allocated for the buffer."}]}
{"ID": "1300", "Name": "Improper Protection of Physical Side Channels", "Abstraction": "Base", "Description": "The device does not contain sufficient protection\n\tmechanisms to prevent physical side channels from exposing\n\tsensitive information due to patterns in physically observable\n\tphenomena such as variations in power consumption,\n\telectromagnetic emissions (EME), or acoustic emissions.", "ExtendedDescription": "\n\nAn adversary could monitor and measure physical phenomena to detect patterns and make inferences, even if it is not possible to extract the information in the digital domain.\n\n\nPhysical side channels have been well-studied for decades in the context of breaking implementations of cryptographic algorithms or other attacks against security features. These side channels may be easily observed by an adversary with physical access to the device, or using a tool that is in close proximity. If the adversary can monitor hardware operation and correlate its data processing with power, EME, and acoustic measurements, the adversary might be able to recover of secret keys and data.\n", "ObservedExamples": [{"Reference": "CVE-2022-35888", "Description": "Power side-channels leak secret information from processor", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-35888"}, {"Reference": "CVE-2021-3011", "Description": "electromagnetic-wave side-channel in security-related microcontrollers allows extraction of private key", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-3011"}, {"Reference": "CVE-2019-14353", "Description": "Crypto hardware wallet's power consumption relates to total number of pixels illuminated, creating a side channel in the USB connection that allows attackers to determine secrets displayed such as PIN numbers and passwords", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-14353"}, {"Reference": "CVE-2020-27211", "Description": "Chain: microcontroller system-on-chip contains uses a register value stored in flash to set product protection state on the memory bus but does not contain protection against fault injection (CWE-1319), which leads to an incorrect initialization of the memory bus (CWE-1419) leading the product to be in an unprotected state.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-27211"}, {"Reference": "CVE-2013-4576", "Description": "message encryption software uses certain instruction sequences that allows RSA key extraction using a chosen-ciphertext attack and acoustic cryptanalysis", "Link": "https://www.cve.org/CVERecord?id=CVE-2013-4576"}, {"Reference": "CVE-2020-28368", "Description": "virtualization product allows recovery of AES keys from the guest OS using a side channel attack against a power/energy monitoring interface.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-28368"}, {"Reference": "CVE-2019-18673", "Description": "power consumption varies based on number of pixels being illuminated in a display, allowing reading of secrets such as the PIN by using the USB interface to measure power consumption", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-18673"}], "FunctionalAreas": ["Power"], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1301", "Name": "Insufficient or Incomplete Data Removal within Hardware Component", "Abstraction": "Base", "Description": "The product's data removal process does not completely delete all data and potentially sensitive information within hardware components.", "ExtendedDescription": "\n\nPhysical properties of hardware devices, such as remanence of magnetic media, residual charge of ROMs/RAMs, or screen burn-in may still retain sensitive data after a data removal process has taken place and power is removed.\n\n\nRecovering data after erasure or overwriting is possible due to a phenomenon called data remanence. For example, if the same value is written repeatedly to a memory location, the corresponding memory cells can become physically altered to a degree such that even after the original data is erased that data can still be recovered through physical characterization of the memory cells.\n", "ObservedExamples": [{"Reference": "CVE-2019-8575", "Description": "Firmware Data Deletion Vulnerability in which a base station factory reset might not delete all user information. The impact of this enables a new owner of a used device that has been \"factory-default reset\" with a vulnerable firmware version can still retrieve, at least, the previous owner's wireless network name, and the previous owner's wireless security (such as WPA2) key. This issue was addressed with improved, data deletion.", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-8575"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1302", "Name": "Missing Source Identifier in Entity Transactions on a System-On-Chip (SOC)", "Abstraction": "Base", "Description": "The product implements a security identifier mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. A transaction is sent without a security identifier.", "ExtendedDescription": "\n\nIn a System-On-Chip (SoC), various integrated circuits and hardware engines generate transactions such as to access (reads/writes) assets or perform certain actions (e.g., reset, fetch, compute). A typical transaction is comprised of source identity (to identify the originator of the transaction) and a destination identity (to route the transaction to the respective entity) in addition to much more information in the message. Sometimes the transactions are qualified with a Security Identifier. This Security Identifier helps the destination agent decide on the set of allowed or disallowed actions.\n\n\nA weakness that can exist in such transaction schemes is that the source agent does not consistently include the necessary Security Identifier with the transaction. If the Security Identifier is missing, the destination agent might drop the message (resulting in an inadvertent Denial-of-Service (DoS)) or take inappropriate action by default in its attempt to execute the transaction, resulting in privilege escalation or provision of unintended access.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1303", "Name": "Non-Transparent Sharing of Microarchitectural Resources", "Abstraction": "Base", "Description": "Hardware structures shared across execution contexts (e.g., caches and branch predictors) can violate the expected architecture isolation between contexts.", "ExtendedDescription": "\n\nModern processors use techniques such as out-of-order execution, speculation, prefetching, data forwarding, and caching to increase performance. Details about the implementation of these techniques are hidden from the programmer's view. This is problematic when the hardware implementation of these techniques results in resources being shared across supposedly isolated contexts. Contention for shared resources between different contexts opens covert channels that allow malicious programs executing in one context to recover information from another context.\n\n\nSome examples of shared micro-architectural resources that have been used to leak information between contexts are caches, branch prediction logic, and load or store buffers. Speculative and out-of-order execution provides an attacker with increased control over which data is leaked through the covert channel.\n\n\nIf the extent of resource sharing between contexts in the design microarchitecture is undocumented, it is extremely difficult to ensure system assets are protected against disclosure.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1304", "Name": "Improperly Preserved Integrity of Hardware Configuration State During a Power Save/Restore Operation", "Abstraction": "Base", "Description": "The product performs a power save/restore\n            operation, but it does not ensure that the integrity of\n            the configuration state is maintained and/or verified between\n\t    the beginning and ending of the operation.", "ExtendedDescription": "\n\nBefore powering down, the Intellectual Property (IP) saves current state (S) to persistent storage such as flash or always-on memory in order to optimize the restore operation. During this process, an attacker with access to the persistent storage may alter (S) to a configuration that could potentially modify privileges, disable protections, and/or cause damage to the hardware. If the IP does not validate the configuration state stored in persistent memory, upon regaining power or becoming operational again, the IP could be compromised through the activation of an unwanted/harmful configuration. \n", "FunctionalAreas": ["Power"], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "131", "Name": "Incorrect Calculation of Buffer Size", "Abstraction": "Base", "Description": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.", "ObservedExamples": [{"Reference": "CVE-2020-17087", "Description": "Chain: integer truncation (CWE-197) causes small buffer allocation (CWE-131) leading to out-of-bounds write (CWE-787) in kernel pool, as exploited in the wild per CISA KEV.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-17087"}, {"Reference": "CVE-2004-1363", "Description": "substitution overflow: buffer overflow using environment variables that are expanded after the length check is performed", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1363"}, {"Reference": "CVE-2004-0747", "Description": "substitution overflow: buffer overflow using expansion of environment variables", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0747"}, {"Reference": "CVE-2005-2103", "Description": "substitution overflow: buffer overflow using a large number of substitution strings", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2103"}, {"Reference": "CVE-2005-3120", "Description": "transformation overflow: product adds extra escape characters to incoming data, but does not account for them in the buffer length", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3120"}, {"Reference": "CVE-2003-0899", "Description": "transformation overflow: buffer overflow when expanding \">\" to \"&gt;\", etc.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0899"}, {"Reference": "CVE-2001-0334", "Description": "expansion overflow: buffer overflow using wildcards", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0334"}, {"Reference": "CVE-2001-0248", "Description": "expansion overflow: long pathname + glob = overflow", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0248"}, {"Reference": "CVE-2001-0249", "Description": "expansion overflow: long pathname + glob = overflow", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0249"}, {"Reference": "CVE-2002-0184", "Description": "special characters in argument are not properly expanded", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0184"}, {"Reference": "CVE-2004-0434", "Description": "small length value leads to heap overflow", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0434"}, {"Reference": "CVE-2002-1347", "Description": "multiple variants", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1347"}, {"Reference": "CVE-2005-0490", "Description": "needs closer investigation, but probably expansion-based", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0490"}, {"Reference": "CVE-2004-0940", "Description": "needs closer investigation, but probably expansion-based", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0940"}, {"Reference": "CVE-2008-0599", "Description": "Chain: Language interpreter calculates wrong buffer size (CWE-131) by using \"size = ptr ? X : Y\" instead of \"size = (ptr ? X : Y)\" expression.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0599"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "Yes", "Top25Examples": [{"Reference": "CVE-2021-21776", "Description": "An out-of-bounds write vulnerability exists in the SGI Format Buffer Size Processing functionality of Accusoft ImageGear 19.8. A specially crafted malformed file can lead to memory corruption. An attacker can provide a malicious file to trigger this vulnerability."}, {"Reference": "CVE-2022-22137", "Description": "A memory corruption vulnerability exists in the ioca_mys_rgb_allocate functionality of Accusoft ImageGear 19.10. A specially-crafted malformed file can lead to an arbitrary free. An attacker can provide a malicious file to trigger this vulnerability."}, {"Reference": "CVE-2022-26474", "Description": "In sensorhub, there is a possible out of bounds write due to an incorrect calculation of buffer size. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS07129717; Issue ID: ALPS07129717."}, {"Reference": "CVE-2022-32617", "Description": "In typec, there is a possible out of bounds write due to an incorrect calculation of buffer size. This could lead to local escalation of privilege, for an attacker who has physical access to the device, with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS07262364; Issue ID: ALPS07262364."}, {"Reference": "CVE-2022-32618", "Description": "In typec, there is a possible out of bounds write due to an incorrect calculation of buffer size. This could lead to local escalation of privilege, for an attacker who has physical access to the device, with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS07262454; Issue ID: ALPS07262454."}, {"Reference": "CVE-2022-32624", "Description": "In throttling, there is a possible out of bounds write due to an incorrect calculation of buffer size. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS07405923; Issue ID: ALPS07405923."}, {"Reference": "CVE-2022-32630", "Description": "In throttling, there is a possible out of bounds write due to an incorrect calculation of buffer size. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS07405966; Issue ID: ALPS07405966."}, {"Reference": "CVE-2022-32649", "Description": "In jpeg, there is a possible use after free due to a logic error. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS07225840; Issue ID: ALPS07225840."}, {"Reference": "CVE-2022-32650", "Description": "In mtk-isp, there is a possible use after free due to a logic error. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS07225853; Issue ID: ALPS07225853."}, {"Reference": "CVE-2022-32651", "Description": "In mtk-aie, there is a possible use after free due to a logic error. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS07225857; Issue ID: ALPS07225857."}]}
{"ID": "1310", "Name": "Missing Ability to Patch ROM Code", "Abstraction": "Base", "Description": "Missing an ability to patch ROM code may leave a System or System-on-Chip (SoC) in a vulnerable state.", "ExtendedDescription": "\n\nA System or System-on-Chip (SoC) that implements a boot process utilizing security mechanisms such as Root-of-Trust (RoT) typically starts by executing code from a Read-only-Memory (ROM) component. The code in ROM is immutable, hence any security vulnerabilities discovered in the ROM code can never be fixed for the systems that are already in use.\n\n\nA common weakness is that the ROM does not have the ability to patch if security vulnerabilities are uncovered after the system gets shipped. This leaves the system in a vulnerable state where an adversary can compromise the SoC.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1311", "Name": "Improper Translation of Security Attributes by Fabric Bridge", "Abstraction": "Base", "Description": "The bridge incorrectly translates security attributes from either trusted to untrusted or from untrusted to trusted when converting from one fabric protocol to another.", "ExtendedDescription": "\n\nA bridge allows IP blocks supporting different fabric protocols to be integrated into the system. Fabric end-points or interfaces usually have dedicated signals to transport security attributes. For example, HPROT signals in AHB, AxPROT signals in AXI, and MReqInfo and SRespInfo signals in OCP.\n\n\nThe values on these signals are used to indicate the security attributes of the transaction. These include the immutable hardware identity of the controller initiating the transaction, privilege level, and type of transaction (e.g., read/write, cacheable/non-cacheable, posted/non-posted).\n\n\nA weakness can arise if the bridge IP block, which translates the signals from the protocol used in the IP block endpoint to the protocol used by the central bus, does not properly translate the security attributes. As a result, the identity of the initiator could be translated from untrusted to trusted or vice-versa. This could result in access-control bypass, privilege escalation, or denial of service.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1312", "Name": "Missing Protection for Mirrored Regions in On-Chip Fabric Firewall", "Abstraction": "Base", "Description": "The firewall in an on-chip fabric protects the main addressed region, but it does not protect any mirrored memory or memory-mapped-IO (MMIO) regions.", "ExtendedDescription": "\n\nFew fabrics mirror memory and address ranges, where mirrored regions contain copies of the original data. This redundancy is used to achieve fault tolerance. Whatever protections the fabric firewall implements for the original region should also apply to the mirrored regions. If not, an attacker could bypass existing read/write protections by reading from/writing to the mirrored regions to leak or corrupt the original data.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1313", "Name": "Hardware Allows Activation of Test or Debug Logic at Runtime", "Abstraction": "Base", "Description": "During runtime, the hardware allows for test or debug logic (feature) to be activated, which allows for changing the state of the hardware. This feature can alter the intended behavior of the system and allow for alteration and leakage of sensitive data by an adversary.", "ExtendedDescription": "\n\nAn adversary can take advantage of test or debug logic that is made accessible through the hardware during normal operation to modify the intended behavior of the system. For example, an accessible Test/debug mode may allow read/write access to any system data. Using error injection (a common test/debug feature) during a transmit/receive operation on a bus, data may be modified to produce an unintended message. Similarly, confidentiality could be compromised by such features allowing access to secrets.\n", "ObservedExamples": [{"Reference": "CVE-2021-33150", "Description": "Hardware processor allows activation of test or debug logic at runtime.", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-33150"}, {"Reference": "CVE-2021-0146", "Description": "Processor allows the activation of test or debug logic at runtime, allowing escalation of privileges", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-0146"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2021-33150", "Description": "Hardware allows activation of test or debug logic at runtime for some Intel(R) Trace Hub instances which may allow an unauthenticated user to potentially enable escalation of privilege via physical access."}]}
{"ID": "1314", "Name": "Missing Write Protection for Parametric Data Values", "Abstraction": "Base", "Description": "The device does not write-protect the parametric data values for sensors that scale the sensor value, allowing untrusted software to manipulate the apparent result and potentially damage hardware or cause operational failure.", "ExtendedDescription": "\n\nVarious sensors are used by hardware to detect any devices operating outside of the design limits. The threshold limit values are set by hardware fuses or trusted software such as the BIOS. These limits may be related to thermal, power, voltage, current, and frequency. Hardware mechanisms may be used to protect against alteration of the threshold limit values by untrusted software.\n\n\nThe limit values are generally programmed in standard units for the type of value being read. However, the hardware-sensor blocks may report the settings in different units depending upon sensor design and operation. The raw sensor output value is converted to the desired units using a scale conversion based on the parametric data programmed into the sensor. The final converted value is then compared with the previously programmed limits.\n\n\nWhile the limit values are usually protected, the sensor parametric data values may not be. By changing the parametric data, safe operational limits may be bypassed.\n", "ObservedExamples": [{"Reference": "CVE-2017-8252", "Description": "Kernel can inject faults in computations during the execution of TrustZone leading to information disclosure in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer Electronics Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon IoT, Snapdragon Mobile, Snapdragon Voice and Music, Snapdragon Wearables, Snapdragon Wired Infrastructure and Networking.", "Link": "https://www.cve.org/CVERecord?id=CVE-2017-8252"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1315", "Name": "Improper Setting of Bus Controlling Capability in Fabric End-point", "Abstraction": "Base", "Description": "The bus controller enables bits in the fabric end-point to allow responder devices to control transactions on the fabric.", "ExtendedDescription": "\n\nTo support reusability, certain fabric interfaces and end points provide a configurable register bit that allows IP blocks connected to the controller to access other peripherals connected to the fabric. This allows the end point to be used with devices that function as a controller or responder. If this bit is set by default in hardware, or if firmware incorrectly sets it later, a device intended to be a responder on a fabric is now capable of controlling transactions to other devices and might compromise system security.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1316", "Name": "Fabric-Address Map Allows Programming of Unwarranted Overlaps of Protected and Unprotected Ranges", "Abstraction": "Base", "Description": "The address map of the on-chip fabric has protected and unprotected regions overlapping, allowing an attacker to bypass access control to the overlapping portion of the protected region.", "ExtendedDescription": "\n\nVarious ranges can be defined in the system-address map, either in the memory or in Memory-Mapped-IO (MMIO) space. These ranges are usually defined using special range registers that contain information, such as base address and size. Address decoding is the process of determining for which range the incoming transaction is destined. To ensure isolation, ranges containing secret data are access-control protected.\n\n\nOccasionally, these ranges could overlap. The overlap could either be intentional (e.g. due to a limited number of range registers or limited choice in choosing size of the range) or unintentional (e.g. introduced by errors). Some hardware designs allow dynamic remapping of address ranges assigned to peripheral MMIO ranges. In such designs, intentional address overlaps can be created through misconfiguration by malicious software. When protected and unprotected ranges overlap, an attacker could send a transaction and potentially compromise the protections in place, violating the principle of least privilege. \n", "ObservedExamples": [{"Reference": "CVE-2009-4419", "Description": "Attacker can modify MCHBAR register to overlap with an attacker-controlled region, which modification prevents the SENTER instruction from properly applying VT-d protection while a Measured Launch Environment is being launched.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-4419"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1317", "Name": "Improper Access Control in Fabric Bridge", "Abstraction": "Base", "Description": "The product uses a fabric bridge for transactions between two Intellectual Property (IP) blocks, but the bridge does not properly perform the expected privilege, identity, or other access control checks between those IP blocks.", "ExtendedDescription": "\n\nIn hardware designs, different IP blocks are connected through interconnect-bus fabrics (e.g. AHB and OCP). Within a System on Chip (SoC), the IP block subsystems could be using different bus protocols. In such a case, the IP blocks are then linked to the central bus (and to other IP blocks) through a fabric bridge. Bridges are used as bus-interconnect-routing modules that link different protocols or separate, different segments of the overall SoC interconnect.\n\n\nFor overall system security, it is important that the access-control privileges associated with any fabric transaction are consistently maintained and applied, even when they are routed or translated by a fabric bridge. A bridge that is connected to a fabric without security features forwards transactions to the slave without checking the privilege level of the master and results in a weakness in SoC access-control security. The same weakness occurs if a bridge does not check the hardware identity of the transaction received from the slave interface of the bridge.\n", "ObservedExamples": [{"Reference": "CVE-2019-6260", "Description": "Baseboard Management Controller (BMC) device implements Advanced High-performance Bus (AHB) bridges that do not require authentication for arbitrary read and write access to the BMC's physical address space from the host, and possibly the network [REF-1138].", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-6260"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1318", "Name": "Missing Support for Security Features in On-chip Fabrics or Buses", "Abstraction": "Base", "Description": " On-chip fabrics or buses either do not support or are not configured to support privilege separation or other security features, such as access control. ", "ExtendedDescription": "\n\nCertain on-chip fabrics and buses, especially simple and low-power buses, do not support security features. Apart from data transfer and addressing ports, some fabrics and buses do not have any interfaces to transfer privilege, immutable identity, or any other security attribute coming from the bus master. Similarly, they do not have dedicated signals to transport security-sensitive data from slave to master, such as completions for certain types of transactions. Few other on-chip fabrics and buses support security features and define specific interfaces/signals for transporting security attributes from master to slave or vice-versa. However, including these signals is not mandatory and could be left unconfigured when generating the register-transfer-level (RTL) description for the fabric. Such fabrics or buses should not be used to transport any security attribute coming from the bus master. In general, peripherals with security assets should not be connected to such buses before the transaction from the bus master reaches the bus, unless some form of access control is performed at a fabric bridge or another intermediate module.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1319", "Name": "Improper Protection against Electromagnetic Fault Injection (EM-FI)", "Abstraction": "Base", "Description": "The device is susceptible to electromagnetic fault injection attacks, causing device internal information to be compromised or security mechanisms to be bypassed.", "ExtendedDescription": "\n\nElectromagnetic fault injection may allow an attacker to locally and dynamically modify the signals (both internal and external) of an integrated circuit. EM-FI attacks consist of producing a local, transient magnetic field near the device, inducing current in the device wires. A typical EMFI setup is made up of a pulse injection circuit that generates a high current transient in an EMI coil, producing an abrupt magnetic pulse which couples to the target producing faults in the device, which can lead to:\n\n\n  - Bypassing security mechanisms such as secure JTAG or Secure Boot\n\n  - Leaking device information\n\n  - Modifying program flow\n\n  - Perturbing secure hardware modules (e.g. random number generators)\n\n", "ObservedExamples": [{"Reference": "CVE-2020-27211", "Description": "Chain: microcontroller system-on-chip uses a register value stored in flash to set product protection state on the memory bus and does not contain protection against fault injection (CWE-1319) which leads to an incorrect initialization of the memory bus (CWE-1419) causing the product to be in an unprotected state.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-27211"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1320", "Name": "Improper Protection for Outbound Error Messages and Alert Signals", "Abstraction": "Base", "Description": "Untrusted agents can disable alerts about signal conditions exceeding limits or the response mechanism that handles such alerts.\n\t\t\t", "ExtendedDescription": "\n\nHardware sensors are used to detect whether a device is operating within design limits. The threshold values for these limits are set by hardware fuses or trusted software such as a BIOS. Modification of these limits may be protected by hardware mechanisms.\n\n\nWhen device sensors detect out of bound conditions, alert signals may be generated for remedial action, which may take the form of device shutdown or throttling.\n\n\nWarning signals that are not properly secured may be disabled or used to generate spurious alerts, causing degraded performance or denial-of-service (DoS). These alerts may be masked by untrusted software. Examples of these alerts involve thermal and power sensor alerts.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1321", "Name": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')", "Abstraction": "Variant", "Description": "The product receives input from an upstream component that specifies attributes that are to be initialized or updated in an object, but it does not properly control modifications of attributes of the object prototype.", "ExtendedDescription": "\n\nBy adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the product depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf).\n\n\nThis weakness is usually exploited by using a special attribute of objects called proto, constructor or prototype. Such attributes give access to the object prototype. This weakness is often found in code that assigns object attributes based on user input, or merges or clones objects recursively.\n", "ObservedExamples": [{"Reference": "CVE-2018-3721", "Description": "Prototype pollution by merging objects.", "Link": "https://www.cve.org/CVERecord?id=CVE-2018-3721"}, {"Reference": "CVE-2019-10744", "Description": "Prototype pollution by setting default values to object attributes recursively.", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-10744"}, {"Reference": "CVE-2019-11358", "Description": "Prototype pollution by merging objects recursively.", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-11358"}, {"Reference": "CVE-2020-8203", "Description": "Prototype pollution by setting object attributes based on dot-separated path.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8203"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "Yes", "Top25Examples": [{"Reference": "CVE-2022-21169", "Description": "The package express-xss-sanitizer before 1.1.3 are vulnerable to Prototype Pollution via the allowedTags attribute, allowing the attacker to bypass xss sanitization."}, {"Reference": "CVE-2022-23395", "Description": "jQuery Cookie 1.4.1 is affected by prototype pollution, which can lead to DOM cross-site scripting (XSS)."}, {"Reference": "CVE-2022-3901", "Description": "Prototype Pollution in Visioweb.js 1.10.6 allows attackers to execute XSS on the client system."}, {"Reference": "CVE-2022-46175", "Description": "JSON5 is an extension to the popular JSON file format that aims to be easier to write and maintain by hand (e.g. for config files). The `parse` method of the JSON5 library before and including versions 1.0.1 and 2.2.1 does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object. This vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations. This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution. `JSON5.parse` should restrict parsing of `__proto__` keys when parsing JSON strings to objects. As a point of reference, the `JSON.parse` method included in JavaScript ignores `__proto__` keys. Simply changing `JSON5.parse` to `JSON.parse` in the examples above mitigates this vulnerability. This vulnerability is patched in json5 versions 1.0.2, 2.2.2, and later."}, {"Reference": "CVE-2021-20084", "Description": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution') in jquery-sparkle 1.5.2-beta allows a malicious user to inject properties into Object.prototype."}, {"Reference": "CVE-2021-20085", "Description": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution') in backbone-query-parameters 0.4.0 allows a malicious user to inject properties into Object.prototype."}, {"Reference": "CVE-2021-20086", "Description": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution') in jquery-bbq 1.2.1 allows a malicious user to inject properties into Object.prototype."}, {"Reference": "CVE-2021-20087", "Description": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution') in jquery-deparam 0.5.1 allows a malicious user to inject properties into Object.prototype."}, {"Reference": "CVE-2021-20088", "Description": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution') in mootools-more 1.6.0 allows a malicious user to inject properties into Object.prototype."}, {"Reference": "CVE-2021-20089", "Description": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution') in purl 2.3.2 allows a malicious user to inject properties into Object.prototype."}, {"Reference": "CVE-2021-23329", "Description": "The package nested-object-assign before 1.0.4 are vulnerable to Prototype Pollution via the default function, as demonstrated by running the PoC below."}, {"Reference": "CVE-2021-23395", "Description": "This affects all versions of package nedb. The library could be tricked into adding or modifying properties of Object.prototype using a __proto__ or constructor.prototype payload."}, {"Reference": "CVE-2021-23396", "Description": "All versions of package lutils are vulnerable to Prototype Pollution via the main (merge) function."}, {"Reference": "CVE-2021-23408", "Description": "This affects the package com.graphhopper:graphhopper-web-bundle before 3.2, from 4.0-pre1 and before 4.0. The URL parser could be tricked into adding or modifying properties of Object.prototype using a constructor or __proto__ payload."}, {"Reference": "CVE-2021-25912", "Description": "Prototype pollution vulnerability in 'dotty' versions 0.0.1 through 0.1.0 allows attackers to cause a denial of service and may lead to remote code execution."}, {"Reference": "CVE-2021-25913", "Description": "Prototype pollution vulnerability in 'set-or-get' version 1.0.0 through 1.2.10 allows an attacker to cause a denial of service and may lead to remote code execution."}, {"Reference": "CVE-2021-25914", "Description": "Prototype pollution vulnerability in 'object-collider' versions 1.0.0 through 1.0.3 allows attacker to cause a denial of service and may lead to remote code execution."}, {"Reference": "CVE-2021-25916", "Description": "Prototype pollution vulnerability in 'patchmerge' versions 1.0.0 through 1.0.1 allows an attacker to cause a denial of service and may lead to remote code execution."}, {"Reference": "CVE-2021-25927", "Description": "Prototype pollution vulnerability in 'safe-flat' versions 2.0.0 through 2.0.1 allows an attacker to cause a denial of service and may lead to remote code execution."}, {"Reference": "CVE-2021-25928", "Description": "Prototype pollution vulnerability in 'safe-obj' versions 1.0.0 through 1.0.2 allows an attacker to cause a denial of service and may lead to remote code execution."}, {"Reference": "CVE-2021-25941", "Description": "Prototype pollution vulnerability in 'deep-override' versions 1.0.0 through 1.0.1 allows an attacker to cause a denial of service and may lead to remote code execution."}, {"Reference": "CVE-2021-25943", "Description": "Prototype pollution vulnerability in '101' versions 1.0.0 through 1.6.3 allows an attacker to cause a denial of service and may lead to remote code execution."}, {"Reference": "CVE-2021-25944", "Description": "Prototype pollution vulnerability in 'deep-defaults' versions 1.0.0 through 1.0.5 allows attacker to cause a denial of service and may lead to remote code execution."}, {"Reference": "CVE-2021-25946", "Description": "Prototype pollution vulnerability in `nconf-toml` versions 0.0.1 through 0.0.2 allows an attacker to cause a denial of service and may lead to remote code execution."}, {"Reference": "CVE-2021-25947", "Description": "Prototype pollution vulnerability in 'nestie' versions 0.0.0 through 1.0.0 allows an attacker to cause a denial of service and may lead to remote code execution."}, {"Reference": "CVE-2021-25953", "Description": "Prototype pollution vulnerability in 'putil-merge' versions1.0.0 through 3.6.6 allows attacker to cause a denial of service and may lead to remote code execution."}]}
{"ID": "1322", "Name": "Use of Blocking Code in Single-threaded, Non-blocking Context", "Abstraction": "Base", "Description": "The product uses a non-blocking model that relies on a single threaded process\n\t\t\tfor features such as scalability, but it contains code that can block when it is invoked.", "ExtendedDescription": "\n\nWhen an attacker can directly invoke the blocking code, or the blocking code can be affected by environmental conditions that can be influenced by an attacker, then this can lead to a denial of service by causing unexpected hang or freeze of the code. Examples of blocking code might be an expensive computation or calling blocking library calls, such as those that perform exclusive file operations or require a successful network operation.\n\n\nDue to limitations in multi-thread models, single-threaded models are used to overcome the resource constraints that are caused by using many threads. In such a model, all code should generally be non-blocking. If blocking code is called, then the event loop will effectively be stopped, which can be undesirable or dangerous. Such models are used in Python asyncio, Vert.x, and Node.js, or other custom event loop code.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1323", "Name": "Improper Management of Sensitive Trace Data", "Abstraction": "Base", "Description": "Trace data collected from several sources on the\n                System-on-Chip (SoC) is stored in unprotected locations or\n                transported to untrusted agents.", "ExtendedDescription": "\n\nTo facilitate verification of complex System-on-Chip (SoC) designs, SoC integrators add specific IP blocks that trace the SoC's internal signals in real-time. This infrastructure enables observability of the SoC's internal behavior, validation of its functional design, and detection of hardware and software bugs. Such tracing IP blocks collect traces from several sources on the SoC including the CPU, crypto coprocessors, and on-chip fabrics. Traces collected from these sources are then aggregated inside trace IP block and forwarded to trace sinks, such as debug-trace ports that facilitate debugging by external hardware and software debuggers.\n\n\nSince these traces are collected from several security-sensitive sources, they must be protected against untrusted debuggers. If they are stored in unprotected memory, an untrusted software debugger can access these traces and extract secret information. Additionally, if security-sensitive traces are not tagged as secure, an untrusted hardware debugger might access them to extract confidential information.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1325", "Name": "Improperly Controlled Sequential Memory Allocation", "Abstraction": "Base", "Description": "The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.", "ExtendedDescription": "\n\nWhile the product might limit the amount of memory that is allocated in a single operation for a single object (such as a malloc of an array), if an attacker can cause multiple objects to be allocated in separate operations, then this might cause higher total memory consumption than the developer intended, leading to a denial of service.\n", "AlternateTerms": [{"Term": "Stack Exhaustion", "Description": "When a weakness allocates excessive memory on the stack, it is often described as \"stack exhaustion,\" which is a technical impact of the weakness. This technical impact is often encountered as a consequence of CWE-789 and/or CWE-1325."}], "ObservedExamples": [{"Reference": "CVE-2020-36049", "Description": "JavaScript-based packet decoder uses concatenation of many small strings, causing out-of-memory (OOM) condition", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-36049"}, {"Reference": "CVE-2019-20176", "Description": "Product allocates a new buffer on the stack for each file in a directory, allowing stack exhaustion", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-20176"}, {"Reference": "CVE-2013-1591", "Description": "Chain: an integer overflow (CWE-190) in the image size calculation causes an infinite loop (CWE-835) which sequentially allocates buffers without limits (CWE-1325) until the stack is full.", "Link": "https://www.cve.org/CVERecord?id=CVE-2013-1591"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2022-23486", "Description": "libp2p-rust is the official rust language Implementation of the libp2p networking stack. In versions prior to 0.45.1 an attacker node can cause a victim node to allocate a large number of small memory chunks, which can ultimately lead to the victim\u2019s process running out of memory and thus getting killed by its operating system. When executed continuously, this can lead to a denial of service attack, especially relevant on a larger scale when run against more than one node of a libp2p based network. Users are advised to upgrade to `libp2p` `v0.45.1` or above. Users unable to upgrade should reference the DoS Mitigation page for more information on how to incorporate mitigation strategies, monitor their application, and respond to attacks: https://docs.libp2p.io/reference/dos-mitigation/."}]}
{"ID": "1326", "Name": "Missing Immutable Root of Trust in Hardware", "Abstraction": "Base", "Description": "A missing immutable root of trust in the hardware results in the ability to bypass secure boot or execute untrusted or adversarial boot code.", "ExtendedDescription": "\n\nA System-on-Chip (SoC) implements secure boot by verifying or authenticating signed boot code. The signing of the code is achieved by an entity that the SoC trusts. Before executing the boot code, the SoC verifies that the code or the public key with which the code has been signed has not been tampered with. The other data upon which the SoC depends are system-hardware settings in fuses such as whether \"Secure Boot is enabled\". These data play a crucial role in establishing a Root of Trust (RoT) to execute secure-boot flows.\n\n\nOne of the many ways RoT is achieved is by storing the code and data in memory or fuses. This memory should be immutable, i.e., once the RoT is programmed/provisioned in memory, that memory should be locked and prevented from further programming or writes. If the memory contents (i.e., RoT) are mutable, then an adversary can modify the RoT to execute their choice of code, resulting in a compromised secure boot.\n\n\nNote that, for components like ROM, secure patching/update features should be supported to allow authenticated and authorized updates in the field. \n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1327", "Name": "Binding to an Unrestricted IP Address", "Abstraction": "Base", "Description": "The product assigns the address 0.0.0.0 for a database server, a cloud service/instance, or any computing resource that communicates remotely.", "ExtendedDescription": "\n\nWhen a server binds to the address 0.0.0.0, it allows connections from every IP address on the local machine, effectively exposing the server to every possible network. This might be much broader access than intended by the developer or administrator, who might only be expecting the server to be reachable from a single interface/network.\n", "ObservedExamples": [{"Reference": "CVE-2022-21947", "Description": "Desktop manager for Kubernetes and container management binds a service to 0.0.0.0, allowing users on the network to make requests to a dashboard API.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-21947"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2022-21947", "Description": "A Exposure of Resource to Wrong Sphere vulnerability in Rancher Desktop of SUSE allows attackers in the local network to connect to the Dashboard API (steve) to carry out arbitrary actions. This issue affects: SUSE Rancher Desktop versions prior to V."}, {"Reference": "CVE-2022-29820", "Description": "In JetBrains PyCharm before 2022.1 exposure of the debugger port to the internal network was possible"}]}
{"ID": "1328", "Name": "Security Version Number Mutable to Older Versions", "Abstraction": "Base", "Description": "Security-version number in hardware is mutable, resulting in the ability to downgrade (roll-back) the boot firmware to vulnerable code versions.", "ExtendedDescription": "\n\nA System-on-Chip (SoC) implements secure boot or verified boot. It might support a security version number, which prevents downgrading the current firmware to a vulnerable version. Once downgraded to a previous version, an adversary can launch exploits on the SoC and thus compromise the security of the SoC. These downgrade attacks are also referred to as roll-back attacks.\n\n\nThe security version number must be stored securely and persistently across power-on resets. A common weakness is that the security version number is modifiable by an adversary, allowing roll-back or downgrade attacks or, under certain circumstances, preventing upgrades (i.e. Denial-of-Service on upgrades). In both cases, the SoC is in a vulnerable state.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1329", "Name": "Reliance on Component That is Not Updateable", "Abstraction": "Base", "Description": "The product contains a component that cannot be updated or patched in order to remove vulnerabilities or significant bugs.", "ExtendedDescription": "\n\n If the component is discovered to contain a vulnerability or critical bug, but the issue cannot be fixed using an update or patch, then the product's owner will not be able to protect against the issue. The only option might be replacement of the product, which could be too financially or operationally expensive for the product owner. As a result, the inability to patch or update can leave the product open to attacker exploitation or critical operation failures. This weakness can be especially difficult to manage when using ROM, firmware, or similar components that traditionally have had limited or no update capabilities. \n\n\n In industries such as healthcare, \"legacy\" devices can be operated for decades. As a US task force report [REF-1197] notes, \"the inability to update or replace equipment has both large and small health care delivery organizations struggle with numerous unsupported legacy systems that cannot easily be replaced (hardware, software, and operating systems) with large numbers of vulnerabilities and few modern countermeasures.\" \n\n\n While hardware can be prone to this weakness, software systems can also be affected, such as when a third-party driver or library is no longer actively maintained or supported but is still critical for the required functionality.\n", "ObservedExamples": [{"Reference": "CVE-2020-9054", "Description": "Chain: network-attached storage (NAS) device has a critical OS command injection (CWE-78) vulnerability that is actively exploited to place IoT devices into a botnet, but some products are \"end-of-support\" and cannot be patched (CWE-1277). [REF-1097]", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-9054"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1330", "Name": "Remanent Data Readable after Memory Erase", "Abstraction": "Variant", "Description": "Confidential information stored in memory circuits is readable or recoverable after being cleared or erased.", "ExtendedDescription": "\n\nData remanence occurs when stored, memory content is not fully lost after a memory-clear or -erase operation. Confidential memory contents can still be readable through data remanence in the hardware.\n\n\nData remanence can occur because of performance optimization or memory organization during 'clear' or 'erase' operations, like a design that allows the memory-organization metadata (e.g., file pointers) to be erased without erasing the actual memory content. To protect against this weakness, memory devices will often support different commands for optimized memory erase and explicit secure erase.\n\n\nData remanence can also happen because of the physical properties of memory circuits in use. For example, static, random-access-memory (SRAM) and dynamic, random-access-memory (DRAM) data retention is based on the charge retained in the memory cell, which depends on factors such as power supply, refresh rates, and temperature.\n\n\nOther than explicit erase commands, self-encrypting, secure-memory devices can also support secure erase through cryptographic erase commands. In such designs, only the decryption keys for encrypted data stored on the device are erased. That is, the stored data are always remnant in the media after a cryptographic erase. However, only the encrypted data can be extracted. Thus, protection against data recovery in such designs relies on the strength of the encryption algorithm.\n", "ObservedExamples": [{"Reference": "CVE-2019-8575", "Description": "Firmware Data Deletion Vulnerability in which a base station factory reset might not delete all user information. The impact of this enables a new owner of a used device that has been \"factory-default reset\" with a vulnerable firmware version can still retrieve, at least, the previous owner's wireless network name, and the previous owner's wireless security (such as WPA2) key. This issue was addressed with improved, data deletion.", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-8575"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1331", "Name": "Improper Isolation of Shared Resources in Network On Chip (NoC)", "Abstraction": "Base", "Description": "The Network On Chip (NoC) does not isolate or incorrectly isolates its on-chip-fabric and internal resources such that they are shared between trusted and untrusted agents, creating timing channels.", "ExtendedDescription": "\n\nTypically, network on chips (NoC) have many internal resources that are shared between packets from different trust domains. These resources include internal buffers, crossbars and switches, individual ports, and channels. The sharing of resources causes contention and introduces interference between differently trusted domains, which poses a security threat via a timing channel, allowing attackers to infer data that belongs to a trusted agent. This may also result in introducing network interference, resulting in degraded throughput and latency.\n", "BackgroundDetails": ["\n\n\"Network-on-chip\" (NoC) is a commonly-used term used for hardware interconnect fabrics used by multicore Systems-on-Chip (SoC). Communication between modules on the chip uses packet-based methods, with improved efficiency and scalability compared to bus architectures [REF-1241].\n"], "ObservedExamples": [{"Reference": "CVE-2021-33096", "Description": "Improper isolation of shared resource in a network-on-chip leads to denial of service", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-33096"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1332", "Name": "Improper Handling of Faults that Lead to Instruction Skips", "Abstraction": "Base", "Description": "The device is missing or incorrectly implements circuitry or sensors that detect and mitigate the skipping of security-critical CPU instructions when they occur.", "ExtendedDescription": "\n\nThe operating conditions of hardware may change in ways that cause unexpected behavior to occur, including the skipping of security-critical CPU instructions. Generally, this can occur due to electrical disturbances or when the device operates outside of its expected conditions.\n\n\nIn practice, application code may contain conditional branches that are security-sensitive (e.g., accepting or rejecting a user-provided password). These conditional branches are typically implemented by a single conditional branch instruction in the program binary which, if skipped, may lead to effectively flipping the branch condition - i.e., causing the wrong security-sensitive branch to be taken. This affects processes such as firmware authentication, password verification, and other security-sensitive decision points.\n\n\nAttackers can use fault injection techniques to alter the operating conditions of hardware so that security-critical instructions are skipped more frequently or more reliably than they would in a \"natural\" setting.\n", "ObservedExamples": [{"Reference": "CVE-2019-15894", "Description": "fault injection attack bypasses the verification mode, potentially allowing arbitrary code execution.", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-15894"}], "FunctionalAreas": ["Power"], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1333", "Name": "Inefficient Regular Expression Complexity", "Abstraction": "Base", "Description": "The product uses a regular expression with an inefficient, possibly exponential worst-case computational complexity that consumes excessive CPU cycles.", "ExtendedDescription": "Some regular expression engines have a feature called \"backtracking\". If the token cannot match, the engine \"backtracks\" to a position that may result in a different token that can match.\n Backtracking becomes a weakness if all of these conditions are met:\n\n\n  - The number of possible backtracking attempts are exponential relative to the length of the input.\n\n  - The input can fail to match the regular expression.\n\n  - The input can be long enough.\n\n Attackers can create crafted inputs that intentionally cause the regular expression to use excessive backtracking in a way that causes the CPU consumption to spike. ", "AlternateTerms": [{"Term": "ReDoS", "Description": "ReDoS is an abbreviation of \"Regular expression Denial of Service\"."}, {"Term": "Regular Expression Denial of Service", "Description": "While this term is attack-focused, this is commonly used to describe the weakness."}, {"Term": "Catastrophic backtracking", "Description": "This term is used to describe the behavior of the regular expression as a negative technical impact."}], "ObservedExamples": [{"Reference": "CVE-2020-5243", "Description": "server allows ReDOS with crafted User-Agent strings, due to overlapping capture groups that cause excessive backtracking.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-5243"}, {"Reference": "CVE-2021-21317", "Description": "npm package for user-agent parser prone to ReDoS due to overlapping capture groups", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-21317"}, {"Reference": "CVE-2019-16215", "Description": "Markdown parser uses inefficient regex when processing a message, allowing users to cause CPU consumption and delay preventing processing of other messages.", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-16215"}, {"Reference": "CVE-2019-6785", "Description": "Long string in a version control product allows DoS due to an inefficient regex.", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-6785"}, {"Reference": "CVE-2019-12041", "Description": "Javascript code allows ReDoS via a long string due to excessive backtracking.", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-12041"}, {"Reference": "CVE-2015-8315", "Description": "ReDoS when parsing time.", "Link": "https://www.cve.org/CVERecord?id=CVE-2015-8315"}, {"Reference": "CVE-2015-8854", "Description": "ReDoS when parsing documents.", "Link": "https://www.cve.org/CVERecord?id=CVE-2015-8854"}, {"Reference": "CVE-2017-16021", "Description": "ReDoS when validating URL.", "Link": "https://www.cve.org/CVERecord?id=CVE-2017-16021"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "Yes", "Top25Examples": [{"Reference": "CVE-2021-23354", "Description": "The package printf before 0.6.1 are vulnerable to Regular Expression Denial of Service (ReDoS) via the regex string /\\\\%(?:\\\\(([\\\\w_.]+)\\\\)|([1-9]\\\\d*)\\\\$)?([0 +\\\\-\\\\]*)(\\\\*|\\\\d+)?(\\\\.)?(\\\\*|\\\\d+)?[hlL]?([\\\\%bscdeEfFgGioOuxX])/g in lib/printf.js. The vulnerable regular expression has cubic worst-case time complexity."}, {"Reference": "CVE-2021-23362", "Description": "The package hosted-git-info before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity."}, {"Reference": "CVE-2021-23364", "Description": "The package browserslist from 4.0.0 and before 4.16.5 are vulnerable to Regular Expression Denial of Service (ReDoS) during parsing of queries."}, {"Reference": "CVE-2021-23382", "Description": "The package postcss before 8.2.13 are vulnerable to Regular Expression Denial of Service (ReDoS) via getAnnotationURL() and loadAnnotation() in lib/previous-map.js. The vulnerable regexes are caused mainly by the sub-pattern \\\\/\\\\*\\\\s* sourceMappingURL=(.*)."}, {"Reference": "CVE-2021-23446", "Description": "The package handsontable before 10.0.0; the package handsontable from 0 and before 10.0.0 are vulnerable to Regular Expression Denial of Service (ReDoS) in Handsontable.helper.isNumeric function."}, {"Reference": "CVE-2021-23490", "Description": "The package parse-link-header before 2.0.0 are vulnerable to Regular Expression Denial of Service (ReDoS) via the checkHeader function."}, {"Reference": "CVE-2021-25292", "Description": "An issue was discovered in Pillow before 8.1.1. The PDF parser allows a regular expression DoS (ReDoS) attack via a crafted PDF file because of a catastrophic backtracking regex."}, {"Reference": "CVE-2021-26813", "Description": "markdown2 >=1.0.1.18, fixed in 2.4.0, is affected by a regular expression denial of service vulnerability. If an attacker provides a malicious string, it can make markdown2 processing difficult or delayed for an extended period of time."}, {"Reference": "CVE-2021-27291", "Description": "In pygments 1.1+, fixed in 2.7.4, the lexers used to parse programming languages rely heavily on regular expressions. Some of the regular expressions have exponential or cubic worst-case complexity and are vulnerable to ReDoS. By crafting malicious input, an attacker can cause a denial of service."}, {"Reference": "CVE-2021-28092", "Description": "The is-svg package 2.1.0 through 4.2.1 for Node.js uses a regular expression that is vulnerable to Regular Expression Denial of Service (ReDoS). If an attacker provides a malicious string, is-svg will get stuck processing the input for a very long time."}, {"Reference": "CVE-2021-33502", "Description": "The normalize-url package before 4.5.1, 5.x before 5.3.1, and 6.x before 6.0.1 for Node.js has a ReDoS (regular expression denial of service) issue because it has exponential performance for data: URLs."}, {"Reference": "CVE-2021-3765", "Description": "validator.js is vulnerable to Inefficient Regular Expression Complexity"}, {"Reference": "CVE-2021-3795", "Description": "semver-regex is vulnerable to Inefficient Regular Expression Complexity"}, {"Reference": "CVE-2021-3803", "Description": "nth-check is vulnerable to Inefficient Regular Expression Complexity"}, {"Reference": "CVE-2021-3804", "Description": "taro is vulnerable to Inefficient Regular Expression Complexity"}, {"Reference": "CVE-2021-3807", "Description": "ansi-regex is vulnerable to Inefficient Regular Expression Complexity"}, {"Reference": "CVE-2021-3810", "Description": "code-server is vulnerable to Inefficient Regular Expression Complexity"}, {"Reference": "CVE-2021-39933", "Description": "An issue has been discovered in GitLab CE/EE affecting all versions starting from 12.10 before 14.3.6, all versions starting from 14.4 before 14.4.4, all versions starting from 14.5 before 14.5.2. A regular expression used for handling user input (notes, comments, etc) was susceptible to catastrophic backtracking that could cause a DOS attack."}, {"Reference": "CVE-2021-39940", "Description": "An issue has been discovered in GitLab CE/EE affecting all versions starting from 13.2 before 14.3.6, all versions starting from 14.4 before 14.4.4, all versions starting from 14.5 before 14.5.2. GitLab Maven Package registry is vulnerable to a regular expression denial of service when a specifically crafted string is sent."}, {"Reference": "CVE-2021-40660", "Description": "An issue was discovered in Delight Nashorn Sandbox 0.2.0. There is an ReDoS vulnerability that can be exploited to launching a denial of service (DoS) attack."}, {"Reference": "CVE-2021-40892", "Description": "A Regular Expression Denial of Service (ReDOS) vulnerability was discovered in validate-color v2.1.0 when handling crafted invalid rgb(a) strings."}, {"Reference": "CVE-2021-40893", "Description": "A Regular Expression Denial of Service (ReDOS) vulnerability was discovered in validate-data v0.1.1 when validating crafted invalid emails."}, {"Reference": "CVE-2021-40894", "Description": "A Regular Expression Denial of Service (ReDOS) vulnerability was discovered in underscore-99xp v1.7.2 when the deepValueSearch function is called."}, {"Reference": "CVE-2021-40895", "Description": "A Regular Expression Denial of Service (ReDOS) vulnerability was discovered in todo-regex v0.1.1 when matching crafted invalid TODO statements."}, {"Reference": "CVE-2021-40896", "Description": "A Regular Expression Denial of Service (ReDOS) vulnerability was discovered in that-value v0.1.3 when validating crafted invalid emails."}, {"Reference": "CVE-2021-40897", "Description": "A Regular Expression Denial of Service (ReDOS) vulnerability was discovered in split-html-to-chars v1.0.5 when splitting crafted invalid htmls."}, {"Reference": "CVE-2021-40898", "Description": "A Regular Expression Denial of Service (ReDOS) vulnerability was discovered in scaffold-helper v1.2.0 when copying crafted invalid files."}, {"Reference": "CVE-2021-40899", "Description": "A Regular Expression Denial of Service (ReDOS) vulnerability was discovered in repo-git-downloader v0.1.1 when downloading crafted invalid git repositories."}, {"Reference": "CVE-2021-40900", "Description": "A Regular Expression Denial of Service (ReDOS) vulnerability was discovered in regexfn v1.0.5 when validating crafted invalid emails."}, {"Reference": "CVE-2021-40901", "Description": "A Regular Expression Denial of Service (ReDOS) vulnerability was discovered in scniro-validator v1.0.1 when validating crafted invalid emails."}, {"Reference": "CVE-2021-41115", "Description": "Zulip is an open source team chat server. In affected versions Zulip allows organization administrators on a server to configure \"linkifiers\" that automatically create links from messages that users send, detected via arbitrary regular expressions. Malicious organization administrators could subject the server to a denial-of-service via regular expression complexity attacks; most simply, by configuring a quadratic-time regular expression in a linkifier, and sending messages that exploited it. A regular expression attempted to parse the user-provided regexes to verify that they were safe from ReDoS -- this was both insufficient, as well as _itself_ subject to ReDoS if the organization administrator entered a sufficiently complex invalid regex. Affected users should [upgrade to the just-released Zulip 4.7](https://zulip.readthedocs.io/en/latest/production/upgrade-or-modify.html#upgrading-to-a-release), or [`main`](https://zulip.readthedocs.io/en/latest/production/upgrade-or-modify.html#upgrading-from-a-git-repository)."}, {"Reference": "CVE-2021-41817", "Description": "Date.parse in the date gem through 3.2.0 for Ruby allows ReDoS (regular expression Denial of Service) via a long string. The fixed versions are 3.2.1, 3.1.2, 3.0.2, and 2.0.1."}, {"Reference": "CVE-2021-42248", "Description": "GJSON <= 1.9.2 allows attackers to cause a redos via crafted JSON input."}, {"Reference": "CVE-2021-43306", "Description": "An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the jquery-validation npm package, when an attacker is able to supply arbitrary input to the url2 method"}, {"Reference": "CVE-2021-43307", "Description": "An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the semver-regex npm package, when an attacker is able to supply arbitrary input to the test() method"}, {"Reference": "CVE-2021-43308", "Description": "An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the markdown-link-extractor npm package, when an attacker is able to supply arbitrary input to the module's exported function"}, {"Reference": "CVE-2021-43309", "Description": "An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the uri-template-lite npm package, when an attacker is able to supply arbitrary input to the \"URI.expand\" method"}, {"Reference": "CVE-2021-43838", "Description": "jsx-slack is a library for building JSON objects for Slack Block Kit surfaces from JSX. In versions prior to 4.5.1 users are vulnerable to a regular expression denial-of-service (ReDoS) attack. If attacker can put a lot of JSX elements into `<blockquote>` tag, an internal regular expression for escaping characters may consume an excessive amount of computing resources. jsx-slack v4.5.1 has patched to a regex for escaping blockquote characters. Users are advised to upgrade as soon as possible."}, {"Reference": "CVE-2021-45470", "Description": "lib/DatabaseLayer.py in cve-search before 4.1.0 allows regular expression injection, which can lead to ReDoS (regular expression denial of service) or other impacts."}, {"Reference": "CVE-2021-46823", "Description": "python-ldap before 3.4.0 is vulnerable to a denial of service when ldap.schema is used for untrusted schema definitions, because of a regular expression denial of service (ReDoS) flaw in the LDAP schema parser. By sending crafted regex input, a remote authenticated attacker could exploit this vulnerability to cause a denial of service condition."}, {"Reference": "CVE-2022-1929", "Description": "An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the devcert npm package, when an attacker is able to supply arbitrary input to the certificateFor method"}, {"Reference": "CVE-2022-1930", "Description": "An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the eth-account PyPI package, when an attacker is able to supply arbitrary input to the encode_structured_data method"}, {"Reference": "CVE-2022-1954", "Description": "A Regular Expression Denial of Service vulnerability in GitLab CE/EE affecting all versions from 1.0.2 prior to 14.10.5, 15.0 prior to 15.0.4, and 15.1 prior to 15.1.1 allows an attacker to make a GitLab instance inaccessible via specially crafted web server response headers"}, {"Reference": "CVE-2022-21195", "Description": "All versions of package url-regex are vulnerable to Regular Expression Denial of Service (ReDoS) which can cause the CPU usage to crash."}, {"Reference": "CVE-2022-21222", "Description": "The package css-what before 2.1.3 are vulnerable to Regular Expression Denial of Service (ReDoS) due to the usage of insecure regular expression in the re_attr variable of index.js. The exploitation of this vulnerability could be triggered via the parse function."}, {"Reference": "CVE-2022-21681", "Description": "Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `inline.reflinkSearch` may cause catastrophic backtracking against some strings and lead to a denial of service (DoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. This issue is patched in version 4.0.10. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources."}, {"Reference": "CVE-2022-24373", "Description": "The package react-native-reanimated before 3.0.0-rc.1 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper usage of regular expression in the parser of Colors.js."}, {"Reference": "CVE-2022-24713", "Description": "regex is an implementation of regular expressions for the Rust language. The regex crate features built-in mitigations to prevent denial of service attacks caused by untrusted regexes, or untrusted input matched by trusted regexes. Those (tunable) mitigations already provide sane defaults to prevent attacks. This guarantee is documented and it's considered part of the crate's API. Unfortunately a bug was discovered in the mitigations designed to prevent untrusted regexes to take an arbitrary amount of time during parsing, and it's possible to craft regexes that bypass such mitigations. This makes it possible to perform denial of service attacks by sending specially crafted regexes to services accepting user-controlled, untrusted regexes. All versions of the regex crate before or equal to 1.5.4 are affected by this issue. The fix is include starting from regex 1.5.5. All users accepting user-controlled regexes are recommended to upgrade immediately to the latest version of the regex crate. Unfortunately there is no fixed set of problematic regexes, as there are practically infinite regexes that could be crafted to exploit this vulnerability. Because of this, it us not recommend to deny known problematic regexes."}, {"Reference": "CVE-2022-25598", "Description": "Apache DolphinScheduler user registration is vulnerable to Regular express Denial of Service (ReDoS) attacks, Apache DolphinScheduler users should upgrade to version 2.0.5 or higher."}, {"Reference": "CVE-2022-25758", "Description": "All versions of package scss-tokenizer are vulnerable to Regular Expression Denial of Service (ReDoS) via the loadAnnotation() function, due to the usage of insecure regex."}, {"Reference": "CVE-2022-25844", "Description": "The package angular after 1.7.0 are vulnerable to Regular Expression Denial of Service (ReDoS) by providing a custom locale rule that makes it possible to assign the parameter in posPre: ' '.repeat() of NUMBER_FORMATS.PATTERNS[1].posPre with a very high value. **Note:** 1) This package has been deprecated and is no longer maintained. 2) The vulnerable versions are 1.7.0 and higher."}, {"Reference": "CVE-2022-25858", "Description": "The package terser before 4.8.1, from 5.0.0 and before 5.14.2 are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure usage of regular expressions."}, {"Reference": "CVE-2022-25887", "Description": "The package sanitize-html before 2.7.1 are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure global regular expression replacement logic of HTML comment removal."}, {"Reference": "CVE-2022-25918", "Description": "The package shescape from 1.5.10 and before 1.6.1 are vulnerable to Regular Expression Denial of Service (ReDoS) via the escape function in index.js, due to the usage of insecure regex in the escapeArgBash function."}, {"Reference": "CVE-2022-29158", "Description": "Apache OFBiz up to version 18.12.05 is vulnerable to Regular Expression Denial of Service (ReDoS) in the way it handles URLs provided by external, unauthenticated users. Upgrade to 18.12.06 or apply patches at https://issues.apache.org/jira/browse/OFBIZ-12599"}, {"Reference": "CVE-2022-29167", "Description": "Hawk is an HTTP authentication scheme providing mechanisms for making authenticated HTTP requests with partial cryptographic verification of the request and response, covering the HTTP method, request URI, host, and optionally the request payload. Hawk used a regular expression to parse `Host` HTTP header (`Hawk.utils.parseHost()`), which was subject to regular expression DoS attack - meaning each added character in the attacker's input increases the computation time exponentially. `parseHost()` was patched in `9.0.1` to use built-in `URL` class to parse hostname instead. `Hawk.authenticate()` accepts `options` argument. If that contains `host` and `port`, those would be used instead of a call to `utils.parseHost()`."}, {"Reference": "CVE-2022-29169", "Description": "BigBlueButton is an open source web conferencing system. Versions starting with 2.2 and prior to 2.3.19, 2.4.7, and 2.5.0-beta.2 are vulnerable to regular expression denial of service (ReDoS) attacks. By using specific a RegularExpression, an attacker can cause denial of service for the bbb-html5 service. The useragent library performs checking of device by parsing the input of User-Agent header and lets it go through lookupUserAgent() (alias of useragent.lookup() ). This function handles input by regexing and attackers can abuse that by providing some ReDos payload using `SmartWatch`. The maintainers removed `htmlclient/useragent` from versions 2.3.19, 2.4.7, and 2.5.0-beta.2. As a workaround, disable NginX forwarding the requests to the handler according to the directions in the GitHub Security Advisory."}, {"Reference": "CVE-2022-31129", "Description": "moment is a JavaScript date library for parsing, validating, manipulating, and formatting dates. Affected versions of moment were found to use an inefficient parsing algorithm. Specifically using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs. Users may notice a noticeable slowdown is observed with inputs above 10k characters. Users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks. The problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking. Users are advised to upgrade. Users unable to upgrade should consider limiting date lengths accepted from user input."}, {"Reference": "CVE-2022-31147", "Description": "The jQuery Validation Plugin (jquery-validation) provides drop-in validation for forms. Versions of jquery-validation prior to 1.19.5 are vulnerable to regular expression denial of service (ReDoS) when an attacker is able to supply arbitrary input to the url2 method. This is due to an incomplete fix for CVE-2021-43306. Users should upgrade to version 1.19.5 to receive a patch."}, {"Reference": "CVE-2022-31781", "Description": "Apache Tapestry up to version 5.8.1 is vulnerable to Regular Expression Denial of Service (ReDoS) in the way it handles Content Types. Specially crafted Content Types may cause catastrophic backtracking, taking exponential time to complete. Specifically, this is about the regular expression used on the parameter of the org.apache.tapestry5.http.ContentType class. Apache Tapestry 5.8.2 has a fix for this vulnerability. Notice the vulnerability cannot be triggered by web requests in Tapestry code alone. It would only happen if there's some non-Tapestry codepath passing some outside input to the ContentType class constructor."}, {"Reference": "CVE-2022-34402", "Description": "Dell Wyse ThinOS 2205 contains a Regular Expression Denial of Service Vulnerability in UI. An admin privilege attacker could potentially exploit this vulnerability, leading to denial-of-service."}, {"Reference": "CVE-2022-34428", "Description": "Dell Hybrid Client prior to version 1.8 contains a Regular Expression Denial of Service Vulnerability in the UI. An adversary with WMS group admin access could potentially exploit this vulnerability, leading to temporary denial-of-service."}, {"Reference": "CVE-2022-34749", "Description": "In mistune through 2.0.2, support of inline markup is implemented by using regular expressions that can involve a high amount of backtracking on certain edge cases. This behavior is commonly named catastrophic backtracking."}, {"Reference": "CVE-2022-3517", "Description": "A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service."}, {"Reference": "CVE-2022-35923", "Description": "v8n is a javascript validation library. Versions of v8n prior to 1.5.1 were found to have an inefficient regular expression complexity in the `lowercase()` and `uppercase()` regex which could lead to a denial of service attack. In testing of the `lowercase()` function a payload of 'a' + 'a'.repeat(i) + 'A' with 32 leading characters took 29443 ms to execute. The same issue happens with uppercase(). Users are advised to upgrade. There are no known workarounds for this issue."}, {"Reference": "CVE-2022-36034", "Description": "nitrado.js is a type safe wrapper for the Nitrado API. Possible ReDoS with lib input of `{{` and with many repetitions of `{{|`. This issue has been patched in all versions above `0.2.5`. There are currently no known workarounds."}, {"Reference": "CVE-2022-37259", "Description": "A Regular Expression Denial of Service (ReDoS) flaw was found in stealjs steal 2.2.4 via the string variable in babel.js."}, {"Reference": "CVE-2022-37260", "Description": "A Regular Expression Denial of Service (ReDoS) flaw was found in stealjs steal 2.2.4 via the input variable in main.js."}, {"Reference": "CVE-2022-37262", "Description": "A Regular Expression Denial of Service (ReDoS) flaw was found in stealjs steal 2.2.4 via the source and sourceWithComments variable in main.js."}, {"Reference": "CVE-2022-37599", "Description": "A Regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils 2.0.0 via the resourcePath variable in interpolateName.js."}, {"Reference": "CVE-2022-37603", "Description": "A Regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils 2.0.0 via the url variable in interpolateName.js."}, {"Reference": "CVE-2022-37620", "Description": "A Regular Expression Denial of Service (ReDoS) flaw was found in kangax html-minifier 4.0.0 via the candidate variable in htmlminifier.js."}, {"Reference": "CVE-2022-39280", "Description": "dparse is a parser for Python dependency files. dparse in versions before 0.5.2 contain a regular expression that is vulnerable to a Regular Expression Denial of Service. All the users parsing index server URLs with dparse are impacted by this vulnerability. A patch has been applied in version `0.5.2`, all the users are advised to upgrade to `0.5.2` as soon as possible. Users unable to upgrade should avoid passing index server URLs in the source file to be parsed."}, {"Reference": "CVE-2022-40023", "Description": "Sqlalchemy mako before 1.2.2 is vulnerable to Regular expression Denial of Service when using the Lexer class to parse. This also affects babelplugin and linguaplugin."}, {"Reference": "CVE-2022-40897", "Description": "Python Packaging Authority (PyPA) setuptools before 65.5.1 allows remote attackers to cause a denial of service via HTML in a crafted package or custom PackageIndex page. There is a Regular Expression Denial of Service (ReDoS) in package_index.py."}, {"Reference": "CVE-2022-42124", "Description": "ReDoS vulnerability in LayoutPageTemplateEntryUpgradeProcess in Liferay Portal 7.3.2 through 7.4.3.4 and Liferay DXP 7.2 fix pack 9 through fix pack 18, 7.3 before update 4, and DXP 7.4 GA allows remote attackers to consume an excessive amount of server resources via a crafted payload injected into the 'name' field of a layout prototype."}, {"Reference": "CVE-2022-42964", "Description": "An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the pymatgen PyPI package, when an attacker is able to supply arbitrary input to the GaussianInput.from_string method"}, {"Reference": "CVE-2022-42965", "Description": "An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the snowflake-connector-python PyPI package, when an attacker is able to supply arbitrary input to the undocumented get_file_transfer_type method"}, {"Reference": "CVE-2022-42966", "Description": "An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the cleo PyPI package, when an attacker is able to supply arbitrary input to the Table.set_rows method"}, {"Reference": "CVE-2022-1510", "Description": "An issue has been discovered in GitLab affecting all versions starting from 13.9 before 14.8.6, all versions starting from 14.9 before 14.9.4, all versions starting from 14.10 before 14.10.1. GitLab was not correctly handling malicious text in the CI Editor and CI Pipeline details page allowing the attacker to cause uncontrolled resource consumption."}, {"Reference": "CVE-2022-26650", "Description": "In Apache ShenYui, ShenYu-Bootstrap, RegexPredicateJudge.java uses Pattern.matches(conditionData.getParamValue(), realData) to make judgments, where both parameters are controllable by the user. This can cause an attacker pass in malicious regular expressions and characters causing a resource exhaustion. This issue affects Apache ShenYu (incubating) 2.4.0, 2.4.1 and 2.4.2 and is fixed in 2.4.3."}, {"Reference": "CVE-2022-21670", "Description": "markdown-it is a Markdown parser. Prior to version 1.3.2, special patterns with length greater than 50 thousand characterss could slow down the parser significantly. Users should upgrade to version 12.3.2 to receive a patch. There are no known workarounds aside from upgrading."}, {"Reference": "CVE-2022-21680", "Description": "Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `block.def` may cause catastrophic backtracking against some strings and lead to a regular expression denial of service (ReDoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. This issue is patched in version 4.0.10. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources."}, {"Reference": "CVE-2022-24729", "Description": "CKEditor4 is an open source what-you-see-is-what-you-get HTML editor. CKEditor4 prior to version 4.18.0 contains a vulnerability in the `dialog` plugin. The vulnerability allows abuse of a dialog input validator regular expression, which can cause a significant performance drop resulting in a browser tab freeze. A patch is available in version 4.18.0. There are currently no known workarounds."}, {"Reference": "CVE-2022-24836", "Description": "Nokogiri is an open source XML and HTML library for Ruby. Nokogiri `< v1.13.4` contains an inefficient regular expression that is susceptible to excessive backtracking when attempting to detect encoding in HTML documents. Users are advised to upgrade to Nokogiri `>= 1.13.4`. There are no known workarounds for this issue."}, {"Reference": "CVE-2022-2596", "Description": "Inefficient Regular Expression Complexity in GitHub repository node-fetch/node-fetch prior to 3.2.10. "}, {"Reference": "CVE-2022-2908", "Description": "A potential DoS vulnerability was discovered in Gitlab CE/EE versions starting from 10.7 before 15.1.5, all versions starting from 15.2 before 15.2.3, all versions starting from 15.3 before 15.3.1 allowed an attacker to trigger high CPU usage via a special crafted input added in the Commit message field."}, {"Reference": "CVE-2022-30122", "Description": "A possible denial of service vulnerability exists in Rack <2.0.9.1, <2.1.4.1 and <2.2.3.1 in the multipart parsing component of Rack."}, {"Reference": "CVE-2022-36064", "Description": "Shescape is a shell escape package for JavaScript. An Inefficient Regular Expression Complexity vulnerability impacts users that use Shescape to escape arguments for the Unix shells `Bash` and `Dash`, or any not-officially-supported Unix shell; and/or using the `escape` or `escapeAll` functions with the `interpolation` option set to `true`. An attacker can cause polynomial backtracking or quadratic runtime in terms of the input string length due to two Regular Expressions in Shescape that are vulnerable to Regular Expression Denial of Service (ReDoS). This bug has been patched in v1.5.10. For `Dash` only, this bug has been patched since v1.5.9. As a workaround, a maximum length can be enforced on input strings to Shescape to reduce the impact of the vulnerability. It is not recommended to try and detect vulnerable input strings, as the logic for this may end up being vulnerable to ReDoS itself."}, {"Reference": "CVE-2022-44570", "Description": "A denial of service vulnerability in the Range header parsing component of Rack >= 1.5.0. A Carefully crafted input can cause the Range header parsing component in Rack to take an unexpected amount of time, possibly resulting in a denial of service attack vector. Any applications that deal with Range requests (such as streaming applications, or applications that serve files) may be impacted."}]}
{"ID": "1334", "Name": "Unauthorized Error Injection Can Degrade Hardware Redundancy", "Abstraction": "Base", "Description": "An unauthorized agent can inject errors into a redundant block to deprive the system of redundancy or put the system in a degraded operating mode.", "ExtendedDescription": "\n\nTo ensure the performance and functional reliability of certain components, hardware designers can implement hardware blocks for redundancy in the case that others fail. This redundant block can be prevented from performing as intended if the design allows unauthorized agents to inject errors into it. In this way, a path with injected errors may become unavailable to serve as a redundant channel. This may put the system into a degraded mode of operation which could be exploited by a subsequent attack.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1335", "Name": "Incorrect Bitwise Shift of Integer", "Abstraction": "Base", "Description": "An integer value is specified to be shifted by a negative amount or an amount greater than or equal to the number of bits contained in the value causing an unexpected or indeterminate result.", "ExtendedDescription": "\n\nSpecifying a value to be shifted by a negative amount is undefined in various languages. Various computer architectures implement this action in different ways. The compilers and interpreters when generating code to accomplish a shift generally do not do a check for this issue.\n\n\nSpecifying an over-shift, a shift greater than or equal to the number of bits contained in a value to be shifted, produces a result which varies by architecture and compiler. In some languages, this action is specifically listed as producing an undefined result.\n", "ObservedExamples": [{"Reference": "CVE-2009-4307", "Description": "An unexpected large value in the ext4 filesystem causes an overshift condition resulting in a divide by zero.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-4307"}, {"Reference": "CVE-2012-2100", "Description": "An unexpected large value in the ext4 filesystem causes an overshift condition resulting in a divide by zero - fix of CVE-2009-4307.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-2100"}, {"Reference": "CVE-2020-8835", "Description": "An overshift in a kernel allowed out of bounds reads and writes resulting in a root takeover.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8835"}, {"Reference": "CVE-2015-1607", "Description": "Program is not properly handling signed bitwise left-shifts causing an overlapping memcpy memory range error.", "Link": "https://www.cve.org/CVERecord?id=CVE-2015-1607"}, {"Reference": "CVE-2016-9842", "Description": "Compression function improperly executes a signed left shift of a negative integer.", "Link": "https://www.cve.org/CVERecord?id=CVE-2016-9842"}, {"Reference": "CVE-2018-18445", "Description": "Some kernels improperly handle right shifts of 32 bit numbers in a 64 bit register.", "Link": "https://www.cve.org/CVERecord?id=CVE-2018-18445"}, {"Reference": "CVE-2013-4206", "Description": "Putty has an incorrectly sized shift value resulting in an overshift.", "Link": "https://www.cve.org/CVERecord?id=CVE-2013-4206"}, {"Reference": "CVE-2018-20788", "Description": "LED driver overshifts under certain conditions resulting in a DoS.", "Link": "https://www.cve.org/CVERecord?id=CVE-2018-20788"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1336", "Name": "Improper Neutralization of Special Elements Used in a Template Engine", "Abstraction": "Base", "Description": "The product uses a template engine to insert or process externally-influenced input, but it does not neutralize or incorrectly neutralizes special elements or syntax that can be interpreted as template expressions or other code directives when processed by the engine.", "ExtendedDescription": "\n\nMany web applications use template engines that allow developers to insert externally-influenced values into free text or messages in order to generate a full web page, document, message, etc. Such engines include Twig, Jinja2, Pug, Java Server Pages, FreeMarker, Velocity, ColdFusion, Smarty, and many others - including PHP itself. Some CMS (Content Management Systems) also use templates.\n\n\nTemplate engines often have their own custom command or expression language. If an attacker can influence input into a template before it is processed, then the attacker can invoke arbitrary expressions, i.e. perform injection attacks. For example, in some template languages, an attacker could inject the expression \"{{7*7}}\" and determine if the output returns \"49\" instead. The syntax varies depending on the language.\n\n\nIn some cases, XSS-style attacks can work, which can obscure the root cause if the developer does not closely investigate the root cause of the error.\n\n\nTemplate engines can be used on the server or client, so both \"sides\" could be affected by injection. The mechanisms of attack or the affected technologies might be different, but the mistake is fundamentally the same.\n", "AlternateTerms": [{"Term": "Server-Side Template Injection / SSTI", "Description": "This term is used for injection into template engines being used by a server."}, {"Term": "Client-Side Template Injection / CSTI", "Description": "This term is used for injection into template engines being used by a client."}], "ObservedExamples": [{"Reference": "CVE-2024-34359", "Description": "Chain: Python bindings for LLM library do not use a sandboxed environment when parsing a template and constructing a prompt, allowing jinja2 Server Side Template Injection and code execution - one variant of a \"prompt injection\" attack.", "Link": "https://www.cve.org/CVERecord?id=CVE-2024-34359"}, {"Reference": "CVE-2017-16783", "Description": "server-side template injection in content management server", "Link": "https://www.cve.org/CVERecord?id=CVE-2017-16783"}, {"Reference": "CVE-2020-9437", "Description": "authentication / identity management product has client-side template injection", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-9437"}, {"Reference": "CVE-2020-12790", "Description": "Server-Side Template Injection using a Twig template", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-12790"}, {"Reference": "CVE-2021-21244", "Description": "devops platform allows SSTI", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-21244"}, {"Reference": "CVE-2020-4027", "Description": "bypass of Server-Side Template Injection protection mechanism with macros in Velocity templates", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-4027"}, {"Reference": "CVE-2020-26282", "Description": "web browser proxy server allows Java EL expressions from Server-Side Template Injection", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-26282"}, {"Reference": "CVE-2020-1961", "Description": "SSTI involving mail templates and JEXL expressions", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-1961"}, {"Reference": "CVE-2019-19999", "Description": "product does not use a \"safe\" setting for a FreeMarker configuration, allowing SSTI", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-19999"}, {"Reference": "CVE-2018-20465", "Description": "product allows read of sensitive database username/password variables using server-side template injection", "Link": "https://www.cve.org/CVERecord?id=CVE-2018-20465"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2021-41749", "Description": "In the SEOmatic plugin up to 3.4.11 for Craft CMS 3, it is possible for unauthenticated attackers to perform a Server-Side Template Injection, allowing for remote code execution."}, {"Reference": "CVE-2021-42651", "Description": "A Server Side Template Injection (SSTI) vulnerability in Pentest-Collaboration-Framework v1.0.8 allows an authenticated remote attacker to execute arbitrary code through /project/PROJECTNAME/reports/."}, {"Reference": "CVE-2022-22954", "Description": "VMware Workspace ONE Access and Identity Manager contain a remote code execution vulnerability due to server-side template injection. A malicious actor with network access can trigger a server-side template injection that may result in remote code execution."}, {"Reference": "CVE-2022-25813", "Description": "In Apache OFBiz, versions 18.12.05 and earlier, an attacker acting as an anonymous user of the ecommerce plugin, can insert a malicious content in a message \u201cSubject\u201d field from the \"Contact us\" page. Then a party manager needs to list the communications in the party component to activate the SSTI. A RCE is then possible."}, {"Reference": "CVE-2022-34625", "Description": "Mealie1.0.0beta3 was discovered to contain a Server-Side Template Injection vulnerability, which allows attackers to execute arbitrary code via a crafted Jinja2 template."}, {"Reference": "CVE-2022-39365", "Description": "Pimcore is an open source data and experience management platform. Prior to version 10.5.9, the user controlled twig templates rendering in `Pimcore/Mail` & `ClassDefinition\\\\Layout\\\\Text` is vulnerable to server-side template injection, which could lead to remote code execution. Version 10.5.9 contains a patch for this issue. As a workaround, one may apply the patch manually."}, {"Reference": "CVE-2022-47896", "Description": "In JetBrains IntelliJ IDEA before 2022.3.1 code Templates were vulnerable to SSTI attacks."}, {"Reference": "CVE-2021-46362", "Description": "A Server-Side Template Injection (SSTI) vulnerability in the Registration and Forgotten Password forms of Magnolia v6.2.3 and below allows attackers to execute arbitrary code via a crafted payload entered into the fullname parameter."}, {"Reference": "CVE-2022-24442", "Description": "JetBrains YouTrack before 2021.4.40426 was vulnerable to SSTI (Server-Side Template Injection) via FreeMarker templates."}, {"Reference": "CVE-2022-29078", "Description": "The ejs (aka Embedded JavaScript templates) package 3.1.6 for Node.js allows server-side template injection in settings[view options][outputFunctionName]. This is parsed as an internal option, and overwrites the outputFunctionName option with an arbitrary OS command (which is executed upon template compilation)."}, {"Reference": "CVE-2022-35847", "Description": "An improper neutralization of special elements used in a template engine vulnerability [CWE-1336] in FortiSOAR management interface 7.2.0, 7.0.0 through 7.0.3, 6.4.0 through 6.4.4 may allow a remote and authenticated attacker to execute arbitrary code via a crafted payload."}, {"Reference": "CVE-2021-4315", "Description": "A vulnerability has been found in NYUCCL psiTurk up to 3.2.0 and classified as critical. This vulnerability affects unknown code of the file psiturk/experiment.py. The manipulation of the argument mode leads to improper neutralization of special elements used in a template engine. The exploit has been disclosed to the public and may be used. Upgrading to version 3.2.1 is able to address this issue. The name of the patch is 47787e15cecd66f2aa87687bf852ae0194a4335f. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-219676."}, {"Reference": "CVE-2022-0323", "Description": "Improper Neutralization of Special Elements Used in a Template Engine in Packagist mustache/mustache prior to 2.14.1."}, {"Reference": "CVE-2022-0896", "Description": "Improper Neutralization of Special Elements Used in a Template Engine in GitHub repository microweber/microweber prior to 1.3."}, {"Reference": "CVE-2022-23810", "Description": "Template injection (Improper Neutralization of Special Elements Used in a Template Engine) vulnerability in a-blog cms Ver.2.8.x series versions prior to Ver.2.8.75, Ver.2.9.x series versions prior to Ver.2.9.40, Ver.2.10.x series versions prior to Ver.2.10.44, Ver.2.11.x series versions prior to Ver.2.11.42, and Ver.3.0.x series versions prior to Ver.3.0.1 allows a remote authenticated attacker to obtain an arbitrary file on the server via unspecified vectors."}, {"Reference": "CVE-2022-0944", "Description": "Template injection in connection test endpoint leads to RCE in GitHub repository sqlpad/sqlpad prior to 6.10.1."}, {"Reference": "CVE-2022-2073", "Description": "Code Injection in GitHub repository getgrav/grav prior to 1.7.34."}, {"Reference": "CVE-2022-21686", "Description": "PrestaShop is an Open Source e-commerce platform. Starting with version 1.7.0.0 and ending with version 1.7.8.3, an attacker is able to inject twig code inside the back office when using the legacy layout. The problem is fixed in version 1.7.8.3. There are no known workarounds."}, {"Reference": "CVE-2022-22909", "Description": "HotelDruid v3.0.3 was discovered to contain a remote code execution (RCE) vulnerability which is exploited via an attacker inserting a crafted payload into the name field under the Create New Room module."}, {"Reference": "CVE-2022-24780", "Description": "Combodo iTop is a web based IT Service Management tool. In versions prior to 2.7.6 and 3.0.0, users of the iTop user portal can send TWIG code to the server by forging specific http queries, and execute arbitrary code on the server using http server user privileges. This issue is fixed in versions 2.7.6 and 3.0.0. There are currently no known workarounds."}, {"Reference": "CVE-2022-29221", "Description": "Smarty is a template engine for PHP, facilitating the separation of presentation (HTML/CSS) from application logic. Prior to versions 3.1.45 and 4.1.1, template authors could inject php code by choosing a malicious {block} name or {include} file name. Sites that cannot fully trust template authors should upgrade to versions 3.1.45 or 4.1.1 to receive a patch for this issue. There are currently no known workarounds."}, {"Reference": "CVE-2022-35944", "Description": "October is a self-hosted Content Management System (CMS) platform based on the Laravel PHP Framework. This vulnerability only affects installations that rely on the safe mode restriction, commonly used when providing public access to the admin panel. Assuming an attacker has access to the admin panel and permission to open the \"Editor\" section, they can bypass the Safe Mode (`cms.safe_mode`) restriction to introduce new PHP code in a CMS template using a specially crafted request. The issue has been patched in versions 2.2.34 and 3.0.66."}, {"Reference": "CVE-2022-36799", "Description": "This issue exists to document that a security improvement in the way that Jira Server and Data Center use templates has been implemented. Affected versions of Atlassian Jira Server and Data Center allowed remote attackers with system administrator permissions to execute arbitrary code via Template Injection leading to Remote Code Execution (RCE) in the Email Templates feature. In this case the security improvement was to protect against using the XStream library to be able to execute arbitrary code in velocity templates. The affected versions are before version 8.13.19, from version 8.14.0 before 8.20.7, and from version 8.21.0 before 8.22.1."}, {"Reference": "CVE-2022-4300", "Description": "A vulnerability was found in FastCMS. It has been rated as critical. This issue affects some unknown processing of the file /template/edit of the component Template Handler. The manipulation leads to injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-214901 was assigned to this vulnerability."}, {"Reference": "CVE-2022-45132", "Description": "In Linaro Automated Validation Architecture (LAVA) before 2022.11.1, remote code execution can be achieved through user-submitted Jinja2 template. The REST API endpoint for validating device configuration files in lava-server loads input as a Jinja2 template in a way that can be used to trigger remote code execution in the LAVA server."}]}
{"ID": "1338", "Name": "Improper Protections Against Hardware Overheating", "Abstraction": "Base", "Description": "A hardware device is missing or has inadequate protection features to prevent overheating.", "ExtendedDescription": "\n\nHardware, electrical circuits, and semiconductor silicon have thermal side effects, such that some of the energy consumed by the device gets dissipated as heat and increases the temperature of the device. For example, in semiconductors, higher-operating frequency of silicon results in higher power dissipation and heat. The leakage current in CMOS circuits increases with temperature, and this creates positive feedback that can result in thermal runaway and damage the device permanently.\n\n\nAny device lacking protections such as thermal sensors, adequate platform cooling, or thermal insulation is susceptible to attacks by malicious software that might deliberately operate the device in modes that result in overheating. This can be used as an effective denial of service (DoS) or permanent denial of service (PDoS) attack.\n\n\nDepending on the type of hardware device and its expected usage, such thermal overheating can also cause safety hazards and reliability issues. Note that battery failures can also cause device overheating but the mitigations and examples included in this submission cannot reliably protect against a battery failure. \n\n\nThere can be similar weaknesses with lack of protection from attacks based on overvoltage or overcurrent conditions. However, thermal heat is generated by hardware operation and the device should implement protection from overheating.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1339", "Name": "Insufficient Precision or Accuracy of a Real Number", "Abstraction": "Base", "Description": "The product processes a real number with an implementation in which the number's representation does not preserve required accuracy and precision in its fractional part, causing an incorrect result.", "ExtendedDescription": "\n\nWhen a security decision or calculation requires highly precise, accurate numbers such as financial calculations or prices, then small variations in the number could be exploited by an attacker. \n\n\nThere are multiple ways to store the fractional part of a real number in a computer. In all of these cases, there is a limit to the accuracy of recording a fraction. If the fraction can be represented in a fixed number of digits (binary or decimal), there might not be enough digits assigned to represent the number. In other cases the number cannot be represented in a fixed number of digits due to repeating in decimal or binary notation (e.g. 0.333333...) or due to a transcendental number such as \u03a0 or \u221a2. Rounding of numbers can lead to situations where the computer results do not adequately match the result of sufficiently accurate math. \n", "BackgroundDetails": ["There are three major ways to store real numbers in computers. Each method is described along with the limitations of how they store their numbers. \n\n  - Fixed: Some implementations use a fixed number of binary bits to represent both the integer and the fraction. In the demonstrative example about Muller's Recurrence, the fraction 108.0 - ((815.0 - 1500.0 / z) / y) cannot be represented in 8 binary digits. The numeric accuracy within languages such as PL/1, COBOL and Ada is expressed in decimal digits rather than binary digits. In SQL and most databases, the length of the integer and the fraction are specified by the programmer in decimal. In the language C, fixed reals are implemented according to ISO/IEC TR18037\n\n  - Floating: The number is stored in a version of scientific notation with a fixed length for the base and the significand. This allows flexibility for more accuracy when the integer portion is smaller. When dealing with large integers, the fractional accuracy is less. Languages such as PL/1, COBOL and Ada set the accuracy by decimal digit representation rather than using binary digits. Python also implements decimal floating-point numbers using the IEEE 754-2008 encoding method.\n\n  - Ratio: The number is stored as the ratio of two integers. These integers also have their limits. These integers can be stored in a fixed number of bits or in a vector of digits. While the vector of digits method provides for very large integers, they cannot truly represent a repeating or transcendental number as those numbers do not ever have a fixed length.\n\n"], "ObservedExamples": [{"Reference": "CVE-2018-16069", "Description": "Chain: series of floating-point precision errors (CWE-1339) in a web browser rendering engine causes out-of-bounds read (CWE-125), giving access to cross-origin data", "Link": "https://www.cve.org/CVERecord?id=CVE-2018-16069"}, {"Reference": "CVE-2017-7619", "Description": "Chain: rounding error in floating-point calculations (CWE-1339) in image processor leads to infinite loop (CWE-835)", "Link": "https://www.cve.org/CVERecord?id=CVE-2017-7619"}, {"Reference": "CVE-2021-29529", "Description": "Chain: machine-learning product can have a heap-based buffer overflow (CWE-122) when some integer-oriented bounds are calculated by using ceiling() and floor() on floating point values (CWE-1339)", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-29529"}, {"Reference": "CVE-2008-2108", "Description": "Chain: insufficient precision (CWE-1339) in random-number generator causes some zero bits to be reliably generated, reducing the amount of entropy (CWE-331)", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2108"}, {"Reference": "CVE-2006-6499", "Description": "Chain: web browser crashes due to infinite loop - \"bad looping logic [that relies on] floating point math [CWE-1339] to exit the loop [CWE-835]\"", "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6499"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "134", "Name": "Use of Externally-Controlled Format String", "Abstraction": "Base", "Description": "The product uses a function that accepts a format string as an argument, but the format string originates from an external source.", "ExtendedDescription": "\n\nWhen an attacker can modify an externally-controlled format string, this can lead to buffer overflows, denial of service, or data representation problems.\n\n\nIt should be noted that in some circumstances, such as internationalization, the set of format strings is externally controlled by design. If the source of these format strings is trusted (e.g. only contained in library files that are only modifiable by the system administrator), then the external control might not itself pose a vulnerability.\n", "ObservedExamples": [{"Reference": "CVE-2002-1825", "Description": "format string in Perl program", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1825"}, {"Reference": "CVE-2001-0717", "Description": "format string in bad call to syslog function", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0717"}, {"Reference": "CVE-2002-0573", "Description": "format string in bad call to syslog function", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0573"}, {"Reference": "CVE-2002-1788", "Description": "format strings in NNTP server responses", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1788"}, {"Reference": "CVE-2006-2480", "Description": "Format string vulnerability exploited by triggering errors or warnings, as demonstrated via format string specifiers in a .bmp filename.", "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2480"}, {"Reference": "CVE-2007-2027", "Description": "Chain: untrusted search path enabling resultant format string by loading malicious internationalization messages", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-2027"}], "FunctionalAreas": ["Logging", "Error Handling", "String Processing"], "AffectedResources": ["Memory"], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "Yes", "Top25Examples": [{"Reference": "CVE-2022-33938", "Description": "A format string injection vulnerability exists in the ghome_process_control_packet functionality of Abode Systems, Inc. iota All-In-One Security Kit 6.9Z and 6.9X. A specially-crafted XCMD can lead to memory corruption, information disclosure and denial of service. An attacker can send a malicious XML payload to trigger this vulnerability."}, {"Reference": "CVE-2022-35244", "Description": "A format string injection vulnerability exists in the XCMD getVarHA functionality of abode systems, inc. iota All-In-One Security Kit 6.9X and 6.9Z. A specially-crafted XCMD can lead to memory corruption, information disclosure, and denial of service. An attacker can send a malicious XML payload to trigger this vulnerability."}, {"Reference": "CVE-2022-35874", "Description": "Four format string injection vulnerabilities exist in the XCMD testWifiAP functionality of Abode Systems, Inc. iota All-In-One Security Kit 6.9X and 6.9Z. Specially-crafted configuration values can lead to memory corruption, information disclosure and denial of service. An attacker can modify a configuration value and then execute an XCMD to trigger these vulnerabilities.This vulnerability arises from format string injection via the `ssid` and `ssid_hex` configuration parameters, as used within the `testWifiAP` XCMD handler"}, {"Reference": "CVE-2022-35875", "Description": "Four format string injection vulnerabilities exist in the XCMD testWifiAP functionality of Abode Systems, Inc. iota All-In-One Security Kit 6.9X and 6.9Z. Specially-crafted configuration values can lead to memory corruption, information disclosure and denial of service. An attacker can modify a configuration value and then execute an XCMD to trigger these vulnerabilities.This vulnerability arises from format string injection via the `wpapsk` configuration parameter, as used within the `testWifiAP` XCMD handler"}, {"Reference": "CVE-2022-35876", "Description": "Four format string injection vulnerabilities exist in the XCMD testWifiAP functionality of Abode Systems, Inc. iota All-In-One Security Kit 6.9X and 6.9Z. Specially-crafted configuration values can lead to memory corruption, information disclosure and denial of service. An attacker can modify a configuration value and then execute an XCMD to trigger these vulnerabilities.This vulnerability arises from format string injection via the `default_key_id` and `key` configuration parameters, as used within the `testWifiAP` XCMD handler"}, {"Reference": "CVE-2022-35877", "Description": "Four format string injection vulnerabilities exist in the XCMD testWifiAP functionality of Abode Systems, Inc. iota All-In-One Security Kit 6.9X and 6.9Z. Specially-crafted configuration values can lead to memory corruption, information disclosure and denial of service. An attacker can modify a configuration value and then execute an XCMD to trigger these vulnerabilities.This vulnerability arises from format string injection via the `default_key_id` configuration parameter, as used within the `testWifiAP` XCMD handler"}, {"Reference": "CVE-2022-35878", "Description": "Four format string injection vulnerabilities exist in the UPnP logging functionality of Abode Systems, Inc. iota All-In-One Security Kit 6.9Z and 6.9X. A specially-crafted UPnP negotiation can lead to memory corruption, information disclosure, and denial of service. An attacker can host a malicious UPnP service to trigger these vulnerabilities.This vulnerability arises from format string injection via `ST` and `Location` HTTP response headers, as used within the `DoEnumUPnPService` action handler."}, {"Reference": "CVE-2022-35879", "Description": "Four format string injection vulnerabilities exist in the UPnP logging functionality of Abode Systems, Inc. iota All-In-One Security Kit 6.9Z and 6.9X. A specially-crafted UPnP negotiation can lead to memory corruption, information disclosure, and denial of service. An attacker can host a malicious UPnP service to trigger these vulnerabilities.This vulnerability arises from format string injection via `controlURL` XML tag, as used within the `DoUpdateUPnPbyService` action handler."}, {"Reference": "CVE-2022-35880", "Description": "Four format string injection vulnerabilities exist in the UPnP logging functionality of Abode Systems, Inc. iota All-In-One Security Kit 6.9Z and 6.9X. A specially-crafted UPnP negotiation can lead to memory corruption, information disclosure, and denial of service. An attacker can host a malicious UPnP service to trigger these vulnerabilities.This vulnerability arises from format string injection via `NewInternalClient` XML tag, as used within the `DoUpdateUPnPbyService` action handler."}, {"Reference": "CVE-2022-35881", "Description": "Four format string injection vulnerabilities exist in the UPnP logging functionality of Abode Systems, Inc. iota All-In-One Security Kit 6.9Z and 6.9X. A specially-crafted UPnP negotiation can lead to memory corruption, information disclosure, and denial of service. An attacker can host a malicious UPnP service to trigger these vulnerabilities.This vulnerability arises from format string injection via `errorCode` and `errorDescription` XML tags, as used within the `DoUpdateUPnPbyService` action handler."}, {"Reference": "CVE-2022-35884", "Description": "Four format string injection vulnerabilities exist in the web interface /action/wirelessConnect functionality of Abode Systems, Inc. iota All-In-One Security Kit 6.9Z and 6.9X. A specially-crafted HTTP request can lead to memory corruption, information disclosure and denial of service. An attacker can make an authenticated HTTP request to trigger these vulnerabilities.This vulnerability arises from format string injection via the `ssid_hex` HTTP parameter, as used within the `/action/wirelessConnect` handler."}, {"Reference": "CVE-2022-35885", "Description": "Four format string injection vulnerabilities exist in the web interface /action/wirelessConnect functionality of Abode Systems, Inc. iota All-In-One Security Kit 6.9Z and 6.9X. A specially-crafted HTTP request can lead to memory corruption, information disclosure and denial of service. An attacker can make an authenticated HTTP request to trigger these vulnerabilities.This vulnerability arises from format string injection via the `wpapsk_hex` HTTP parameter, as used within the `/action/wirelessConnect` handler."}, {"Reference": "CVE-2022-35886", "Description": "Four format string injection vulnerabilities exist in the web interface /action/wirelessConnect functionality of Abode Systems, Inc. iota All-In-One Security Kit 6.9Z and 6.9X. A specially-crafted HTTP request can lead to memory corruption, information disclosure and denial of service. An attacker can make an authenticated HTTP request to trigger these vulnerabilities.This vulnerability arises from format string injection via the `default_key_id` and `key` HTTP parameters, as used within the `/action/wirelessConnect` handler."}, {"Reference": "CVE-2022-35887", "Description": "Four format string injection vulnerabilities exist in the web interface /action/wirelessConnect functionality of Abode Systems, Inc. iota All-In-One Security Kit 6.9Z and 6.9X. A specially-crafted HTTP request can lead to memory corruption, information disclosure and denial of service. An attacker can make an authenticated HTTP request to trigger these vulnerabilities.This vulnerability arises from format string injection via the `default_key_id` HTTP parameter, as used within the `/action/wirelessConnect` handler."}, {"Reference": "CVE-2022-3724", "Description": "Crash in the USB HID protocol dissector in Wireshark 3.6.0 to 3.6.8 allows denial of service via packet injection or crafted capture file on Windows"}]}
{"ID": "1341", "Name": "Multiple Releases of Same Resource or Handle", "Abstraction": "Base", "Description": "The product attempts to close or release a resource or handle more than once, without any successful open between the close operations.", "ExtendedDescription": "\n\nCode typically requires \"opening\" handles or references to resources such as memory, files, devices, socket connections, services, etc. When the code is finished with using the resource, it is typically expected to \"close\" or \"release\" the resource, which indicates to the environment (such as the OS) that the resource can be re-assigned or reused by unrelated processes or actors - or in some cases, within the same process. API functions or other abstractions are often used to perform this release, such as free() or delete() within C/C++, or file-handle close() operations that are used in many languages.\n\n\nUnfortunately, the implementation or design of such APIs might expect the developer to be responsible for ensuring that such APIs are only called once per release of the resource. If the developer attempts to release the same resource/handle more than once, then the API's expectations are not met, resulting in undefined and/or insecure behavior. This could lead to consequences such as memory corruption, data corruption, execution path corruption, or other consequences.\n\n\nNote that while the implementation for most (if not all) resource reservation allocations involve a unique identifier/pointer/symbolic reference, then if this identifier is reused, checking the identifier for resource closure may result in a false state of openness and closing of the wrong resource. For this reason, reuse of identifiers is discouraged.\n", "ObservedExamples": [{"Reference": "CVE-2019-13351", "Description": "file descriptor double close can cause the wrong file to be associated with a file descriptor.", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-13351"}, {"Reference": "CVE-2006-5051", "Description": "Chain: Signal handler contains too much functionality (CWE-828), introducing a race condition that leads to a double free (CWE-415).", "Link": "https://www.cve.org/CVERecord?id=CVE-2006-5051"}, {"Reference": "CVE-2004-0772", "Description": "Double free resultant from certain error conditions.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0772"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1342", "Name": "Information Exposure through Microarchitectural State after Transient Execution", "Abstraction": "Base", "Description": "The processor does not properly clear microarchitectural state after incorrect microcode assists or speculative execution, resulting in transient execution.", "ExtendedDescription": "\n\nIn many processor architectures an exception, mis-speculation, or microcode assist results in a flush operation to clear results that are no longer required. This action prevents these results from influencing architectural state that is intended to be visible from software. However, traces of this transient execution may remain in microarchitectural buffers, resulting in a change in microarchitectural state that can expose sensitive information to an attacker using side-channel analysis. For example, Load Value Injection (LVI) [REF-1202] can exploit direct injection of erroneous values into intermediate load and store buffers.\n\n\nSeveral conditions may need to be fulfilled for a successful attack:\n\n\n  1. incorrect transient execution that results in remanence of sensitive information;\n\n  1. attacker has the ability to provoke microarchitectural exceptions;\n\n  1. operations and structures in victim code that can be exploited must be identified.\n\n", "ObservedExamples": [{"Reference": "CVE-2020-0551", "Description": "Load value injection in some processors utilizing speculative execution may allow an authenticated user to enable information disclosure via a side-channel with local access.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-0551"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2021-26341", "Description": "Some AMD CPUs may transiently execute beyond unconditional direct branches, which may potentially result in data leakage."}, {"Reference": "CVE-2021-28689", "Description": "x86: Speculative vulnerabilities with bare (non-shim) 32-bit PV guests 32-bit x86 PV guest kernels run in ring 1. At the time when Xen was developed, this area of the i386 architecture was rarely used, which is why Xen was able to use it to implement paravirtualisation, Xen's novel approach to virtualization. In AMD64, Xen had to use a different implementation approach, so Xen does not use ring 1 to support 64-bit guests. With the focus now being on 64-bit systems, and the availability of explicit hardware support for virtualization, fixing speculation issues in ring 1 is not a priority for processor companies. Indirect Branch Restricted Speculation (IBRS) is an architectural x86 extension put together to combat speculative execution sidechannel attacks, including Spectre v2. It was retrofitted in microcode to existing CPUs. For more details on Spectre v2, see: http://xenbits.xen.org/xsa/advisory-254.html However, IBRS does not architecturally protect ring 0 from predictions learnt in ring 1. For more details, see: https://software.intel.com/security-software-guidance/deep-dives/deep-dive-indirect-branch-restricted-speculation Similar situations may exist with other mitigations for other kinds of speculative execution attacks. The situation is quite likely to be similar for speculative execution attacks which have yet to be discovered, disclosed, or mitigated."}, {"Reference": "CVE-2022-29900", "Description": "Mis-trained branch predictions for return instructions may allow arbitrary speculative code execution under certain microarchitecture-dependent conditions."}]}
{"ID": "135", "Name": "Incorrect Calculation of Multi-Byte String Length", "Abstraction": "Base", "Description": "The product does not correctly calculate the length of strings that can contain wide or multi-byte characters.", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1351", "Name": "Improper Handling of Hardware Behavior in Exceptionally Cold Environments", "Abstraction": "Base", "Description": "A hardware device, or the firmware running on it, is\n                missing or has incorrect protection features to maintain\n                goals of security primitives when the device is cooled below\n                standard operating temperatures.", "ExtendedDescription": "\n\nThe hardware designer may improperly anticipate hardware behavior when exposed to exceptionally cold conditions. As a result they may introduce a weakness by not accounting for the modified behavior of critical components when in extreme environments.\n\n\nAn example of a change in behavior is that power loss won't clear/reset any volatile state when cooled below standard operating temperatures. This may result in a weakness when the starting state of the volatile memory is being relied upon for a security decision. For example, a Physical Unclonable Function (PUF) may be supplied as a security primitive to improve confidentiality, authenticity, and integrity guarantees. However, when the PUF is paired with DRAM, SRAM, or another temperature sensitive entropy source, the system designer may introduce weakness by failing to account for the chosen entropy source's behavior at exceptionally low temperatures. In the case of DRAM and SRAM, when power is cycled at low temperatures, the device will not contain the bitwise biasing caused by inconsistencies in manufacturing and will instead contain the data from previous boot. Should the PUF primitive be used in a cryptographic construction which does not account for full adversary control of PUF seed data, weakness would arise.\n\n\nThis weakness does not cover \"Cold Boot Attacks\" wherein RAM or other external storage is super cooled and read externally by an attacker.\n", "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No"}
{"ID": "1357", "Name": "Reliance on Insufficiently Trustworthy Component", "Abstraction": "Class", "Description": "The product is built from multiple separate components, but it uses a component that is not sufficiently trusted to meet expectations for security, reliability, updateability, and maintainability.", "ExtendedDescription": "\n\nMany modern hardware and software products are built by combining multiple smaller components together into one larger entity, often during the design or architecture phase. For example, a hardware component might be built by a separate supplier, or the product might use an open-source software library from a third party.\n\n\nRegardless of the source, each component should be sufficiently trusted to ensure correct, secure operation of the product. If a component is not trustworthy, it can produce significant risks for the overall product, such as vulnerabilities that cannot be patched fast enough (if at all); hidden functionality such as malware; inability to update or replace the component if needed for security purposes; hardware components built from parts that do not meet specifications in ways that can lead to weaknesses; etc. Note that a component might not be trustworthy even if it is owned by the product vendor, such as a software component whose source code is lost and was built by developers who left the company, or a component that was developed by a separate company that was acquired and brought into the product's own company.\n\n\nNote that there can be disagreement as to whether a component is sufficiently trustworthy, since trust is ultimately subjective. Different stakeholders (e.g., customers, vendors, governments) have various threat models and ways to assess trust, and design/architecture choices might make tradeoffs between security, reliability, safety, privacy, cost, and other characteristics.\n", "ObservedExamples": [{"Reference": "CVE-2020-9054", "Description": "Chain: network-attached storage (NAS) device has a critical OS command injection (CWE-78) vulnerability that is actively exploited to place IoT devices into a botnet, but some products are \"end-of-support\" and cannot be patched (CWE-1277). [REF-1097]", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-9054"}], "MappingNotes": {"Usage": "Allowed-with-Review"}, "1003_view": "No"}
{"ID": "138", "Name": "Improper Neutralization of Special Elements", "Abstraction": "Class", "Description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.", "ExtendedDescription": "Most languages and protocols have their own special elements such as characters and reserved words. These special elements can carry control implications. If product does not prevent external control or influence over the inclusion of such special elements, the control flow of the program may be altered from what was intended. For example, both Unix and Windows interpret the symbol < (\"less than\") as meaning \"read input from a file\".", "ObservedExamples": [{"Reference": "CVE-2001-0677", "Description": "Read arbitrary files from mail client by providing a special MIME header that is internally used to store pathnames for attachments.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0677"}, {"Reference": "CVE-2000-0703", "Description": "Setuid program does not cleanse special escape sequence before sending data to a mail program, causing the mail program to process those sequences.", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0703"}, {"Reference": "CVE-2003-0020", "Description": "Multi-channel issue. Terminal escape sequences not filtered from log files.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0020"}, {"Reference": "CVE-2003-0083", "Description": "Multi-channel issue. Terminal escape sequences not filtered from log files.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0083"}], "MappingNotes": {"Usage": "Discouraged"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2022-0661", "Description": "The Ad Injection WordPress plugin through 1.2.0.19 does not properly sanitize the body of the adverts injected into the pages, allowing a high privileged user (Admin+) to inject arbitrary HTML or javascript even with unfiltered_html disallowed, leading to a stored cross-site scripting (XSS) vulnerability. Further it is also possible to inject PHP code, leading to a Remote Code execution (RCE) vulnerability, even if the DISALLOW_FILE_EDIT and DISALLOW_FILE_MOD constants are both set."}, {"Reference": "CVE-2022-35651", "Description": "A stored XSS and blind SSRF vulnerability was found in Moodle, occurs due to insufficient sanitization of user-supplied data in the SCORM track details. A remote attacker can trick the victim to follow a specially crafted link and execute arbitrary HTML and script code in user's browser in context of vulnerable website to steal potentially sensitive information, change appearance of the web page, can perform phishing and drive-by-download attacks."}, {"Reference": "CVE-2022-36325", "Description": "Affected devices do not properly sanitize data introduced by an user when rendering the web interface. This could allow an authenticated remote attacker with administrative privileges to inject code and lead to a DOM-based XSS."}, {"Reference": "CVE-2022-4029", "Description": "The Simple:Press plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the 'sforum_[md5 hash of the WordPress URL]' cookie value in versions up to, and including, 6.8 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link. This would be highly complex to exploit as it would require the attacker to set the cookie a cookie for the targeted user."}, {"Reference": "CVE-2022-24720", "Description": "image_processing is an image processing wrapper for libvips and ImageMagick/GraphicsMagick. Prior to version 1.12.2, using the `#apply` method from image_processing to apply a series of operations that are coming from unsanitized user input allows the attacker to execute shell commands. This method is called internally by Active Storage variants, so Active Storage is vulnerable as well. The vulnerability has been fixed in version 1.12.2 of image_processing. As a workaround, users who process based on user input should always sanitize the user input by allowing only a constrained set of operations."}, {"Reference": "CVE-2021-25296", "Description": "Nagios XI version xi-5.7.5 is affected by OS command injection. The vulnerability exists in the file /usr/local/nagiosxi/html/includes/configwizards/windowswmi/windowswmi.inc.php due to improper sanitization of authenticated user-controlled input by a single HTTP request, which can lead to OS command injection on the Nagios XI server."}, {"Reference": "CVE-2021-25297", "Description": "Nagios XI version xi-5.7.5 is affected by OS command injection. The vulnerability exists in the file /usr/local/nagiosxi/html/includes/configwizards/switch/switch.inc.php due to improper sanitization of authenticated user-controlled input by a single HTTP request, which can lead to OS command injection on the Nagios XI server."}, {"Reference": "CVE-2021-25298", "Description": "Nagios XI version xi-5.7.5 is affected by OS command injection. The vulnerability exists in the file /usr/local/nagiosxi/html/includes/configwizards/cloud-vm/cloud-vm.inc.php due to improper sanitization of authenticated user-controlled input by a single HTTP request, which can lead to OS command injection on the Nagios XI server."}, {"Reference": "CVE-2021-27101", "Description": "Accellion FTA 9_12_370 and earlier is affected by SQL injection via a crafted Host header in a request to document_root.html. The fixed version is FTA_9_12_380 and later."}, {"Reference": "CVE-2021-35394", "Description": "Realtek Jungle SDK version v2.x up to v3.4.14B provides a diagnostic tool called 'MP Daemon' that is usually compiled as 'UDPServer' binary. The binary is affected by multiple memory corruption vulnerabilities and an arbitrary command injection vulnerability that can be exploited by remote unauthenticated attackers."}, {"Reference": "CVE-2022-26352", "Description": "An issue was discovered in the ContentResource API in dotCMS 3.0 through 22.02. Attackers can craft a multipart form request to post a file whose filename is not initially sanitized. This allows directory traversal, in which the file is saved outside of the intended storage location. If anonymous content creation is enabled, this allows an unauthenticated attacker to upload an executable file, such as a .jsp file, that can lead to remote code execution."}, {"Reference": "CVE-2022-27926", "Description": "A reflected cross-site scripting (XSS) vulnerability in the /public/launchNewWindow.jsp component of Zimbra Collaboration (aka ZCS) 9.0 allows unauthenticated attackers to execute arbitrary web script or HTML via request parameters."}, {"Reference": "CVE-2022-22221", "Description": "An Improper Neutralization of Special Elements vulnerability in the download manager of Juniper Networks Junos OS on SRX Series and EX Series allows a locally authenticated attacker with low privileges to take full control over the device. One aspect of this vulnerability is that the attacker needs to be able to execute any of the \"request ...\" or \"show system download ...\" commands. This issue affects Juniper Networks Junos OS on SRX Series and EX Series: All versions prior to 19.2R1-S9, 19.2R3-S5; 19.3 versions prior to 19.3R3-S6; 19.4 versions prior to 19.4R3-S8; 20.1 versions prior to 20.1R3-S4; 20.2 versions prior to 20.2R3-S4; 20.3 versions prior to 20.3R3-S3; 20.4 versions prior to 20.4R3-S2, 20.4R3-S3; 21.1 versions prior to 21.1R3-S1; 21.2 versions prior to 21.2R2-S2, 21.2R3; 21.3 versions prior to 21.3R2, 21.3R3; 21.4 versions prior to 21.4R1-S1, 21.4R2."}, {"Reference": "CVE-2022-3047", "Description": "Insufficient policy enforcement in Extensions API in Google Chrome prior to 105.0.5195.52 allowed an attacker who convinced a user to install a malicious extension to bypass downloads policy via a crafted HTML page."}, {"Reference": "CVE-2022-21705", "Description": "Octobercms is a self-hosted CMS platform based on the Laravel PHP Framework. In affected versions user input was not properly sanitized before rendering. An authenticated user with the permissions to create, modify and delete website pages can exploit this vulnerability to bypass `cms.safe_mode` / `cms.enableSafeMode` in order to execute arbitrary code. This issue only affects admin panels that rely on safe mode and restricted permissions. To exploit this vulnerability, an attacker must first have access to the backend area. The issue has been patched in Build 474 (v1.0.474) and v1.1.10. Users unable to upgrade should apply https://github.com/octobercms/library/commit/c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe to your installation manually."}, {"Reference": "CVE-2022-24039", "Description": "A vulnerability has been identified in Desigo PXC4 (All versions < V02.20.142.10-10884), Desigo PXC5 (All versions < V02.20.142.10-10884). The \u201caddCell\u201d JavaScript function fails to properly sanitize user-controllable input before including it into the generated XML body of the XLS report document, such that it is possible to inject arbitrary content (e.g., XML tags) into the generated file. An attacker with restricted privileges, by poisoning any of the content used to generate XLS reports, could be able to leverage the application to deliver malicious files against higher-privileged users and obtain Remote Code Execution (RCE) against the administrator\u2019s workstation."}, {"Reference": "CVE-2022-35948", "Description": "undici is an HTTP/1.1 client, written from scratch for Node.js.`=< undici@5.8.0` users are vulnerable to _CRLF Injection_ on headers when using unsanitized input as request headers, more specifically, inside the `content-type` header. Example: ``` import { request } from 'undici' const unsanitizedContentTypeInput = 'application/json\\\\r\\\\n\\\\r\\\\nGET /foo2 HTTP/1.1' await request('http://localhost:3000, { method: 'GET', headers: { 'content-type': unsanitizedContentTypeInput }, }) ``` The above snippet will perform two requests in a single `request` API call: 1) `http://localhost:3000/` 2) `http://localhost:3000/foo2` This issue was patched in Undici v5.8.1. Sanitize input when sending content-type headers using user input as a workaround."}, {"Reference": "CVE-2021-24942", "Description": "The Menu Item Visibility Control WordPress plugin through 0.5 doesn't sanitize and validate the \"Visibility logic\" option for WordPress menu items, which could allow highly privileged users to execute arbitrary PHP code even in a hardened environment."}, {"Reference": "CVE-2022-0819", "Description": "Code Injection in GitHub repository dolibarr/dolibarr prior to 15.0.1."}, {"Reference": "CVE-2022-25644", "Description": "All versions of package @pendo324/get-process-by-name are vulnerable to Arbitrary Code Execution due to improper sanitization of getProcessByName function."}, {"Reference": "CVE-2022-46161", "Description": "pdfmake is an open source client/server side PDF printing in pure JavaScript. In versions up to and including 0.2.5 pdfmake contains an unsafe evaluation of user controlled input. Users of pdfmake are thus subject to arbitrary code execution in the context of the process running the pdfmake code. There are no known fixes for this issue. Users are advised to restrict access to trusted user input."}, {"Reference": "CVE-2022-46836", "Description": "PHP code injection in watolib auth.php and hosttags.php in Tribe29's Checkmk <= 2.1.0p10, Checkmk <= 2.0.0p27, and Checkmk <= 1.6.0p29 allows an attacker to inject and execute PHP code which will be executed upon request of the vulnerable component."}, {"Reference": "CVE-2021-33360", "Description": "An issue found in Stoqey gnuplot v.0.0.3 and earlier allows attackers to execute arbitrary code via the src/index.ts, plotCallack, child_process, and/or filePath parameter(s)."}, {"Reference": "CVE-2022-0764", "Description": "Arbitrary Command Injection in GitHub repository strapi/strapi prior to 4.1.0."}, {"Reference": "CVE-2022-21129", "Description": "Versions of the package nemo-appium before 0.0.9 are vulnerable to Command Injection due to improper input sanitization in the 'module.exports.setup' function. **Note:** In order to exploit this vulnerability appium-running 0.1.3 has to be installed as one of nemo-appium dependencies. "}, {"Reference": "CVE-2022-21165", "Description": "All versions of package font-converter are vulnerable to Arbitrary Command Injection due to missing sanitization of input that potentially flows into the child_process.exec() function."}, {"Reference": "CVE-2022-21186", "Description": "The package @acrontum/filesystem-template before 0.0.2 are vulnerable to Arbitrary Command Injection due to the fetchRepo API missing sanitization of the href field of external input."}, {"Reference": "CVE-2022-21191", "Description": "Versions of the package global-modules-path before 3.0.0 are vulnerable to Command Injection due to missing input sanitization or other checks and sandboxes being employed to the getPath function. "}, {"Reference": "CVE-2022-2143", "Description": "The affected product is vulnerable to two instances of command injection, which may allow an attacker to remotely execute arbitrary code."}, {"Reference": "CVE-2022-21810", "Description": "All versions of the package smartctl are vulnerable to Command Injection via the info method due to improper input sanitization. "}, {"Reference": "CVE-2022-25350", "Description": "All versions of the package puppet-facter are vulnerable to Command Injection via the getFact function due to improper input sanitization. "}, {"Reference": "CVE-2022-25853", "Description": "All versions of the package semver-tags are vulnerable to Command Injection via the getGitTagsRemote function due to improper input sanitization. "}, {"Reference": "CVE-2022-25855", "Description": "All versions of the package create-choo-app3 are vulnerable to Command Injection via the devInstall function due to improper user-input sanitization. "}, {"Reference": "CVE-2022-25890", "Description": "All versions of the package wifey are vulnerable to Command Injection via the connect() function due to improper input sanitization. "}, {"Reference": "CVE-2022-25908", "Description": "All versions of the package create-choo-electron are vulnerable to Command Injection via the devInstall function due to improper user-input sanitization. "}, {"Reference": "CVE-2022-25916", "Description": "Versions of the package mt7688-wiscan before 0.8.3 are vulnerable to Command Injection due to improper input sanitization in the 'wiscan.scan' function. "}, {"Reference": "CVE-2022-25923", "Description": "Versions of the package exec-local-bin before 1.2.0 are vulnerable to Command Injection via the theProcess() functionality due to improper user-input sanitization. "}, {"Reference": "CVE-2022-25926", "Description": "Versions of the package window-control before 1.4.5 are vulnerable to Command Injection via the sendKeys function, due to improper input sanitization. "}, {"Reference": "CVE-2022-25962", "Description": "All versions of the package vagrant.js are vulnerable to Command Injection via the boxAdd function due to improper input sanitization. "}, {"Reference": "CVE-2022-3275", "Description": "Command injection is possible in the puppetlabs-apt module prior to version 9.0.0. A malicious actor is able to exploit this vulnerability only if they are able to provide unsanitized input to the module. This condition is rare in most deployments of Puppet and Puppet Enterprise."}, {"Reference": "CVE-2022-3276", "Description": "Command injection is possible in the puppetlabs-mysql module prior to version 13.0.0. A malicious actor is able to exploit this vulnerability only if they are able to provide unsanitized input to the module. This condition is rare in most deployments of Puppet and Puppet Enterprise."}, {"Reference": "CVE-2022-36267", "Description": "In Airspan AirSpot 5410 version 0.3.4.1-4 and under there exists a Unauthenticated remote command injection vulnerability. The ping functionality can be called without user authentication when crafting a malicious http request by injecting code in one of the parameters allowing for remote code execution. This vulnerability is exploited via the binary file /home/www/cgi-bin/diagnostics.cgi that accepts unauthenticated requests and unsanitized data. As a result, a malicious actor can craft a specific request and interact remotely with the device."}, {"Reference": "CVE-2022-40282", "Description": "The web server of Hirschmann BAT-C2 before 09.13.01.00R04 allows authenticated command injection. This allows an authenticated attacker to pass commands to the shell of the system because the dir parameter of the FsCreateDir Ajax function is not sufficiently sanitized. The vendor's ID is BSECV-2022-21."}, {"Reference": "CVE-2022-40785", "Description": "Unsanitized input when setting a locale file leads to shell injection in mIPC camera firmware 5.3.1.2003161406. This allows an attacker to gain remote code execution on cameras running the firmware when a victim logs into a specially crafted mobile app."}, {"Reference": "CVE-2022-48338", "Description": "An issue was discovered in GNU Emacs through 28.2. In ruby-mode.el, the ruby-find-library-file function has a local command injection vulnerability. The ruby-find-library-file function is an interactive function, and bound to C-c C-f. Inside the function, the external command gem is called through shell-command-to-string, but the feature-name parameters are not escaped. Thus, malicious Ruby source files may cause commands to be executed."}, {"Reference": "CVE-2022-36323", "Description": "Affected devices do not properly sanitize an input field. This could allow an authenticated remote attacker with administrative privileges to inject code or spawn a system root shell."}, {"Reference": "CVE-2022-25921", "Description": "All versions of package morgan-json are vulnerable to Arbitrary Code Execution due to missing sanitization of input passed to the Function constructor."}, {"Reference": "CVE-2021-35254", "Description": "SolarWinds received a report of a vulnerability related to an input that was not sanitized in WebHelpDesk. SolarWinds has removed this input field to prevent the misuse of this input in the future."}, {"Reference": "CVE-2021-38450", "Description": "The affected controllers do not properly sanitize the input containing code syntax. As a result, an attacker could craft code to alter the intended controller flow of the software."}, {"Reference": "CVE-2021-43404", "Description": "An issue was discovered in FusionPBX before 4.5.30. The FAX file name may have risky characters."}, {"Reference": "CVE-2021-43405", "Description": "An issue was discovered in FusionPBX before 4.5.30. The fax_extension may have risky characters (it is not constrained to be numeric)."}, {"Reference": "CVE-2021-43861", "Description": "Mermaid is a Javascript based diagramming and charting tool that uses Markdown-inspired text definitions and a renderer to create and modify complex diagrams. Prior to version 8.13.8, malicious diagrams can run javascript code at diagram readers' machines. Users should upgrade to version 8.13.8 to receive a patch. There are no known workarounds aside from upgrading."}, {"Reference": "CVE-2022-1414", "Description": "3scale API Management 2 does not perform adequate sanitation for user input in multiple fields. An authenticated user could use this flaw to inject scripts and possibly gain access to sensitive information or conduct further attacks."}, {"Reference": "CVE-2022-1867", "Description": "Insufficient validation of untrusted input in Data Transfer in Google Chrome prior to 102.0.5005.61 allowed a remote attacker to bypass same origin policy via a crafted clipboard content."}, {"Reference": "CVE-2022-22589", "Description": "A validation issue was addressed with improved input sanitization. This issue is fixed in iOS 15.3 and iPadOS 15.3, watchOS 8.4, tvOS 15.3, Safari 15.3, macOS Monterey 12.2. Processing a maliciously crafted mail message may lead to running arbitrary javascript."}, {"Reference": "CVE-2022-28054", "Description": "Improper sanitization of trigger action scripts in VanDyke Software VShell for Windows v4.6.2 allows attackers to execute arbitrary code via a crafted value."}, {"Reference": "CVE-2022-32229", "Description": "A information disclosure vulnerability exists in Rockert.Chat <v5 due to /api/v1/chat.getThreadsList lack of sanitization of user inputs and can therefore leak private thread messages to unauthorized users via Mongo DB injection."}, {"Reference": "CVE-2022-34885", "Description": "An improper input sanitization vulnerability in the Motorola MR2600 router could allow a local user with elevated permissions to execute arbitrary code."}, {"Reference": "CVE-2022-20664", "Description": "A vulnerability in the web management interface of Cisco Secure Email and Web Manager, formerly Cisco Security Management Appliance (SMA), and Cisco Email Security Appliance (ESA) could allow an authenticated, remote attacker to retrieve sensitive information from a Lightweight Directory Access Protocol (LDAP) external authentication server connected to an affected device. This vulnerability is due to a lack of proper input sanitization while querying the external authentication server. An attacker could exploit this vulnerability by sending a crafted query through an external authentication web page. A successful exploit could allow the attacker to gain access to sensitive information, including user credentials from the external authentication server. To exploit this vulnerability, an attacker would need valid operator-level (or higher) credentials."}, {"Reference": "CVE-2021-38703", "Description": "Wireless devices running certain Arcadyan-derived firmware (such as KPN Experia WiFi 1.00.15) do not properly sanitise user input to the syslog configuration form. An authenticated remote attacker could leverage this to alter the device configuration and achieve remote code execution. This can be exploited in conjunction with CVE-2021-20090."}]}
{"ID": "1384", "Name": "Improper Handling of Physical or Environmental Conditions", "Abstraction": "Class", "Description": "The product does not properly handle unexpected physical or environmental conditions that occur naturally or are artificially induced.", "ExtendedDescription": "\n\nHardware products are typically only guaranteed to behave correctly within certain physical limits or environmental conditions. Such products cannot necessarily control the physical or external conditions to which they are subjected. However, the inability to handle such conditions can undermine a product's security. For example, an unexpected physical or environmental condition may cause the flipping of a bit that is used for an authentication decision. This unexpected condition could occur naturally or be induced artificially by an adversary.\n\n\nPhysical or environmental conditions of concern are:\n\n\n  -  **Atmospheric characteristics: ** extreme temperature ranges, etc.\n\n  -  **Interference: ** electromagnetic interference (EMI), radio frequency interference (RFI), etc.\n\n  -  **Assorted light sources: ** white light, ultra-violet light (UV), lasers, infrared (IR), etc.\n\n  -  **Power variances: ** under-voltages, over-voltages, under-current, over-current, etc.\n\n  -  **Clock variances: ** glitching, overclocking, clock stretching, etc.\n\n  -  **Component aging and degradation** \n\n  -  **Materials manipulation: ** focused ion beams (FIB), etc.\n\n  -  **Exposure to radiation: ** x-rays, cosmic radiation, etc.\n\n", "ObservedExamples": [{"Reference": "CVE-2019-17391", "Description": "Lack of anti-glitch protections allows an attacker to launch a physical attack to bypass the secure boot and read protected eFuses.", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-17391"}], "MappingNotes": {"Usage": "Allowed-with-Review"}, "1003_view": "No"}
{"ID": "1385", "Name": "Missing Origin Validation in WebSockets", "Abstraction": "Variant", "Description": "The product uses a WebSocket, but it does not properly verify that the source of data or communication is valid.", "ExtendedDescription": "\n\nWebSockets provide a bi-directional low latency communication (near real-time) between a client and a server. WebSockets are different than HTTP in that the connections are long-lived, as the channel will remain open until the client or the server is ready to send the message, whereas in HTTP, once the response occurs (which typically happens immediately), the transaction completes. \n\n\nA WebSocket can leverage the existing HTTP protocol over ports 80 and 443, but it is not limited to HTTP. WebSockets can make cross-origin requests that are not restricted by browser-based protection mechanisms such as the Same Origin Policy (SOP) or Cross-Origin Resource Sharing (CORS). Without explicit origin validation, this makes CSRF attacks more powerful.\n", "AlternateTerms": [{"Term": "Cross-Site WebSocket hijacking (CSWSH)", "Description": "this term is used for attacks that exploit this weakness"}], "ObservedExamples": [{"Reference": "CVE-2020-25095", "Description": "web console for SIEM product does not check Origin header, allowing Cross Site WebSocket Hijacking (CSWH)", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-25095"}, {"Reference": "CVE-2018-6651", "Description": "Chain: gaming client attempts to validate the Origin header, but only uses a substring, allowing Cross-Site WebSocket hijacking by forcing requests from an origin whose hostname is a substring of the valid origin.", "Link": "https://www.cve.org/CVERecord?id=CVE-2018-6651"}, {"Reference": "CVE-2018-14730", "Description": "WebSocket server does not check the origin of requests, allowing attackers to steal developer's code using a ws://127.0.0.1:3123/ connection.", "Link": "https://www.cve.org/CVERecord?id=CVE-2018-14730"}, {"Reference": "CVE-2018-14731", "Description": "WebSocket server does not check the origin of requests, allowing attackers to steal developer's code using a ws://127.0.0.1/ connection to a randomized port number.", "Link": "https://www.cve.org/CVERecord?id=CVE-2018-14731"}, {"Reference": "CVE-2018-14732", "Description": "WebSocket server does not check the origin of requests, allowing attackers to steal developer's code using a ws://127.0.0.1:8080/ connection.", "Link": "https://www.cve.org/CVERecord?id=CVE-2018-14732"}], "MappingNotes": {"Usage": "Allowed"}, "1003_view": "No", "Top25Examples": [{"Reference": "CVE-2022-22757", "Description": "Remote Agent, used in WebDriver, did not validate the Host or Origin headers. This could have allowed websites to connect back locally to the user's browser to control it. <br>*This bug only affected Firefox when WebDriver was enabled, which is not the default configuration.*. This vulnerability affects Firefox < 97."}]}
