{"ID": "267", "Name": "Privilege Defined With Unsafe Actions", "Abstraction": "Base", "Structure": "Simple", "Status": "Incomplete", "Description": "A particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "269", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}, {"Phase": "Operation"}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Gain Privileges or Assume Identity"], "Note": "A user can access restricted functionality and/or sensitive information that may include administrative functionality and user accounts."}], "PotentialMitigations": [{"MitigationID": "MIT-1", "Phase": ["Architecture and Design", "Operation"], "Description": "Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software."}, {"MitigationID": "MIT-17", "Phase": ["Architecture and Design", "Operation"], "Strategy": "Environment Hardening", "Description": "Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges that are only used for a single task. That way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations."}], "DemonstrativeExamples": [{"ID": "DX-127", "Entries": [{"IntroText": "This code intends to allow only Administrators to print debug information about a system."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tpublic enum Roles {\n\t\tADMIN,USER,GUEST\n\t}\n\tpublic void printDebugInfo(User requestingUser){\n\t\t\tif(isAuthenticated(requestingUser)){\n\t\t\t\t\tswitch(requestingUser.role){\n\t\t\t\t\t\t\tcase GUEST:\n\t\t\t\t\t\t\t\tSystem.out.println(\"You are not authorized to perform this command\");\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tSystem.out.println(currentDebugState());\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(\"You must be logged in to perform this command\");\n\t\t\t}\n\t}\n```"}, {"BodyText": "While the intention was to only allow Administrators to print the debug information, the code as written only excludes those with the role of \"GUEST\". Someone with the role of \"ADMIN\" or \"USER\" will be allowed access, which goes against the original intent. An attacker may be able to use this debug information to craft an attack on the system."}]}], "ObservedExamples": [{"Reference": "CVE-2002-1981", "Description": "Roles have access to dangerous procedures (Accessible entities).", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1981"}, {"Reference": "CVE-2002-1671", "Description": "Untrusted object/method gets access to clipboard (Accessible entities).", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1671"}, {"Reference": "CVE-2004-2204", "Description": "Gain privileges using functions/tags that should be restricted (Accessible entities).", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2204"}, {"Reference": "CVE-2000-0315", "Description": "Traceroute program allows unprivileged users to modify source address of packet (Accessible entities).", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0315"}, {"Reference": "CVE-2004-0380", "Description": "Bypass domain restrictions using a particular file that references unsafe URI schemes (Accessible entities).", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0380"}, {"Reference": "CVE-2002-1154", "Description": "Script does not restrict access to an update command, leading to resultant disk consumption and filled error logs (Accessible entities).", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1154"}, {"Reference": "CVE-2002-1145", "Description": "\"public\" database user can use stored procedure to modify data controlled by the database owner (Unsafe privileged actions).", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1145"}, {"Reference": "CVE-2000-0506", "Description": "User with capability can prevent setuid program from dropping privileges (Unsafe privileged actions).", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0506"}, {"Reference": "CVE-2002-2042", "Description": "Allows attachment to and modification of privileged processes (Unsafe privileged actions).", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2042"}, {"Reference": "CVE-2000-1212", "Description": "User with privilege can edit raw underlying object using unprotected method (Unsafe privileged actions).", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1212"}, {"Reference": "CVE-2005-1742", "Description": "Inappropriate actions allowed by a particular role(Unsafe privileged actions).", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1742"}, {"Reference": "CVE-2001-1480", "Description": "Untrusted entity allowed to access the system clipboard (Unsafe privileged actions).", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1480"}, {"Reference": "CVE-2001-1551", "Description": "Extra Linux capability allows bypass of system-specified restriction (Unsafe privileged actions).", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1551"}, {"Reference": "CVE-2001-1166", "Description": "User with debugging rights can read entire process (Unsafe privileged actions).", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1166"}, {"Reference": "CVE-2005-1816", "Description": "Non-root admins can add themselves or others to the root admin group (Unsafe privileged actions).", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1816"}, {"Reference": "CVE-2005-2173", "Description": "Users can change certain properties of objects to perform otherwise unauthorized actions (Unsafe privileged actions).", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2173"}, {"Reference": "CVE-2005-2027", "Description": "Certain debugging commands not restricted to just the administrator, allowing registry modification and infoleak (Unsafe privileged actions).", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2027"}], "RelatedAttackPatterns": ["58", "634", "637", "643", "648"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "\n\nNote: there are 2 separate sub-categories here:\n\n```\n\t\t- privilege incorrectly allows entities to perform certain actions\n\t\t- object is incorrectly accessible to entities with a given privilege\n```\n"}], "Top25Examples": [{"Reference": "CVE-2022-38124", "Description": "Debug tool in Secomea SiteManager allows logged-in administrator to modify system state in an unintended manner."}]}
{"ID": "268", "Name": "Privilege Chaining", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "Two distinct privileges, roles, capabilities, or rights can be combined in a way that allows an entity to perform unsafe actions that would not be allowed without that combination.", "LikelihoodOfExploit": "High", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "269", "ViewID": "1000", "Ordinal": "Primary"}], "WeaknessOrdinalities": [{"Ordinality": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}, {"Phase": "Operation"}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Gain Privileges or Assume Identity"], "Note": "A user can be given or gain access rights of another user. This can give the user unauthorized access to sensitive information including the access information of another user."}], "PotentialMitigations": [{"MitigationID": "MIT-49", "Phase": ["Architecture and Design"], "Strategy": "Separation of Privilege", "Description": "Consider following the principle of separation of privilege. Require multiple conditions to be met before permitting access to a system resource."}, {"MitigationID": "MIT-1", "Phase": ["Architecture and Design", "Operation"], "Description": "Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software."}, {"MitigationID": "MIT-17", "Phase": ["Architecture and Design", "Operation"], "Strategy": "Environment Hardening", "Description": "Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges that are only used for a single task. That way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations."}], "DemonstrativeExamples": [{"ID": "DX-128", "Entries": [{"IntroText": "This code allows someone with the role of \"ADMIN\" or \"OPERATOR\" to reset a user's password. The role of \"OPERATOR\" is intended to have less privileges than an \"ADMIN\", but still be able to help users with small issues such as forgotten passwords."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tpublic enum Roles {\n\t\tADMIN,OPERATOR,USER,GUEST\n\t}\n\tpublic void resetPassword(User requestingUser, User user, String password ){\n\t\t\tif(isAuthenticated(requestingUser)){\n\t\t\t\t\tswitch(requestingUser.role){\n\t\t\t\t\t\t\tcase GUEST:\n\t\t\t\t\t\t\t\tSystem.out.println(\"You are not authorized to perform this command\");\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase USER:\n\t\t\t\t\t\t\t\tSystem.out.println(\"You are not authorized to perform this command\");\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tsetPassword(user,password);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(\"You must be logged in to perform this command\");\n\t\t\t}\n\t}\n```"}, {"BodyText": "This code does not check the role of the user whose password is being reset. It is possible for an Operator to gain Admin privileges by resetting the password of an Admin account and taking control of that account."}]}], "ObservedExamples": [{"Reference": "CVE-2005-1736", "Description": "Chaining of user rights.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1736"}, {"Reference": "CVE-2002-1772", "Description": "Gain certain rights via privilege chaining in alternate channel.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1772"}, {"Reference": "CVE-2005-1973", "Description": "Application is allowed to assign extra permissions to itself.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1973"}, {"Reference": "CVE-2003-0640", "Description": "\"operator\" user can overwrite usernames and passwords to gain admin privileges.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0640"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Relationship", "Note": "There is some conceptual overlap with Unsafe Privilege."}], "Top25Examples": [{"Reference": "CVE-2022-1003", "Description": "One of the API in Mattermost version 6.3.0 and earlier fails to properly protect the permissions, which allows the system administrators to combine the two distinct privileges/capabilities in a way that allows them to override certain restricted configurations like EnableUploads."}]}
{"ID": "269", "Name": "Improper Privilege Management", "Abstraction": "Class", "Structure": "Simple", "Status": "Draft", "Diagram": "/data/images/CWE-269-Diagram.png", "Description": "The product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.", "LikelihoodOfExploit": "Medium", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "284", "ViewID": "1000", "Ordinal": "Primary"}], "WeaknessOrdinalities": [{"Ordinality": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}, {"Phase": "Operation"}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Gain Privileges or Assume Identity"]}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"MitigationID": "MIT-1", "Phase": ["Architecture and Design", "Operation"], "Description": "Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software."}, {"MitigationID": "MIT-48", "Phase": ["Architecture and Design"], "Strategy": "Separation of Privilege", "Description": "Follow the principle of least privilege when assigning access rights to entities in a software system."}, {"MitigationID": "MIT-49", "Phase": ["Architecture and Design"], "Strategy": "Separation of Privilege", "Description": "Consider following the principle of separation of privilege. Require multiple conditions to be met before permitting access to a system resource."}], "DemonstrativeExamples": [{"ID": "DX-126", "Entries": [{"IntroText": "This code temporarily raises the program's privileges to allow creation of a new user folder."}, {"Nature": "Bad", "Language": "Python", "ExampleCode": "```\n\tdef makeNewUserDir(username):\n\t\t\tif invalidUsername(username):\n```\n#avoid CWE-22 and CWE-78* \n\t\t\t\t\tprint('Usernames cannot contain invalid characters')\n\t\t\t\t\treturn False\n\t\t\ttry:\n\t\t\t```\n\t\t\t\traisePrivileges()\n\t\t\t\tos.mkdir('/home/' + username)\n\t\t\t\tlowerPrivileges()\n\t\t\texcept OSError:\n\t\t\t\tprint('Unable to create new user directory for user:' + username)\n\t\t\t\treturn False\n\t\t\treturn True\n```"}, {"BodyText": "While the program only raises its privilege level to create the folder and immediately lowers it again, if the call to os.mkdir() throws an exception, the call to lowerPrivileges() will not occur. As a result, the program is indefinitely operating in a raised privilege state, possibly allowing further exploitation to occur."}]}, {"ID": "DX-97", "Entries": [{"IntroText": "The following example demonstrates the weakness."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tseteuid(0);\n```\n/* do some stuff */* \n\t\n\tseteuid(getuid());"}]}, {"ID": "DX-142", "Entries": [{"IntroText": "The following example demonstrates the weakness."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tAccessController.doPrivileged(new PrivilegedAction() {\n\t\t\tpublic Object run() {\n```\n// privileged code goes here, for example:* \n\t\t\t\tSystem.loadLibrary(\"awt\");\n\t\t\t\treturn null;\n\t\t\t\t\n\t\t\t\t *// nothing to return* \n\t\t\t\t}"}]}, {"ID": "DX-127", "Entries": [{"IntroText": "This code intends to allow only Administrators to print debug information about a system."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tpublic enum Roles {\n\t\tADMIN,USER,GUEST\n\t}\n\tpublic void printDebugInfo(User requestingUser){\n\t\t\tif(isAuthenticated(requestingUser)){\n\t\t\t\t\tswitch(requestingUser.role){\n\t\t\t\t\t\t\tcase GUEST:\n\t\t\t\t\t\t\t\tSystem.out.println(\"You are not authorized to perform this command\");\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tSystem.out.println(currentDebugState());\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(\"You must be logged in to perform this command\");\n\t\t\t}\n\t}\n```"}, {"BodyText": "While the intention was to only allow Administrators to print the debug information, the code as written only excludes those with the role of \"GUEST\". Someone with the role of \"ADMIN\" or \"USER\" will be allowed access, which goes against the original intent. An attacker may be able to use this debug information to craft an attack on the system."}]}, {"ID": "DX-128", "Entries": [{"IntroText": "This code allows someone with the role of \"ADMIN\" or \"OPERATOR\" to reset a user's password. The role of \"OPERATOR\" is intended to have less privileges than an \"ADMIN\", but still be able to help users with small issues such as forgotten passwords."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tpublic enum Roles {\n\t\tADMIN,OPERATOR,USER,GUEST\n\t}\n\tpublic void resetPassword(User requestingUser, User user, String password ){\n\t\t\tif(isAuthenticated(requestingUser)){\n\t\t\t\t\tswitch(requestingUser.role){\n\t\t\t\t\t\t\tcase GUEST:\n\t\t\t\t\t\t\t\tSystem.out.println(\"You are not authorized to perform this command\");\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase USER:\n\t\t\t\t\t\t\t\tSystem.out.println(\"You are not authorized to perform this command\");\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tsetPassword(user,password);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(\"You must be logged in to perform this command\");\n\t\t\t}\n\t}\n```"}, {"BodyText": "This code does not check the role of the user whose password is being reset. It is possible for an Operator to gain Admin privileges by resetting the password of an Admin account and taking control of that account."}]}], "ObservedExamples": [{"Reference": "CVE-2001-1555", "Description": "Terminal privileges are not reset when a user logs out.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1555"}, {"Reference": "CVE-2001-1514", "Description": "Does not properly pass security context to child processes in certain cases, allows privilege escalation.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1514"}, {"Reference": "CVE-2001-0128", "Description": "Does not properly compute roles.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0128"}, {"Reference": "CVE-1999-1193", "Description": "untrusted user placed in unix \"wheel\" group", "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1193"}, {"Reference": "CVE-2005-2741", "Description": "Product allows users to grant themselves certain rights that can be used to escalate privileges.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2741"}, {"Reference": "CVE-2005-2496", "Description": "Product uses group ID of a user instead of the group, causing it to run with different privileges. This is resultant from some other unknown issue.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2496"}, {"Reference": "CVE-2004-0274", "Description": "Product mistakenly assigns a particular status to an entity, leading to increased privileges.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0274"}, {"Reference": "CVE-2007-4217", "Description": "FTP client program on a certain OS runs with setuid privileges and has a buffer overflow. Most clients do not need extra privileges, so an overflow is not a vulnerability for those clients.", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4217"}, {"Reference": "CVE-2007-5159", "Description": "OS incorrectly installs a program with setuid privileges, allowing users to gain privileges.", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5159"}, {"Reference": "CVE-2008-4638", "Description": "Composite: application running with high privileges (CWE-250) allows user to specify a restricted file to process, which generates a parsing error that leaks the contents of the file (CWE-209).", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4638"}, {"Reference": "CVE-2007-3931", "Description": "Installation script installs some programs as setuid when they shouldn't be.", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3931"}, {"Reference": "CVE-2002-1981", "Description": "Roles have access to dangerous procedures (Accessible entities).", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1981"}, {"Reference": "CVE-2002-1671", "Description": "Untrusted object/method gets access to clipboard (Accessible entities).", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1671"}, {"Reference": "CVE-2000-0315", "Description": "Traceroute program allows unprivileged users to modify source address of packet (Accessible entities).", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0315"}, {"Reference": "CVE-2000-0506", "Description": "User with capability can prevent setuid program from dropping privileges (Unsafe privileged actions).", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0506"}], "RelatedAttackPatterns": ["122", "233", "58"], "MappingNotes": {"Usage": "Discouraged", "Rationale": "CWE-269 is commonly misused. It can be conflated with \"privilege escalation,\" which is a technical impact that is listed in many low-information vulnerability reports [REF-1287]. It is not useful for trend analysis.", "Comments": "If an error or mistake allows privilege escalation, then use the CWE ID for that mistake. Avoid using CWE-269 when only phrases such as \"privilege escalation\" or \"gain privileges\" are available, as these indicate technical impact of the vulnerability - not the root cause weakness. If the root cause seems to be directly related to privileges, then examine the children of CWE-269 for additional hints, such as Execution with Unnecessary Privileges (CWE-250) or Incorrect Privilege Assignment (CWE-266).", "Reasons": ["Frequent Misuse"]}, "Notes": [{"Type": "Maintenance", "Note": "The relationships between privileges, permissions, and actors (e.g. users and groups) need further refinement within the Research view. One complication is that these concepts apply to two different pillars, related to control of resources (CWE-664) and protection mechanism failures (CWE-693)."}], "Top25Examples": [{"Reference": "CVE-2021-20021", "Description": "A vulnerability in the SonicWall Email Security version 10.0.9.x allows an attacker to create an administrative account by sending a crafted HTTP request to the remote host."}, {"Reference": "CVE-2021-25337", "Description": "Improper access control in clipboard service in Samsung mobile devices prior to SMR Mar-2021 Release 1 allows untrusted applications to read or write certain local files."}, {"Reference": "CVE-2022-27840", "Description": "Improper access control vulnerability in SamsungRecovery prior to version 8.1.43.0 allows local attckers to delete arbitrary files as SamsungRecovery permission."}, {"Reference": "CVE-2022-22483", "Description": "IBM Db2 for Linux, UNIX and Windows 9.7, 10.1, 10.5, 11.1, and 11.5 is vulnerable to an information disclosure in some scenarios due to unauthorized access caused by improper privilege management when CREATE OR REPLACE command is used. IBM X-Force ID: 225979."}, {"Reference": "CVE-2022-42735", "Description": "Improper Privilege Management vulnerability in Apache Software Foundation Apache ShenYu. ShenYu Admin allows low-privilege low-level administrators create users with higher privileges than their own. This issue affects Apache ShenYu: 2.5.0. Upgrade to Apache ShenYu 2.5.1 or apply patch https://github.com/apache/shenyu/pull/3958 https://github.com/apache/shenyu/pull/3958 . "}, {"Reference": "CVE-2022-43927", "Description": "IBM Db2 for Linux, UNIX and Windows 10.5, 11.1, and 11.5 is vulnerable to information Disclosure due to improper privilege management when a specially crafted table access is used. IBM X-Force ID: 241671."}, {"Reference": "CVE-2021-43076", "Description": "An improper privilege management vulnerability [CWE-269] in FortiADC versions 6.2.1 and below, 6.1.5 and below, 6.0.4 and below, 5.4.5 and below and 5.3.7 and below may allow a remote authenticated attacker with restricted user profile to modify the system files using the shell access."}, {"Reference": "CVE-2022-0222", "Description": "A CWE-269: Improper Privilege Management vulnerability exists that could cause a denial of service of the Ethernet communication of the controller when sending a specific request over SNMP. Affected products: Modicon M340 CPUs(BMXP34* versions prior to V3.40), Modicon M340 X80 Ethernet Communication modules:BMXNOE0100 (H), BMXNOE0110 (H), BMXNOR0200H RTU(BMXNOE* all versions)(BMXNOR* versions prior to v1.7 IR24)"}, {"Reference": "CVE-2022-1823", "Description": "Improper privilege management vulnerability in McAfee Consumer Product Removal Tool prior to version 10.4.128 could allow a local user to modify a configuration file and perform a LOLBin (Living off the land) attack. This could result in the user gaining elevated permissions and being able to execute arbitrary code, through not correctly checking the integrity of the configuration file."}, {"Reference": "CVE-2022-20739", "Description": "A vulnerability in the CLI of Cisco SD-WAN vManage Software could allow an authenticated, local attacker to execute arbitrary commands on the underlying operating system as the root user. The attacker must be authenticated on the affected system as a low-privileged user to exploit this vulnerability. This vulnerability exists because a file leveraged by a root user is executed when a low-privileged user runs specific commands on an affected system. An attacker could exploit this vulnerability by injecting arbitrary commands to a specific file as a lower-privileged user and then waiting until an admin user executes specific commands. The commands would then be executed on the device by the root user. A successful exploit could allow the attacker to escalate their privileges on the affected system from a low-privileged user to the root user."}, {"Reference": "CVE-2022-22263", "Description": "Unprotected dynamic receiver in SecSettings prior to SMR Jan-2022 Release 1 allows untrusted applications to launch arbitrary activity."}, {"Reference": "CVE-2022-22266", "Description": "(Applicable to China models only) Unprotected WifiEvaluationService in TencentWifiSecurity application prior to SMR Jan-2022 Release 1 allows untrusted applications to get WiFi information without proper permission."}, {"Reference": "CVE-2022-22390", "Description": "IBM Db2 for Linux, UNIX and Windows 9.7, 10.1, 10.5, 11.1, and 11.5 may be vulnerable to an information disclosure caused by improper privilege management when table function is used. IBM X-Force ID: 221973."}, {"Reference": "CVE-2022-2249", "Description": "Privilege escalation related vulnerabilities were discovered in Avaya Aura Communication Manager that may allow local administrative users to escalate their privileges. This issue affects Communication Manager versions 8.0.0.0 through 8.1.3.3 and 10.1.0.0."}, {"Reference": "CVE-2022-23737", "Description": "An improper privilege management vulnerability was identified in GitHub Enterprise Server that allowed users with improper privileges to create or delete pages via the API. To exploit this vulnerability, an attacker would need to be added to an organization's repo with write permissions. This vulnerability affected all versions of GitHub Enterprise Server prior to 3.7 and was fixed in versions 3.2.20, 3.3.15, 3.4.10, 3.5.7, and 3.6.3. This vulnerability was reported via the GitHub Bug Bounty program."}, {"Reference": "CVE-2022-30298", "Description": "An improper privilege management vulnerability [CWE-269] in Fortinet FortiSOAR before 7.2.1 allows a GUI user who has already found a way to modify system files (via another, unrelated and hypothetical exploit) to execute arbitrary Python commands as root."}, {"Reference": "CVE-2022-3068", "Description": "Improper Privilege Management in GitHub repository octoprint/octoprint prior to 1.8.3."}, {"Reference": "CVE-2022-30735", "Description": "Improper privilege management vulnerability in Samsung Account prior to 13.2.00.6 allows attackers to get the access_token without permission."}, {"Reference": "CVE-2022-30736", "Description": "Improper privilege management vulnerability in Samsung Account prior to 13.2.00.6 allows attackers to get the data of contact and gallery without permission."}, {"Reference": "CVE-2022-30739", "Description": "Improper privilege management vulnerability in Samsung Account prior to 13.2.00.6 allows attackers to get an user email or phone number with a normal level permission."}, {"Reference": "CVE-2022-30743", "Description": "Improper privilege management vulnerability in Samsung Account prior to 13.2.00.6 allows attackers to get the data of contact and gallery without permission."}, {"Reference": "CVE-2022-32536", "Description": "The user access rights validation in the web server of the Bosch Ethernet switch PRA-ES8P2S with software version 1.01.05 was insufficient. This would allow a non-administrator user to obtain administrator user access rights."}, {"Reference": "CVE-2022-33962", "Description": "In BIG-IP Versions 17.0.x before 17.0.0.1, 16.1.x before 16.1.3.1, 15.1.x before 15.1.6.1, 14.1.x before 14.1.5.1, and all versions of 13.1.x, certain iRules commands may allow an attacker to bypass the access control restrictions for a self IP address, regardless of the port lockdown settings. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated."}, {"Reference": "CVE-2022-34338", "Description": "IBM Robotic Process Automation 21.0.0, 21.0.1, and 21.0.2 could disclose sensitive information due to improper privilege management for storage provider types. IBM X-Force ID: 229962."}, {"Reference": "CVE-2022-34754", "Description": "A CWE-269: Improper Privilege Management vulnerability exists that could allow elevated functionality when guessing credentials. Affected Products: Acti9 PowerTag Link C (A9XELC10-A) (V1.7.5 and prior), Acti9 PowerTag Link C (A9XELC10-B) (V2.12.0 and prior)"}, {"Reference": "CVE-2022-35243", "Description": "In BIG-IP Versions 16.1.x before 16.1.3, 15.1.x before 15.1.5.1, 14.1.x before 14.1.5, and all versions of 13.1.x, when running in Appliance mode, an authenticated user assigned the Administrator role may be able to bypass Appliance mode restrictions, using an undisclosed iControl REST endpoint. A successful exploit can allow the attacker to cross a security boundary. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated."}, {"Reference": "CVE-2022-35291", "Description": "Due to misconfigured application endpoints, SAP SuccessFactors attachment APIs allow attackers with user privileges to perform activities with admin privileges over the network. These APIs were consumed in the SF Mobile application for Time Off, Time Sheet, EC Workflow, and Benefits. On successful exploitation, the attacker can read/write attachments. Thus, compromising the confidentiality and integrity of the application"}, {"Reference": "CVE-2022-36833", "Description": "Improper Privilege Management vulnerability in Game Optimizing Service prior to versions 3.3.04.0 in Android 10, and 3.5.04.8 in Android 11 and above allows local attacker to execute hidden function for developer by changing package name."}, {"Reference": "CVE-2022-37025", "Description": "An improper privilege management vulnerability in McAfee Security Scan Plus (MSS+) before 4.1.262.1 could allow a local user to modify a configuration file and perform a LOLBin (Living off the land) attack. This could result in the user gaining elevated permissions and being able to execute arbitrary code due to lack of an integrity check of the configuration file."}, {"Reference": "CVE-2022-37929", "Description": "Improper Privilege Management vulnerability in Hewlett Packard Enterprise Nimble Storage Hybrid Flash Arrays and Nimble Storage Secondary Flash Arrays. "}, {"Reference": "CVE-2022-38378", "Description": "An improper privilege management vulnerability [CWE-269] in Fortinet FortiOS version 7.2.0 and before 7.0.7 and FortiProxy version 7.2.0 through 7.2.1 and before 7.0.7 allows an attacker that has access to the admin profile section (System subsection Administrator Users) to modify their own profile and upgrade their privileges to Read Write via CLI or GUI commands."}, {"Reference": "CVE-2022-38757", "Description": "A vulnerability has been identified in Micro Focus ZENworks 2020 Update 3a and prior versions. This vulnerability allows administrators with rights to perform actions (e.g., install a bundle) on a set of managed devices, to be able to exercise these rights on managed devices in the ZENworks zone but which are outside the scope of the administrator. This vulnerability does not result in the administrators gaining additional rights on the managed devices, either in the scope or outside the scope of the administrator."}, {"Reference": "CVE-2022-38777", "Description": "An issue was discovered in the rollback feature of Elastic Endpoint Security for Windows, which could allow unprivileged users to elevate their privileges to those of the LocalSystem account."}, {"Reference": "CVE-2022-39032", "Description": "Smart eVision has an improper privilege management vulnerability. A remote attacker with general user privilege can exploit this vulnerability to escalate to administrator privilege, and then perform arbitrary system command or disrupt service."}, {"Reference": "CVE-2022-39953", "Description": "A improper privilege management in Fortinet FortiNAC version 9.4.0 through 9.4.1, FortiNAC version 9.2.0 through 9.2.6, FortiNAC version 9.1.0 through 9.1.8, FortiNAC all versions 8.8, FortiNAC all versions 8.7, FortiNAC all versions 8.6, FortiNAC all versions 8.5, FortiNAC version 8.3.7 allows attacker to escalation of privilege via specially crafted commands."}, {"Reference": "CVE-2022-41268", "Description": "In some SAP standard roles in SAP Business Planning and Consolidation - versions - SAP_BW 750, 751, 752, 753, 754, 755, 756, 757, DWCORE 200, 300, CPMBPC 810, a transaction code reserved for the customer is used. By implementing such transaction code, a malicious user may execute unauthorized transaction functionality. Under specific circumstances, a successful attack could enable an adversary to escalate their privileges to be able to read, change or delete system data."}, {"Reference": "CVE-2022-4173", "Description": "A vulnerability within the malware removal functionality of Avast and AVG Antivirus allowed an attacker with write access to the filesystem, to escalate his privileges in certain scenarios. The issue was fixed with Avast and AVG Antivirus version 22.10. "}, {"Reference": "CVE-2022-42459", "Description": "Auth. WordPress Options Change vulnerability in Image Hover Effects Ultimate plugin <= 9.7.1 on WordPress."}, {"Reference": "CVE-2022-42888", "Description": "Unauth. Privilege Escalation vulnerability in ARMember premium plugin <= 5.5.1 on WordPress."}, {"Reference": "CVE-2022-4314", "Description": "Improper Privilege Management in GitHub repository ikus060/rdiffweb prior to 2.5.2."}, {"Reference": "CVE-2022-43749", "Description": "Improper privilege management vulnerability in summary report management in Synology Presto File Server before 2.1.2-1601 allows remote authenticated users to bypass security constraint via unspecified vectors."}, {"Reference": "CVE-2022-46334", "Description": "Proofpoint Enterprise Protection (PPS/PoD) contains a vulnerability which allows the pps user to escalate to root privileges due to unnecessary permissions. This affects all versions 8.19.0 and below. "}, {"Reference": "CVE-2022-48365", "Description": "An issue was discovered in eZ Platform Ibexa Kernel before 1.3.26. The Company admin role gives excessive privileges."}, {"Reference": "CVE-2022-21827", "Description": "An improper privilege vulnerability has been discovered in Citrix Gateway Plug-in for Windows (Citrix Secure Access for Windows) <21.9.1.2 what could allow an attacker who has gained local access to a computer with Citrix Gateway Plug-in installed, to corrupt or delete files as SYSTEM."}, {"Reference": "CVE-2022-29179", "Description": "Cilium is open source software for providing and securing network connectivity and loadbalancing between application workloads. Prior to versions 1.9.16, 1.10.11, and 1.11.15, if an attacker is able to perform a container escape of a container running as root on a host where Cilium is installed, the attacker can escalate privileges to cluster admin by using Cilium's Kubernetes service account. The problem has been fixed and the patch is available in versions 1.9.16, 1.10.11, and 1.11.5. There are no known workarounds available."}, {"Reference": "CVE-2022-29614", "Description": "SAP startservice - of SAP NetWeaver Application Server ABAP, Application Server Java, ABAP Platform and HANA Database - versions KERNEL 7.22, 7.49, 7.53, 7.77, 7.81, 7.85, 7.86, 7.87, 7.88, KRNL64NUC 7.22, 7.22EXT, 7.49, KRNL64UC 7.22, 7.22EXT, 7.49, 7.53, SAPHOSTAGENT 7.22, - on Unix systems, s-bit helper program sapuxuserchk, can be abused physically resulting in a privilege escalation of an attacker leading to low impact on confidentiality and integrity, but a profound impact on availability."}, {"Reference": "CVE-2022-23743", "Description": "Check Point ZoneAlarm before version 15.8.200.19118 allows a local actor to escalate privileges during the upgrade process. In addition, weak permissions in the ProgramData\\\\CheckPoint\\\\ZoneAlarm\\\\Data\\\\Updates directory allow a local attacker the ability to execute an arbitrary file write, leading to execution of code as local system, in ZoneAlarm versions before v15.8.211.192119"}, {"Reference": "CVE-2022-23921", "Description": "Exploitation of this vulnerability may result in local privilege escalation and code execution. GE maintains exploitation of this vulnerability is only possible if the attacker has login access to a machine actively running CIMPLICITY, the CIMPLICITY server is not already running a project, and the server is licensed for multiple projects."}, {"Reference": "CVE-2022-24408", "Description": "A vulnerability has been identified in SINUMERIK MC (All versions < V1.15 SP1), SINUMERIK ONE (All versions < V6.15 SP1). The sc SUID binary on affected devices provides several commands that are used to execute system commands or modify system files. A specific set of operations using sc could allow local attackers to escalate their privileges to root."}, {"Reference": "CVE-2022-24927", "Description": "Improper privilege management vulnerability in Samsung Video Player prior to version 7.3.15.30 allows attackers to execute video files without permission."}, {"Reference": "CVE-2022-26057", "Description": "Vulnerabilities in the Mint WorkBench allow a low privileged attacker to create and write to a file anywhere on the file system as SYSTEM with arbitrary content as long as the file does not already exist. The Mint WorkBench installer file allows a low-privileged user to run a \"repair\" operation on the product"}, {"Reference": "CVE-2022-27659", "Description": "On F5 BIG-IP 16.1.x versions prior to 16.1.2.2, 15.1.x versions prior to 15.1.5.1, and 14.1.x versions prior to 14.1.4.6, an authenticated attacker can modify or delete Dashboards created by other BIG-IP users in the Traffic Management User Interface (TMUI). Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated"}, {"Reference": "CVE-2022-46172", "Description": "authentik is an open-source Identity provider focused on flexibility and versatility. In versions prior to 2022.10.4, and 2022.11.4, any authenticated user can create an arbitrary number of accounts through the default flows. This would circumvent any policy in a situation where it is undesirable for users to create new accounts by themselves. This may also affect other applications as these new basic accounts would exist throughout the SSO infrastructure. By default the newly created accounts cannot be logged into as no password reset exists by default. However password resets are likely to be enabled by most installations. This vulnerability pertains to the user context used in the default-user-settings-flow, /api/v3/flows/instances/default-user-settings-flow/execute/. This issue has been fixed in versions 2022.10.4 and 2022.11.4."}, {"Reference": "CVE-2022-2975", "Description": "A vulnerability related to weak permissions was detected in Avaya Aura Application Enablement Services web application, allowing an administrative user to modify accounts leading to execution of arbitrary code as the root user. This issue affects Application Enablement Services versions 8.0.0.0 through 8.1.3.4 and 10.1.0.0 through 10.1.0.1. Versions prior to 8.0.0.0 are end of manufacturing support and were not evaluated."}, {"Reference": "CVE-2022-26676", "Description": "aEnrich a+HRD has inadequate privilege restrictions, an unauthenticated remote attacker can use the API function to upload and execute malicious scripts to control the system or disrupt service."}, {"Reference": "CVE-2022-1901", "Description": "In affected versions of Octopus Deploy it is possible to unmask sensitive variables by using variable preview."}]}
{"ID": "27", "Name": "Path Traversal: 'dir/../../filename'", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize multiple internal \"../\" sequences that can resolve to a location that is outside of that directory.", "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nThe 'directory/../../filename' manipulation is useful for bypassing some path traversal protection schemes. Sometimes a program only removes one \"../\" sequence, so multiple \"../\" can bypass that check. Alternately, this manipulation could be used to bypass a check for \"../\" at the beginning of the pathname, moving up more than one directory level.\n", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "23", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Confidentiality", "Integrity"], "Impact": ["Read Files or Directories", "Modify Files or Directories"]}], "PotentialMitigations": [{"MitigationID": "MIT-5.1", "Phase": ["Implementation"], "Strategy": "Input Validation", "Description": "\n\nAssume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.\n\n\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"\n\n\nDo not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.\n\n\nWhen validating filenames, use stringent allowlists that limit the character set to be used. If feasible, only allow a single \".\" character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as \"/\" to avoid CWE-36. Use a list of allowable file extensions, which will help to avoid CWE-434.\n\n\nDo not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a denylist, which may be incomplete (CWE-184). For example, filtering \"/\" is insufficient protection if the filesystem also supports the use of \"\\\" as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if \"../\" sequences are removed from the \".../...//\" string in a sequential fashion, two instances of \"../\" would be removed from the original string, but the remaining characters would still form the \"../\" string.\n"}, {"MitigationID": "MIT-20", "Phase": ["Implementation"], "Strategy": "Input Validation", "Description": "Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked."}], "ObservedExamples": [{"Reference": "CVE-2002-0298", "Description": "Server allows remote attackers to cause a denial of service via certain HTTP GET requests containing a %2e%2e (encoded dot-dot), several \"/../\" sequences, or several \"../\" in a URI.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0298"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2022-30508", "Description": "DedeCMS v5.7.93 was discovered to contain arbitrary file deletion vulnerability in upload.php via the delete parameter."}]}
{"ID": "270", "Name": "Privilege Context Switching Error", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product does not properly manage privileges while it is switching between different contexts that have different privileges or spheres of control.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "269", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}, {"Phase": "Operation"}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Gain Privileges or Assume Identity"], "Note": "A user can assume the identity of another user with separate privileges in another context. This will give the user unauthorized access that may allow them to acquire the access information of other users."}], "PotentialMitigations": [{"MitigationID": "MIT-1", "Phase": ["Architecture and Design", "Operation"], "Description": "Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software."}, {"MitigationID": "MIT-17", "Phase": ["Architecture and Design", "Operation"], "Strategy": "Environment Hardening", "Description": "Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges that are only used for a single task. That way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations."}, {"MitigationID": "MIT-49", "Phase": ["Architecture and Design"], "Strategy": "Separation of Privilege", "Description": "Consider following the principle of separation of privilege. Require multiple conditions to be met before permitting access to a system resource."}], "ObservedExamples": [{"Reference": "CVE-2002-1688", "Description": "Web browser cross domain problem when user hits \"back\" button.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1688"}, {"Reference": "CVE-2003-1026", "Description": "Web browser cross domain problem when user hits \"back\" button.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1026"}, {"Reference": "CVE-2002-1770", "Description": "Cross-domain issue - third party product passes code to web browser, which executes it in unsafe zone.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1770"}, {"Reference": "CVE-2005-2263", "Description": "Run callback in different security context after it has been changed from untrusted to trusted. * note that \"context switch before actions are completed\" is one type of problem that happens frequently, espec. in browsers.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2263"}], "RelatedAttackPatterns": ["17", "30", "35"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Research Gap", "Note": "This concept needs more study."}], "Top25Examples": [{"Reference": "CVE-2022-34438", "Description": "Dell PowerScale OneFS, versions 8.2.x-9.4.0.x, contain a privilege context switching error. A local authenticated malicious user with high privileges could potentially exploit this vulnerability, leading to full system compromise. This impacts compliance mode clusters."}]}
{"ID": "271", "Name": "Privilege Dropping / Lowering Errors", "Abstraction": "Class", "Structure": "Simple", "Status": "Incomplete", "Description": "The product does not drop privileges before passing control of a resource to an actor that does not have those privileges.", "ExtendedDescription": "In some contexts, a system executing with elevated permissions will hand off a process/file/etc. to another process or user. If the privileges of an entity are not reduced, then elevated privileges are spread throughout a system and possibly to an attacker.", "LikelihoodOfExploit": "High", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "269", "ViewID": "1000", "Ordinal": "Primary"}], "WeaknessOrdinalities": [{"Ordinality": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}, {"Phase": "Operation"}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Gain Privileges or Assume Identity"], "Note": "If privileges are not dropped, neither are access rights of the user. Often these rights can be prevented from being dropped."}, {"Scope": ["Access Control", "Non-Repudiation"], "Impact": ["Gain Privileges or Assume Identity", "Hide Activities"], "Note": "If privileges are not dropped, in some cases the system may record actions as the user which is being impersonated rather than the impersonator."}], "PotentialMitigations": [{"MitigationID": "MIT-46", "Phase": ["Architecture and Design"], "Strategy": "Separation of Privilege", "Description": "\n\nCompartmentalize the system to have \"safe\" areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area.\n\n\nEnsure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.\n"}, {"MitigationID": "MIT-1", "Phase": ["Architecture and Design", "Operation"], "Description": "Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software."}, {"MitigationID": "MIT-49", "Phase": ["Architecture and Design"], "Strategy": "Separation of Privilege", "Description": "Consider following the principle of separation of privilege. Require multiple conditions to be met before permitting access to a system resource."}], "DemonstrativeExamples": [{"ID": "DX-98", "Entries": [{"IntroText": "The following code calls chroot() to restrict the application to a subset of the filesystem below APP_HOME in order to prevent an attacker from using the program to gain unauthorized access to files located elsewhere. The code then opens a file specified by the user and processes the contents of the file."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tchroot(APP_HOME);\n\tchdir(\"/\");\n\tFILE* data = fopen(argv[1], \"r+\");\n\t...\n```"}, {"BodyText": "Constraining the process inside the application's home directory before opening any files is a valuable security measure. However, the absence of a call to setuid() with some non-zero value means the application is continuing to operate with unnecessary root privileges. Any successful exploit carried out by an attacker against the application can now result in a privilege escalation attack because any malicious operations will be performed with the privileges of the superuser. If the application drops to the privilege level of a non-root user, the potential for damage is substantially reduced."}]}], "ObservedExamples": [{"Reference": "CVE-2000-1213", "Description": "Program does not drop privileges after acquiring the raw socket.", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1213"}, {"Reference": "CVE-2001-0559", "Description": "Setuid program does not drop privileges after a parsing error occurs, then calls another program to handle the error.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0559"}, {"Reference": "CVE-2001-0787", "Description": "Does not drop privileges in related groups when lowering privileges.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0787"}, {"Reference": "CVE-2002-0080", "Description": "Does not drop privileges in related groups when lowering privileges.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0080"}, {"Reference": "CVE-2001-1029", "Description": "Does not drop privileges before determining access to certain files.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1029"}, {"Reference": "CVE-1999-0813", "Description": "Finger daemon does not drop privileges when executing programs on behalf of the user being fingered.", "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0813"}, {"Reference": "CVE-1999-1326", "Description": "FTP server does not drop privileges if a connection is aborted during file transfer.", "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1326"}, {"Reference": "CVE-2000-0172", "Description": "Program only uses seteuid to drop privileges.", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0172"}, {"Reference": "CVE-2004-2504", "Description": "Windows program running as SYSTEM does not drop privileges before executing other programs (many others like this, especially involving the Help facility).", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2504"}, {"Reference": "CVE-2004-0213", "Description": "Utility Manager launches winhlp32.exe while running with raised privileges, which allows local users to gain system privileges.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0213"}, {"Reference": "CVE-2004-0806", "Description": "Setuid program does not drop privileges before executing program specified in an environment variable.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0806"}, {"Reference": "CVE-2004-0828", "Description": "Setuid program does not drop privileges before processing file specified on command line.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0828"}, {"Reference": "CVE-2004-2070", "Description": "Service on Windows does not drop privileges before using \"view file\" option, allowing code execution.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2070"}], "MappingNotes": {"Usage": "Allowed-with-Review", "Rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate", "Comments": "Examine children of this entry to see if there is a better fit", "Reasons": ["Abstraction"]}, "Notes": [{"Type": "Maintenance", "Note": "CWE-271, CWE-272, and CWE-250 are all closely related and possibly overlapping. CWE-271 is probably better suited as a category."}], "Top25Examples": [{"Reference": "CVE-2022-20266", "Description": "In Companion, there is a possible way to keep a service running with elevated importance without showing foreground service notification due to improper input validation. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-211757348"}]}
{"ID": "272", "Name": "Least Privilege Violation", "Abstraction": "Base", "Structure": "Simple", "Status": "Incomplete", "Description": "The elevated privilege level required to perform operations such as chroot() should be dropped immediately after the operation is performed.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "271", "ViewID": "1000", "Ordinal": "Primary"}], "WeaknessOrdinalities": [{"Ordinality": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}, {"Phase": "Operation"}], "CommonConsequences": [{"Scope": ["Access Control", "Confidentiality"], "Impact": ["Gain Privileges or Assume Identity", "Read Application Data", "Read Files or Directories"], "Note": "An attacker may be able to access resources with the elevated privilege that could not be accessed with the attacker's original privileges. This is particularly likely in conjunction with another flaw, such as a buffer overflow."}], "DetectionMethods": [{"Method": "Automated Static Analysis - Binary or Bytecode", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tCompare binary / bytecode to application permission manifest", "Effectiveness": "SOAR Partial"}, {"Method": "Dynamic Analysis with Automated Results Interpretation", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tHost-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria", "Effectiveness": "SOAR Partial"}, {"Method": "Manual Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tManual Source Code Review (not inspections)\n\t```\n\t\tCost effective for partial coverage:\n```\n\n\t\tFocused Manual Spotcheck - Focused manual analysis of source", "Effectiveness": "High"}, {"Method": "Automated Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tSource code Weakness Analyzer\n\t\tContext-configured Source Code Weakness Analyzer", "Effectiveness": "SOAR Partial"}, {"Method": "Automated Static Analysis", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tPermission Manifest Analysis", "Effectiveness": "SOAR Partial"}, {"Method": "Architecture or Design Review", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tInspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.)\n\t\tFormal Methods / Correct-By-Construction\n\t```\n\t\tCost effective for partial coverage:\n```\n\n\t\tAttack Modeling", "Effectiveness": "High"}], "PotentialMitigations": [{"MitigationID": "MIT-1", "Phase": ["Architecture and Design", "Operation"], "Description": "Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software."}, {"MitigationID": "MIT-48", "Phase": ["Architecture and Design"], "Strategy": "Separation of Privilege", "Description": "Follow the principle of least privilege when assigning access rights to entities in a software system."}, {"MitigationID": "MIT-46", "Phase": ["Architecture and Design"], "Strategy": "Separation of Privilege", "Description": "\n\nCompartmentalize the system to have \"safe\" areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area.\n\n\nEnsure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.\n"}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "The following example demonstrates the weakness."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tsetuid(0);\n```\n// Do some important stuff* \n\tsetuid(old_uid);\n\t\n\t *// Do some non privileged stuff.*"}]}, {"ID": "DX-142", "Entries": [{"IntroText": "The following example demonstrates the weakness."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tAccessController.doPrivileged(new PrivilegedAction() {\n\t\t\tpublic Object run() {\n```\n// privileged code goes here, for example:* \n\t\t\t\tSystem.loadLibrary(\"awt\");\n\t\t\t\treturn null;\n\t\t\t\t\n\t\t\t\t *// nothing to return* \n\t\t\t\t}"}]}, {"ID": "DX-98", "Entries": [{"IntroText": "The following code calls chroot() to restrict the application to a subset of the filesystem below APP_HOME in order to prevent an attacker from using the program to gain unauthorized access to files located elsewhere. The code then opens a file specified by the user and processes the contents of the file."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tchroot(APP_HOME);\n\tchdir(\"/\");\n\tFILE* data = fopen(argv[1], \"r+\");\n\t...\n```"}, {"BodyText": "Constraining the process inside the application's home directory before opening any files is a valuable security measure. However, the absence of a call to setuid() with some non-zero value means the application is continuing to operate with unnecessary root privileges. Any successful exploit carried out by an attacker against the application can now result in a privilege escalation attack because any malicious operations will be performed with the privileges of the superuser. If the application drops to the privilege level of a non-root user, the potential for damage is substantially reduced."}]}], "RelatedAttackPatterns": ["17", "35", "76"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "CWE-271, CWE-272, and CWE-250 are all closely related and possibly overlapping. CWE-271 is probably better suited as a category."}, {"Type": "Other", "Note": "\n\nIf system privileges are not dropped when it is reasonable to do so, this is not a vulnerability by itself. According to the principle of least privilege, access should be allowed only when it is absolutely necessary to the function of a given system, and only for the minimal necessary amount of time. Any further allowance of privilege widens the window of time during which a successful exploitation of the system will provide an attacker with that same privilege. If at all possible, limit the allowance of system privilege to small, simple sections of code that may be called atomically.\n\n\nWhen a program calls a privileged function, such as chroot(), it must first acquire root privilege. As soon as the privileged operation has completed, the program should drop root privilege and return to the privilege level of the invoking user.\n"}]}
{"ID": "273", "Name": "Improper Check for Dropped Privileges", "Abstraction": "Base", "Structure": "Simple", "Status": "Incomplete", "Description": "The product attempts to drop privileges but does not check or incorrectly checks to see if the drop succeeded.", "ExtendedDescription": "If the drop fails, the product will continue to run with the raised privileges, which might provide additional access to unprivileged users.", "LikelihoodOfExploit": "Medium", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "754", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "754", "ViewID": "1003", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "271", "ViewID": "1000"}, {"Nature": "PeerOf", "CweID": "252", "ViewID": "1000"}], "WeaknessOrdinalities": [{"Ordinality": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "BackgroundDetails": ["In Windows based environments that have access control, impersonation is used so that access checks can be performed on a client identity by a server with higher privileges. By impersonating the client, the server is restricted to client-level security -- although in different threads it may have much higher privileges."], "ModesOfIntroduction": [{"Phase": "Implementation", "Note": "\n\nREALIZATION: This weakness is caused during implementation of an architectural security tactic.\n\n\nThis issue is likely to occur in restrictive environments in which the operating system or application provides fine-grained control over privilege management.\n"}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Gain Privileges or Assume Identity"], "Note": "If privileges are not dropped, neither are access rights of the user. Often these rights can be prevented from being dropped."}, {"Scope": ["Access Control", "Non-Repudiation"], "Impact": ["Gain Privileges or Assume Identity", "Hide Activities"], "Note": "If privileges are not dropped, in some cases the system may record actions as the user which is being impersonated rather than the impersonator."}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"MitigationID": "MIT-46", "Phase": ["Architecture and Design"], "Strategy": "Separation of Privilege", "Description": "\n\nCompartmentalize the system to have \"safe\" areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area.\n\n\nEnsure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.\n"}, {"MitigationID": "MIT-53", "Phase": ["Implementation"], "Description": "Check the results of all functions that return a value and verify that the value is expected.", "Effectiveness": "High", "EffectivenessNotes": "Checking the return value of the function will typically be sufficient, however beware of race conditions (CWE-362) in a concurrent environment."}, {"Phase": ["Implementation"], "Description": "In Windows, make sure that the process token has the SeImpersonatePrivilege(Microsoft Server 2003). Code that relies on impersonation for security must ensure that the impersonation succeeded, i.e., that a proper privilege demotion happened."}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "This code attempts to take on the privileges of a user before creating a file, thus avoiding performing the action with unnecessarily high privileges:"}, {"Nature": "Bad", "Language": "C++", "ExampleCode": "```\n\tbool DoSecureStuff(HANDLE hPipe) {\n\t\tbool fDataWritten = false;\n\t\tImpersonateNamedPipeClient(hPipe);\n\t\tHANDLE hFile = CreateFile(...);\n\t\t/../\n\t\tRevertToSelf()\n\t\t/../\n\t}\n```"}, {"BodyText": "The call to ImpersonateNamedPipeClient may fail, but the return value is not checked. If the call fails, the code may execute with higher privileges than intended. In this case, an attacker could exploit this behavior to write a file to a location that the attacker does not have access to."}]}], "ObservedExamples": [{"Reference": "CVE-2006-4447", "Description": "Program does not check return value when invoking functions to drop privileges, which could leave users with higher privileges than expected by forcing those functions to fail.", "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4447"}, {"Reference": "CVE-2006-2916", "Description": "Program does not check return value when invoking functions to drop privileges, which could leave users with higher privileges than expected by forcing those functions to fail.", "Link": "https://www.cve.org/CVERecord?id=CVE-2006-2916"}], "AffectedResources": ["System Process"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}}
{"ID": "274", "Name": "Improper Handling of Insufficient Privileges", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product does not handle or incorrectly handles when it has insufficient privileges to perform an operation, leading to resultant weaknesses.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "755", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "269", "ViewID": "1000"}, {"Nature": "PeerOf", "CweID": "271", "ViewID": "1000"}, {"Nature": "CanAlsoBe", "CweID": "280", "ViewID": "1000"}], "WeaknessOrdinalities": [{"Ordinality": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}, {"Phase": "Operation"}], "CommonConsequences": [{"Scope": ["Other"], "Impact": ["Other", "Alter Execution Logic"]}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "ObservedExamples": [{"Reference": "CVE-2001-1564", "Description": "System limits are not properly enforced after privileges are dropped.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1564"}, {"Reference": "CVE-2005-3286", "Description": "Firewall crashes when it can't read a critical memory block that was protected by a malicious process.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3286"}, {"Reference": "CVE-2005-1641", "Description": "Does not give admin sufficient privileges to overcome otherwise legitimate user actions.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1641"}], "MappingNotes": {"Usage": "Discouraged", "Rationale": "This CWE entry could be deprecated in a future version of CWE.", "Comments": "See maintenance notes.", "Reasons": ["Potential Deprecation", "CWE Overlap"]}, "Notes": [{"Type": "Maintenance", "Note": "CWE-280 and CWE-274 are too similar. It is likely that CWE-274 will be deprecated in the future."}, {"Type": "Relationship", "Note": "Overlaps dropped privileges, insufficient permissions."}, {"Type": "Theoretical", "Note": "This has a layering relationship with Unchecked Error Condition and Unchecked Return Value."}, {"Type": "Theoretical", "Note": "Within the context of vulnerability theory, privileges and permissions are two sides of the same coin. Privileges are associated with actors, and permissions are associated with resources. To perform access control, at some point the product makes a decision about whether the actor (and the privileges that have been assigned to that actor) is allowed to access the resource (based on the permissions that have been specified for that resource)."}], "Top25Examples": [{"Reference": "CVE-2022-41049", "Description": "Windows Mark of the Web Security Feature Bypass Vulnerability"}, {"Reference": "CVE-2022-41091", "Description": "Windows Mark of the Web Security Feature Bypass Vulnerability"}, {"Reference": "CVE-2022-0668", "Description": "JFrog Artifactory prior to 7.37.13 is vulnerable to Authentication Bypass, which can lead to Privilege Escalation when a specially crafted request is sent by an unauthenticated user."}, {"Reference": "CVE-2022-25782", "Description": "Improper Handling of Insufficient Privileges vulnerability in Web UI of Secomea GateManager allows logged in user to access and update privileged information. This issue affects: Secomea GateManager versions prior to 9.7."}, {"Reference": "CVE-2022-45101", "Description": " Dell PowerScale OneFS 9.0.0.x - 9.4.0.x, contains an Improper Handling of Insufficient Privileges vulnerability in NFS. A remote unauthenticated attacker could potentially exploit this vulnerability, leading to information disclosure and remote execution. "}, {"Reference": "CVE-2022-23160", "Description": "Dell PowerScale OneFS, versions 8.2.0-9.3.0, contains an Improper Handling of Insufficient Permissions vulnerability. An remote malicious user could potentially exploit this vulnerability, leading to gaining write permissions on read-only files."}]}
{"ID": "276", "Name": "Incorrect Default Permissions", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "During installation, installed file permissions are set to allow anyone to modify those files.", "LikelihoodOfExploit": "Medium", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "732", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "732", "ViewID": "1003", "Ordinal": "Primary"}], "WeaknessOrdinalities": [{"Ordinality": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "Not Technology-Specific", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "ICS/OT", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation"}, {"Phase": "Installation"}, {"Phase": "Operation"}], "CommonConsequences": [{"Scope": ["Confidentiality", "Integrity"], "Impact": ["Read Application Data", "Modify Application Data"]}], "DetectionMethods": [{"Method": "Automated Static Analysis - Binary or Bytecode", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tInter-application Flow Analysis", "Effectiveness": "SOAR Partial"}, {"Method": "Manual Static Analysis - Binary or Bytecode", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tBinary / Bytecode disassembler - then use manual analysis for vulnerabilities & anomalies", "Effectiveness": "SOAR Partial"}, {"Method": "Dynamic Analysis with Automated Results Interpretation", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tHost-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria\n\t\tWeb Application Scanner\n\t\tWeb Services Scanner\n\t\tDatabase Scanners", "Effectiveness": "SOAR Partial"}, {"Method": "Dynamic Analysis with Manual Results Interpretation", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tHost Application Interface Scanner\n\t```\n\t\tCost effective for partial coverage:\n```\n\n\t\tFuzz Tester\n\t\tFramework-based Fuzzer\n\t\tAutomated Monitored Execution\n\t\tForced Path Execution", "Effectiveness": "High"}, {"Method": "Manual Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tManual Source Code Review (not inspections)\n\t```\n\t\tCost effective for partial coverage:\n```\n\n\t\tFocused Manual Spotcheck - Focused manual analysis of source", "Effectiveness": "High"}, {"Method": "Automated Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tContext-configured Source Code Weakness Analyzer", "Effectiveness": "SOAR Partial"}, {"Method": "Automated Static Analysis", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tConfiguration Checker", "Effectiveness": "SOAR Partial"}, {"Method": "Architecture or Design Review", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tFormal Methods / Correct-By-Construction\n\t```\n\t\tCost effective for partial coverage:\n```\n\n\t\tInspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"MitigationID": "MIT-1", "Phase": ["Architecture and Design", "Operation"], "Description": "The architecture needs to access and modification attributes for files to only those users who actually require those actions."}, {"MitigationID": "MIT-46", "Phase": ["Architecture and Design"], "Strategy": "Separation of Privilege", "Description": "\n\nCompartmentalize the system to have \"safe\" areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area.\n\n\nEnsure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.\n"}], "ObservedExamples": [{"Reference": "CVE-2005-1941", "Description": "Executables installed world-writable.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1941"}, {"Reference": "CVE-2002-1713", "Description": "Home directories installed world-readable.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1713"}, {"Reference": "CVE-2001-1550", "Description": "World-writable log files allow information loss; world-readable file has cleartext passwords.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1550"}, {"Reference": "CVE-2002-1711", "Description": "World-readable directory.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1711"}, {"Reference": "CVE-2002-1844", "Description": "Windows product uses insecure permissions when installing on Solaris (genesis: port error).", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1844"}, {"Reference": "CVE-2001-0497", "Description": "Insecure permissions for a shared secret key file. Overlaps cryptographic problem.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0497"}, {"Reference": "CVE-1999-0426", "Description": "Default permissions of a device allow IP spoofing.", "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0426"}], "RelatedAttackPatterns": ["1", "127", "81"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2022-46774", "Description": "IBM Manage Application 8.8.0 and 8.9.0 in the IBM Maximo Application Suite is vulnerable to incorrect default permissions which could give access to a user to actions that they should not have access to. IBM X-Force ID: 242953."}, {"Reference": "CVE-2021-3981", "Description": "A flaw in grub2 was found where its configuration file, known as grub.cfg, is being created with the wrong permission set allowing non privileged users to read its content. This represents a low severity confidentiality issue, as those users can eventually read any encrypted passwords present in grub.cfg. This flaw affects grub2 2.06 and previous versions. This issue has been fixed in grub upstream but no version with the fix is currently released."}, {"Reference": "CVE-2021-41637", "Description": "Weak access control permissions in MELAG FTP Server 2.2.0.4 allow the \"Everyone\" group to read the local FTP configuration file, which includes among other information the unencrypted passwords of all FTP users."}, {"Reference": "CVE-2021-45083", "Description": "An issue was discovered in Cobbler before 3.3.1. Files in /etc/cobbler are world readable. Two of those files contain some sensitive information that can be exposed to a local user who has non-privileged access to the server. The users.digest file contains the sha2-512 digest of users in a Cobbler local installation. In the case of an easy-to-guess password, it's trivial to obtain the plaintext string. The settings.yaml file contains secrets such as the hashed default password."}, {"Reference": "CVE-2022-27919", "Description": "Gradle Enterprise before 2022.1 allows remote code execution if the installation process did not specify an initial configuration file. The configuration allows certain anonymous access to administration and an API."}, {"Reference": "CVE-2022-25364", "Description": "In Gradle Enterprise before 2021.4.2, the default built-in build cache configuration allowed anonymous write access. If this was not manually changed, a malicious actor with network access to the build cache could potentially populate it with manipulated entries that execute malicious code as part of a build. As of 2021.4.2, the built-in build cache is inaccessible-by-default, requiring explicit configuration of its access-control settings before it can be used. (Remote build cache nodes are unaffected as they are inaccessible-by-default.)"}]}
{"ID": "277", "Name": "Insecure Inherited Permissions", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "A product defines a set of insecure permissions that are inherited by objects that are created by the program.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "732", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}, {"Phase": "Operation"}], "CommonConsequences": [{"Scope": ["Confidentiality", "Integrity"], "Impact": ["Read Application Data", "Modify Application Data"]}], "PotentialMitigations": [{"MitigationID": "MIT-1", "Phase": ["Architecture and Design", "Operation"], "Description": "Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software."}, {"MitigationID": "MIT-46", "Phase": ["Architecture and Design"], "Strategy": "Separation of Privilege", "Description": "\n\nCompartmentalize the system to have \"safe\" areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area.\n\n\nEnsure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.\n"}], "ObservedExamples": [{"Reference": "CVE-2005-1841", "Description": "User's umask is used when creating temp files.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1841"}, {"Reference": "CVE-2002-1786", "Description": "Insecure umask for core dumps [is the umask preserved or assigned?].", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1786"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2022-38170", "Description": "In Apache Airflow prior to 2.3.4, an insecure umask was configured for numerous Airflow components when running with the `--daemon` flag which could result in a race condition giving world-writable files in the Airflow home directory and allowing local users to expose arbitrary file contents via the webserver."}, {"Reference": "CVE-2022-48257", "Description": "In Eternal Terminal 6.2.1, etserver and etclient have predictable logfile names in /tmp."}, {"Reference": "CVE-2021-0056", "Description": "Insecure inherited permissions for the Intel(R) NUC M15 Laptop Kit Driver Pack software before updated version 1.1 may allow an authenticated user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2021-0109", "Description": "Insecure inherited permissions for the Intel(R) SOC driver package for STK1A32SC before version 604 may allow an authenticated user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-25992", "Description": "Insecure inherited permissions in the Intel(R) oneAPI Toolkits oneapi-cli before version 0.2.0 may allow an authenticated user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-40298", "Description": "Crestron AirMedia for Windows before 5.5.1.84 has insecure inherited permissions, which leads to a privilege escalation vulnerability found in the AirMedia Windows Application, version 4.3.1.39. A low privileged user can initiate a repair of the system and gain a SYSTEM level shell."}, {"Reference": "CVE-2022-24769", "Description": "Moby is an open-source project created by Docker to enable and accelerate software containerization. A bug was found in Moby (Docker Engine) prior to version 20.10.14 where containers were incorrectly started with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during `execve(2)`. Normally, when executable programs have specified permitted file capabilities, otherwise unprivileged users and processes can execute those programs and gain the specified file capabilities up to the bounding set. Due to this bug, containers which included executable programs with inheritable file capabilities allowed otherwise unprivileged users and processes to additionally gain these inheritable file capabilities up to the container's bounding set. Containers which use Linux users and groups to perform privilege separation inside the container are most directly impacted. This bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set. This bug has been fixed in Moby (Docker Engine) 20.10.14. Running containers should be stopped, deleted, and recreated for the inheritable capabilities to be reset. This fix changes Moby (Docker Engine) behavior such that containers are started with a more typical Linux environment. As a workaround, the entry point of a container can be modified to use a utility like `capsh(1)` to drop inheritable capabilities prior to the primary process starting."}]}
{"ID": "278", "Name": "Insecure Preserved Inherited Permissions", "Abstraction": "Variant", "Structure": "Simple", "Status": "Incomplete", "Description": "A product inherits a set of insecure permissions for an object, e.g. when copying from an archive file, without user awareness or involvement.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "732", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Operation"}], "CommonConsequences": [{"Scope": ["Confidentiality", "Integrity"], "Impact": ["Read Application Data", "Modify Application Data"]}], "PotentialMitigations": [{"MitigationID": "MIT-1", "Phase": ["Architecture and Design", "Operation"], "Description": "Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software."}, {"MitigationID": "MIT-46", "Phase": ["Architecture and Design"], "Strategy": "Separation of Privilege", "Description": "\n\nCompartmentalize the system to have \"safe\" areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area.\n\n\nEnsure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.\n"}], "ObservedExamples": [{"Reference": "CVE-2005-1724", "Description": "Does not obey specified permissions when exporting.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1724"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2021-45492", "Description": "In Sage 300 ERP (formerly accpac) through 6.8.x, the installer configures the C:\\\\Sage\\\\Sage300\\\\Runtime directory to be the first entry in the system-wide PATH environment variable. However, this directory is writable by unprivileged users because the Sage installer fails to set explicit permissions and therefore inherits weak permissions from the C:\\\\ folder. Because entries in the system-wide PATH variable are included in the search order for DLLs, an attacker could perform DLL search-order hijacking to escalate their privileges to SYSTEM. Furthermore, if the Global Search or Web Screens functionality is enabled, then privilege escalation is possible via the GlobalSearchService and Sage.CNA.WindowsService services, again via DLL search-order hijacking because unprivileged users would have modify permissions on the application directory. Note that while older versions of the software default to installing in %PROGRAMFILES(X86)% (which would allow the Sage folder to inherit strong permissions, making the installation not vulnerable), the official Sage 300 installation guides for those versions recommend installing in C:\\\\Sage, which would make the installation vulnerable."}]}
{"ID": "279", "Name": "Incorrect Execution-Assigned Permissions", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "While it is executing, the product sets the permissions of an object in a way that violates the intended permissions that have been specified by the user.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "732", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}, {"Phase": "Architecture and Design"}, {"Phase": "Operation"}], "CommonConsequences": [{"Scope": ["Confidentiality", "Integrity"], "Impact": ["Read Application Data", "Modify Application Data"]}], "PotentialMitigations": [{"MitigationID": "MIT-1", "Phase": ["Architecture and Design", "Operation"], "Description": "Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software."}, {"MitigationID": "MIT-46", "Phase": ["Architecture and Design"], "Strategy": "Separation of Privilege", "Description": "\n\nCompartmentalize the system to have \"safe\" areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area.\n\n\nEnsure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.\n"}], "ObservedExamples": [{"Reference": "CVE-2002-0265", "Description": "Log files opened read/write.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0265"}, {"Reference": "CVE-2003-0876", "Description": "Log files opened read/write.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0876"}, {"Reference": "CVE-2002-1694", "Description": "Log files opened read/write.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1694"}], "RelatedAttackPatterns": ["81"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}}
{"ID": "28", "Name": "Path Traversal: '..\\filedir'", "Abstraction": "Variant", "Structure": "Simple", "Status": "Incomplete", "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"..\\\" sequences that can resolve to a location that is outside of that directory.", "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nThe '..\\' manipulation is the canonical manipulation for operating systems that use \"\\\" as directory separators, such as Windows. However, it is also useful for bypassing path traversal protection schemes that only assume that the \"/\" separator is valid.\n", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "23", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Operating_System", "Class": "Windows", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Confidentiality", "Integrity"], "Impact": ["Read Files or Directories", "Modify Files or Directories"]}], "PotentialMitigations": [{"MitigationID": "MIT-5.1", "Phase": ["Implementation"], "Strategy": "Input Validation", "Description": "\n\nAssume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.\n\n\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"\n\n\nDo not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.\n\n\nWhen validating filenames, use stringent allowlists that limit the character set to be used. If feasible, only allow a single \".\" character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as \"/\" to avoid CWE-36. Use a list of allowable file extensions, which will help to avoid CWE-434.\n\n\nDo not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a denylist, which may be incomplete (CWE-184). For example, filtering \"/\" is insufficient protection if the filesystem also supports the use of \"\\\" as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if \"../\" sequences are removed from the \".../...//\" string in a sequential fashion, two instances of \"../\" would be removed from the original string, but the remaining characters would still form the \"../\" string.\n"}, {"MitigationID": "MIT-20", "Phase": ["Implementation"], "Strategy": "Input Validation", "Description": "Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked."}], "ObservedExamples": [{"Reference": "CVE-2002-0661", "Description": "\"\\\" not in denylist for web server, allowing path traversal attacks when the server is run in Windows and other OSes.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0661"}, {"Reference": "CVE-2002-0946", "Description": "Arbitrary files may be read files via ..\\ (dot dot) sequences in an HTTP request.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0946"}, {"Reference": "CVE-2002-1042", "Description": "Directory traversal vulnerability in search engine for web server allows remote attackers to read arbitrary files via \"..\\\" sequences in queries.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1042"}, {"Reference": "CVE-2002-1209", "Description": "Directory traversal vulnerability in FTP server allows remote attackers to read arbitrary files via \"..\\\" sequences in a GET request.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1209"}, {"Reference": "CVE-2002-1178", "Description": "Directory traversal vulnerability in servlet allows remote attackers to execute arbitrary commands via \"..\\\" sequences in an HTTP request.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1178"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2022-1373", "Description": "The \u201crestore configuration\u201d feature of Softing Secure Integration Server V1.22 is vulnerable to a directory traversal vulnerability when processing zip files. An attacker can craft a zip file to load an arbitrary dll and execute code. Using the \"restore configuration\" feature to upload a zip file containing a path traversal file may cause a file to be created and executed upon touching the disk."}]}
{"ID": "280", "Name": "Improper Handling of Insufficient Permissions or Privileges ", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product does not handle or incorrectly handles when it has insufficient privileges to access resources or functionality as specified by their permissions. This may cause it to follow unexpected code paths that may leave the product in an invalid state.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "755", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Other"], "Impact": ["Other", "Alter Execution Logic"]}], "PotentialMitigations": [{"MitigationID": "MIT-46", "Phase": ["Architecture and Design"], "Strategy": "Separation of Privilege", "Description": "\n\nCompartmentalize the system to have \"safe\" areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area.\n\n\nEnsure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.\n"}, {"Phase": ["Implementation"], "Description": "Always check to see if you have successfully accessed a resource or system functionality, and use proper error handling if it is unsuccessful. Do this even when you are operating in a highly privileged mode, because errors or environmental conditions might still cause a failure. For example, environments with highly granular permissions/privilege models, such as Windows or Linux capabilities, can cause unexpected failures."}], "ObservedExamples": [{"Reference": "CVE-2003-0501", "Description": "Special file system allows attackers to prevent ownership/permission change of certain entries by opening the entries before calling a setuid program.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0501"}, {"Reference": "CVE-2004-0148", "Description": "FTP server places a user in the root directory when the user's permissions prevent access to the their own home directory.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0148"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "CWE-280 and CWE-274 are too similar. It is likely that CWE-274 will be deprecated in the future."}, {"Type": "Relationship", "Note": "This can be both primary and resultant. When primary, it can expose a variety of weaknesses because a resource might not have the expected state, and subsequent operations might fail. It is often resultant from Unchecked Error Condition (CWE-391)."}, {"Type": "Theoretical", "Note": "Within the context of vulnerability theory, privileges and permissions are two sides of the same coin. Privileges are associated with actors, and permissions are associated with resources. To perform access control, at some point the software makes a decision about whether the actor (and the privileges that have been assigned to that actor) is allowed to access the resource (based on the permissions that have been specified for that resource)."}, {"Type": "Research Gap", "Note": "This type of issue is under-studied, since researchers often concentrate on whether an object has too many permissions, instead of not enough. These weaknesses are likely to appear in environments with fine-grained models for permissions and privileges, which can include operating systems and other large-scale software packages. However, even highly simplistic permission/privilege models are likely to contain these issues if the developer has not considered the possibility of access failure."}], "Top25Examples": [{"Reference": "CVE-2022-39885", "Description": "Improper access control vulnerability in BootCompletedReceiver_CMCC in DeviceManagement prior to SMR Nov-2022 Release 1 allows local attacker to access to Device information."}, {"Reference": "CVE-2022-39886", "Description": "Improper access control vulnerability in IpcRxServiceModeBigDataInfo in RIL prior to SMR Nov-2022 Release 1 allows local attacker to access Device information."}, {"Reference": "CVE-2022-21813", "Description": "NVIDIA GPU Display Driver for Linux contains a vulnerability in the kernel driver, where improper handling of insufficient permissions or privileges may allow an unprivileged local user limited write access to protected memory, which can lead to denial of service."}, {"Reference": "CVE-2022-21814", "Description": "NVIDIA GPU Display Driver for Linux contains a vulnerability in the kernel driver package, where improper handling of insufficient permissions or privileges may allow an unprivileged local user limited write access to protected memory, which can lead to denial of service."}, {"Reference": "CVE-2022-22300", "Description": "A improper handling of insufficient permissions or privileges in Fortinet FortiAnalyzer version 5.6.0 through 5.6.11, FortiAnalyzer version 6.0.0 through 6.0.11, FortiAnalyzer version 6.2.0 through 6.2.9, FortiAnalyzer version 6.4.0 through 6.4.7, FortiAnalyzer version 7.0.0 through 7 .0.2, FortiManager version 5.6.0 through 5.6.11, FortiManager version 6.0.0 through 6.0.11, FortiManager version 6.2.0 through 6.2.9, FortiManager version 6.4.0 through 6.4.7, FortiManager version 7.0.0 through 7.0.2 allows attacker to bypass the device policy and force the password-change action for its user."}, {"Reference": "CVE-2022-34368", "Description": "Dell EMC NetWorker 19.2.1.x 19.3.x, 19.4.x, 19.5.x, 19.6.x and 19.7.0.0 contain an Improper Handling of Insufficient Permissions or Privileges vulnerability. Authenticated non admin user could exploit this vulnerability and gain access to restricted resources."}, {"Reference": "CVE-2022-36874", "Description": "Improper Handling of Insufficient Permissions or Privileges vulnerability in Waterplugin prior to 2.2.11.22040751 allows attacker to access device IMEI and Serial number."}]}
{"ID": "281", "Name": "Improper Preservation of Permissions", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product does not preserve permissions or incorrectly preserves permissions when copying, restoring, or sharing objects, which can cause them to have less restrictive permissions than intended.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "732", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "732", "ViewID": "1003", "Ordinal": "Primary"}], "WeaknessOrdinalities": [{"Ordinality": "Resultant", "Description": "This is resultant from errors that prevent the permissions from being preserved."}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}, {"Phase": "Operation"}], "CommonConsequences": [{"Scope": ["Confidentiality", "Integrity"], "Impact": ["Read Application Data", "Modify Application Data"]}], "ObservedExamples": [{"Reference": "CVE-2002-2323", "Description": "Incorrect ACLs used when restoring backups from directories that use symbolic links.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2323"}, {"Reference": "CVE-2001-1515", "Description": "Automatic modification of permissions inherited from another file system.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1515"}, {"Reference": "CVE-2005-1920", "Description": "Permissions on backup file are created with defaults, possibly less secure than original file.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1920"}, {"Reference": "CVE-2001-0195", "Description": "File is made world-readable when being cloned.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0195"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2022-0330", "Description": "A random memory access flaw was found in the Linux kernel's GPU i915 kernel driver functionality in the way a user may run malicious code on the GPU. This flaw allows a local user to crash the system or escalate their privileges on the system."}, {"Reference": "CVE-2021-45446", "Description": "A vulnerability in Hitachi Vantara Pentaho Business Analytics Server versions before 9.2.0.2 and 8.3.0.25 does not cascade the hidden property to the children of the Home folder. This directory listing provides an attacker with the complete index of all the resources located inside the directory. "}]}
{"ID": "282", "Name": "Improper Ownership Management", "Abstraction": "Class", "Structure": "Simple", "Status": "Draft", "Description": "The product assigns the wrong ownership, or does not properly verify the ownership, of an object or resource.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "284", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Gain Privileges or Assume Identity"]}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"MitigationID": "MIT-1", "Phase": ["Architecture and Design", "Operation"], "Description": "Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software."}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "This function is part of a privileged program that takes input from users with potentially lower privileges."}, {"Nature": "Bad", "Language": "Python", "ExampleCode": "```\n\tdef killProcess(processID):\n\t\tos.kill(processID, signal.SIGKILL)\n```"}, {"BodyText": "This code does not confirm that the process to be killed is owned by the requesting user, thus allowing an attacker to kill arbitrary processes."}, {"BodyText": "This function remedies the problem by checking the owner of the process before killing it:"}, {"Nature": "Good", "Language": "Python", "ExampleCode": "```\n\tdef killProcess(processID):\n\t\t\tuser = getCurrentUser()\n```\n#Check process owner against requesting user* \n\t\t\tif getProcessOwner(processID) == user:\n\t\t\t```\n\t\t\t\tos.kill(processID, signal.SIGKILL)\n\t\t\t\treturn\n\t\t\telse:\n\t\t\t\tprint(\"You cannot kill a process you don't own\")\n\t\t\t\treturn\n```"}]}], "ObservedExamples": [{"Reference": "CVE-1999-1125", "Description": "Program runs setuid root but relies on a configuration file owned by a non-root user.", "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1125"}], "AffectedResources": ["File or Directory"], "RelatedAttackPatterns": ["17", "35"], "MappingNotes": {"Usage": "Allowed-with-Review", "Rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate", "Comments": "Examine children of this entry to see if there is a better fit", "Reasons": ["Abstraction"]}, "Notes": [{"Type": "Maintenance", "Note": "The relationships between privileges, permissions, and actors (e.g. users and groups) need further refinement within the Research view. One complication is that these concepts apply to two different pillars, related to control of resources (CWE-664) and protection mechanism failures (CWE-693)."}], "Top25Examples": [{"Reference": "CVE-2022-3706", "Description": "Improper authorization in GitLab CE/EE affecting all versions from 7.14 prior to 15.3.5, 15.4 prior to 15.4.4, and 15.5 prior to 15.5.2 allows a user retrying a job in a downstream pipeline to take ownership of the retried jobs in the upstream pipeline even if the user doesn't have access to that project."}]}
{"ID": "283", "Name": "Unverified Ownership", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product does not properly verify that a critical resource is owned by the proper entity.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "282", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Gain Privileges or Assume Identity"], "Note": "An attacker could gain unauthorized access to system resources."}], "PotentialMitigations": [{"MitigationID": "MIT-1", "Phase": ["Architecture and Design", "Operation"], "Description": "Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software."}, {"MitigationID": "MIT-49", "Phase": ["Architecture and Design"], "Strategy": "Separation of Privilege", "Description": "Consider following the principle of separation of privilege. Require multiple conditions to be met before permitting access to a system resource."}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "This function is part of a privileged program that takes input from users with potentially lower privileges."}, {"Nature": "Bad", "Language": "Python", "ExampleCode": "```\n\tdef killProcess(processID):\n\t\tos.kill(processID, signal.SIGKILL)\n```"}, {"BodyText": "This code does not confirm that the process to be killed is owned by the requesting user, thus allowing an attacker to kill arbitrary processes."}, {"BodyText": "This function remedies the problem by checking the owner of the process before killing it:"}, {"Nature": "Good", "Language": "Python", "ExampleCode": "```\n\tdef killProcess(processID):\n\t\t\tuser = getCurrentUser()\n```\n#Check process owner against requesting user* \n\t\t\tif getProcessOwner(processID) == user:\n\t\t\t```\n\t\t\t\tos.kill(processID, signal.SIGKILL)\n\t\t\t\treturn\n\t\t\telse:\n\t\t\t\tprint(\"You cannot kill a process you don't own\")\n\t\t\t\treturn\n```"}]}], "ObservedExamples": [{"Reference": "CVE-2001-0178", "Description": "Program does not verify the owner of a UNIX socket that is used for sending a password.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0178"}, {"Reference": "CVE-2004-2012", "Description": "Owner of special device not checked, allowing root.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2012"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Relationship", "Note": "This overlaps insufficient comparison, verification errors, permissions, and privileges."}], "Top25Examples": [{"Reference": "CVE-2022-31154", "Description": "Sourcegraph is an opensource code search and navigation engine. It is possible for an authenticated Sourcegraph user to edit the Code Monitors owned by any other Sourcegraph user. This includes being able to edit both the trigger and the action of the monitor in question. An attacker is not able to read contents of existing code monitors, only override the data. The issue is fixed in Sourcegraph 3.42. There are no workaround for the issue and patching is highly recommended."}]}
{"ID": "284", "Name": "Improper Access Control", "Abstraction": "Pillar", "Structure": "Simple", "Status": "Incomplete", "Description": "The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.", "ExtendedDescription": "\n\nAccess control involves the use of several protection mechanisms such as:\n\n\n  - Authentication (proving the identity of an actor)\n\n  - Authorization (ensuring that a given actor can access a resource), and\n\n  - Accountability (tracking of activities that were performed)\n\nWhen any mechanism is not applied or otherwise fails, attackers can compromise the security of the product by gaining privileges, reading sensitive information, executing commands, evading detection, etc.\n\nThere are two distinct behaviors that can introduce access control weaknesses:\n\n\n  - Specification: incorrect privileges, permissions, ownership, etc. are explicitly specified for either the user or the resource (for example, setting a password file to be world-writable, or giving administrator capabilities to a guest user). This action could be performed by the program or the administrator.\n\n  - Enforcement: the mechanism contains errors that prevent it from properly enforcing the specified access control requirements (e.g., allowing the user to specify their own privileges, or allowing a syntactically-incorrect ACL to produce insecure settings). This problem occurs within the program itself, in that it does not actually enforce the intended security policy that the administrator specifies.\n\n", "ApplicablePlatforms": [{"Type": "Technology", "Class": "Not Technology-Specific", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "ICS/OT", "Prevalence": "Undetermined"}], "AlternateTerms": [{"Term": "Authorization", "Description": "The terms \"access control\" and \"authorization\" are often used interchangeably, although many people have distinct definitions. The CWE usage of \"access control\" is intended as a general term for the various mechanisms that restrict which users can access which resources, and \"authorization\" is more narrowly defined. It is unlikely that there will be community consensus on the use of these terms."}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}, {"Phase": "Operation"}], "CommonConsequences": [{"Scope": ["Other"], "Impact": ["Varies by Context"]}], "PotentialMitigations": [{"MitigationID": "MIT-1", "Phase": ["Architecture and Design", "Operation"], "Description": "Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software."}, {"MitigationID": "MIT-46", "Phase": ["Architecture and Design"], "Strategy": "Separation of Privilege", "Description": "\n\nCompartmentalize the system to have \"safe\" areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area.\n\n\nEnsure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.\n"}], "ObservedExamples": [{"Reference": "CVE-2022-24985", "Description": "A form hosting website only checks the session authentication status for a single form, making it possible to bypass authentication when there are multiple forms", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-24985"}, {"Reference": "CVE-2022-29238", "Description": "Access-control setting in web-based document collaboration tool is not properly implemented by the code, which prevents listing hidden directories but does not prevent direct requests to files in those directories.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29238"}, {"Reference": "CVE-2022-23607", "Description": "Python-based HTTP library did not scope cookies to a particular domain such that \"supercookies\" could be sent to any domain on redirect", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-23607"}, {"Reference": "CVE-2021-21972", "Description": "Chain: Cloud computing virtualization platform does not require authentication for upload of a tar format file (CWE-306), then uses .. path traversal sequences (CWE-23) in the file to access unexpected files, as exploited in the wild per CISA KEV.", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-21972"}, {"Reference": "CVE-2021-37415", "Description": "IT management product does not perform authentication for some REST API requests, as exploited in the wild per CISA KEV.", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-37415"}, {"Reference": "CVE-2021-35033", "Description": "Firmware for a WiFi router uses a hard-coded password for a BusyBox shell, allowing bypass of authentication through the UART port", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-35033"}, {"Reference": "CVE-2020-10263", "Description": "Bluetooth speaker does not require authentication for the debug functionality on the UART port, allowing root shell access", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-10263"}, {"Reference": "CVE-2020-13927", "Description": "Default setting in workflow management product allows all API requests without authentication, as exploited in the wild per CISA KEV.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-13927"}, {"Reference": "CVE-2010-4624", "Description": "Bulletin board applies restrictions on number of images during post creation, but does not enforce this on editing.", "Link": "https://www.cve.org/CVERecord?id=CVE-2010-4624"}], "AffectedResources": ["File or Directory"], "RelatedAttackPatterns": ["19", "441", "478", "479", "502", "503", "536", "546", "550", "551", "552", "556", "558", "562", "563", "564", "578"], "MappingNotes": {"Usage": "Discouraged", "Rationale": "CWE-284 is extremely high-level, a Pillar. Its name, \"Improper Access Control,\" is often misused in low-information vulnerability reports [REF-1287] or by active use of the OWASP Top Ten, such as \"A01:2021-Broken Access Control\". It is not useful for trend analysis.", "Comments": "Consider using descendants of CWE-284 that are more specific to the kind of access control involved, such as those involving authorization (Missing Authorization (CWE-862), Incorrect Authorization (CWE-863), Incorrect Permission Assignment for Critical Resource (CWE-732), etc.); authentication (Missing Authentication (CWE-306) or Weak Authentication (CWE-1390)); Incorrect User Management (CWE-286); Improper Restriction of Communication Channel to Intended Endpoints (CWE-923); etc.", "Reasons": ["Frequent Misuse", "Abstraction"], "Suggestions": [{"CweID": "862", "Comment": "Missing Authorization"}, {"CweID": "863", "Comment": "Incorrect Authorization"}, {"CweID": "732", "Comment": "Incorrect Permission Assignment for Critical Resource"}, {"CweID": "306", "Comment": "Missing Authentication"}, {"CweID": "1390", "Comment": "Weak Authentication"}, {"CweID": "923", "Comment": "Improper Restriction of Communication Channel to Intended Endpoints"}]}, "Notes": [{"Type": "Maintenance", "Note": "\n\nThis entry needs more work. Possible sub-categories include:\n\n\n  - Trusted group includes undesired entities (partially covered by CWE-286)\n\n  - Group can perform undesired actions\n\n  - ACL parse error does not fail closed\n\n"}], "Top25Examples": [{"Reference": "CVE-2021-30349", "Description": "Improper access control sequence for AC database after memory allocation can lead to possible memory corruption in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Voice & Music, Snapdragon Wearables, Snapdragon Wired Infrastructure and Networking"}, {"Reference": "CVE-2022-33243", "Description": "Memory corruption due to improper access control in Qualcomm IPC."}, {"Reference": "CVE-2022-25681", "Description": "Possible memory corruption in kernel while performing memory access due to hypervisor not correctly invalidated the processor translation caches in Snapdragon Auto, Snapdragon Compute, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile"}, {"Reference": "CVE-2022-42221", "Description": "Netgear R6220 v1.1.0.114_1.0.1 suffers from Incorrect Access Control, resulting in a command injection vulnerability."}, {"Reference": "CVE-2022-42460", "Description": "Broken Access Control vulnerability leading to Stored Cross-Site Scripting (XSS) in Traffic Manager plugin <= 1.4.5 on WordPress."}, {"Reference": "CVE-2022-33715", "Description": "Improper access control and path traversal vulnerability in LauncherProvider prior to SMR Aug-2022 Release 1 allow local attacker to access files of One UI."}, {"Reference": "CVE-2022-45475", "Description": "Tiny File Manager version 2.4.8 allows an unauthenticated remote attacker to access the application's internal files. This is possible because the application is vulnerable to broken access control. "}, {"Reference": "CVE-2022-30750", "Description": "Improper access control vulnerability in updateLastConnectedClientInfo function of SemWifiApClient prior to SMR Jul-2022 Release 1 allows attacker to access wifi ap client mac address that connected."}, {"Reference": "CVE-2022-30751", "Description": "Improper access control vulnerability in sendDHCPACKBroadcast function of SemWifiApClient prior to SMR Jul-2022 Release 1 allows attacker to access wifi ap client mac address that connected by using WIFI_AP_STA_DHCPACK_EVENT action."}, {"Reference": "CVE-2022-30752", "Description": "Improper access control vulnerability in sendDHCPACKBroadcast function of SemWifiApClient prior to SMR Jul-2022 Release 1 allows attacker to access wifi ap client mac address that connected by using WIFI_AP_STA_STATE_CHANGED action."}, {"Reference": "CVE-2021-22941", "Description": "Improper Access Control in Citrix ShareFile storage zones controller before 5.11.20 may allow an unauthenticated attacker to remotely compromise the storage zones controller."}, {"Reference": "CVE-2021-25369", "Description": "An improper access control vulnerability in sec_log file prior to SMR MAR-2021 Release 1 exposes sensitive kernel information to userspace."}, {"Reference": "CVE-2021-0187", "Description": "Improper access control in the BIOS firmware for some Intel(R) Processors may allow a privileged user to potentially enable an escalation of privilege via local access."}, {"Reference": "CVE-2021-1070", "Description": "NVIDIA Jetson AGX Xavier Series, Jetson Xavier NX, TX1, TX2, Nano and Nano 2GB, L4T versions prior to 32.5, contains a vulnerability in the apply_binaries.sh script used to install NVIDIA components into the root file system image, in which improper access control is applied, which may lead to an unprivileged user being able to modify system device tree files, leading to denial of service."}, {"Reference": "CVE-2021-1071", "Description": "NVIDIA Tegra kernel in Jetson AGX Xavier Series, Jetson Xavier NX, TX1, TX2, Nano and Nano 2GB, all L4T versions prior to r32.5, contains a vulnerability in the INA3221 driver in which improper access control may lead to unauthorized users gaining access to system power usage data, which may lead to information disclosure."}, {"Reference": "CVE-2021-21471", "Description": "In CLA-Assistant, versions before 2.8.5, due to improper access control an authenticated user could access API endpoints which are not intended to be used by the user. This could impact the integrity of the application."}, {"Reference": "CVE-2021-23921", "Description": "An issue was discovered in Devolutions Server before 2020.3. There is broken access control on Password List entry elements."}, {"Reference": "CVE-2021-26733", "Description": "A broken access control vulnerability in the FirstReset_handler_func function of spx_restservice allows an attacker to arbitrarily send reboot commands to the BMC, causing a Denial-of-Service (DoS) condition. This issue affects: Lanner Inc IAC-AST2500A standard firmware version 1.10.0."}, {"Reference": "CVE-2021-28147", "Description": "The team sync HTTP API in Grafana Enterprise 6.x before 6.7.6, 7.x before 7.3.10, and 7.4.x before 7.4.5 has an Incorrect Access Control issue. On Grafana instances using an external authentication service and having the EditorsCanAdmin feature enabled, this vulnerability allows any authenticated user to add external groups to any existing team. This can be used to grant a user team permissions that the user isn't supposed to have."}, {"Reference": "CVE-2021-33104", "Description": "Improper access control in the Intel(R) OFU software before version 14.1.28 may allow an authenticated user to potentially enable denial of service via local access."}, {"Reference": "CVE-2021-33126", "Description": "Improper access control in the firmware for some Intel(R) 700 and 722 Series Ethernet Controllers and Adapters before versions 8.5 and 1.5.5 may allow a privileged user to potentially enable denial of service via local access."}, {"Reference": "CVE-2021-33128", "Description": "Improper access control in the firmware for some Intel(R) E810 Ethernet Controllers before version 1.6.0.6 may allow a privileged user to potentially enable denial of service via local access."}, {"Reference": "CVE-2021-33164", "Description": "Improper access control in BIOS firmware for some Intel(R) NUCs before version INWHL357.0046 may allow a privileged user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2021-34401", "Description": "NVIDIA Linux kernel distributions contain a vulnerability in nvmap NVGPU_IOCTL_CHANNEL_SET_ERROR_NOTIFIER, where improper access control may lead to code execution, compromised integrity, or denial of service."}, {"Reference": "CVE-2021-34782", "Description": "A vulnerability in the API endpoints for Cisco DNA Center could allow an authenticated, remote attacker to gain access to sensitive information that should be restricted. The attacker must have valid device credentials. This vulnerability is due to improper access controls on API endpoints. An attacker could exploit the vulnerability by sending a specific API request to an affected application. A successful exploit could allow the attacker to obtain sensitive information about other users who are configured with higher privileges on the application."}, {"Reference": "CVE-2021-36792", "Description": "The dated_news (aka Dated News) extension through 5.1.1 for TYPO3 has incorrect Access Control for confirming various applications."}, {"Reference": "CVE-2021-38417", "Description": "VISAM VBASE version 11.6.0.6 is vulnerable to improper access control via the web-remote endpoint, which may allow an unauthenticated user viewing access to folders and files in the directory listing."}, {"Reference": "CVE-2021-39017", "Description": "IBM Engineering Lifecycle Optimization - Publishing 6.0.6, 6.0.6.1, 7.0, 7.0.1, and 7.0.2 could allow a remote attacker to upload arbitrary files, caused by improper access controls. IBM X-Force ID: 213725."}, {"Reference": "CVE-2021-42808", "Description": "Improper Access Control in Thales Sentinel Protection Installer could allow a local user to escalate privileges."}, {"Reference": "CVE-2021-43996", "Description": "The Ignition component before 1.16.15, and 2.0.x before 2.0.6, for Laravel has a \"fix variable names\" feature that can lead to incorrect access control."}, {"Reference": "CVE-2021-44467", "Description": "A broken access control vulnerability in the KillDupUsr_func function of spx_restservice allows an attacker to arbitrarily terminate active sessions of other users, causing a Denial-of-Service (DoS) condition. This issue affects: Lanner Inc IAC-AST2500A standard firmware version 1.10.0."}, {"Reference": "CVE-2021-44719", "Description": "Docker Desktop 4.3.0 has Incorrect Access Control."}, {"Reference": "CVE-2021-44776", "Description": "A broken access control vulnerability in the SubNet_handler_func function of spx_restservice allows an attacker to arbitrarily change the security access rights to KVM and Virtual Media functionalities. This issue affects: Lanner Inc IAC-AST2500A standard firmware version 1.10.0."}, {"Reference": "CVE-2021-46270", "Description": "JFrog Artifactory before 7.31.10, is vulnerable to Broken Access Control where a project admin user is able to list all available repository names due to insufficient permission validation."}, {"Reference": "CVE-2022-20104", "Description": "In aee daemon, there is a possible information disclosure due to improper access control. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS06419017; Issue ID: ALPS06284104."}, {"Reference": "CVE-2022-20716", "Description": "A vulnerability in the CLI of Cisco SD-WAN Software could allow an authenticated, local attacker to gain escalated privileges. This vulnerability is due to improper access control on files within the affected system. A local attacker could exploit this vulnerability by modifying certain files on the vulnerable device. If successful, the attacker could gain escalated privileges and take actions on the system with the privileges of the root user."}, {"Reference": "CVE-2022-20956", "Description": "A vulnerability in the web-based management interface of Cisco Identity Services Engine (ISE) could allow an authenticated, remote attacker to bypass authorization and access system files. This vulnerability is due to improper access control in the web-based management interface of an affected device. An attacker could exploit this vulnerability by sending a crafted HTTP request to the affected device. A successful exploit could allow the attacker to list, download, and delete certain files that they should not have access to. Cisco plans to release software updates that address this vulnerability. https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-ise-access-contol-EeufSUCx [\"https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-ise-access-contol-EeufSUCx\"] "}, {"Reference": "CVE-2022-20965", "Description": "A vulnerability in the web-based management interface of Cisco Identity Services Engine could allow an authenticated, remote attacker to take privileges actions within the web-based management interface. This vulnerability is due to improper access control on a feature within the web-based management interface of the affected system. An attacker could exploit this vulnerability by accessing features through direct requests, bypassing checks within the application. A successful exploit could allow the attacker to take privileged actions within the web-based management interface that should be otherwise restricted. {{value}} [\"%7b%7bvalue%7d%7d\"])}]] "}, {"Reference": "CVE-2022-21131", "Description": "Improper access control for some Intel(R) Xeon(R) Processors may allow an authenticated user to potentially enable information disclosure via local access."}, {"Reference": "CVE-2022-21152", "Description": "Improper access control in the Intel(R) Edge Insights for Industrial software before version 2.6.1 may allow an authenticated user to potentially enable information disclosure via local access."}, {"Reference": "CVE-2022-21163", "Description": "Improper access control in the Crypto API Toolkit for Intel(R) SGX before version 2.0 commit ID 91ee496 may allow an authenticated user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-22127", "Description": "Tableau is aware of a broken access control vulnerability present in Tableau Server affecting Tableau Server customers using Local Identity Store for managing users. The vulnerability allows a malicious site administrator to change passwords for users in different sites hosted on the same Tableau Server, resulting in the potential for unauthorized access to data.Tableau Server versions affected are:2020.4.16, 2021.1.13, 2021.2.10, 2021.3.9, 2021.4.4 and earlierNote: All future releases of Tableau Server will address this security issue. Versions that are no longer supported are not tested and may be vulnerable."}, {"Reference": "CVE-2022-22442", "Description": "\"IBM InfoSphere Information Server 11.7 could allow an authenticated user to access information restricted to users with elevated privileges due to improper access controls. IBM X-Force ID: 224427.\""}, {"Reference": "CVE-2022-23144", "Description": "There is a broken access control vulnerability in ZTE ZXvSTB product. Due to improper permission control, attackers could use this vulnerability to delete the default application type, which affects normal use of system."}, {"Reference": "CVE-2022-23442", "Description": "An improper access control vulnerability [CWE-284] in FortiOS versions 6.2.0 through 6.2.11, 6.4.0 through 6.4.8 and 7.0.0 through 7.0.5 may allow an authenticated attacker with a restricted user profile to gather the checksum information about the other VDOMs via CLI commands."}, {"Reference": "CVE-2022-25338", "Description": "ownCloud owncloud/android before 2.20 has Incorrect Access Control for physically proximate attackers."}, {"Reference": "CVE-2022-25339", "Description": "ownCloud owncloud/android 2.20 has Incorrect Access Control for local attackers."}, {"Reference": "CVE-2022-25357", "Description": "Pexip Infinity 27.x before 27.2 has Improper Access Control. An attacker can sometimes join a conference (call join) if it has a lock but not a PIN."}, {"Reference": "CVE-2022-25679", "Description": "Denial of service in video due to improper access control in broadcast receivers in Snapdragon Compute, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Wearables"}, {"Reference": "CVE-2022-25824", "Description": "Improper access control vulnerability in BixbyTouch prior to version 2.2.00.6 in China models allows untrusted applications to load arbitrary URL and local files in webview."}, {"Reference": "CVE-2022-25831", "Description": "Improper access control vulnerability in S Secure prior to SMR Apr-2022 Release 1 allows physical attackers to access secured data in certain conditions."}, {"Reference": "CVE-2022-25915", "Description": "Improper access control vulnerability in ELECOM LAN routers (WRC-1167GST2 firmware v1.25 and prior, WRC-1167GST2A firmware v1.25 and prior, WRC-1167GST2H firmware v1.25 and prior, WRC-2533GS2-B firmware v1.52 and prior, WRC-2533GS2-W firmware v1.52 and prior, WRC-1750GS firmware v1.03 and prior, WRC-1750GSV firmware v2.11 and prior, WRC-1900GST firmware v1.03 and prior, WRC-2533GST firmware v1.03 and prior, WRC-2533GSTA firmware v1.03 and prior, WRC-2533GST2 firmware v1.25 and prior, WRC-2533GST2SP firmware v1.25 and prior, WRC-2533GST2-G firmware v1.25 and prior, and EDWRC-2533GST2 firmware v1.25 and prior) allows a network-adjacent authenticated attacker to bypass access restriction and to access the management screen of the product via unspecified vectors."}, {"Reference": "CVE-2022-26024", "Description": "Improper access control in the Intel(R) NUC HDMI Firmware Update Tool for NUC7i3DN, NUC7i5DN and NUC7i7DN before version 1.78.2.0.7 may allow an authenticated user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-26090", "Description": "Improper access control vulnerability in SamsungContacts prior to SMR Apr-2022 Release 1 allows that attackers can access contact information without permission."}, {"Reference": "CVE-2022-2630", "Description": "An improper access control issue in GitLab CE/EE affecting all versions starting from 15.2 before 15.2.4, all versions from 15.3 before 15.3.2 allows disclosure of confidential information via the Incident timeline events."}, {"Reference": "CVE-2022-26308", "Description": "Pandora FMS v7.0NG.760 and below allows an improper access control in Configuration (Credential store) where a user with the role of Operator (Write) could create, delete, view existing keys which are outside the intended role."}, {"Reference": "CVE-2022-26343", "Description": "Improper access control in the BIOS firmware for some Intel(R) Processors may allow a privileged user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-27235", "Description": "Multiple Broken Access Control vulnerabilities in Social Share Buttons by Supsystic plugin <= 2.2.3 at WordPress."}, {"Reference": "CVE-2022-27673", "Description": "Insufficient access controls in the AMD Link Android app may potentially result in information disclosure."}, {"Reference": "CVE-2022-2792", "Description": "Emerson Electric's Proficy Machine Edition Version 9.00 and prior is vulenrable to CWE-284 Improper Access Control, and stores project data in a directory with improper access control lists."}, {"Reference": "CVE-2022-28709", "Description": "Improper access control in the firmware for some Intel(R) E810 Ethernet Controllers before version 1.6.1.9 may allow a privileged user to potentially enable denial of service via local access."}, {"Reference": "CVE-2022-28758", "Description": "Zoom On-Premise Meeting Connector MMR before version 4.8.20220815.130 contains an improper access control vulnerability. As a result, a malicious actor could obtain the audio and video feed of a meeting they were not authorized to join and cause other meeting disruptions."}, {"Reference": "CVE-2022-28759", "Description": "Zoom On-Premise Meeting Connector MMR before version 4.8.20220815.130 contains an improper access control vulnerability. As a result, a malicious actor could obtain the audio and video feed of a meeting they were not authorized to join and cause other meeting disruptions."}, {"Reference": "CVE-2022-28760", "Description": "Zoom On-Premise Meeting Connector MMR before version 4.8.20220815.130 contains an improper access control vulnerability. As a result, a malicious actor could obtain the audio and video feed of a meeting they were not authorized to join and cause other meeting disruptions."}, {"Reference": "CVE-2022-28761", "Description": "Zoom On-Premise Meeting Connector MMR before version 4.8.20220916.131 contains an improper access control vulnerability. As a result, a malicious actor in a meeting or webinar they are authorized to join could prevent participants from receiving audio and video causing meeting disruptions."}, {"Reference": "CVE-2022-28780", "Description": "Improper access control vulnerability in Weather prior to SMR May-2022 Release 1 allows that attackers can access location information that set in Weather without permission. The patch adds proper protection to prevent access to location information."}, {"Reference": "CVE-2022-29500", "Description": "SchedMD Slurm 21.08.x through 20.11.x has Incorrect Access Control that leads to Information Disclosure."}, {"Reference": "CVE-2022-29501", "Description": "SchedMD Slurm 21.08.x through 20.11.x has Incorrect Access Control that leads to Escalation of Privileges and code execution."}, {"Reference": "CVE-2022-29502", "Description": "SchedMD Slurm 21.08.x through 20.11.x has Incorrect Access Control that leads to Escalation of Privileges."}, {"Reference": "CVE-2022-29514", "Description": "Improper access control in the Intel(R) SUR software before version 2.4.8902 may allow an unauthenticated user to potentially enable escalation of privilege via network access."}, {"Reference": "CVE-2022-3030", "Description": "An improper access control issue in GitLab CE/EE affecting all versions starting before 15.1.6, all versions from 15.2 before 15.2.4, all versions from 15.3 before 15.3.2 allows disclosure of pipeline status to unauthorized users."}, {"Reference": "CVE-2022-31476", "Description": "Improper access control in the Intel(R) SUR software before version 2.4.8902 may allow an authenticated user to potentially enable denial of service via local access."}, {"Reference": "CVE-2022-31687", "Description": "VMware Workspace ONE Assist prior to 22.10 contains a Broken Access Control vulnerability. A malicious actor with network access to Workspace ONE Assist may be able to obtain administrative access without the need to authenticate to the application."}, {"Reference": "CVE-2022-31704", "Description": "The vRealize Log Insight contains a broken access control vulnerability. An unauthenticated malicious actor can remotely inject code into sensitive files of an impacted appliance which can result in remote code execution."}, {"Reference": "CVE-2022-31708", "Description": "vRealize Operations (vROps) contains a broken access control vulnerability. VMware has evaluated the severity of this issue to be in the Moderate severity range with a maximum CVSSv3 base score of 4.4."}, {"Reference": "CVE-2022-3182", "Description": "Improper Access Control vulnerability in the Duo SMS two-factor of Devolutions Remote Desktop Manager 2022.2.14 and earlier allows attackers to bypass the application lock. This issue affects: Devolutions Remote Desktop Manager version 2022.2.14 and prior versions."}, {"Reference": "CVE-2022-33701", "Description": "Improper access control vulnerability in KnoxCustomManagerService prior to SMR Jul-2022 Release 1 allows attacker to call PowerManaer.goToSleep method which is protected by system permission by sending braodcast intent."}, {"Reference": "CVE-2022-33706", "Description": "Improper access control vulnerability in Samsung Gallery prior to version 13.1.05.8 allows physical attackers to access the pictures using S Pen air gesture."}, {"Reference": "CVE-2022-33714", "Description": "Improper access control vulnerability in SemWifiApBroadcastReceiver prior to SMR Aug-2022 Release 1 allows attacker to reset a setting value related to mobile hotspot."}, {"Reference": "CVE-2022-33718", "Description": "An improper access control vulnerability in Wi-Fi Service prior to SMR AUG-2022 Release 1 allows untrusted applications to manipulate the list of apps that can use mobile data."}, {"Reference": "CVE-2022-33731", "Description": "Improper access control vulnerability in DesktopSystemUI prior to SMR Aug-2022 Release 1 allows attackers to enable and disable arbitrary components."}, {"Reference": "CVE-2022-33924", "Description": "Dell Wyse Management Suite 3.6.1 and below contains an Improper Access control vulnerability with which an attacker with no access to create rules could potentially exploit this vulnerability and create rules."}, {"Reference": "CVE-2022-33925", "Description": "Dell Wyse Management Suite 3.6.1 and below contains an Improper Access control vulnerability in UI. An remote authenticated attacker could potentially exploit this vulnerability by bypassing access controls in order to download reports containing sensitive information."}, {"Reference": "CVE-2022-33926", "Description": "Dell Wyse Management Suite 3.6.1 and below contains an improper access control vulnerability. A remote malicious user could exploit this vulnerability in order to retain access to a file repository after it has been revoked."}, {"Reference": "CVE-2022-33931", "Description": "Dell Wyse Management Suite 3.6.1 and below contains an Improper Access control vulnerability in UI. An attacker with no access to Alert Classification page could potentially exploit this vulnerability, leading to the change the alert categories."}, {"Reference": "CVE-2022-33973", "Description": "Improper access control in the Intel(R) WAPI Security software for Windows 10/11 before version 22.2150.0.1 may allow an authenticated user to potentially enable information disclosure via local access."}, {"Reference": "CVE-2022-34102", "Description": "Insufficient access control vulnerability was discovered in the Crestron AirMedia Windows Application, version 4.3.1.39, in which a user can pause the uninstallation of an executable to gain a SYSTEM level command prompt."}, {"Reference": "CVE-2022-34157", "Description": "Improper access control in the Intel(R) FPGA SDK for OpenCL(TM) with Intel(R) Quartus(R) Prime Pro Edition software before version 22.1 may allow authenticated user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-34259", "Description": "Adobe Commerce versions 2.4.3-p2 (and earlier), 2.3.7-p3 (and earlier) and 2.4.4 (and earlier) are affected by an Improper Access Control vulnerability that could result in a Security feature bypass. An attacker could leverage this vulnerability to impact the availability of a user's minor feature. Exploitation of this issue does not require user interaction."}, {"Reference": "CVE-2022-34854", "Description": "Improper access control in the Intel(R) SUR software before version 2.4.8902 may allow an authenticated user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-34894", "Description": "In JetBrains Hub before 2022.2.14799, insufficient access control allowed the hijacking of untrusted services"}, {"Reference": "CVE-2022-35276", "Description": "Improper access control in BIOS firmware for some Intel(R) NUC 8 Compute Elements before version CBWHL357.0096 may allow a privileged user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-35689", "Description": "Adobe Commerce versions 2.4.4-p1 (and earlier) and 2.4.5 (and earlier) are affected by an Improper Access Control vulnerability that could result in a Security feature bypass. An attacker could leverage this vulnerability to impact the availability of a user's minor feature. Exploitation of this issue does not require user interaction."}, {"Reference": "CVE-2022-36369", "Description": "Improper access control in some QATzip software maintained by Intel(R) before version 1.0.9 may allow an authenticated user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-36425", "Description": "Broken Access Control vulnerability in Beaver Builder plugin <= 2.5.4.3 at WordPress."}, {"Reference": "CVE-2022-36789", "Description": "Improper access control in BIOS firmware for some Intel(R) NUC 10 Performance Kits and Intel(R) NUC 10 Performance Mini PCs before version FNCML357.0053 may allow a privileged user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-36851", "Description": "Improper access control vulnerability in Samsung pass prior to version 4.0.03.1 allow physical attackers to access data of Samsung pass on a certain state of an unlocked device."}, {"Reference": "CVE-2022-36864", "Description": "Improper access control and intent redirection in Samsung Email prior to 6.1.70.20 allows attacker to access specific formatted file and execute privileged behavior."}, {"Reference": "CVE-2022-36865", "Description": "Improper access control in Group Sharing prior to versions 13.0.6.15 in Android S(12), 13.0.6.14 in Android R(11) and below allows attackers to access device information."}, {"Reference": "CVE-2022-36866", "Description": "Improper access control vulnerability in Broadcaster in Group Sharing prior to versions 13.0.6.15 in Android S(12), 13.0.6.14 in Android R(11) and below allows attackers to identify the device."}, {"Reference": "CVE-2022-36867", "Description": "Improper access control vulnerability in Editor Lite prior to version 4.0.40.14 allows attackers to access sensitive information."}, {"Reference": "CVE-2022-36869", "Description": "Improper access control vulnerability in ContactsDumpActivity of?Contacts Provider prior to version 12.7.59 allows attacker to access the file without permission."}, {"Reference": "CVE-2022-38134", "Description": "Authenticated (subscriber+) Broken Access Control vulnerability in Customer Reviews for WooCommerce plugin <= 5.3.5 at WordPress."}, {"Reference": "CVE-2022-38135", "Description": "Broken Access Control vulnerability in Dean Oakley's Photospace Gallery plugin <= 2.3.5 at WordPress allows users with subscriber or higher role to change plugin settings."}, {"Reference": "CVE-2022-38184", "Description": "There is an improper access control vulnerability in Portal for ArcGIS versions 10.8.1 and below which could allow a remote, unauthenticated attacker to access an API that may induce Esri Portal for ArcGIS to read arbitrary URLs."}, {"Reference": "CVE-2022-38377", "Description": "An improper access control vulnerability [CWE-284] in FortiManager 7.2.0, 7.0.0 through 7.0.3, 6.4.0 through 6.4.7, 6.2.0 through 6.2.9, 6.0.0 through 6.0.11 and FortiAnalyzer 7.2.0, 7.0.0 through 7.0.3, 6.4.0 through 6.4.8, 6.2.0 through 6.2.10, 6.0.0 through 6.0.12 may allow a remote and authenticated admin user assigned to a specific ADOM to access other ADOMs information such as device information and dashboard information."}, {"Reference": "CVE-2022-38380", "Description": "An improper access control [CWE-284] vulnerability in FortiOS version 7.2.0 and versions 7.0.0 through 7.0.7 may allow a remote authenticated read-only user to modify the interface settings via the API."}, {"Reference": "CVE-2022-38743", "Description": "Rockwell Automation FactoryTalk VantagePoint versions 8.0, 8.10, 8.20, 8.30, 8.31 are vulnerable to an improper access control vulnerability. The FactoryTalk VantagePoint SQL Server account could allow a malicious user with read-only privileges to execute SQL statements in the back-end database. If successfully exploited, this could allow the attacker to execute arbitrary code and gain access to restricted data."}, {"Reference": "CVE-2022-38974", "Description": "Broken Access Control vulnerability in WPML Multilingual CMS premium plugin <= 4.5.10 on WordPress allows users with subscriber or higher user roles to change the status of the translation jobs."}, {"Reference": "CVE-2022-39019", "Description": " Broken access controls on PDFtron WebviewerUI in M-Files Hubshare before 3.3.11.3 allows unauthenticated attackers to upload malicious files to the application server. "}, {"Reference": "CVE-2022-39070", "Description": "There is an access control vulnerability in some ZTE PON OLT products. Due to improper access control settings, remote attackers could use the vulnerability to log in to the device and execute any operation."}, {"Reference": "CVE-2022-3917", "Description": "Improper access control of bootloader function was discovered in Motorola Mobility Motorola e20 prior to version RONS31.267-38-8 allows attacker with local access to read partition or RAM data."}, {"Reference": "CVE-2022-39849", "Description": "Improper access control in knox_vpn_policy service prior to SMR Oct-2022 Release 1 allows allows unauthorized read of configuration data."}, {"Reference": "CVE-2022-39850", "Description": "Improper access control in mum_container_policy service prior to SMR Oct-2022 Release 1 allows allows unauthorized read of configuration data."}, {"Reference": "CVE-2022-39851", "Description": "Improper access control vulnerability in CocktailBarService prior to SMR Oct-2022 Release 1 allows local attacker to bind service that require BIND_REMOTEVIEWS permission."}, {"Reference": "CVE-2022-39855", "Description": "Improper access control vulnerability in FACM application prior to SMR Oct-2022 Release 1 allows a local attacker to connect arbitrary AP and Bluetooth devices."}, {"Reference": "CVE-2022-39856", "Description": "Improper access control vulnerability in imsservice application prior to SMR Oct-2022 Release 1 allows local attackers to access call information."}, {"Reference": "CVE-2022-39857", "Description": "Improper access control vulnerability in CameraTestActivity in FactoryCameraFB prior to version 3.5.51 allows attackers to access broadcasting Intent as system uid privilege."}, {"Reference": "CVE-2022-39860", "Description": "Improper access control vulnerability in QuickShare prior to version 13.2.3.5 allows attackers to access sensitive information via implicit broadcast."}, {"Reference": "CVE-2022-39864", "Description": "Improper access control vulnerability in WifiSetupLaunchHelper in SmartThings prior to version 1.7.89.25 allows attackers to access sensitive information via implicit intent."}, {"Reference": "CVE-2022-39865", "Description": "Improper access control vulnerability in ContentsSharingActivity.java SmartThings prior to version 1.7.89.0 allows attackers to access sensitive information via implicit broadcast."}, {"Reference": "CVE-2022-39866", "Description": "Improper access control vulnerability in RegisteredEventMediator.kt SmartThings prior to version 1.7.89.0 allows attackers to access sensitive information via implicit broadcast."}, {"Reference": "CVE-2022-39867", "Description": "Improper access control vulnerability in cloudNotificationManager.java SmartThings prior to version 1.7.89.0 allows attackers to access sensitive information via SHOW_PERSISTENT_BANNER broadcast."}, {"Reference": "CVE-2022-39868", "Description": "Improper access control vulnerability in GedSamsungAccount.kt SmartThings prior to version 1.7.89.0 allows attackers to access sensitive information via implicit broadcast."}, {"Reference": "CVE-2022-39884", "Description": "Improper access control vulnerability in IImsService prior to SMR Nov-2022 Release 1 allows local attacker to access to Call information."}, {"Reference": "CVE-2022-39889", "Description": "Improper access control vulnerability in GalaxyWatch4Plugin prior to versions 2.2.11.22101351 and 2.2.12.22101351 allows attackers to access wearable device information."}, {"Reference": "CVE-2022-39898", "Description": "Improper access control vulnerability in IIccPhoneBook prior to SMR Dec-2022 Release 1 allows attackers to access some information of usim."}, {"Reference": "CVE-2022-39900", "Description": "Improper access control vulnerability in Nice Catch prior to SMR Dec-2022 Release 1 allows physical attackers to access contents of all toast generated in the application installed in Secure Folder through Nice Catch."}, {"Reference": "CVE-2022-39906", "Description": "Improper access control vulnerability in SecTelephonyProvider prior to SMR Dec-2022 Release 1 allows attackers to access message information."}, {"Reference": "CVE-2022-39910", "Description": "Improper access control vulnerability in Samsung Pass prior to version 4.0.06.7 allow physical attackers to access data of Samsung Pass on a certain state of an unlocked device using pop-up view."}, {"Reference": "CVE-2022-40196", "Description": "Improper access control in the Intel(R) oneAPI DPC++/C++ Compiler before version 2022.2.1 and Intel C++ Compiler Classic before version 2021.7.1 for some Intel(R) oneAPI Toolkits before version 2022.3.1 may allow an authenticated user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-40231", "Description": "IBM Sterling B2B Integrator Standard Edition 6.0.0.0 through 6.0.3.7 and 6.1.0.0 through 6.1.2.0 could allow an authenticated user to perform unauthorized actions due to improper access controls. IBM X-Force ID: 235533."}, {"Reference": "CVE-2022-41781", "Description": "Broken Access Control vulnerability in Permalink Manager Lite plugin <= 2.2.20 on WordPress."}, {"Reference": "CVE-2022-41839", "Description": "Broken Access Control vulnerability in WordPress LoginPress plugin <= 1.6.2 on WordPress leading to unauth. changing of Opt-In or Opt-Out tracking settings."}, {"Reference": "CVE-2022-42461", "Description": "Broken Access Control vulnerability in miniOrange's Google Authenticator plugin <= 5.6.1 on WordPress."}, {"Reference": "CVE-2022-44211", "Description": "In GL.iNet Goodcloud 1.1 Incorrect access control allows a remote attacker to access/change devices' settings."}, {"Reference": "CVE-2022-44801", "Description": "D-Link DIR-878 1.02B05 is vulnerable to Incorrect Access Control."}, {"Reference": "CVE-2022-45066", "Description": "Auth. (subscriber+) Broken Access Control vulnerability in WooSwipe WooCommerce Gallery plugin <= 2.0.1 on WordPress."}, {"Reference": "CVE-2022-45369", "Description": "Auth. (subscriber+) Broken Access Control vulnerability in Plugin for Google Reviews plugin <= 2.2.2 on WordPress."}, {"Reference": "CVE-2022-46676", "Description": " Wyse Management Suite 3.8 and below contain an improper access control vulnerability. A malicious admin user can disable or delete users under administration and unassigned admins for which the group admin is not authorized. "}, {"Reference": "CVE-2022-46677", "Description": " Wyse Management Suite 3.8 and below contain an improper access control vulnerability with which an custom group admin can create a subgroup under a group for which the admin is not authorized. "}, {"Reference": "CVE-2022-46678", "Description": " Wyse Management Suite 3.8 and below contain an improper access control vulnerability. A authenticated malicious admin user can edit general client policy for which the user is not authorized. "}, {"Reference": "CVE-2022-46754", "Description": " Wyse Management Suite 3.8 and below contain an improper access control vulnerability. A authenticated malicious admin user might access certain pro license features for which this admin is not authorized in order to configure user controlled external entities. "}, {"Reference": "CVE-2022-46755", "Description": " Wyse Management Suite 3.8 and below contain an improper access control vulnerability. A authenticated malicious admin user can edit general client policy for which the user is not authorized. "}, {"Reference": "CVE-2022-46892", "Description": "In Ampere AltraMax and Ampere Altra before 2.10c, improper access controls allows the OS to reinitialize a disabled root complex."}, {"Reference": "CVE-2022-47070", "Description": "NVS365 V01 is vulnerable to Incorrect Access Control. After entering a wrong password, the url will be sent to the server twice. In the second package, the server will return the correct password information."}, {"Reference": "CVE-2022-48305", "Description": "There is an identity authentication bypass vulnerability in Huawei Children Smart Watch (Simba-AL00) 1.1.1.274. Successful exploitation of this vulnerability may cause the access control function of specific applications to fail."}, {"Reference": "CVE-2021-1957", "Description": "Improper Access Control when ACL link encryption is failed and ACL link is not disconnected during reconnection with paired device in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music"}, {"Reference": "CVE-2022-26317", "Description": "A vulnerability has been identified in Mendix Applications using Mendix 7 (All versions < V7.23.29). When returning the result of a completed Microflow execution call the affected framework does not correctly verify, if the request was initially made by the user requesting the result. Together with predictable identifiers for Microflow execution calls, this could allow a malicious attacker to retrieve information about arbitrary Microflow execution calls made by users within the affected system."}, {"Reference": "CVE-2022-38769", "Description": "The mobile application in Transtek Mojodat FAM (Fixed Asset Management) 2.4.6 allows remote attackers to fetch cleartext passwords upon a successful login request."}, {"Reference": "CVE-2022-38970", "Description": "ieGeek IG20 hipcam RealServer V1.0 is vulnerable to Incorrect Access Control. The algorithm used to generate device IDs (UIDs) for devices that utilize Shenzhen Yunni Technology iLnkP2P suffers from a predictability flaw that allows remote attackers to establish direct connections to arbitrary devices."}, {"Reference": "CVE-2022-22183", "Description": "An Improper Access Control vulnerability in Juniper Networks Junos OS Evolved allows a network-based unauthenticated attacker who is able to connect to a specific open IPv4 port, which in affected releases should otherwise be unreachable, to cause the CPU to consume all resources as more traffic is sent to the port to create a Denial of Service (DoS) condition. Continued receipt and processing of these packets will create a sustained Denial of Service (DoS) condition. This issue affects: Juniper Networks Junos OS Evolved 20.4 versions prior to 20.4R3-S2-EVO; 21.1 versions prior to 21.1R3-S1-EVO; 21.2 versions prior to 21.2R3-EVO; 21.3 versions prior to 21.3R2-EVO; 21.4 versions prior to 21.4R2-EVO. This issue does not affect Junos OS."}, {"Reference": "CVE-2022-33969", "Description": "Authenticated WordPress Options Change vulnerability in Biplob Adhikari's Flipbox plugin <= 2.6.0 at WordPress."}, {"Reference": "CVE-2022-33970", "Description": "Authenticated WordPress Options Change vulnerability in Biplob018 Shortcode Addons plugin <= 3.1.2 at WordPress."}, {"Reference": "CVE-2022-34868", "Description": "Authenticated Arbitrary Settings Update vulnerability in YooMoney ?Kassa ??? WooCommerce plugin <= 2.3.0 at WordPress."}, {"Reference": "CVE-2022-35242", "Description": "Unauthenticated plugin settings change vulnerability in 59sec THE Leads Management System: 59sec LITE plugin <= 3.4.1 at WordPress."}, {"Reference": "CVE-2022-36375", "Description": "Authenticated (high role user) WordPress Options Change vulnerability in Biplob Adhikari's Tabs plugin <= 3.6.0 at WordPress."}, {"Reference": "CVE-2022-35238", "Description": "Unauthenticated Plugin Settings Change vulnerability in Awesome Filterable Portfolio plugin <= 1.9.7 at WordPress."}, {"Reference": "CVE-2021-23188", "Description": "Improper access control for some Intel(R) PROSet/Wireless WiFi and Killer(TM) WiFi products may allow an authenticated user to potentially enable information disclosure via local access."}, {"Reference": "CVE-2022-1105", "Description": "An improper access control vulnerability in GitLab CE/EE affecting all versions from 13.11 prior to 14.7.7, 14.8 prior to 14.8.5, and 14.9 prior to 14.9.2 allows an unauthorized user to access pipeline analytics even when public pipelines are disabled"}, {"Reference": "CVE-2022-21140", "Description": "Improper access control for some Intel(R) PROSet/Wireless WiFi and Killer(TM) WiFi products may allow a privileged user to potentially enable information disclosure via local access."}, {"Reference": "CVE-2022-21148", "Description": "Improper access control in the Intel(R) Edge Insights for Industrial software before version 2.6.1 may allow an authenticated user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-21153", "Description": "Improper access control in the Intel(R) Capital Global Summit Android application may allow an authenticated user to potentially enable information disclosure via local access."}, {"Reference": "CVE-2022-21157", "Description": "Improper access control in the Intel(R) Smart Campus Android application before version 6.1 may allow authenticated user to potentially enable information disclosure via local access."}, {"Reference": "CVE-2022-21174", "Description": "Improper access control in a third-party component of Intel(R) Quartus(R) Prime Pro Edition before version 21.3 may allow an authenticated user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-21812", "Description": "Improper access control in the Intel(R) HAXM software before version 7.7.1 may allow an authenticated user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-21825", "Description": "An Improper Access Control vulnerability exists in Citrix Workspace App for Linux 2012 - 2111 with App Protection installed that can allow an attacker to perform local privilege escalation."}, {"Reference": "CVE-2022-22282", "Description": "SonicWall SMA1000 series firmware 12.4.0, 12.4.1-02965 and earlier versions incorrectly restricts access to a resource using HTTP connections from an unauthorized actor leading to Improper Access Control vulnerability."}, {"Reference": "CVE-2022-23182", "Description": "Improper access control in the Intel(R) Data Center Manager software before version 4.1 may allow an unauthenticated user to potentially enable escalation of privilege via adjacent access."}, {"Reference": "CVE-2022-23433", "Description": "Improper access control vulnerability in Reminder prior to versions 12.3.01.3000 in Android S(12), 12.2.05.6000 in Android R(11) and 11.6.08.6000 in Andoid Q(10) allows attackers to register reminders or execute exporeted activities remotely."}, {"Reference": "CVE-2022-23443", "Description": "An improper access control in Fortinet FortiSOAR before 7.2.0 allows unauthenticated attackers to access gateway API data via crafted HTTP GET requests."}, {"Reference": "CVE-2022-23994", "Description": "An Improper access control vulnerability in StBedtimeModeReceiver in Wear OS 3.0 prior to Firmware update Feb-2022 Release allows untrusted applications to change bedtime mode without a proper permission."}, {"Reference": "CVE-2022-24923", "Description": "Improper access control vulnerability in Samsung SearchWidget prior to versions 2.3.00.6 in China models allows untrusted applications to load arbitrary URL and local files in webview."}, {"Reference": "CVE-2022-24924", "Description": "An improper access control in LiveWallpaperService prior to versions 3.0.9.0 allows to create a specific named system directory without a proper permission."}, {"Reference": "CVE-2022-24930", "Description": "An Improper access control vulnerability in StRetailModeReceiver in Wear OS 3.0 prior to Firmware update MAR-2022 Release allows untrusted applications to reset default app settings without a proper permission"}, {"Reference": "CVE-2022-24931", "Description": "Improper access control vulnerability in dynamic receiver in ApkInstaller prior to SMR MAR-2022 Release allows unauthorized attackers to execute arbitrary activity without a proper permission"}, {"Reference": "CVE-2022-25214", "Description": "Improper access control on the LocalClientList.asp interface allows an unauthenticated remote attacker to obtain sensitive information concerning devices on the local area network, including IP and MAC addresses. Improper access control on the wirelesssetup.asp interface allows an unauthenticated remote attacker to obtain the WPA passphrases for the 2.4GHz and 5.0GHz wireless networks. This is particularly dangerous given that the K2G setup wizard presents the user with the option of using the same password for the 2.4Ghz network and the administrative interface, by clicking a checkbox. When Remote Managment is enabled, these endpoints are exposed to the WAN."}, {"Reference": "CVE-2022-25215", "Description": "Improper access control on the LocalMACConfig.asp interface allows an unauthenticated remote attacker to add (or remove) client MAC addresses to (or from) a list of banned hosts. Clients with those MAC addresses are then prevented from accessing either the WAN or the router itself."}, {"Reference": "CVE-2022-25649", "Description": "Multiple Improper Access Control vulnerabilities in StoreApps Affiliate For WooCommerce premium plugin <= 4.7.0 at WordPress."}, {"Reference": "CVE-2022-25966", "Description": "Improper access control in the Intel(R) Edge Insights for Industrial software before version 2.6.1 may allow an authenticated user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-26017", "Description": "Improper access control in the Intel(R) DSA software for before version 22.2.14 may allow an authenticated user to potentially enable escalation of privilege via adjacent access."}, {"Reference": "CVE-2022-26949", "Description": "Archer 6.x through 6.9 SP2 P1 (6.9.2.1) contains an improper access control vulnerability on attachments. A remote authenticated malicious user could potentially exploit this vulnerability to gain access to files that should only be allowed by extra privileges."}, {"Reference": "CVE-2022-27838", "Description": "Improper access control vulnerability in FactoryCamera prior to version 2.1.96 allows attacker to access the file with system privilege."}, {"Reference": "CVE-2022-28704", "Description": "Improper access control vulnerability in Rakuten Casa version AP_F_V1_4_1 or AP_F_V2_0_0 allows a remote attacker to log in with the root privilege and perform an arbitrary operation if the product is in its default settings in which is set to accept SSH connections from the WAN side, and is also connected to the Internet with the authentication information unchanged from the default settings."}, {"Reference": "CVE-2022-28753", "Description": "Zoom On-Premise Meeting Connector MMR before version 4.8.129.20220714 contains an improper access control vulnerability. As a result, a malicious actor can join a meeting which they are authorized to join without appearing to the other participants, can admit themselves into the meeting from the waiting room, and can become host and cause other meeting disruptions."}, {"Reference": "CVE-2022-28754", "Description": "Zoom On-Premise Meeting Connector MMR before version 4.8.129.20220714 contains an improper access control vulnerability. As a result, a malicious actor can join a meeting which they are authorized to join without appearing to the other participants, can admit themselves into the meeting from the waiting room, and can become host and cause other meeting disruptions."}, {"Reference": "CVE-2022-28775", "Description": "Improper access control vulnerability in Samsung Flow prior to version 4.8.06.5 allows attacker to write the file without Samsung Flow permission."}, {"Reference": "CVE-2022-28776", "Description": "Improper access control vulnerability in Galaxy Store prior to version 4.5.36.4 allows attacker to install applications from Galaxy Store without user interactions."}, {"Reference": "CVE-2022-28777", "Description": "Improper access control vulnerability in Samsung Members prior to version 13.6.08.5 allows local attacker to execute call function without CALL_PHONE permission."}, {"Reference": "CVE-2022-28778", "Description": "Improper access control vulnerability in Samsung Security Supporter prior to version 1.2.40.0 allows attacker to set the arbitrary folder as Secret Folder without Samsung Security Supporter permission"}, {"Reference": "CVE-2022-28782", "Description": "Improper access control vulnerability in Contents To Window prior to SMR May-2022 Release 1 allows physical attacker to install package before completion of Setup wizard. The patch blocks entry point of the vulnerability."}, {"Reference": "CVE-2022-30584", "Description": "Archer Platform 6.3 before 6.11 (6.11.0.0) contains an Improper Access Control Vulnerability within SSO ADFS functionality that could potentially be exploited by malicious users to compromise the affected system. 6.10 P3 (6.10.0.3) and 6.9 SP3 P4 (6.9.3.4) are also fixed releases."}, {"Reference": "CVE-2022-30731", "Description": "Improper access control vulnerability in My Files prior to version 13.1.00.193 allows attackers to access arbitrary private files in My Files application."}, {"Reference": "CVE-2022-30745", "Description": "Improper access control vulnerability in Quick Share prior to version 13.1.2.4 allows attacker to access internal files in Quick Share."}, {"Reference": "CVE-2022-31884", "Description": "Marval MSM v14.19.0.12476 has an Improper Access Control vulnerability which allows a low privilege user to delete other users API Keys including high privilege and the Administrator users API Keys."}, {"Reference": "CVE-2022-3325", "Description": "Improper access control in the GitLab CE/EE API affecting all versions starting from 12.8 before 15.2.5, all versions starting from 15.3 before 15.3.4, all versions starting from 15.4 before 15.4.1. Allowed for editing the approval rules via the API by an unauthorised user."}, {"Reference": "CVE-2022-33689", "Description": "Improper access control vulnerability in TelephonyUI prior to SMR Jul-2022 Release 1 allows attackers to change preferred network type by unprotected binder call."}, {"Reference": "CVE-2022-34434", "Description": "Cloud Mobility for Dell Storage versions 1.3.0 and earlier contains an Improper Access Control vulnerability within the Postgres database. A threat actor with root level access to either the vApp or containerized versions of Cloud Mobility may potentially exploit this vulnerability, leading to the modification or deletion of tables that are required for many of the core functionalities of Cloud Mobility. Exploitation may lead to the compromise of integrity and availability of the normal functionality of the Cloud Mobility application."}, {"Reference": "CVE-2022-34827", "Description": "Carel Boss Mini 1.5.0 has Improper Access Control."}, {"Reference": "CVE-2022-36832", "Description": "Improper access control vulnerability in WebApp in Cameralyzer prior to versions 3.2.22, 3.3.22, 3.4.22 and 3.5.51 allows attackers to access external storage as Cameralyzer privilege."}, {"Reference": "CVE-2022-38388", "Description": "IBM Navigator Mobile Android 3.4.1.1 and 3.4.1.2 app could allow a local user to obtain sensitive information due to improper access control. IBM X-Force ID: 233968."}, {"Reference": "CVE-2022-39877", "Description": "Improper access control vulnerability in ProfileSharingAccount in Group Sharing prior to versions 13.0.6.15 in Android S(12), 13.0.6.14 in Android R(11) and below allows attackers to identify the device."}, {"Reference": "CVE-2022-41799", "Description": "Improper access control vulnerability in GROWI prior to v5.1.4 (v5 series) and versions prior to v4.5.25 (v4 series) allows a remote authenticated attacker to bypass access restriction and download the markdown data from the pages set to private by the other users."}, {"Reference": "CVE-2022-39887", "Description": "Improper access control vulnerability in clearAllGlobalProxy in MiscPolicy prior to SMR Nov-2022 Release 1 allows local attacker to configure EDM setting."}, {"Reference": "CVE-2022-21182", "Description": "A privilege escalation vulnerability exists in the router configuration import functionality of InHand Networks InRouter302 V3.5.4. A specially-crafted HTTP request can lead to increased privileges. An attacker can send an HTTP request to trigger this vulnerability."}, {"Reference": "CVE-2022-22394", "Description": "The IBM Spectrum Protect 8.1.14.000 server could allow a remote attacker to bypass security restrictions, caused by improper enforcement of access controls. By signing in, an attacker could exploit this vulnerability to bypass security and gain unauthorized administrator or node access to the vulnerable server."}, {"Reference": "CVE-2022-23708", "Description": "A flaw was discovered in Elasticsearch 7.17.0\u2019s upgrade assistant, in which upgrading from version 6.x to 7.x would disable the in-built protections on the security index, allowing authenticated users with \u201c*\u201d index permissions access to this index."}, {"Reference": "CVE-2022-31257", "Description": "A vulnerability has been identified in Mendix Applications using Mendix 7 (All versions < V7.23.31), Mendix Applications using Mendix 8 (All versions < V8.18.18), Mendix Applications using Mendix 9 (All versions < V9.14.0), Mendix Applications using Mendix 9 (V9.12) (All versions < V9.12.2), Mendix Applications using Mendix 9 (V9.6) (All versions < V9.6.12). In case of access to an active user session in an application that is built with an affected version, it\u2019s possible to change that user\u2019s password bypassing password validations within a Mendix application. This could allow to set weak passwords."}, {"Reference": "CVE-2022-31496", "Description": "LibreHealth EHR Base 2.0.0 allows incorrect interface/super/manage_site_files.php access."}, {"Reference": "CVE-2022-38058", "Description": "Authenticated (subscriber+) Plugin Setting change vulnerability in WP Shamsi plugin <= 4.1.1 at WordPress."}, {"Reference": "CVE-2022-38070", "Description": "Privilege Escalation (subscriber+) vulnerability in Pop-up plugin <= 1.1.5 at WordPress."}, {"Reference": "CVE-2022-28612", "Description": "Improper Access Control vulnerability leading to multiple Authenticated (contributor or higher user role) Stored Cross-Site Scripting (XSS) vulnerabilities in Muneeb's Custom Popup Builder plugin <= 1.3.1 at WordPress."}, {"Reference": "CVE-2022-29417", "Description": "Plugin Settings Update vulnerability in ShortPixel's ShortPixel Adaptive Images plugin <= 3.3.1 at WordPress allows an attacker with a low user role like a subscriber or higher to change the plugin settings."}, {"Reference": "CVE-2022-3186", "Description": "Dataprobe iBoot-PDU FW versions prior to 1.42.06162022 contain a vulnerability where the affected product allows an attacker to access the device\u2019s main management page from the cloud. This feature enables users to remotely connect devices, however, the current implementation permits users to access other device's information. "}, {"Reference": "CVE-2022-3735", "Description": "A vulnerability was found in seccome Ehoney. It has been rated as critical. This issue affects some unknown processing of the file /api/public/signup. The manipulation leads to improper access controls. The identifier VDB-212417 was assigned to this vulnerability."}, {"Reference": "CVE-2022-41261", "Description": "SAP Solution Manager (Diagnostic Agent) - version 7.20, allows an authenticated attacker on Windows system to access a file containing sensitive data which can be used to access a configuration file which contains credentials to access other system files. Successful exploitation can make the attacker access files and systems for which he/she is not authorized."}, {"Reference": "CVE-2022-43494", "Description": " An unauthorized user could be able to read any file on the system, potentially exposing sensitive information. "}, {"Reference": "CVE-2022-46331", "Description": " An unauthorized user could possibly delete any file on the system. "}, {"Reference": "CVE-2022-46664", "Description": "A vulnerability has been identified in Mendix Workflow Commons (All versions < V2.4.0), Mendix Workflow Commons V2.1 (All versions < V2.1.4), Mendix Workflow Commons V2.3 (All versions < V2.3.2). Affected versions of the module improperly handle access control for some module entities. This could allow authenticated remote attackers to read or delete sensitive information."}, {"Reference": "CVE-2022-4700", "Description": "The Royal Elementor Addons plugin for WordPress is vulnerable to insufficient access control in the 'wpr_activate_required_theme' AJAX action in versions up to, and including, 1.3.59. This allows any authenticated user, including those with subscriber-level permissions, to activate the 'royal-elementor-kit' theme. If no such theme is installed doing so can also impact site availability as the site attempts to load a nonexistent theme."}, {"Reference": "CVE-2022-4702", "Description": "The Royal Elementor Addons plugin for WordPress is vulnerable to insufficient access control in the 'wpr_fix_royal_compatibility' AJAX action in versions up to, and including, 1.3.59. This allows any authenticated user, including those with subscriber-level permissions, to deactivate every plugin on the site unless it is part of an extremely limited hardcoded selection. This also switches the site to the 'royal-elementor-kit' theme, potentially resulting in availability issues."}, {"Reference": "CVE-2022-4703", "Description": "The Royal Elementor Addons plugin for WordPress is vulnerable to insufficient access control in the 'wpr_reset_previous_import' AJAX action in versions up to, and including, 1.3.59. This allows any authenticated user, including those with subscriber-level permissions, to reset previously imported data."}, {"Reference": "CVE-2022-4704", "Description": "The Royal Elementor Addons plugin for WordPress is vulnerable to insufficient access control in the 'wpr_import_templates_kit' AJAX action in versions up to, and including, 1.3.59. This allows any authenticated user, including those with subscriber-level permissions, to import preset site configuration templates including images and settings."}, {"Reference": "CVE-2022-4705", "Description": "The Royal Elementor Addons plugin for WordPress is vulnerable to insufficient access control in the 'wpr_final_settings_setup' AJAX action in versions up to, and including, 1.3.59. This allows any authenticated user, including those with subscriber-level permissions, to finalize activation of preset site configuration templates, which can be chosen and imported via a separate action documented in CVE-2022-4704."}, {"Reference": "CVE-2022-4708", "Description": "The Royal Elementor Addons plugin for WordPress is vulnerable to insufficient access control in the 'wpr_save_template_conditions' AJAX action in versions up to, and including, 1.3.59. This allows any authenticated user, including those with subscriber-level permissions, to modify the conditions under which templates are displayed."}, {"Reference": "CVE-2022-4709", "Description": "The Royal Elementor Addons plugin for WordPress is vulnerable to insufficient access control in the 'wpr_import_library_template' AJAX action in versions up to, and including, 1.3.59. This allows any authenticated user, including those with subscriber-level permissions, to import and activate templates from the plugin's template library."}, {"Reference": "CVE-2022-4711", "Description": "The Royal Elementor Addons plugin for WordPress is vulnerable to insufficient access control in the 'wpr_save_mega_menu_settings' AJAX action in versions up to, and including, 1.3.59. This allows any authenticated user, including those with subscriber-level permissions, to enable and modify Mega Menu settings for any menu item."}, {"Reference": "CVE-2021-30947", "Description": "An access issue was addressed with additional sandbox restrictions. This issue is fixed in macOS Big Sur 11.6.2, tvOS 15.2, macOS Monterey 12.1, iOS 15.2 and iPadOS 15.2, watchOS 8.3. An application may be able to access a user's files."}, {"Reference": "CVE-2021-30988", "Description": "Description: A permissions issue was addressed with improved validation. This issue is fixed in iOS 15.2 and iPadOS 15.2. A malicious application may be able to identify what other applications a user has installed."}, {"Reference": "CVE-2021-40005", "Description": "The distributed data service component has a vulnerability in data access control. Successful exploitation of this vulnerability may affect data confidentiality."}, {"Reference": "CVE-2022-25986", "Description": "Browse restriction bypass vulnerability in Scheduler of Cybozu Office 10.0.0 to 10.8.5 allows a remote authenticated attacker to obtain the data of Scheduler."}, {"Reference": "CVE-2022-29471", "Description": "Browse restriction bypass vulnerability in Bulletin of Cybozu Garoon allows a remote authenticated attacker to obtain the data of Bulletin."}, {"Reference": "CVE-2022-38770", "Description": "The mobile application in Transtek Mojodat FAM (Fixed Asset Management) 2.4.6 allows remote attackers to fetch other users' data upon a successful login request."}, {"Reference": "CVE-2022-44929", "Description": "An access control issue in D-Link DVG-G5402SP GE_1.03 allows unauthenticated attackers to escalate privileges via arbitrarily editing VoIP SIB profiles."}, {"Reference": "CVE-2022-32430", "Description": "An access control issue in Lin CMS Spring Boot v0.2.1 allows attackers to access the backend information and functions within the application."}, {"Reference": "CVE-2022-0541", "Description": "The flo-launch WordPress plugin before 2.4.1 injects code into wp-config.php when creating a cloned site, allowing any attacker to initiate a new site install by setting the flo_custom_table_prefix cookie to an arbitrary value."}, {"Reference": "CVE-2022-1656", "Description": "Vulnerable versions of the JupiterX Theme (<=2.0.6) allow any logged-in user, including subscriber-level users, to access any of the functions registered in lib/api/api/ajax.php, which also grant access to the jupiterx_api_ajax_ actions registered by the JupiterX Core Plugin (<=2.0.6). This includes the ability to deactivate arbitrary plugins as well as update the theme\u2019s API key."}, {"Reference": "CVE-2022-2088", "Description": "An authenticated user with admin privileges may be able to terminate any process on the system running Elcomplus SmartICS v2.3.4.0."}, {"Reference": "CVE-2022-27660", "Description": "A denial of service vulnerability exists in the confctl_set_guest_wlan functionality of TCL LinkHub Mesh Wi-Fi MS1G_00_01.00_14. A specially-crafted network packet can lead to denial of service. An attacker can send packets to trigger this vulnerability."}, {"Reference": "CVE-2022-20696", "Description": "A vulnerability in the binding configuration of Cisco SD-WAN vManage Software containers could allow an unauthenticated, adjacent attacker who has access to the VPN0 logical network to also access the messaging service ports on an affected system. This vulnerability exists because the messaging server container ports on an affected system lack sufficient protection mechanisms. An attacker could exploit this vulnerability by connecting to the messaging service ports of the affected system. To exploit this vulnerability, the attacker must be able to send network traffic to interfaces within the VPN0 logical network. This network may be restricted to protect logical or physical adjacent networks, depending on device deployment configuration. A successful exploit could allow the attacker to view and inject messages into the messaging service, which can cause configuration changes or cause the system to reload."}, {"Reference": "CVE-2022-25650", "Description": "A vulnerability has been identified in Mendix Applications using Mendix 7 (All versions < V7.23.27), Mendix Applications using Mendix 8 (All versions < V8.18.14), Mendix Applications using Mendix 9 (All versions < V9.12.0), Mendix Applications using Mendix 9 (V9.6) (All versions < V9.6.3). When querying the database, it is possible to sort the results using a protected field. With this an authenticated attacker could extract information about the contents of a protected field."}, {"Reference": "CVE-2022-25755", "Description": "A vulnerability has been identified in SCALANCE X302-7 EEC (230V), SCALANCE X302-7 EEC (230V, coated), SCALANCE X302-7 EEC (24V), SCALANCE X302-7 EEC (24V, coated), SCALANCE X302-7 EEC (2x 230V), SCALANCE X302-7 EEC (2x 230V, coated), SCALANCE X302-7 EEC (2x 24V), SCALANCE X302-7 EEC (2x 24V, coated), SCALANCE X304-2FE, SCALANCE X306-1LD FE, SCALANCE X307-2 EEC (230V), SCALANCE X307-2 EEC (230V, coated), SCALANCE X307-2 EEC (24V), SCALANCE X307-2 EEC (24V, coated), SCALANCE X307-2 EEC (2x 230V), SCALANCE X307-2 EEC (2x 230V, coated), SCALANCE X307-2 EEC (2x 24V), SCALANCE X307-2 EEC (2x 24V, coated), SCALANCE X307-3, SCALANCE X307-3, SCALANCE X307-3LD, SCALANCE X307-3LD, SCALANCE X308-2, SCALANCE X308-2, SCALANCE X308-2LD, SCALANCE X308-2LD, SCALANCE X308-2LH, SCALANCE X308-2LH, SCALANCE X308-2LH+, SCALANCE X308-2LH+, SCALANCE X308-2M, SCALANCE X308-2M, SCALANCE X308-2M PoE, SCALANCE X308-2M PoE, SCALANCE X308-2M TS, SCALANCE X308-2M TS, SCALANCE X310, SCALANCE X310, SCALANCE X310FE, SCALANCE X310FE, SCALANCE X320-1 FE, SCALANCE X320-1-2LD FE, SCALANCE X408-2, SCALANCE XR324-12M (230V, ports on front), SCALANCE XR324-12M (230V, ports on front), SCALANCE XR324-12M (230V, ports on rear), SCALANCE XR324-12M (230V, ports on rear), SCALANCE XR324-12M (24V, ports on front), SCALANCE XR324-12M (24V, ports on front), SCALANCE XR324-12M (24V, ports on rear), SCALANCE XR324-12M (24V, ports on rear), SCALANCE XR324-12M TS (24V), SCALANCE XR324-12M TS (24V), SCALANCE XR324-4M EEC (100-240VAC/60-250VDC, ports on front), SCALANCE XR324-4M EEC (100-240VAC/60-250VDC, ports on front), SCALANCE XR324-4M EEC (100-240VAC/60-250VDC, ports on rear), SCALANCE XR324-4M EEC (100-240VAC/60-250VDC, ports on rear), SCALANCE XR324-4M EEC (24V, ports on front), SCALANCE XR324-4M EEC (24V, ports on front), SCALANCE XR324-4M EEC (24V, ports on rear), SCALANCE XR324-4M EEC (24V, ports on rear), SCALANCE XR324-4M EEC (2x 100-240VAC/60-250VDC, ports on front), SCALANCE XR324-4M EEC (2x 100-240VAC/60-250VDC, ports on front), SCALANCE XR324-4M EEC (2x 100-240VAC/60-250VDC, ports on rear), SCALANCE XR324-4M EEC (2x 100-240VAC/60-250VDC, ports on rear), SCALANCE XR324-4M EEC (2x 24V, ports on front), SCALANCE XR324-4M EEC (2x 24V, ports on front), SCALANCE XR324-4M EEC (2x 24V, ports on rear), SCALANCE XR324-4M EEC (2x 24V, ports on rear), SCALANCE XR324-4M PoE (230V, ports on front), SCALANCE XR324-4M PoE (230V, ports on rear), SCALANCE XR324-4M PoE (24V, ports on front), SCALANCE XR324-4M PoE (24V, ports on rear), SCALANCE XR324-4M PoE TS (24V, ports on front), SIPLUS NET SCALANCE X308-2. The webserver of an affected device is missing specific security headers. This could allow an remote attacker to extract confidential session information under certain circumstances."}, {"Reference": "CVE-2022-27822", "Description": "Information exposure vulnerability in ril property setting prior to SMR April-2022 Release 1 allows access to EF_RUIMID value without permission."}, {"Reference": "CVE-2022-36875", "Description": "Improper restriction of broadcasting Intent in SaWebViewRelayActivity of?Waterplugin prior to version 2.2.11.22081151 allows attacker to access the file without permission."}, {"Reference": "CVE-2022-47410", "Description": "An issue was discovered in the fp_newsletter (aka Newsletter subscriber management) extension before 1.1.1, 1.2.0, 2.x before 2.1.2, 2.2.1 through 2.4.0, and 3.x before 3.2.6 for TYPO3. Data about subscribers may be obtained via createAction operations."}, {"Reference": "CVE-2022-47411", "Description": "An issue was discovered in the fp_newsletter (aka Newsletter subscriber management) extension before 1.1.1, 1.2.0, 2.x before 2.1.2, 2.2.1 through 2.4.0, and 3.x before 3.2.6 for TYPO3. Data about subscribers may be obtained via unsubscribeAction operations."}, {"Reference": "CVE-2022-24309", "Description": "A vulnerability has been identified in Mendix Applications using Mendix 7 (All versions < V7.23.29), Mendix Applications using Mendix 8 (All versions < V8.18.16), Mendix Applications using Mendix 9 (All versions < V9.13 only with Runtime Custom Setting *DataStorage.UseNewQueryHandler* set to False). If an entity has an association readable by the user, then in some cases, Mendix Runtime may not apply checks for XPath constraints that parse said associations, within apps running on affected versions. A malicious user could use this to dump and manipulate sensitive data."}, {"Reference": "CVE-2021-46304", "Description": "A vulnerability has been identified in CP-8000 MASTER MODULE WITH I/O -25/+70\u00b0C (All versions), CP-8000 MASTER MODULE WITH I/O -40/+70\u00b0C (All versions), CP-8021 MASTER MODULE (All versions), CP-8022 MASTER MODULE WITH GPRS (All versions). The component allows to activate a web server module which provides unauthenticated access to its web pages. This could allow an attacker to retrieve debug-level information from the component such as internal network topology or connected systems."}, {"Reference": "CVE-2022-1716", "Description": "Keep My Notes v1.80.147 allows an attacker with physical access to the victim's device to bypass the application's password/pin lock to access user data. This is possible due to lack of adequate security controls to prevent dynamic code manipulation."}, {"Reference": "CVE-2022-44037", "Description": "An access control issue in APsystems ENERGY COMMUNICATION UNIT (ECU-C) Power Control Software V4.1NA, V3.11.4, W2.1NA, V4.1SAA, C1.2.2 allows attackers to access sensitive data and execute specific commands and functions with full admin rights without authenticating allows him to perform multiple attacks, such as attacking wireless network in the product's range."}, {"Reference": "CVE-2022-0270", "Description": "Prior to v0.6.1, bored-agent failed to sanitize incoming kubernetes impersonation headers allowing a user to override assigned user name and groups."}, {"Reference": "CVE-2022-33311", "Description": "Browse restriction bypass vulnerability in Address Book of Cybozu Office 10.0.0 to 10.8.5 allows a remote authenticated attacker to obtain the data of Address Book via unspecified vectors."}, {"Reference": "CVE-2022-38461", "Description": "Broken Access Control vulnerability in WPML Multilingual CMS premium plugin <= 4.5.10 on WordPress allows users with a subscriber or higher user role to change plugin settings (selected language for legacy widgets, the default behavior for media content)."}, {"Reference": "CVE-2021-26732", "Description": "A broken access control vulnerability in the First_network_func function of spx_restservice allows an attacker to arbitrarily change the network configuration of the BMC. This issue affects: Lanner Inc IAC-AST2500A standard firmware version 1.10.0."}, {"Reference": "CVE-2022-24595", "Description": "Automotive Grade Linux Kooky Koi 11.0.0, 11.0.1, 11.0.2, 11.0.3, 11.0.4, and 11.0.5 is affected by Incorrect Access Control in usr/bin/afb-daemon. To exploit the vulnerability, an attacker should send a well-crafted HTTP (or WebSocket) request to the socket listened by the afb-daemon process. No credentials nor user interactions are required."}, {"Reference": "CVE-2022-28165", "Description": "A vulnerability in the role-based access control (RBAC) functionality of the Brocade SANNav before 2.2.0 could allow an authenticated, remote attacker to access resources that they should not be able to access and perform actions that they should not be able to perform. The vulnerability exists because restrictions are not performed on Server side to ensure the user has required permission before processing requests."}, {"Reference": "CVE-2022-36427", "Description": "Missing Access Control vulnerability in About Rentals. Inc. About Rentals plugin <= 1.5 at WordPress."}, {"Reference": "CVE-2022-37344", "Description": "Missing Access Control vulnerability in PHP Crafts Accommodation System plugin <= 1.0.1 at WordPress."}, {"Reference": "CVE-2021-33504", "Description": "Couchbase Server before 7.1.0 has Incorrect Access Control."}, {"Reference": "CVE-2022-20777", "Description": "Multiple vulnerabilities in Cisco Enterprise NFV Infrastructure Software (NFVIS) could allow an attacker to escape from the guest virtual machine (VM) to the host machine, inject commands that execute at the root level, or leak system data from the host to the VM. For more information about these vulnerabilities, see the Details section of this advisory."}, {"Reference": "CVE-2022-21706", "Description": "Zulip is an open-source team collaboration tool with topic-based threading. Zulip Server version 2.0.0 and above are vulnerable to insufficient access control with multi-use invitations. A Zulip Server deployment which hosts multiple organizations is vulnerable to an attack where an invitation created in one organization (potentially as a role with elevated permissions) can be used to join any other organization. This bypasses any restrictions on required domains on users' email addresses, may be used to gain access to organizations which are only accessible by invitation, and may be used to gain access with elevated privileges. This issue has been patched in release 4.10. There are no known workarounds for this issue. ### Patches _Has the problem been patched? What versions should users upgrade to?_ ### Workarounds _Is there a way for users to fix or remediate the vulnerability without upgrading?_ ### References _Are there any links users can visit to find out more?_ ### For more information If you have any questions or comments about this advisory, you can discuss them on the [developer community Zulip server](https://zulip.com/developer-community/), or email the [Zulip security team](mailto:security@zulip.com)."}, {"Reference": "CVE-2022-23775", "Description": "TrueStack Direct Connect 1.4.7 has Incorrect Access Control."}, {"Reference": "CVE-2022-2512", "Description": "An issue has been discovered in GitLab CE/EE affecting all versions starting from 15.0 before 15.0.5, all versions starting from 15.1 before 15.1.4, all versions starting from 15.2 before 15.2.1. Membership changes are not reflected in TODO for confidential notes, allowing a former project members to read updates via TODOs."}, {"Reference": "CVE-2022-25402", "Description": "An incorrect access control issue in HMS v1.0 allows unauthenticated attackers to read and modify all PHP files."}, {"Reference": "CVE-2022-26572", "Description": "Xerox ColorQube 8580 was discovered to contain an access control issue which allows attackers to print, view the status, and obtain sensitive information."}, {"Reference": "CVE-2022-27128", "Description": "An incorrect access control issue at /admin/run_ajax.php in zbzcms v1.0 allows attackers to arbitrarily add administrator accounts."}, {"Reference": "CVE-2022-27511", "Description": "Corruption of the system by a remote, unauthenticated user. The impact of this can include the reset of the administrator password at the next device reboot, allowing an attacker with ssh access to connect with the default administrator credentials after the device has rebooted."}, {"Reference": "CVE-2022-28067", "Description": "An incorrect access control issue in Sandboxie Classic v5.55.13 allows attackers to cause a Denial of Service (DoS) in the Sandbox via a crafted executable."}, {"Reference": "CVE-2022-29423", "Description": "Pro Features Lock Bypass vulnerability in Countdown & Clock plugin <= 2.3.2 at WordPress."}, {"Reference": "CVE-2022-29564", "Description": "Jamf Private Access before 2022-05-16 has Incorrect Access Control, in which an unauthorized user can reach a system in the internal infrastructure, aka WND-44801."}, {"Reference": "CVE-2022-29633", "Description": "An access control issue in Linglong v1.0 allows attackers to access the background of the application via a crafted cookie."}, {"Reference": "CVE-2022-29773", "Description": "An access control issue in aleksis/core/util/auth_helpers.py: ClientProtectedResourceMixin of AlekSIS-Core v2.8.1 and below allows attackers to access arbitrary scopes if no allowed scopes are specifically set."}, {"Reference": "CVE-2022-29855", "Description": "Mitel 6800 and 6900 Series SIP phone devices through 2022-04-27 have \"undocumented functionality.\" A vulnerability in Mitel 6800 Series and 6900 Series SIP phones excluding 6970, versions 5.1 SP8 (5.1.0.8016) and earlier, and 6.0 (6.0.0.368) through 6.1 HF4 (6.1.0.165), could allow a unauthenticated attacker with physical access to the phone to gain root access due to insufficient access control for test functionality during system startup. A successful exploit could allow access to sensitive information and code execution."}, {"Reference": "CVE-2022-30290", "Description": "In OpenCTI through 5.2.4, a broken access control vulnerability has been identified in the profile endpoint. An attacker can abuse the identified vulnerability in order to arbitrarily change their registered e-mail address as well as their API key, even though such action is not possible through the interface, legitimately."}, {"Reference": "CVE-2022-31876", "Description": "netgear wnap320 router WNAP320_V2.0.3_firmware is vulnerable to Incorrect Access Control via /recreate.php, which can leak all users cookies."}, {"Reference": "CVE-2022-32945", "Description": "An access issue was addressed with additional sandbox restrictions on third-party apps. This issue is fixed in macOS Ventura 13. An app may be able to record audio with paired AirPods."}, {"Reference": "CVE-2022-33198", "Description": "Unauthenticated WordPress Options Change vulnerability in Biplob Adhikari's Accordions plugin <= 2.0.2 at WordPress."}, {"Reference": "CVE-2022-34487", "Description": "Unauthenticated Arbitrary Option Update vulnerability in biplob018's Shortcode Addons plugin <= 3.0.2 at WordPress."}, {"Reference": "CVE-2022-36387", "Description": "Broken Access Control vulnerability in Alessio Caiazza's About Me plugin <= 1.0.12 at WordPress."}, {"Reference": "CVE-2022-3740", "Description": "An issue has been discovered in GitLab CE/EE affecting all versions starting from 12.9 prior to 15.3.5, 15.4 prior to 15.4.4, and 15.5 prior to 15.5.2. A group owner may be able to bypass External Authorization check, if it is enabled, to access git repositories and package registries by using Deploy tokens or Deploy keys ."}, {"Reference": "CVE-2022-38768", "Description": "The mobile application in Transtek Mojodat FAM (Fixed Asset Management) 2.4.6 allows remote attackers to bypass authorization."}, {"Reference": "CVE-2022-39370", "Description": "GLPI stands for Gestionnaire Libre de Parc Informatique. GLPI is a Free Asset and IT Management Software package that provides ITIL Service Desk features, licenses tracking and software auditing. Connected users may gain access to debug panel through the GLPI update script. This issue has been patched, please upgrade to 10.0.4. As a workaround, delete the `install/update.php` script."}, {"Reference": "CVE-2022-40216", "Description": "Auth. (subscriber+) Messaging Block Bypass vulnerability in Better Messages plugin <= 1.9.10.69 on WordPress."}, {"Reference": "CVE-2022-44565", "Description": "An improper access validation vulnerability exists in airMAX AC <8.7.11, airFiber 60/LR <2.6.2, airFiber 60 XG/HD <v1.0.0 and airFiber GBE <1.4.1 that allows a malicious actor to retrieve status and usage data from the UISP device."}, {"Reference": "CVE-2022-45778", "Description": "https://www.hillstonenet.com.cn/ Hillstone Firewall SG-6000 <= 5.0.4.0 is vulnerable to Incorrect Access Control. There is a permission bypass vulnerability in the Hillstone WEB application firewall. An attacker can enter the background of the firewall with super administrator privileges through a configuration error in report.m."}, {"Reference": "CVE-2022-38355", "Description": "Daikin SVMPC1 version 2.1.22 and prior and SVMPC2 version 1.2.3 and prior are vulnerable to attackers with access to the local area network (LAN) to disclose sensitive information stored by the affected product without requiring authentication. "}, {"Reference": "CVE-2021-31001", "Description": "An access issue was addressed with improved access restrictions. This issue is fixed in iOS 15 and iPadOS 15. An attacker in a privileged network position may be able to leak sensitive user information."}, {"Reference": "CVE-2022-20762", "Description": "A vulnerability in the Common Execution Environment (CEE) ConfD CLI of Cisco Ultra Cloud Core - Subscriber Microservices Infrastructure (SMI) software could allow an authenticated, local attacker to escalate privileges on an affected device. This vulnerability is due to insufficient access control in the affected CLI. An attacker could exploit this vulnerability by authenticating as a CEE ConfD CLI user and executing a specific CLI command. A successful exploit could allow an attacker to access privileged containers with root privileges."}, {"Reference": "CVE-2022-20859", "Description": "A vulnerability in the Disaster Recovery framework of Cisco Unified Communications Manager (Unified CM), Cisco Unified Communications Manager IM &amp; Presence Service (Unified CM IM&amp;P), and Cisco Unity Connection could allow an authenticated, remote attacker to perform certain administrative actions they should not be able to. This vulnerability is due to insufficient access control checks on the affected device. An attacker with read-only privileges could exploit this vulnerability by executing a specific vulnerable command on an affected device. A successful exploit could allow the attacker to perform a set of administrative actions they should not be able to."}, {"Reference": "CVE-2022-2155", "Description": " A vulnerability exists in the affected versions of Lumada APM\u2019s User Asset Group feature due to a flaw in access control mechanism implementation on the \u201cLimited Engineer\u201d role, granting it access to the embedded Power BI reports feature. An attacker that manages to exploit the vulnerability on a customer\u2019s Lumada APM could access unauthorized information by gaining unauthorized access to any Power BI reports installed by the customer. Furthermore, the vulnerability enables an attacker to manipulate asset issue comments on assets, which should not be available to the attacker. Affected versions * Lumada APM on-premises version 6.0.0.0 - 6.4.0.* List of CPEs: * cpe:2.3:a:hitachienergy:lumada_apm:6.0.0.0:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:lumada_apm:6.1.0.0:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:lumada_apm:6.2.0.0:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:lumada_apm:6.3.0.0:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:lumada_apm:6.4.0.0:*:*:*:*:*:*:* "}, {"Reference": "CVE-2022-22798", "Description": "Sysaid \u2013 Pro Plus Edition, SysAid Help Desk Broken Access Control v20.4.74 b10, v22.1.20 b62, v22.1.30 b49 - An attacker needs to log in as a guest after that the system redirects him to the service portal or EndUserPortal.JSP, then he needs to change the path in the URL to /ConcurrentLogin%2ejsp after that he will receive an error message with a login button, by clicking on it, he will connect to the system dashboard. The attacker can receive sensitive data like server details, usernames, workstations, etc. He can also perform actions such as uploading files, deleting calls from the system."}, {"Reference": "CVE-2022-23730", "Description": "The public API error causes for the attacker to be able to bypass API access control."}, {"Reference": "CVE-2022-32255", "Description": "A vulnerability has been identified in SINEMA Remote Connect Server (All versions < V3.1). The affected application consists of a web service that lacks proper access control for some of the endpoints. This could lead to unauthorized access to limited information."}, {"Reference": "CVE-2022-36263", "Description": "StreamLabs Desktop Application 1.9.0 is vulnerable to Incorrect Access Control via obs64.exe. An attacker can execute arbitrary code via a crafted .exe file."}, {"Reference": "CVE-2022-36562", "Description": "Incorrect access control in the install directory (C:\\\\Ruby31-x64) of Rubyinstaller2 v3.1.2 and below allows authenticated attackers to execute arbitrary code via overwriting binaries located in the directory."}, {"Reference": "CVE-2022-36563", "Description": "Incorrect access control in the install directory (C:\\\\RailsInstaller) of Rubyinstaller2 v3.1.2 and below allows authenticated attackers to execute arbitrary code via overwriting binaries located in the directory."}, {"Reference": "CVE-2022-36564", "Description": "Incorrect access control in the install directory (C:\\\\Strawberry) of StrawberryPerl v5.32.1.1 and below allows authenticated attackers to execute arbitrary code via overwriting binaries located in the directory."}, {"Reference": "CVE-2022-36565", "Description": "Incorrect access control in the install directory (C:\\\\Wamp64) of Wamp v3.2.6 and below allows authenticated attackers to execute arbitrary code via overwriting binaries located in the directory."}, {"Reference": "CVE-2022-37172", "Description": "Incorrect access control in the install directory (C:\\\\msys64) of Msys2 v20220603 and below allows authenticated attackers to execute arbitrary code via overwriting binaries located in the directory."}, {"Reference": "CVE-2022-3780", "Description": "Database connections on deleted users could stay active on MySQL data sources in Remote Desktop Manager 2022.3.7 and below which allow deleted users to access unauthorized data. This issue affects : Remote Desktop Manager 2022.3.7 and prior versions. "}, {"Reference": "CVE-2022-0093", "Description": "An issue has been discovered affecting GitLab versions prior to 14.4.5, between 14.5.0 and 14.5.3, and between 14.6.0 and 14.6.1. GitLab allows a user with an expired password to access sensitive information through RSS feeds."}, {"Reference": "CVE-2022-20250", "Description": "In Messaging, there is a possible way to attach files to a message without proper access checks due to improper input validation. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-226134095"}]}
{"ID": "285", "Name": "Improper Authorization", "Abstraction": "Class", "Structure": "Simple", "Status": "Draft", "Description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.", "ExtendedDescription": "\n\nAssuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.\n\n\nWhen access control checks are not applied consistently - or not at all - users are able to access data or perform actions that they should not be allowed to perform. This can lead to a wide range of problems, including information exposures, denial of service, and arbitrary code execution.\n", "LikelihoodOfExploit": "High", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "284", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "284", "ViewID": "1340", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Technology", "Name": "Web Server", "Prevalence": "Often"}, {"Type": "Technology", "Name": "Database Server", "Prevalence": "Often"}], "BackgroundDetails": ["An access control list (ACL) represents who/what has permissions to a given object. Different operating systems implement (ACLs) in different ways. In UNIX, there are three types of permissions: read, write, and execute. Users are divided into three classes for file access: owner, group owner, and all other users where each class has a separate set of rights. In Windows NT, there are four basic types of permissions for files: \"No access\", \"Read access\", \"Change access\", and \"Full control\". Windows NT extends the concept of three types of users in UNIX to include a list of users and groups along with their associated permissions. A user can create an object (file) and assign specified permissions to that object."], "AlternateTerms": [{"Term": "AuthZ", "Description": "\"AuthZ\" is typically used as an abbreviation of \"authorization\" within the web application security community. It is distinct from \"AuthN\" (or, sometimes, \"AuthC\") which is an abbreviation of \"authentication.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization."}], "ModesOfIntroduction": [{"Phase": "Implementation", "Note": "\n\nREALIZATION: This weakness is caused during implementation of an architectural security tactic.\n\n\nA developer may introduce authorization weaknesses because of a lack of understanding about the underlying technologies. For example, a developer may assume that attackers cannot modify certain inputs such as headers or cookies.\n"}, {"Phase": "Architecture and Design", "Note": "\n\nAuthorization weaknesses may arise when a single-user application is ported to a multi-user environment.\n"}, {"Phase": "Operation"}], "CommonConsequences": [{"Scope": ["Confidentiality"], "Impact": ["Read Application Data", "Read Files or Directories"], "Note": "An attacker could read sensitive data, either by reading the data directly from a data store that is not properly restricted, or by accessing insufficiently-protected, privileged functionality to read the data."}, {"Scope": ["Integrity"], "Impact": ["Modify Application Data", "Modify Files or Directories"], "Note": "An attacker could modify sensitive data, either by writing the data directly to a data store that is not properly restricted, or by accessing insufficiently-protected, privileged functionality to write the data."}, {"Scope": ["Access Control"], "Impact": ["Gain Privileges or Assume Identity"], "Note": "An attacker could gain privileges by modifying or reading critical data directly, or by accessing insufficiently-protected, privileged functionality."}], "DetectionMethods": [{"DetectionMethodID": "DM-6", "Method": "Automated Static Analysis", "Description": "\n\nAutomated static analysis is useful for detecting commonly-used idioms for authorization. A tool may be able to analyze related configuration files, such as .htaccess in Apache web servers, or detect the usage of commonly-used authorization libraries.\n\n\nGenerally, automated static analysis tools have difficulty detecting custom authorization schemes. In addition, the software's design may include some functionality that is accessible to any user and does not require an authorization check; an automated technique that detects the absence of authorization may report false positives.\n", "Effectiveness": "Limited"}, {"Method": "Automated Dynamic Analysis", "Description": "Automated dynamic analysis may find many or all possible interfaces that do not require authorization, but manual analysis is required to determine if the lack of authorization violates business logic"}, {"Method": "Manual Analysis", "Description": "\n\nThis weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.\n\n\nSpecifically, manual static analysis is useful for evaluating the correctness of custom authorization mechanisms.\n", "Effectiveness": "Moderate", "EffectivenessNotes": "These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules. However, manual efforts might not achieve desired code coverage within limited time constraints."}, {"Method": "Manual Static Analysis - Binary or Bytecode", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tBinary / Bytecode disassembler - then use manual analysis for vulnerabilities & anomalies", "Effectiveness": "SOAR Partial"}, {"Method": "Dynamic Analysis with Automated Results Interpretation", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tWeb Application Scanner\n\t\tWeb Services Scanner\n\t\tDatabase Scanners", "Effectiveness": "SOAR Partial"}, {"Method": "Dynamic Analysis with Manual Results Interpretation", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tHost Application Interface Scanner\n\t\tFuzz Tester\n\t\tFramework-based Fuzzer\n\t\tForced Path Execution\n\t\tMonitored Virtual Environment - run potentially malicious code in sandbox / wrapper / virtual machine, see if it does anything suspicious", "Effectiveness": "SOAR Partial"}, {"Method": "Manual Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tFocused Manual Spotcheck - Focused manual analysis of source\n\t\tManual Source Code Review (not inspections)", "Effectiveness": "SOAR Partial"}, {"Method": "Automated Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tContext-configured Source Code Weakness Analyzer", "Effectiveness": "SOAR Partial"}, {"Method": "Architecture or Design Review", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tFormal Methods / Correct-By-Construction\n\t```\n\t\tCost effective for partial coverage:\n```\n\n\t\tInspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "\n\nDivide the product into anonymous, normal, privileged, and administrative areas. Reduce the attack surface by carefully mapping roles with data and functionality. Use role-based access control (RBAC) to enforce the roles at the appropriate boundaries.\n\n\nNote that this approach may not protect against horizontal authorization, i.e., it will not protect a user from attacking others with the same role.\n"}, {"Phase": ["Architecture and Design"], "Description": "Ensure that you perform access control checks related to your business logic. These checks may be different than the access control checks that you apply to more generic resources such as files, connections, processes, memory, and database records. For example, a database may restrict access for medical records to a specific database user, but each record might only be intended to be accessible to the patient and the patient's doctor."}, {"MitigationID": "MIT-4.4", "Phase": ["Architecture and Design"], "Strategy": "Libraries or Frameworks", "Description": "\n\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\n\n\nFor example, consider using authorization frameworks such as the JAAS Authorization Framework [REF-233] and the OWASP ESAPI Access Control feature [REF-45].\n"}, {"Phase": ["Architecture and Design"], "Description": "\n\nFor web applications, make sure that the access control mechanism is enforced correctly at the server side on every page. Users should not be able to access any unauthorized functionality or information by simply requesting direct access to that page.\n\n\nOne way to do this is to ensure that all pages containing sensitive information are not cached, and that all such pages restrict access to requests that are accompanied by an active and authenticated session token associated with a user who has the required permissions to access that page.\n"}, {"Phase": ["System Configuration", "Installation"], "Description": "Use the access control capabilities of your operating system and server environment and define your access control lists accordingly. Use a \"default deny\" policy when defining these ACLs."}], "DemonstrativeExamples": [{"ID": "DX-95", "Entries": [{"IntroText": "This function runs an arbitrary SQL query on a given database, returning the result of the query."}, {"Nature": "Bad", "Language": "PHP", "ExampleCode": "```\n\tfunction runEmployeeQuery($dbName, $name){\n\t\tmysql_select_db($dbName,$globalDbHandle) or die(\"Could not open Database\".$dbName);\n```\n//Use a prepared statement to avoid CWE-89* \n\t\t$preparedStatement = $globalDbHandle->prepare('SELECT * FROM employees WHERE name = :name');\n\t\t$preparedStatement->execute(array(':name' => $name));\n\t\treturn $preparedStatement->fetchAll();}\n\t\n\t */.../* \n\t\n\t$employeeRecord = runEmployeeQuery('EmployeeDB',$_GET['EmployeeName']);"}, {"BodyText": "While this code is careful to avoid SQL Injection, the function does not confirm the user sending the query is authorized to do so. An attacker may be able to obtain sensitive employee information from the database."}]}, {"ID": "DX-96", "Entries": [{"IntroText": "The following program could be part of a bulletin board system that allows users to send private messages to each other. This program intends to authenticate the user before deciding whether a private message should be displayed. Assume that LookupMessageObject() ensures that the $id argument is numeric, constructs a filename based on that id, and reads the message details from that file. Also assume that the program stores all private messages for all users in the same directory."}, {"Nature": "Bad", "Language": "Perl", "ExampleCode": "```\n\tsub DisplayPrivateMessage {\n\t\tmy($id) = @_;\n\t\tmy $Message = LookupMessageObject($id);\n\t\tprint \"From: \" . encodeHTML($Message->{from}) . \"<br>\\n\";\n\t\tprint \"Subject: \" . encodeHTML($Message->{subject}) . \"\\n\";\n\t\tprint \"<hr>\\n\";\n\t\tprint \"Body: \" . encodeHTML($Message->{body}) . \"\\n\";\n\t}\n\tmy $q = new CGI;\n```\n# For purposes of this example, assume that CWE-309 and* \n\t\n\t\n\t\n\t *# CWE-523 do not apply.* \n\tif (! AuthenticateUser($q->param('username'), $q->param('password'))) {\n\t```\n\t\tExitError(\"invalid username or password\");\n\t}\n\tmy $id = $q->param('id');\n\tDisplayPrivateMessage($id);\n```"}, {"BodyText": "While the program properly exits if authentication fails, it does not ensure that the message is addressed to the user. As a result, an authenticated attacker could provide any arbitrary identifier and read private messages that were intended for other users."}, {"BodyText": "One way to avoid this problem would be to ensure that the \"to\" field in the message object matches the username of the authenticated user."}]}], "ObservedExamples": [{"Reference": "CVE-2022-24730", "Description": "Go-based continuous deployment product does not check that a user has certain privileges to update or create an app, allowing adversaries to read sensitive repository information", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-24730"}, {"Reference": "CVE-2009-3168", "Description": "Web application does not restrict access to admin scripts, allowing authenticated users to reset administrative passwords.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3168"}, {"Reference": "CVE-2009-2960", "Description": "Web application does not restrict access to admin scripts, allowing authenticated users to modify passwords of other users.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2960"}, {"Reference": "CVE-2009-3597", "Description": "Web application stores database file under the web root with insufficient access control (CWE-219), allowing direct request.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3597"}, {"Reference": "CVE-2009-2282", "Description": "Terminal server does not check authorization for guest access.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2282"}, {"Reference": "CVE-2009-3230", "Description": "Database server does not use appropriate privileges for certain sensitive operations.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3230"}, {"Reference": "CVE-2009-2213", "Description": "Gateway uses default \"Allow\" configuration for its authorization settings.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2213"}, {"Reference": "CVE-2009-0034", "Description": "Chain: product does not properly interpret a configuration option for a system group, allowing users to gain privileges.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0034"}, {"Reference": "CVE-2008-6123", "Description": "Chain: SNMP product does not properly parse a configuration option for which hosts are allowed to connect, allowing unauthorized IP addresses to connect.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-6123"}, {"Reference": "CVE-2008-5027", "Description": "System monitoring software allows users to bypass authorization by creating custom forms.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5027"}, {"Reference": "CVE-2008-7109", "Description": "Chain: reliance on client-side security (CWE-602) allows attackers to bypass authorization using a custom client.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-7109"}, {"Reference": "CVE-2008-3424", "Description": "Chain: product does not properly handle wildcards in an authorization policy list, allowing unintended access.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3424"}, {"Reference": "CVE-2009-3781", "Description": "Content management system does not check access permissions for private files, allowing others to view those files.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3781"}, {"Reference": "CVE-2008-4577", "Description": "ACL-based protection mechanism treats negative access rights as if they are positive, allowing bypass of intended restrictions.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4577"}, {"Reference": "CVE-2008-6548", "Description": "Product does not check the ACL of a page accessed using an \"include\" directive, allowing attackers to read unauthorized files.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-6548"}, {"Reference": "CVE-2007-2925", "Description": "Default ACL list for a DNS server does not set certain ACLs, allowing unauthorized DNS queries.", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-2925"}, {"Reference": "CVE-2006-6679", "Description": "Product relies on the X-Forwarded-For HTTP header for authorization, allowing unintended access by spoofing the header.", "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6679"}, {"Reference": "CVE-2005-3623", "Description": "OS kernel does not check for a certain privilege before setting ACLs for files.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3623"}, {"Reference": "CVE-2005-2801", "Description": "Chain: file-system code performs an incorrect comparison (CWE-697), preventing default ACLs from being properly applied.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2801"}, {"Reference": "CVE-2001-1155", "Description": "Chain: product does not properly check the result of a reverse DNS lookup because of operator precedence (CWE-783), allowing bypass of DNS-based access restrictions.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1155"}], "RelatedAttackPatterns": ["1", "104", "127", "13", "17", "39", "402", "45", "5", "51", "59", "60", "647", "668", "76", "77", "87"], "MappingNotes": {"Usage": "Discouraged", "Rationale": "CWE-285 is high-level and lower-level CWEs can frequently be used instead. It is a level-1 Class (i.e., a child of a Pillar).", "Comments": "Look at CWE-285's children and consider mapping to CWEs such as CWE-862: Missing Authorization, CWE-863: Incorrect Authorization, CWE-732: Incorrect Permission Assignment for Critical Resource, or others.", "Reasons": ["Abstraction"], "Suggestions": [{"CweID": "862", "Comment": "Missing Authorization"}, {"CweID": "863", "Comment": "Incorrect Authorization"}, {"CweID": "732", "Comment": "Incorrect Permission Assignment for Critical Resource"}]}, "Top25Examples": [{"Reference": "CVE-2022-30757", "Description": "Improper authorization in isemtelephony prior to SMR Jul-2022 Release 1 allows attacker to obtain CID without ACCESS_FINE_LOCATION permission."}, {"Reference": "CVE-2021-28799", "Description": "An improper authorization vulnerability has been reported to affect QNAP NAS running HBS 3 (Hybrid Backup Sync. ) If exploited, the vulnerability allows remote attackers to log in to a device. This issue affects: QNAP Systems Inc. HBS 3 versions prior to v16.0.0415 on QTS 4.5.2; versions prior to v3.0.210412 on QTS 4.3.6; versions prior to v3.0.210411 on QTS 4.3.4; versions prior to v3.0.210411 on QTS 4.3.3; versions prior to v16.0.0419 on QuTS hero h4.5.1; versions prior to v16.0.0419 on QuTScloud c4.5.1~c4.5.4. This issue does not affect: QNAP Systems Inc. HBS 2 . QNAP Systems Inc. HBS 1.3 ."}, {"Reference": "CVE-2021-1675", "Description": "Windows Print Spooler Remote Code Execution Vulnerability"}, {"Reference": "CVE-2021-40013", "Description": "Improper permission control vulnerability in the Bluetooth module.Successful exploitation of this vulnerability will affect integrity."}, {"Reference": "CVE-2022-20921", "Description": "A vulnerability in the API implementation of Cisco ACI Multi-Site Orchestrator (MSO) could allow an authenticated, remote attacker to elevate privileges on an affected device. This vulnerability is due to improper authorization on specific APIs. An attacker could exploit this vulnerability by sending crafted HTTP requests. A successful exploit could allow an attacker who is authenticated with non-Administrator privileges to elevate to Administrator privileges on an affected device."}, {"Reference": "CVE-2022-24083", "Description": "Password authentication bypass vulnerability for local accounts can be used to bypass local authentication checks."}, {"Reference": "CVE-2022-26310", "Description": "Pandora FMS v7.0NG.760 and below allows an improper authorization in User Management where any authenticated user with access to the User Management module could create, modify or delete any user with full admin privilege. The impact could lead to a vertical privilege escalation to access the privileges of a higher-level user or typically an admin user."}, {"Reference": "CVE-2022-31247", "Description": "An Improper Authorization vulnerability in SUSE Rancher, allows any user who has permissions to create/edit cluster role template bindings or project role template bindings (such as cluster-owner, manage cluster members, project-owner and manage project members) to gain owner permission in another project in the same cluster or in another project on a different downstream cluster. This issue affects: SUSE Rancher Rancher versions prior to 2.6.7; Rancher versions prior to 2.5.16."}, {"Reference": "CVE-2022-33732", "Description": "Improper access control vulnerability in Samsung Dex for PC prior to SMR Aug-2022 Release 1 allows local attackers to scan and connect to PC by unprotected binder call."}, {"Reference": "CVE-2022-34256", "Description": "Adobe Commerce versions 2.4.3-p2 (and earlier), 2.3.7-p3 (and earlier) and 2.4.4 (and earlier) are affected by an Improper Authorization vulnerability that could result in Privilege escalation. An attacker could leverage this vulnerability to access other user's data. Exploitation of this issue does not require user interaction."}, {"Reference": "CVE-2022-34405", "Description": "An improper access control vulnerability was identified in the Realtek audio driver. A local authenticated malicious user may potentially exploit this vulnerability by waiting for an administrator to launch the application and attach to the process to elevate privileges on the system. "}, {"Reference": "CVE-2022-36453", "Description": "A vulnerability in the MiCollab Client API of Mitel MiCollab 9.1.3 through 9.5.0.101 could allow an authenticated attacker to modify their profile parameters due to improper authorization controls. A successful exploit could allow the authenticated attacker to control another extension number."}, {"Reference": "CVE-2022-36454", "Description": "A vulnerability in the MiCollab Client API of Mitel MiCollab through 9.5.0.101 could allow an authenticated attacker to modify their profile parameters due to improper authorization controls. A successful exploit could allow the authenticated attacker to impersonate another user's name."}, {"Reference": "CVE-2022-38375", "Description": "An improper authorization vulnerability [CWE-285] in Fortinet FortiNAC version 9.4.0 through 9.4.1 and before 9.2.6 allows an unauthenticated user to perform some administrative operations over the FortiNAC instance via crafted HTTP POST requests."}, {"Reference": "CVE-2022-39890", "Description": "Improper Authorization in Samsung Billing prior to version 5.0.56.0 allows attacker to get sensitive information."}, {"Reference": "CVE-2022-46752", "Description": " Dell BIOS contains an Improper Authorization vulnerability. An unauthenticated physical attacker may potentially exploit this vulnerability, leading to denial of service. "}, {"Reference": "CVE-2022-4701", "Description": "The Royal Elementor Addons plugin for WordPress is vulnerable to insufficient access control in the 'wpr_activate_required_plugins' AJAX action in versions up to, and including, 1.3.59. This allows any authenticated user, including those with subscriber-level permissions, to activate the 'contact-form-7', 'media-library-assistant', or 'woocommerce' plugins if they are installed on the site."}, {"Reference": "CVE-2022-4879", "Description": "A vulnerability was found in Forged Alliance Forever up to 3746. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the component Vote Handler. The manipulation leads to improper authorization. Upgrading to version 3747 is able to address this issue. The patch is named 6880971bd3d73d942384aff62d53058c206ce644. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217555."}, {"Reference": "CVE-2022-2393", "Description": "A flaw was found in pki-core, which could allow a user to get a certificate for another user identity when directory-based authentication is enabled. This flaw allows an authenticated attacker on the adjacent network to impersonate another user within the scope of the domain, but they would not be able to decrypt message content."}, {"Reference": "CVE-2022-40843", "Description": "The Tenda AC1200 V-W15Ev2 V15.11.0.10(1576) router is vulnerable to improper authorization / improper session management that allows the router login page to be bypassed. This leads to authenticated attackers having the ability to read the routers syslog.log file which contains the MD5 password of the Administrator's user account."}, {"Reference": "CVE-2021-30344", "Description": "Improper authorization of a replayed LTE security mode command can lead to a denial of service in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music, Snapdragon Wearables"}, {"Reference": "CVE-2022-0027", "Description": "An improper authorization vulnerability in Palo Alto Network Cortex XSOAR software enables authenticated users in non-Read-Only groups to generate an email report that contains summary information about all incidents in the Cortex XSOAR instance, including incidents to which the user does not have access. This issue impacts: All versions of Cortex XSOAR 6.1; All versions of Cortex XSOAR 6.2; All versions of Cortex XSOAR 6.5; Cortex XSOAR 6.6 versions earlier than Cortex XSOAR 6.6.0 build 6.6.0.2585049."}, {"Reference": "CVE-2022-2019", "Description": "A vulnerability classified as critical was found in SourceCodester Prison Management System 1.0. Affected by this vulnerability is an unknown functionality of the file /classes/Users.php?f=save of the component New User Creation. The manipulation leads to improper authorization. The attack can be launched remotely. The exploit has been disclosed to the public and may be used."}, {"Reference": "CVE-2022-22091", "Description": "Improper authorization of a replayed LTE security mode command can lead to a denial of service in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Wearables"}, {"Reference": "CVE-2022-22272", "Description": "Improper authorization in TelephonyManager prior to SMR Jan-2022 Release 1 allows attackers to get IMSI without READ_PRIVILEGED_PHONE_STATE permission"}, {"Reference": "CVE-2022-22288", "Description": "Improper authorization vulnerability in Galaxy Store prior to 4.5.36.5 allows remote app installation of the allowlist."}, {"Reference": "CVE-2022-2229", "Description": "An improper authorization issue in GitLab CE/EE affecting all versions from 13.7 prior to 14.10.5, 15.0 prior to 15.0.4, and 15.1 prior to 15.1.1 allows an attacker to extract the value of an unprotected variable they know the name of in public projects or private projects they're a member of."}, {"Reference": "CVE-2022-2244", "Description": "An improper authorization vulnerability in GitLab EE/CE affecting all versions from 14.8 prior to 14.10.5, 15.0 prior to 15.0.4, and 15.1 prior to 15.1.1, allows project memebers with reporter role to manage issues in project's error tracking feature."}, {"Reference": "CVE-2022-24002", "Description": "Improper Authorization vulnerability in Link Sharing prior to version 12.4.00.3 allows attackers to open protected activity via PreconditionActivity."}, {"Reference": "CVE-2022-25685", "Description": "Denial of service in Modem module due to improper authorization while error handling in Snapdragon Auto, Snapdragon Compute, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Wearables"}, {"Reference": "CVE-2022-2661", "Description": "Sequi PortBloque S has an improper authorization vulnerability, which may allow a low-privileged user to perform administrative functions using specifically crafted requests."}, {"Reference": "CVE-2022-26857", "Description": "Dell OpenManage Enterprise Versions 3.8.3 and prior contain an improper authorization vulnerability. A remote authenticated malicious user with low privileges may potentially exploit this vulnerability to bypass blocked functionalities and perform unauthorized actions."}, {"Reference": "CVE-2022-29490", "Description": "Improper Authorization vulnerability exists in the Workplace X WebUI of the Hitachi Energy MicroSCADA X SYS600 allows an authenticated user to execute any MicroSCADA internal scripts irrespective of the authenticated user's role. This issue affects: Hitachi Energy MicroSCADA X SYS600 version 10 to version 10.3.1. cpe:2.3:a:hitachienergy:microscada_x_sys600:10:*:*:*:*:*:*:* cpe:2.3:a:hitachienergy:microscada_x_sys600:10.1:*:*:*:*:*:*:* cpe:2.3:a:hitachienergy:microscada_x_sys600:10.1.1:*:*:*:*:*:*:* cpe:2.3:a:hitachienergy:microscada_x_sys600:10.2:*:*:*:*:*:*:* cpe:2.3:a:hitachienergy:microscada_x_sys600:10.2.1:*:*:*:*:*:*:* cpe:2.3:a:hitachienergy:microscada_x_sys600:10.3:*:*:*:*:*:*:* cpe:2.3:a:hitachienergy:microscada_x_sys600:10.3.1:*:*:*:*:*:*:*"}, {"Reference": "CVE-2022-29538", "Description": "RESI Gemini-Net Web 4.2 is affected by Improper Access Control in authorization logic. An unauthenticated user is able to access some critical resources."}, {"Reference": "CVE-2022-30715", "Description": "Improper access control vulnerability in DofViewer prior to SMR Jun-2022 Release 1 allows attackers to control floating system alert window."}, {"Reference": "CVE-2022-30730", "Description": "Improper authorization in Samsung Pass prior to 1.0.00.33 allows physical attackers to acess account list without authentication."}, {"Reference": "CVE-2022-31589", "Description": "Due to improper authorization check, business users who are using Israeli File from SHAAM program (/ATL/VQ23 transaction), are granted more than needed authorization to perform certain transaction, which may lead to users getting access to data that would otherwise be restricted."}, {"Reference": "CVE-2022-33702", "Description": "Improper authorization vulnerability in Knoxguard prior to SMR Jul-2022 Release 1 allows local attacker to disable keyguard and bypass Knoxguard lock by factory reset."}, {"Reference": "CVE-2022-35692", "Description": "Adobe Commerce versions 2.4.3-p2 (and earlier), 2.3.7-p3 (and earlier) and 2.4.4 (and earlier) are affected by an Improper Access Control vulnerability that could result in a Security feature bypass. An attacker could leverage this vulnerability to leak minor information of another user's account detials. Exploitation of this issue does not require user interaction."}, {"Reference": "CVE-2022-36848", "Description": "Improper Authorization vulnerability in setDualDARPolicyCmd prior to SMR Sep-2022 Release 1 allows local attackers to cause local permanent denial of service."}, {"Reference": "CVE-2022-36852", "Description": "Improper Authorization vulnerability in Video Editor prior to SMR Sep-2022 Release 1 allows local attacker to access internal application data."}, {"Reference": "CVE-2022-36857", "Description": "Improper Authorization vulnerability in Photo Editor prior to SMR Sep-2022 Release 1 allows physical attackers to read internal application data."}, {"Reference": "CVE-2022-36876", "Description": "Improper authorization in UPI payment in Samsung Pass prior to version 4.0.04.10 allows physical attackers to access account list without authentication."}, {"Reference": "CVE-2022-39862", "Description": "Improper authorization in Dynamic Lockscreen prior to SMR Sep-2022 Release 1 in Android R(11) and 3.3.03.66 in Android S(12) allows unauthorized use of javascript interface api."}, {"Reference": "CVE-2022-39879", "Description": "Improper authorization vulnerability in?CallBGProvider prior to SMR Nov-2022 Release 1 allows local attacker to grant permission for accessing information with phone uid."}, {"Reference": "CVE-2022-39902", "Description": "Improper authorization in Exynos baseband prior to SMR DEC-2022 Release 1 allows remote attacker to get sensitive information including IMEI via emergency call."}, {"Reference": "CVE-2022-41326", "Description": "The web conferencing component of Mitel MiCollab through 9.6.0.13 could allow an unauthenticated attacker to upload arbitrary scripts due to improper authorization controls. A successful exploit could allow remote code execution within the context of the application."}, {"Reference": "CVE-2022-45874", "Description": "Huawei Aslan Children's Watch has an improper authorization vulnerability. Successful exploit could allow the attacker to access certain file."}, {"Reference": "CVE-2022-4613", "Description": "A vulnerability was found in Click Studios Passwordstate and Passwordstate Browser Extension Chrome and classified as critical. This issue affects some unknown processing of the component Browser Extension Provisioning. The manipulation leads to improper authorization. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216275."}, {"Reference": "CVE-2022-39873", "Description": "Improper authorization vulnerability in Samsung Internet prior to version 18.0.4.14 allows physical attackers to add bookmarks in secret mode without user authentication."}, {"Reference": "CVE-2022-39883", "Description": "Improper authorization vulnerability in StorageManagerService prior to SMR Nov-2022 Release 1 allows local attacker to call privileged API."}, {"Reference": "CVE-2022-0373", "Description": "Improper access control in GitLab CE/EE versions 12.4 to 14.5.4, 14.5 to 14.6.4, and 12.6 to 14.7.1 allows project non-members to retrieve the service desk email address"}, {"Reference": "CVE-2022-0821", "Description": "Improper Authorization in GitHub repository orchardcms/orchardcore prior to 1.3.0."}, {"Reference": "CVE-2022-20680", "Description": "A vulnerability in the web-based management interface of Cisco Prime Service Catalog could allow an authenticated, remote attacker to access sensitive information on an affected device. This vulnerability is due to improper enforcement of Administrator privilege levels for low-value sensitive data. An attacker with read-only Administrator access to the web-based management interface could exploit this vulnerability by sending a malicious HTTP request to the page that contains the sensitive data. A successful exploit could allow the attacker to collect sensitive information about users of the system and orders that have been placed using the application."}, {"Reference": "CVE-2022-24842", "Description": "MinIO is a High Performance Object Storage released under GNU Affero General Public License v3.0. A security issue was found where an non-admin user is able to create service accounts for root or other admin users and then is able to assume their access policies via the generated credentials. This in turn allows the user to escalate privilege to that of the root user. This vulnerability has been resolved in pull request #14729 and is included in `RELEASE.2022-04-12T06-55-35Z`. Users unable to upgrade may workaround this issue by explicitly adding a `admin:CreateServiceAccount` deny policy, however, this, in turn, denies the user the ability to create their own service accounts as well."}, {"Reference": "CVE-2021-39892", "Description": "In all versions of GitLab CE/EE since version 12.0, a lower privileged user can import users from projects that they don't have a maintainer role on and disclose email addresses of those users."}, {"Reference": "CVE-2021-44837", "Description": "An issue was discovered in Delta RM 1.2. It is possible for an unprivileged user to access the same information as an admin user regarding the risk creation information in the /risque/administration/referentiel/json/create/categorie endpoint, using the id_cat1 query parameter to indicate the risk."}, {"Reference": "CVE-2022-41317", "Description": "An issue was discovered in Squid 4.9 through 4.17 and 5.0.6 through 5.6. Due to inconsistent handling of internal URIs, there can be Exposure of Sensitive Information about clients using the proxy via an HTTPS request to an internal cache manager URL. This is fixed in 5.7."}, {"Reference": "CVE-2022-25311", "Description": "A vulnerability has been identified in SINEC NMS (All versions >= V1.0.3 < V2.0), SINEC NMS (All versions < V1.0.3), SINEMA Server V14 (All versions). The affected software do not properly check privileges between users during the same web browser session, creating an unintended sphere of control. This could allow an authenticated low privileged user to achieve privilege escalation."}, {"Reference": "CVE-2021-44838", "Description": "An issue was discovered in Delta RM 1.2. Using the /risque/risque/ajax-details endpoint, with a POST request indicating the risk to access with the id parameter, it is possible for users to access risks of other companies."}, {"Reference": "CVE-2021-44886", "Description": "In Zammad 5.0.2, agents can configure \"out of office\" periods and substitute persons. If the substitute persons didn't have the same permissions as the original agent, they could receive ticket notifications for tickets that they have no access to."}, {"Reference": "CVE-2022-23331", "Description": "In DataEase v1.6.1, an authenticated user can gain unauthorized access to all user information and can change the administrator password."}, {"Reference": "CVE-2022-24331", "Description": "In JetBrains TeamCity before 2021.1.4, GitLab authentication impersonation was possible."}, {"Reference": "CVE-2022-2675", "Description": "Using off-the-shelf commodity hardware, the Unitree Go 1 robotics platform version H0.1.7 and H0.1.9 (using firmware version 0.1.35) can be powered down by an attacker within normal RF range without authentication. Other versions may be affected, such as the A1."}, {"Reference": "CVE-2022-34446", "Description": " PowerPath Management Appliance with versions 3.3 & 3.2* contains Authorization Bypass vulnerability. An authenticated remote user with limited privileges (e.g., of role Monitoring) can exploit this issue and gain access to sensitive information, and modify the configuration. "}, {"Reference": "CVE-2021-24881", "Description": "The Passster WordPress plugin before 3.5.5.9 does not properly check for password, as well as that the post to be viewed is public, allowing unauthenticated users to bypass the protection offered by the plugin, and access arbitrary posts (such as private) content, by sending a specifically crafted request."}, {"Reference": "CVE-2021-35530", "Description": "A vulnerability in the application authentication and authorization mechanism in Hitachi Energy's TXpert Hub CoreTec 4, that depends on a token validation of the session identifier, allows an unauthorized modified message to be executed in the server enabling an unauthorized actor to change an existing user password, and further gain authorized access into the system via login mechanism. This issue affects: Hitachi Energy TXpert Hub CoreTec 4 version 2.0.0 2.1.0; 2.1.0; 2.1.1; 2.1.2; 2.1.3; 2.2.0; 2.2.1."}, {"Reference": "CVE-2022-26051", "Description": "Operation restriction bypass vulnerability in Portal of Cybozu Garoon 4.0.0 to 5.5.1 allows a remote authenticated attacker to alter the data of Portal."}, {"Reference": "CVE-2022-26054", "Description": "Operation restriction bypass vulnerability in Link of Cybozu Garoon 4.0.0 to 5.5.1 allows a remote authenticated attacker to alter the data of Link."}, {"Reference": "CVE-2022-26368", "Description": "Browse restriction bypass and operation restriction bypass vulnerability in Cabinet of Cybozu Garoon 4.0.0 to 5.5.1 allows a remote authenticated attacker to alter and/or obtain the data of Cabinet."}, {"Reference": "CVE-2022-32544", "Description": "Operation restriction bypass vulnerability in Project of Cybozu Office 10.0.0 to 10.8.5 allows a remote authenticated attacker to alter the data of Project via unspecified vectors."}, {"Reference": "CVE-2022-32583", "Description": "Operation restriction bypass vulnerability in Scheduler of Cybozu Office 10.0.0 to 10.8.5 allows a remote authenticated attacker to alter the data of Scheduler via unspecified vectors."}, {"Reference": "CVE-2022-37190", "Description": "CuppaCMS 1.0 is vulnerable to Remote Code Execution (RCE). An authenticated user can control both parameters (action and function) from \"/api/index.php."}, {"Reference": "CVE-2022-42788", "Description": "A permissions issue existed. This issue was addressed with improved permission validation. This issue is fixed in macOS Ventura 13. A malicious application may be able to read sensitive location information."}, {"Reference": "CVE-2022-26703", "Description": "An authorization issue was addressed with improved state management. This issue is fixed in iOS 15.5 and iPadOS 15.5. A person with physical access to an iOS device may be able to access photos from the lock screen."}, {"Reference": "CVE-2022-3585", "Description": "A vulnerability classified as problematic has been found in SourceCodester Simple Cold Storage Management System 1.0. Affected is an unknown function of the file /csms/?page=contact_us of the component Contact Us. The manipulation leads to cross-site request forgery. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-211194 is the identifier assigned to this vulnerability."}, {"Reference": "CVE-2022-0172", "Description": "An issue has been discovered in GitLab CE/EE affecting all versions starting with 12.3. Under certain conditions it was possible to bypass the IP restriction for public projects through GraphQL allowing unauthorised users to read titles of issues, merge requests and milestones."}, {"Reference": "CVE-2022-1545", "Description": "It was possible to disclose details of confidential notes created via the API in Gitlab CE/EE affecting all versions from 13.2 prior to 14.8.6, 14.9 prior to 14.9.4, and 14.10 prior to 14.10.1 if an unauthorised project member was tagged in the note."}, {"Reference": "CVE-2022-21899", "Description": "Windows Extensible Firmware Interface Security Feature Bypass Vulnerability"}, {"Reference": "CVE-2022-2539", "Description": "An issue has been discovered in GitLab CE/EE affecting all versions starting from 14.6 prior to 15.0.5, 15.1 prior to 15.1.4, and 15.2 prior to 15.2.1, allowed a project member to filter issues by contact and organization."}, {"Reference": "CVE-2022-27583", "Description": "A remote unprivileged attacker can interact with the configuration interface of a Flexi-Compact FLX3-CPUC1 or FLX3-CPUC2 running an affected firmware version to potentially impact the availability of the FlexiCompact."}, {"Reference": "CVE-2022-27661", "Description": "Operation restriction bypass vulnerability in Workflow of Cybozu Garoon 4.0.0 to 5.5.1 allows a remote authenticated attacker to alter the data of Workflow."}, {"Reference": "CVE-2022-28718", "Description": "Operation restriction bypass vulnerability in Bulletin of Cybozu Garoon 4.0.0 to 5.5.1 allow a remote authenticated attacker to alter the data of Bulletin."}, {"Reference": "CVE-2022-28749", "Description": "Zooms On-Premise Meeting Connector MMR before version 4.8.113.20220526 fails to properly check the permissions of a Zoom meeting attendee. As a result, a threat actor in the Zooms waiting room can join the meeting without the consent of the host."}, {"Reference": "CVE-2022-29484", "Description": "Operation restriction bypass vulnerability in Space of Cybozu Garoon 4.0.0 to 5.9.0 allows a remote authenticated attacker to delete the data of Space."}, {"Reference": "CVE-2022-31025", "Description": "Discourse is an open source platform for community discussion. Prior to version 2.8.4 on the `stable` branch and 2.9.0beta5 on the `beta` and `tests-passed` branches, inviting users on sites that use single sign-on could bypass the `must_approve_users` check and invites by staff are always approved automatically. The issue is patched in Discourse version 2.8.4 on the `stable` branch and version `2.9.0.beta5` on the `beta` and `tests-passed` branches. As a workaround, disable invites or increase `min_trust_level_to_allow_invite` to reduce the attack surface to more trusted users."}, {"Reference": "CVE-2022-31032", "Description": "Tuleap is a Free & Open Source Suite to improve management of software developments and collaboration. In versions prior to 13.9.99.58 authorizations are not properly verified when creating projects or trackers from projects marked as templates. Users can get access to information in those template projects because the permissions model is not properly enforced. Users are advised to upgrade. There are no known workarounds for this issue."}, {"Reference": "CVE-2022-3330", "Description": "It was possible for a guest user to read a todo targeting an inaccessible note in Gitlab CE/EE affecting all versions from 15.0 prior to 15.2.5, 15.3 prior to 15.3.4, and 15.4 prior to 15.4.1."}, {"Reference": "CVE-2022-39341", "Description": "OpenFGA is an authorization/permission engine. Versions prior to version 0.2.4 are vulnerable to authorization bypass under certain conditions. Users who have wildcard (`*`) defined on tupleset relations in their authorization model are vulnerable. Version 0.2.4 contains a patch for this issue."}, {"Reference": "CVE-2022-39342", "Description": "OpenFGA is an authorization/permission engine. Versions prior to version 0.2.4 are vulnerable to authorization bypass under certain conditions. Users whose model has a relation defined as a tupleset (the right hand side of a \u2018from\u2019 statement) that involves anything other than a direct relationship (e.g. \u2018as self\u2019) are vulnerable. Version 0.2.4 contains a patch for this issue."}, {"Reference": "CVE-2022-39352", "Description": "OpenFGA is a high-performance authorization/permission engine inspired by Google Zanzibar. Versions prior to 0.2.5 are vulnerable to authorization bypass under certain conditions. You are affected by this vulnerability if you added a tuple with a wildcard (*) assigned to a tupleset relation (the right hand side of a \u2018from\u2019 statement). This issue has been patched in version v0.2.5. This update is not backward compatible with any authorization model that uses wildcard on a tupleset relation."}, {"Reference": "CVE-2022-39356", "Description": "Discourse is a platform for community discussion. Users who receive an invitation link that is not scoped to a single email address can enter any non-admin user's email and gain access to their account when accepting the invitation. All users should upgrade to the latest version. A workaround is temporarily disabling invitations with `SiteSetting.max_invites_per_day = 0` or scope them to individual email addresses."}, {"Reference": "CVE-2022-40036", "Description": "An issue was discovered in Rawchen blog-ssm v1.0 allows an attacker to obtain sensitive user information by bypassing permission checks via the /adminGetUserList component."}, {"Reference": "CVE-2022-48302", "Description": "The AMS module has a vulnerability of lacking permission verification in APIs.Successful exploitation of this vulnerability may affect data confidentiality."}, {"Reference": "CVE-2021-41564", "Description": "Tad Honor viewing book list function is vulnerable to authorization bypass, thus remote attackers can use special parameters to delete articles arbitrarily without logging in."}, {"Reference": "CVE-2022-1502", "Description": "Permissions were not properly verified in the API on projects using version control in Git. This allowed projects to be modified by users with only ProjectView permissions."}, {"Reference": "CVE-2022-21196", "Description": "MMP: All versions prior to v1.0.3, PTP C-series: Device versions prior to v2.8.6.1, and PTMP C-series and A5x: Device versions prior to v2.5.4.1 does not perform proper authorization and authentication checks on multiple API routes. An attacker may gain access to these API routes and achieve remote code execution, create a denial-of-service condition, and obtain sensitive information."}, {"Reference": "CVE-2022-30717", "Description": "Improper caller check in AR Emoji prior to SMR Jun-2022 Release 1 allows untrusted applications to use some camera functions via deeplink."}, {"Reference": "CVE-2022-31609", "Description": "NVIDIA vGPU software contains a vulnerability in the Virtual GPU Manager (vGPU plugin), where it allows the guest VM to allocate resources for which the guest is not authorized. This vulnerability may lead to loss of data integrity and confidentiality, denial of service, or information disclosure."}, {"Reference": "CVE-2022-33705", "Description": "Information exposure in Calendar prior to version 12.3.05.10000 allows attacker to access calendar schedule without READ_CALENDAR permission."}, {"Reference": "CVE-2021-25354", "Description": "Improper input check in Samsung Internet prior to version 13.2.1.46 allows attackers to launch non-exported activity in Samsung Browser via malicious deeplink."}, {"Reference": "CVE-2022-0882", "Description": "A bug exists where an attacker can read the kernel log through exposed Zircon kernel addresses without the required capability ZX_RSRC_KIND_ROOT. It is recommended to upgrade the Fuchsia kernel to 4.1.1 or greater."}, {"Reference": "CVE-2022-43410", "Description": "Jenkins Mercurial Plugin 1251.va_b_121f184902 and earlier provides information about which jobs were triggered or scheduled for polling through its webhook endpoint, including jobs the user has no permission to access."}, {"Reference": "CVE-2022-1783", "Description": "An issue has been discovered in GitLab CE/EE affecting all versions starting from 14.3 before 14.9.5, all versions starting from 14.10 before 14.10.4, all versions starting from 15.0 before 15.0.1. It may be possible for malicious group maintainers to add new members to a project within their group, through the REST API, even after their group owner enabled a setting to prevent members from being added to projects within that group."}, {"Reference": "CVE-2022-3994", "Description": "The Authenticator WordPress plugin before 1.3.1 does not prevent subscribers from updating a site's feed access token, which may deny other users access to the functionality in certain configurations."}]}
{"ID": "286", "Name": "Incorrect User Management", "Abstraction": "Class", "Structure": "Simple", "Status": "Incomplete", "Description": "The product does not properly manage a user within its environment.", "ExtendedDescription": "Users can be assigned to the wrong group (class) of permissions resulting in unintended access rights to sensitive objects.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "284", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}, {"Phase": "Operation"}], "CommonConsequences": [{"Scope": ["Other"], "Impact": ["Varies by Context"]}], "ObservedExamples": [{"Reference": "CVE-2022-36109", "Description": "Containerization product does not record a user's supplementary group ID, allowing bypass of group restrictions.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-36109"}, {"Reference": "CVE-1999-1193", "Description": "Operating system assigns user to privileged wheel group, allowing the user to gain root privileges.", "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1193"}], "MappingNotes": {"Usage": "Allowed-with-Review", "Rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate", "Comments": "Examine children of this entry to see if there is a better fit", "Reasons": ["Abstraction"]}, "Notes": [{"Type": "Maintenance", "Note": "The relationships between privileges, permissions, and actors (e.g. users and groups) need further refinement within the Research view. One complication is that these concepts apply to two different pillars, related to control of resources (CWE-664) and protection mechanism failures (CWE-693)."}, {"Type": "Maintenance", "Note": "This item needs more work. Possible sub-categories include: user in wrong group, and user with insecure profile or \"configuration\". It also might be better expressed as a category than a weakness."}], "Top25Examples": [{"Reference": "CVE-2022-32260", "Description": "A vulnerability has been identified in SINEMA Remote Connect Server (All versions < V3.2 SP1). The affected application creates temporary user credentials for UMC (User Management Component) users. An attacker could use these temporary credentials for authentication bypass in certain scenarios."}, {"Reference": "CVE-2022-45857", "Description": "An incorrect user management vulnerability [CWE-286] in the FortiManager version 6.4.6 and below VDOM creation component may allow an attacker to access a FortiGate without a password via newly created VDOMs after the super_admin account is deleted."}, {"Reference": "CVE-2021-21553", "Description": "Dell PowerScale OneFS versions 8.1.0-9.1.0 contain an Incorrect User Management vulnerability.under some specific conditions, this can allow the CompAdmin user to elevate privileges and break out of Compliance mode. This is a critical vulnerability and Dell recommends upgrading at the earliest."}, {"Reference": "CVE-2022-36109", "Description": "Moby is an open-source project created by Docker to enable software containerization. A bug was found in Moby (Docker Engine) where supplementary groups are not set up properly. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container. This bug is fixed in Moby (Docker Engine) 20.10.18. Running containers should be stopped and restarted for the permissions to be fixed. For users unable to upgrade, this problem can be worked around by not using the `\"USER $USERNAME\"` Dockerfile instruction. Instead by calling `ENTRYPOINT [\"su\", \"-\", \"user\"]` the supplementary groups will be set up properly."}]}
{"ID": "287", "Name": "Improper Authentication", "Abstraction": "Class", "Structure": "Simple", "Status": "Draft", "Diagram": "/data/images/CWE-287-Diagram.png", "Description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.", "LikelihoodOfExploit": "High", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "284", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "284", "ViewID": "1340", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "ICS/OT", "Prevalence": "Often"}], "AlternateTerms": [{"Term": "authentification", "Description": "An alternate term is \"authentification\", which appears to be most commonly used by people from non-English-speaking countries."}, {"Term": "AuthN", "Description": "\"AuthN\" is typically used as an abbreviation of \"authentication\" within the web application security community. It is also distinct from \"AuthZ,\" which is an abbreviation of \"authorization.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization."}, {"Term": "AuthC", "Description": "\"AuthC\" is used as an abbreviation of \"authentication,\" but it appears to used less frequently than \"AuthN.\""}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Integrity", "Confidentiality", "Availability", "Access Control"], "Impact": ["Read Application Data", "Gain Privileges or Assume Identity", "Execute Unauthorized Code or Commands"], "Note": "This weakness can lead to the exposure of resources or functionality to unintended actors, possibly providing attackers with sensitive information or even execute arbitrary code."}], "DetectionMethods": [{"DetectionMethodID": "DM-6", "Method": "Automated Static Analysis", "Description": "\n\nAutomated static analysis is useful for detecting certain types of authentication. A tool may be able to analyze related configuration files, such as .htaccess in Apache web servers, or detect the usage of commonly-used authentication libraries.\n\n\nGenerally, automated static analysis tools have difficulty detecting custom authentication schemes. In addition, the software's design may include some functionality that is accessible to any user and does not require an established identity; an automated technique that detects the absence of authentication may report false positives.\n", "Effectiveness": "Limited"}, {"DetectionMethodID": "DM-7", "Method": "Manual Static Analysis", "Description": "\n\nThis weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.\n\n\nManual static analysis is useful for evaluating the correctness of custom authentication mechanisms.\n", "Effectiveness": "High", "EffectivenessNotes": "These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules."}, {"Method": "Manual Static Analysis - Binary or Bytecode", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tBinary / Bytecode disassembler - then use manual analysis for vulnerabilities & anomalies", "Effectiveness": "SOAR Partial"}, {"Method": "Dynamic Analysis with Automated Results Interpretation", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tWeb Application Scanner\n\t\tWeb Services Scanner\n\t\tDatabase Scanners", "Effectiveness": "SOAR Partial"}, {"Method": "Dynamic Analysis with Manual Results Interpretation", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tFuzz Tester\n\t\tFramework-based Fuzzer", "Effectiveness": "SOAR Partial"}, {"Method": "Manual Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tManual Source Code Review (not inspections)", "Effectiveness": "SOAR Partial"}, {"Method": "Automated Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tSource code Weakness Analyzer\n\t\tContext-configured Source Code Weakness Analyzer", "Effectiveness": "SOAR Partial"}, {"Method": "Automated Static Analysis", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tConfiguration Checker", "Effectiveness": "SOAR Partial"}, {"Method": "Architecture or Design Review", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tInspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.)\n\t\tFormal Methods / Correct-By-Construction", "Effectiveness": "High"}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Strategy": "Libraries or Frameworks", "Description": "Use an authentication framework or library such as the OWASP ESAPI Authentication feature."}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "The following code intends to ensure that the user is already logged in. If not, the code performs authentication with the user-provided username and password. If successful, it sets the loggedin and user cookies to \"remember\" that the user has already logged in. Finally, the code performs administrator tasks if the logged-in user has the \"Administrator\" username, as recorded in the user cookie."}, {"Nature": "Bad", "Language": "Perl", "ExampleCode": "```\n\tmy $q = new CGI;\n\tif ($q->cookie('loggedin') ne \"true\") {\n\t\t\tif (! AuthenticateUser($q->param('username'), $q->param('password'))) {\n\t\t\t\tExitError(\"Error: you need to log in first\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\t\t# Set loggedin and user cookies.\n\t\t\t\t\t$q->cookie(\n\t\t\t\t\t\t-name => 'loggedin',\n\t\t\t\t\t\t-value => 'true'\n\t\t\t\t\t\t);\n\t\t\t\t\t$q->cookie(\n\t\t\t\t\t\t-name => 'user',\n\t\t\t\t\t\t-value => $q->param('username')\n\t\t\t\t\t\t);\n\t\t\t}\n\t}\n\tif ($q->cookie('user') eq \"Administrator\") {\n\t\tDoAdministratorTasks();\n\t}\n```"}, {"BodyText": "Unfortunately, this code can be bypassed. The attacker can set the cookies independently so that the code does not check the username and password. The attacker could do this with an HTTP request containing headers such as:"}, {"Nature": "Attack", "ExampleCode": "```\n\tGET /cgi-bin/vulnerable.cgi HTTP/1.1\n\tCookie: user=Administrator\n\tCookie: loggedin=true\n\t[body of request]\n```"}, {"BodyText": "By setting the loggedin cookie to \"true\", the attacker bypasses the entire authentication check. By using the \"Administrator\" value in the user cookie, the attacker also gains privileges to administer the software."}]}, {"ID": "DX-117", "Entries": [{"IntroText": "In January 2009, an attacker was able to gain administrator access to a Twitter server because the server did not restrict the number of login attempts [REF-236]. The attacker targeted a member of Twitter's support team and was able to successfully guess the member's password using a brute force attack by guessing a large number of common words. After gaining access as the member of the support staff, the attacker used the administrator panel to gain access to 33 accounts that belonged to celebrities and politicians. Ultimately, fake Twitter messages were sent that appeared to come from the compromised accounts."}, {"Reference": "REF-236"}]}, {"ID": "DX-153", "Entries": [{"IntroText": "In 2022, the OT:ICEFALL study examined products by 10 different Operational Technology (OT) vendors. The researchers reported 56 vulnerabilities and said that the products were \"insecure by design\" [REF-1283]. If exploited, these vulnerabilities often allowed adversaries to change how the products operated, ranging from denial of service to changing the code that the products executed. Since these products were often used in industries such as power, electrical, water, and others, there could even be safety implications."}, {"BodyText": "Multiple vendors did not use any authentication or used client-side authentication for critical functionality in their OT products."}]}], "ObservedExamples": [{"Reference": "CVE-2022-35248", "Description": "Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-35248"}, {"Reference": "CVE-2022-36436", "Description": "Python-based authentication proxy does not enforce password authentication during the initial handshake, allowing the client to bypass authentication by specifying a 'None' authentication type.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-36436"}, {"Reference": "CVE-2022-30034", "Description": "Chain: Web UI for a Python RPC framework does not use regex anchors to validate user login emails (CWE-777), potentially allowing bypass of OAuth (CWE-1390).", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30034"}, {"Reference": "CVE-2022-29951", "Description": "TCP-based protocol in Programmable Logic Controller (PLC) has no authentication.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29951"}, {"Reference": "CVE-2022-29952", "Description": "Condition Monitor uses a protocol that does not require authentication.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29952"}, {"Reference": "CVE-2022-30313", "Description": "Safety Instrumented System uses proprietary TCP protocols with no authentication.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30313"}, {"Reference": "CVE-2022-30317", "Description": "Distributed Control System (DCS) uses a protocol that has no authentication.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30317"}, {"Reference": "CVE-2022-33139", "Description": "SCADA system only uses client-side authentication, allowing adversaries to impersonate other users.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-33139"}, {"Reference": "CVE-2021-3116", "Description": "Chain: Python-based HTTP Proxy server uses the wrong boolean operators (CWE-480) causing an incorrect comparison (CWE-697) that identifies an authN failure if all three conditions are met instead of only one, allowing bypass of the proxy authentication (CWE-1390)", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-3116"}, {"Reference": "CVE-2021-21972", "Description": "Chain: Cloud computing virtualization platform does not require authentication for upload of a tar format file (CWE-306), then uses .. path traversal sequences (CWE-23) in the file to access unexpected files, as exploited in the wild per CISA KEV.", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-21972"}, {"Reference": "CVE-2021-37415", "Description": "IT management product does not perform authentication for some REST API requests, as exploited in the wild per CISA KEV.", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-37415"}, {"Reference": "CVE-2021-35033", "Description": "Firmware for a WiFi router uses a hard-coded password for a BusyBox shell, allowing bypass of authentication through the UART port", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-35033"}, {"Reference": "CVE-2020-10263", "Description": "Bluetooth speaker does not require authentication for the debug functionality on the UART port, allowing root shell access", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-10263"}, {"Reference": "CVE-2020-13927", "Description": "Default setting in workflow management product allows all API requests without authentication, as exploited in the wild per CISA KEV.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-13927"}, {"Reference": "CVE-2021-35395", "Description": "Stack-based buffer overflows in SFK for wifi chipset used for IoT/embedded devices, as exploited in the wild per CISA KEV.", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-35395"}, {"Reference": "CVE-2021-34523", "Description": "Mail server does not properly check an access token before executing a Powershell command, as exploited in the wild per CISA KEV.", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-34523"}, {"Reference": "CVE-2020-12812", "Description": "Chain: user is not prompted for a second authentication factor (CWE-287) when changing the case of their username (CWE-178), as exploited in the wild per CISA KEV.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-12812"}, {"Reference": "CVE-2020-10148", "Description": "Authentication bypass by appending specific parameters and values to a URI, as exploited in the wild per CISA KEV.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-10148"}, {"Reference": "CVE-2020-0688", "Description": "Mail server does not generate a unique key during installation, as exploited in the wild per CISA KEV.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-0688"}, {"Reference": "CVE-2017-14623", "Description": "LDAP Go package allows authentication bypass using an empty password, causing an unauthenticated LDAP bind", "Link": "https://www.cve.org/CVERecord?id=CVE-2017-14623"}, {"Reference": "CVE-2009-3421", "Description": "login script for guestbook allows bypassing authentication by setting a \"login_ok\" parameter to 1.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3421"}, {"Reference": "CVE-2009-2382", "Description": "admin script allows authentication bypass by setting a cookie value to \"LOGGEDIN\".", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2382"}, {"Reference": "CVE-2009-1048", "Description": "VOIP product allows authentication bypass using 127.0.0.1 in the Host header.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1048"}, {"Reference": "CVE-2009-2213", "Description": "product uses default \"Allow\" action, instead of default deny, leading to authentication bypass.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2213"}, {"Reference": "CVE-2009-2168", "Description": "chain: redirect without exit (CWE-698) leads to resultant authentication bypass.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2168"}, {"Reference": "CVE-2009-3107", "Description": "product does not restrict access to a listening port for a critical service, allowing authentication to be bypassed.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3107"}, {"Reference": "CVE-2009-1596", "Description": "product does not properly implement a security-related configuration setting, allowing authentication bypass.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1596"}, {"Reference": "CVE-2009-2422", "Description": "authentication routine returns \"nil\" instead of \"false\" in some situations, allowing authentication bypass using an invalid username.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2422"}, {"Reference": "CVE-2009-3232", "Description": "authentication update script does not properly handle when admin does not select any authentication modules, allowing authentication bypass.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3232"}, {"Reference": "CVE-2009-3231", "Description": "use of LDAP authentication with anonymous binds causes empty password to result in successful authentication", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3231"}, {"Reference": "CVE-2005-3435", "Description": "product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3435"}, {"Reference": "CVE-2005-0408", "Description": "chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0408"}], "FunctionalAreas": ["Authentication"], "RelatedAttackPatterns": ["114", "115", "151", "194", "22", "57", "593", "633", "650", "94"], "MappingNotes": {"Usage": "Discouraged", "Rationale": "This CWE entry might be misused when lower-level CWE entries are likely to be applicable. It is a level-1 Class (i.e., a child of a Pillar).", "Comments": "Consider children or descendants, beginning with CWE-1390: Weak Authentication or CWE-306: Missing Authentication for Critical Function.", "Reasons": ["Frequent Misuse"], "Suggestions": [{"CweID": "1390", "Comment": "Weak Authentication"}, {"CweID": "306", "Comment": "Missing Authentication for Critical Function"}]}, "Notes": [{"Type": "Relationship", "Note": "This can be resultant from SQL injection vulnerabilities and other issues."}, {"Type": "Maintenance", "Note": "The Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are still under review and might change in future CWE versions. These draft mappings were performed by members of the \"Mapping CWE to 62443\" subgroup of the CWE-CAPEC ICS/OT Special Interest Group (SIG), and their work is incomplete as of CWE 4.10. The mappings are included to facilitate discussion and review by the broader ICS/OT community, and they are likely to change in future CWE versions."}], "Top25Examples": [{"Reference": "CVE-2022-33242", "Description": "Memory corruption due to improper authentication in Qualcomm IPC while loading unsigned lib in audio PD."}, {"Reference": "CVE-2022-39267", "Description": "Bifrost is a heterogeneous middleware that synchronizes MySQL, MariaDB to Redis, MongoDB, ClickHouse, MySQL and other services for production environments. Versions prior to 1.8.8-release are subject to authentication bypass in the admin and monitor user groups by deleting the X-Requested-With: XMLHttpRequest field in the request header. This issue has been patched in 1.8.8-release. There are no known workarounds."}, {"Reference": "CVE-2022-39219", "Description": "Bifrost is a middleware package which can synchronize MySQL/MariaDB binlog data to other types of databases. Versions 1.8.6-release and prior are vulnerable to authentication bypass when using HTTP basic authentication. This may allow group members who only have read permissions to write requests when they are normally forbidden from doing so. Version 1.8.7-release contains a patch. There are currently no known workarounds."}, {"Reference": "CVE-2022-30755", "Description": "Improper authentication vulnerability in AppLock prior to SMR Jul-2022 Release 1 allows attacker to bypass password confirm activity by hijacking the implicit intent."}, {"Reference": "CVE-2021-33766", "Description": "Microsoft Exchange Server Information Disclosure Vulnerability"}, {"Reference": "CVE-2021-34523", "Description": "Microsoft Exchange Server Elevation of Privilege Vulnerability"}, {"Reference": "CVE-2022-22289", "Description": "Improper access control vulnerability in S Assistant prior to version 7.5 allows attacker to remotely get senstive information."}, {"Reference": "CVE-2022-25825", "Description": "Improper access control vulnerability in Samsung Account prior to version 13.1.0.1 allows attackers to access to the authcode for sign-in."}, {"Reference": "CVE-2022-28713", "Description": "Improper authentication vulnerability in Scheduler of Cybozu Garoon 4.10.0 to 5.5.1 allows a remote attacker to obtain some data of Facility Information without logging in to the product."}, {"Reference": "CVE-2022-30749", "Description": "Improper access control vulnerability in Smart Things prior to 1.7.85.25 allows local attackers to add arbitrary smart devices by bypassing login activity."}, {"Reference": "CVE-2022-33720", "Description": "Improper authentication vulnerability in AppLock prior to SMR Aug-2022 Release 1 allows physical attacker to access Chrome locked by AppLock via new tap shortcut."}, {"Reference": "CVE-2022-39892", "Description": "Improper access control in Samsung Pass prior to version 4.0.05.1 allows attackers to unauthenticated access via keep open feature."}, {"Reference": "CVE-2022-2031", "Description": "A flaw was found in Samba. The security vulnerability occurs when KDC and the kpasswd service share a single account and set of keys, allowing them to decrypt each other's tickets. A user who has been requested to change their password, can exploit this flaw to obtain and use tickets to other services."}, {"Reference": "CVE-2022-23555", "Description": "authentik is an open-source Identity Provider focused on flexibility and versatility. Versions prior to 2022.11.4 and 2022.10.4 are vulnerable to Improper Authentication. Token reuse in invitation URLs leads to access control bypass via the use of a different enrollment flow than in the one provided. The vulnerability allows an attacker that knows different invitation flows names (e.g. `enrollment-invitation-test` and `enrollment-invitation-admin`) via either different invite links or via brute forcing to signup via a single invitation url for any valid invite link received (it can even be a url for a third flow as long as it's a valid invite) as the token used in the `Invitations` section of the Admin interface does NOT change when a different `enrollment flow` is selected via the interface and it is NOT bound to the selected flow, so it will be valid for any flow when used. This issue is patched in authentik 2022.11.4,2022.10.4 and 2022.12.0. Only configurations that use invitations and have multiple enrollment flows with invitation stages that grant different permissions are affected. The default configuration is not vulnerable, and neither are configurations with a single enrollment flow. As a workaround, fixed data can be added to invitations which can be checked in the flow to deny requests. Alternatively, an identifier with high entropy (like a UUID) can be used as flow slug, mitigating the attack vector by exponentially decreasing the possibility of discovering other flows."}, {"Reference": "CVE-2022-25652", "Description": "Cryptographic issues in BSP due to improper hash verification in Snapdragon Wired Infrastructure and Networking"}, {"Reference": "CVE-2022-29838", "Description": "Improper Authentication vulnerability in the encrypted volumes and auto mount features of Western Digital My Cloud devices allows insecure direct access to the drive information in the case of a device reset. This issue affects: Western Digital My Cloud My Cloud versions prior to 5.25.124 on Linux."}, {"Reference": "CVE-2022-31122", "Description": "Wire is an encrypted communication and collaboration platform. Versions prior to 2022-07-12/Chart 4.19.0 are subject to Token Recipient Confusion. If an attacker has certain details of SAML IdP metadata, and configures their own SAML on the same backend, the attacker can delete all SAML authenticated accounts of a targeted team, Authenticate as a user of the attacked team and create arbitrary accounts in the context of the team if it is not managed by SCIM. This issue is fixed in wire-server 2022-07-12 and is already deployed on all Wire managed services. On-premise instances of wire-server need to be updated to 2022-07-12/Chart 4.19.0, so that their backends are no longer affected. As a workaround, the risk of an attack can be reduced by disabling SAML configuration for teams (galley.config.settings.featureFlags.sso). Helm overrides are located in `values/wire-server/values.yaml` Note that the ability to configure SAML SSO as a team is disabled by default for on-premise installations."}, {"Reference": "CVE-2022-39901", "Description": "Improper authentication in Exynos baseband prior to SMR DEC-2022 Release 1 allows remote attacker to disable the network traffic encryption between UE and gNodeB."}, {"Reference": "CVE-2022-36960", "Description": "SolarWinds Platform was susceptible to Improper Input Validation. This vulnerability allows a remote adversary with valid access to SolarWinds Web Console to escalate user privileges. "}, {"Reference": "CVE-2021-44676", "Description": "Zoho ManageEngine Access Manager Plus before 4203 allows anyone to view a few data elements (e.g., access control details) and modify a few aspects of the application state."}, {"Reference": "CVE-2022-30150", "Description": "Windows Defender Remote Credential Guard Elevation of Privilege Vulnerability"}, {"Reference": "CVE-2021-4230", "Description": "A vulnerability has been found in Airfield Online and classified as problematic. This vulnerability affects the path /backups/ of the MySQL backup handler. An attacker is able to get access to sensitive data without proper authentication. It is recommended to the change the configuration settings."}, {"Reference": "CVE-2022-0342", "Description": "An authentication bypass vulnerability in the CGI program of Zyxel USG/ZyWALL series firmware versions 4.20 through 4.70, USG FLEX series firmware versions 4.50 through 5.20, ATP series firmware versions 4.32 through 5.20, VPN series firmware versions 4.30 through 5.20, and NSG series firmware versions V1.20 through V1.33 Patch 4, which could allow an attacker to bypass the web authentication and obtain administrative access of the device."}, {"Reference": "CVE-2022-0730", "Description": "Under certain ldap conditions, Cacti authentication can be bypassed with certain credential types."}, {"Reference": "CVE-2022-1084", "Description": "A vulnerability classified as critical was found in SourceCodester One Church Management System 1.0. Affected by this vulnerability is an unknown functionality of the file /one_church/userregister.php. The manipulation leads to authentication bypass. The attack can be launched remotely."}, {"Reference": "CVE-2022-1101", "Description": "A vulnerability was found in SourceCodester Royale Event Management System 1.0. It has been rated as critical. This issue affects some unknown processing of the file /royal_event/userregister.php. The manipulation leads to improper authentication. The attack may be initiated remotely. The identifier VDB-195785 was assigned to this vulnerability."}, {"Reference": "CVE-2022-20798", "Description": "A vulnerability in the external authentication functionality of Cisco Secure Email and Web Manager, formerly known as Cisco Security Management Appliance (SMA), and Cisco Email Security Appliance (ESA) could allow an unauthenticated, remote attacker to bypass authentication and log in to the web management interface of an affected device. This vulnerability is due to improper authentication checks when an affected device uses Lightweight Directory Access Protocol (LDAP) for external authentication. An attacker could exploit this vulnerability by entering a specific input on the login page of the affected device. A successful exploit could allow the attacker to gain unauthorized access to the web-based management interface of the affected device."}, {"Reference": "CVE-2022-21692", "Description": "OnionShare is an open source tool that lets you securely and anonymously share files, host websites, and chat with friends using the Tor network. In affected versions anyone with access to the chat environment can write messages disguised as another chat participant."}, {"Reference": "CVE-2022-21695", "Description": "OnionShare is an open source tool that lets you securely and anonymously share files, host websites, and chat with friends using the Tor network. In affected versions authenticated users (or unauthenticated in public mode) can send messages without being visible in the list of chat participants. This issue has been resolved in version 2.5."}, {"Reference": "CVE-2022-21794", "Description": "Improper authentication in BIOS firmware for some Intel(R) NUC Boards, Intel(R) NUC Business, Intel(R) NUC Enthusiast, Intel(R) NUC Kits before version HN0067 may allow a privileged user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-21936", "Description": "On Metasys ADX Server version 12.0 running MVE, an Active Directory user could execute validated actions without providing a valid password when using MVE SMP UI."}, {"Reference": "CVE-2022-2197", "Description": "By using a specific credential string, an attacker with network access to the device\u2019s web interface could circumvent the authentication scheme and perform administrative operations."}, {"Reference": "CVE-2022-22237", "Description": "An Improper Authentication vulnerability in the kernel of Juniper Networks Junos OS allows an unauthenticated, network-based attacker to cause an impact on confidentiality or integrity. A vulnerability in the processing of TCP-AO will allow a BGP or LDP peer not configured with authentication to establish a session even if the peer is locally configured to use authentication. This could lead to untrusted or unauthorized sessions being established. This issue affects Juniper Networks Junos OS: 21.2 versions prior to 21.2R3-S1; 21.3 versions prior to 21.3R2-S2, 21.3R3; 21.4 versions prior to 21.4R2-S1, 21.4R3; 22.1 versions prior to 22.1R1-S1, 22.1R2. This issue does not affect Juniper Networks Junos OS Evolved."}, {"Reference": "CVE-2022-22259", "Description": "There is an improper authentication vulnerability in FLMG-10 10.0.1.0(H100SP22C00). Successful exploitation of this vulnerability may lead to a control of the victim device."}, {"Reference": "CVE-2022-22284", "Description": "Improper authentication vulnerability in Samsung Internet prior to 16.0.2.19 allows attackers to bypass secret mode password authentication"}, {"Reference": "CVE-2022-22523", "Description": "An improper authentication vulnerability exists in the Carlo Gavazzi UWP3.0 in multiple versions and CPY Car Park Server in Version 2.8.3 Web-App which allows an authentication bypass to the context of an unauthorised user if free-access is disabled."}, {"Reference": "CVE-2022-22656", "Description": "An authentication issue was addressed with improved state management. This issue is fixed in macOS Big Sur 11.6.5, macOS Monterey 12.3, Security Update 2022-003 Catalina. A local attacker may be able to view the previous logged in user\u2019s desktop from the fast user switching screen."}, {"Reference": "CVE-2022-22730", "Description": "Improper authentication in the Intel(R) Edge Insights for Industrial software before version 2.6.1 may allow an unauthenticated user to potentially enable escalation of privilege via network access."}, {"Reference": "CVE-2022-22990", "Description": "A limited authentication bypass vulnerability was discovered that could allow an attacker to achieve remote code execution and escalate privileges on the My Cloud devices. Addressed this vulnerability by changing access token validation logic and rewriting rule logic on PHP scripts."}, {"Reference": "CVE-2022-23156", "Description": "Wyse Device Agent version 14.6.1.4 and below contain an Improper Authentication vulnerability. A malicious user could potentially exploit this vulnerability by providing invalid input in order to obtain a connection to WMS server."}, {"Reference": "CVE-2022-23769", "Description": "Remote code execution vulnerability due to insufficient user privilege verification in reverseWall-MDS. Remote attackers can exploit the vulnerability such as stealing account, through remote code execution."}, {"Reference": "CVE-2022-23795", "Description": "An issue was discovered in Joomla! 2.5.0 through 3.10.6 & 4.0.0 through 4.1.0. A user row was not bound to a specific authentication mechanism which could under very special circumstances allow an account takeover."}, {"Reference": "CVE-2022-23807", "Description": "An issue was discovered in phpMyAdmin 4.9 before 4.9.8 and 5.1 before 5.1.2. A valid user who is already authenticated to phpMyAdmin can manipulate their account to bypass two-factor authentication for future login instances."}, {"Reference": "CVE-2022-24422", "Description": "Dell iDRAC9 versions 5.00.00.00 and later but prior to 5.10.10.00, contain an improper authentication vulnerability. A remote unauthenticated attacker may potentially exploit this vulnerability to gain access to the VNC Console."}, {"Reference": "CVE-2022-24740", "Description": "Volto is a ReactJS-based frontend for the Plone Content Management System. Between versions 14.0.0-alpha.5 and 15.0.0-alpha.0, a user could have their authentication cookie replaced with an authentication cookie from another user, effectively giving them control of the other user's account and privileges. This occurs when using an outdated version of the `react-cookie` library and a server is under high load. A proof of concept does not currently exist, but it is possible for this issue to occur in the wild. The patch and fix is present in Volto 15.0.0-alpha.0. As a workaround, one may manually upgrade the `react-cookie` package to 4.1.1 and then override all Volto components that use this library."}, {"Reference": "CVE-2022-25667", "Description": "Information disclosure in kernel due to improper handling of ICMP requests in Snapdragon Wired Infrastructure and Networking"}, {"Reference": "CVE-2022-25816", "Description": "Improper authentication in Samsung Lock and mask apps setting prior to SMR Mar-2022 Release 1 allows attacker to change enable/disable without authentication"}, {"Reference": "CVE-2022-25832", "Description": "Improper authentication vulnerability in S Secure prior to SMR Apr-2022 Release 1 allows physical attackers to use locked Myfiles app without authentication."}, {"Reference": "CVE-2022-25833", "Description": "Improper authentication in ImsService prior to SMR Apr-2022 Release 1 allows attackers to get IMSI without READ_PRIVILEGED_PHONE_STATE permission."}, {"Reference": "CVE-2022-26034", "Description": "Improper authentication vulnerability in the communication protocol provided by AD (Automation Design) server of CENTUM VP R6.01.10 to R6.09.00, CENTUM VP Small R6.01.10 to R6.09.00, CENTUM VP Basic R6.01.10 to R6.09.00, and B/M9000 VP R8.01.01 to R8.03.01 allows an attacker to use the functions provided by AD server. This may lead to leakage or tampering of data managed by AD server."}, {"Reference": "CVE-2022-26508", "Description": "Improper authentication in the Intel(R) SDP Tool before version 3.0.0 may allow an unauthenticated user to potentially enable information disclosure via network access."}, {"Reference": "CVE-2022-2662", "Description": "Sequi PortBloque S has a improper authentication issues which may allow an attacker to bypass the authentication process and gain user-level access to the device."}, {"Reference": "CVE-2022-2664", "Description": "A vulnerability classified as critical has been found in Private Cloud Management Platform. Affected is an unknown function of the file /management/api/rcx_management/global_config_query of the component POST Request Handler. The manipulation leads to improper authentication. It is possible to launch the attack remotely. VDB-205614 is the identifier assigned to this vulnerability."}, {"Reference": "CVE-2022-26724", "Description": "An authentication issue was addressed with improved state management. This issue is fixed in tvOS 15.5. A local user may be able to enable iCloud Photos without authentication."}, {"Reference": "CVE-2022-26845", "Description": "Improper authentication in firmware for Intel(R) AMT before versions 11.8.93, 11.22.93, 11.12.93, 12.0.92, 14.1.67, 15.0.42, 16.1.25 may allow an unauthenticated user to potentially enable escalation of privilege via network access."}, {"Reference": "CVE-2022-3156", "Description": "A remote code execution vulnerability exists in Rockwell Automation Studio 5000 Logix Emulate software. Users are granted elevated permissions on certain product services when the software is installed. Due to this misconfiguration, a malicious user could potentially achieve remote code execution on the targeted software. "}, {"Reference": "CVE-2022-3173", "Description": "Improper Authentication in GitHub repository snipe/snipe-it prior to 6.0.10."}, {"Reference": "CVE-2022-32514", "Description": "A CWE-287: Improper Authentication vulnerability exists that could allow an attacker to gain control of the device when logging into a web page. Affected Products: C-Bus Network Automation Controller - LSS5500NAC (Versions prior to V1.10.0), Wiser for C-Bus Automation Controller - LSS5500SHAC (Versions prior to V1.10.0), Clipsal C-Bus Network Automation Controller - 5500NAC (Versions prior to V1.10.0), Clipsal Wiser for C-Bus Automation Controller - 5500SHAC (Versions prior to V1.10.0), SpaceLogic C-Bus Network Automation Controller - 5500NAC2 (Versions prior to V1.10.0), SpaceLogic C-Bus Application Controller - 5500AC2 (Versions prior to V1.10.0)"}, {"Reference": "CVE-2022-32570", "Description": "Improper authentication in the Intel(R) Quartus Prime Pro and Standard edition software may allow an authenticated user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-32971", "Description": "Improper authentication in the Intel(R) SUR software before version 2.4.8902 may allow a privileged user to potentially enable escalation of privilege via network access."}, {"Reference": "CVE-2022-33750", "Description": "CA Automic Automation 12.2 and 12.3 contain an authentication error vulnerability in the Automic agent that could allow a remote attacker to potentially execute arbitrary commands."}, {"Reference": "CVE-2022-33946", "Description": "Improper authentication in the Intel(R) SUR software before version 2.4.8902 may allow an authenticated user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-34331", "Description": "After performing a sequence of Power FW950, FW1010 maintenance operations a SRIOV network adapter can be improperly configured leading to desired VEPA configuration being disabled. IBM X-Force ID: 229695."}, {"Reference": "CVE-2022-34379", "Description": "Dell EMC CloudLink 7.1.2 and all prior versions contain an Authentication Bypass Vulnerability. A remote attacker, with the knowledge of the active directory usernames, could potentially exploit this vulnerability to gain unauthorized access to the system."}, {"Reference": "CVE-2022-35646", "Description": " IBM Security Verify Governance, Identity Manager 10.0.1 software component could allow an authenticated user to modify or cancel any other user's access request using man-in-the-middle techniques. IBM X-Force ID: 231096. "}, {"Reference": "CVE-2022-36370", "Description": "Improper authentication in BIOS firmware for some Intel(R) NUC Boards and Intel(R) NUC Kits before version MYi30060 may allow a privileged user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-37345", "Description": "Improper authentication in BIOS firmware[A1] for some Intel(R) NUC Kits before version RY0386 may allow an authenticated user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-37931", "Description": "A vulnerability in NetBatch-Plus software allows unauthorized access to the application. HPE has provided a workaround and fix. Please refer to HPE Security Bulletin HPESBNS04388 for details. "}, {"Reference": "CVE-2022-38119", "Description": "UPSMON Pro login function has insufficient authentication. An unauthenticated remote attacker can exploit this vulnerability to bypass authentication and get administrator privilege to access, control system or disrupt service."}, {"Reference": "CVE-2022-38368", "Description": "An issue was discovered in Aviatrix Gateway before 6.6.5712 and 6.7.x before 6.7.1376. Because Gateway API functions mishandle authentication, an authenticated VPN user can inject arbitrary commands."}, {"Reference": "CVE-2022-38744", "Description": " An unauthenticated attacker with network access to a victim's Rockwell Automation FactoryTalk Alarm and Events service could open a connection, causing the service to fault and become unavailable. The affected port could be used as a server ping port and uses messages structured with XML. "}, {"Reference": "CVE-2022-39038", "Description": "Agentflow BPM enterprise management system has improper authentication. A remote attacker with general user privilege can change the name of the user account to acquire arbitrary account privilege, and access, manipulate system or disrupt service."}, {"Reference": "CVE-2022-39042", "Description": "aEnrich a+HRD has improper validation for login function. An unauthenticated remote attacker can exploit this vulnerability to bypass authentication and access API function to perform arbitrary system command or disrupt service."}, {"Reference": "CVE-2022-39801", "Description": "SAP GRC Access control Emergency Access Management allows an authenticated attacker to access a Firefighter session even after it is closed in Firefighter Logon Pad. This attack can be launched only within the firewall. On successful exploitation the attacker can gain access to admin session and completely compromise the application."}, {"Reference": "CVE-2022-39899", "Description": "Improper authentication vulnerability in Samsung WindowManagerService prior to SMR Dec-2022 Release 1 allows attacker to send the input event using S Pen gesture."}, {"Reference": "CVE-2022-40144", "Description": "A vulnerability in Trend Micro Apex One and Trend Micro Apex One as a Service could allow an attacker to bypass the product's login authentication by falsifying request parameters on affected installations."}, {"Reference": "CVE-2022-41579", "Description": "There is an insufficient authentication vulnerability in some Huawei band products. Successful exploit could allow the attacker to spoof then connect to the band."}, {"Reference": "CVE-2022-41590", "Description": "Some smartphones have authentication-related (including session management) vulnerabilities as the setup wizard is bypassed. Successful exploitation of this vulnerability affects the smartphone availability."}, {"Reference": "CVE-2022-41648", "Description": "The HEIDENHAIN Controller TNC 640, version 340590 07 SP5, running HEROS 5.08.3 controlling the HARTFORD 5A-65E CNC machine is vulnerable to improper authentication, which may allow an attacker to deny service to the production line, steal sensitive data from the production line, and alter any products created by the production line."}, {"Reference": "CVE-2022-42463", "Description": "OpenHarmony-v3.1.2 and prior versions have an authenication bypass vulnerability in a callback handler function of Softbus_server in communication subsystem. Attackers can launch attacks on distributed networks by sending Bluetooth rfcomm packets to any remote device and executing arbitrary commands."}, {"Reference": "CVE-2021-24881", "Description": "The Passster WordPress plugin before 3.5.5.9 does not properly check for password, as well as that the post to be viewed is public, allowing unauthenticated users to bypass the protection offered by the plugin, and access arbitrary posts (such as private) content, by sending a specifically crafted request."}, {"Reference": "CVE-2021-26638", "Description": "Improper Authentication vulnerability in S&D smarthome(smartcare) application can cause authentication bypass and information exposure. Remote attackers can use this vulerability to take control of the home environment including indoor control."}, {"Reference": "CVE-2021-33076", "Description": "Improper authentication in firmware for some Intel(R) SSD DC Products may allow an unauthenticated user to potentially enable escalation of privilege via physical access."}, {"Reference": "CVE-2021-33159", "Description": "Improper authentication in subsystem for Intel(R) AMT before versions 11.8.93, 11.22.93, 11.12.93, 12.0.92, 14.1.67, 15.0.42, 16.1.25 may allow a privileged user to potentially enable escalation of privilege via local access."}, {"Reference": "CVE-2022-43504", "Description": "Improper authentication vulnerability in WordPress versions prior to 6.0.3 allows a remote unauthenticated attacker to obtain the email address of the user who posted a blog using the WordPress Post by Email Feature. The developer also provides new patched releases for all versions since 3.7."}, {"Reference": "CVE-2022-43549", "Description": "Improper authentication in Veeam Backup for Google Cloud v1.0 and v3.0 allows attackers to bypass authentication mechanisms."}, {"Reference": "CVE-2022-43900", "Description": " IBM WebSphere Automation for IBM Cloud Pak for Watson AIOps 1.4.2 could provide a weaker than expected security. A local attacker can create an outbound network connection to another system. IBM X-Force ID: 240827. "}, {"Reference": "CVE-2022-44574", "Description": "An improper authentication vulnerability exists in Avalanche version 6.3.x and below allows unauthenticated attacker to modify properties on specific port."}, {"Reference": "CVE-2022-44620", "Description": "Improper authentication vulnerability in UDR-JA1604/UDR-JA1608/UDR-JA1616 firmware versions 71x10.1.107112.43A and earlier allows a remote authenticated attacker to execute an arbitrary OS command on the device or alter the device settings."}, {"Reference": "CVE-2022-46172", "Description": "authentik is an open-source Identity provider focused on flexibility and versatility. In versions prior to 2022.10.4, and 2022.11.4, any authenticated user can create an arbitrary number of accounts through the default flows. This would circumvent any policy in a situation where it is undesirable for users to create new accounts by themselves. This may also affect other applications as these new basic accounts would exist throughout the SSO infrastructure. By default the newly created accounts cannot be logged into as no password reset exists by default. However password resets are likely to be enabled by most installations. This vulnerability pertains to the user context used in the default-user-settings-flow, /api/v3/flows/instances/default-user-settings-flow/execute/. This issue has been fixed in versions 2022.10.4 and 2022.11.4."}, {"Reference": "CVE-2022-46313", "Description": "The sensor privacy module has an authentication vulnerability. Successful exploitation of this vulnerability may cause unavailability of the smartphone's camera and microphone."}, {"Reference": "CVE-2022-46773", "Description": "IBM Robotic Process Automation 21.0.0 - 21.0.7 and 23.0.0 is vulnerable to client-side validation bypass for credential pools. Invalid credential pools may be created as a result. IBM X-Force ID: 242951."}, {"Reference": "CVE-2022-46829", "Description": "In JetBrains JetBrains Gateway before 2022.3 a client could connect without a valid token if the host consented."}, {"Reference": "CVE-2022-48294", "Description": "The IHwAttestationService interface has a defect in authentication. Successful exploitation of this vulnerability may affect data confidentiality."}, {"Reference": "CVE-2022-26858", "Description": "Dell BIOS versions contain an Improper Authentication vulnerability. A locally authenticated malicious user could potentially exploit this vulnerability by sending malicious input to an SMI in order to bypass security controls."}, {"Reference": "CVE-2022-2752", "Description": "A vulnerability in the web server of Secomea GateManager allows a local user to impersonate as the previous user under some failed login conditions. This issue affects: Secomea GateManager versions from 9.4 through 9.7. "}, {"Reference": "CVE-2022-2757", "Description": " Due to the lack of adequately implemented access-control rules, all versions Kingspan TMS300 CS are vulnerable to an attacker viewing and modifying the application settings without authenticating by accessing a specific uniform resource locator (URL) on the webserver. "}, {"Reference": "CVE-2022-27839", "Description": "Improper authentication vulnerability in SecretMode in Samsung Internet prior to version 16.2.1 allows attackers to access bookmark tab without proper credentials."}, {"Reference": "CVE-2022-27874", "Description": "Improper authentication in some Intel(R) XMM(TM) 7560 Modem software before version M2_7560_R_01.2146.00 may allow a privileged user to potentially enable escalation of privilege via physical access."}, {"Reference": "CVE-2022-28790", "Description": "Improper authentication in Link to Windows Service prior to version 2.3.04.1 allows attacker to lock the device. The patch adds proper caller signature check logic."}, {"Reference": "CVE-2022-29083", "Description": "Prior Dell BIOS versions contain an Improper Authentication vulnerability. An unauthenticated attacker with physical access to the system could potentially exploit this vulnerability by bypassing drive security mechanisms in order to gain access to the system."}, {"Reference": "CVE-2022-29893", "Description": "Improper authentication in firmware for Intel(R) AMT before versions 11.8.93, 11.22.93, 11.12.93, 12.0.92, 14.1.67, 15.0.42, 16.1.25 may allow an authenticated user to potentially enable escalation of privilege via network access."}, {"Reference": "CVE-2022-30238", "Description": "A CWE-287: Improper Authentication vulnerability exists that could allow an attacker to take over the admin account when an attacker hijacks a session. Affected Products: Wiser Smart, EER21000 & EER21001 (V4.5 and prior)"}, {"Reference": "CVE-2022-31011", "Description": "TiDB is an open-source NewSQL database that supports Hybrid Transactional and Analytical Processing (HTAP) workloads. Under certain conditions, an attacker can construct malicious authentication requests to bypass the authentication process, resulting in privilege escalation or unauthorized access. Only users using TiDB 5.3.0 are affected by this vulnerability. TiDB version 5.3.1 contains a patch for this issue. Other mitigation strategies include turning off Security Enhanced Mode (SEM), disabling local login for non-root accounts, and ensuring that the same IP cannot be logged in as root and normal user at the same time."}, {"Reference": "CVE-2022-31125", "Description": "Roxy-wi is an open source web interface for managing Haproxy, Nginx, Apache and Keepalived servers. A vulnerability in Roxy-wi allows a remote, unauthenticated attacker to bypass authentication and access admin functionality by sending a specially crafted HTTP request. This affects Roxywi versions before 6.1.1.0. Users are advised to upgrade. There are no known workarounds for this issue."}, {"Reference": "CVE-2022-31164", "Description": "Tovy is a a staff management system for Roblox groups. A vulnerability in versions prior to 0.7.51 allows users to log in as other users, including privileged users such as the other of the instance. The problem has been patched in version 0.7.51."}, {"Reference": "CVE-2022-21196", "Description": "MMP: All versions prior to v1.0.3, PTP C-series: Device versions prior to v2.8.6.1, and PTMP C-series and A5x: Device versions prior to v2.5.4.1 does not perform proper authorization and authentication checks on multiple API routes. An attacker may gain access to these API routes and achieve remote code execution, create a denial-of-service condition, and obtain sensitive information."}]}
{"ID": "288", "Name": "Authentication Bypass Using an Alternate Path or Channel", "Abstraction": "Base", "Structure": "Simple", "Status": "Incomplete", "Description": "A product requires authentication, but the product has an alternate path or channel that does not require authentication.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "306", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "284", "ViewID": "1340", "Ordinal": "Primary"}, {"Nature": "PeerOf", "CweID": "420", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic."}, {"Phase": "Architecture and Design", "Note": "This is often seen in web applications that assume that access to a particular CGI program can only be obtained through a \"front\" screen, when the supporting programs are directly accessible. But this problem is not just in web apps."}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Bypass Protection Mechanism"]}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "Funnel all access through a single choke point to simplify how users can access a resource. For every access, perform a check to determine if the user has permissions to access the resource."}], "DemonstrativeExamples": [{"ID": "DX-176", "Entries": [{"IntroText": "Register SECURE_ME is located at address 0xF00. A mirror of this register called COPY_OF_SECURE_ME is at location 0x800F00. The register SECURE_ME is protected from malicious agents and only allows access to select, while COPY_OF_SECURE_ME is not. \n\n\n Access control is implemented using an allowlist (as indicated by acl_oh_allowlist). The identity of the initiator of the transaction is indicated by the one hot input, incoming_id. This is checked against the acl_oh_allowlist (which contains a list of initiators that are allowed to access the asset). \n\n\n Though this example is shown in Verilog, it will apply to VHDL as well."}, {"Nature": "Informative", "Language": "Verilog", "ExampleCode": "module foo_bar(data_out, data_in, incoming_id, address, clk, rst_n);\n output [31:0] data_out;\n input [31:0] data_in, incoming_id, address;\n input clk, rst_n;\n wire write_auth, addr_auth;\n reg [31:0] data_out, acl_oh_allowlist, q;\n assign write_auth = | (incoming_id & acl_oh_allowlist) ? 1 : 0; \n always @*\n\n```\n\t acl_oh_allowlist <= 32'h8312; \n assign addr_auth = (address == 32'hF00) ? 1: 0;\n always @ (posedge clk or negedge rst_n)\n\t if (!rst_n)\n\t\t begin\n\t\t\t q <= 32'h0;\n\t\t\t data_out <= 32'h0;\n\t\t end\n\t else\n\t\t begin\n\t\t\t q <= (addr_auth & write_auth) ? data_in: q;\n\t\t\t data_out <= q;\n\t\t end\n\t end\n endmodule\n```"}, {"Nature": "Bad", "Language": "Verilog", "ExampleCode": "assign addr_auth = (address == 32'hF00) ? 1: 0;"}, {"BodyText": "The bugged line of code is repeated in the Bad example above. Weakness arises from the fact that the SECURE_ME register can be modified by writing to the shadow register COPY_OF_SECURE_ME, the address of COPY_OF_SECURE_ME should also be included in the check. That buggy line of code should instead be replaced as shown in the Good Code Snippet below."}, {"Nature": "Good", "Language": "Verilog", "ExampleCode": "assign addr_auth = (address == 32'hF00 || address == 32'h800F00) ? 1: 0;"}]}], "ObservedExamples": [{"Reference": "CVE-2000-1179", "Description": "Router allows remote attackers to read system logs without authentication by directly connecting to the login screen and typing certain control characters.", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1179"}, {"Reference": "CVE-1999-1454", "Description": "Attackers with physical access to the machine may bypass the password prompt by pressing the ESC (Escape) key.", "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1454"}, {"Reference": "CVE-1999-1077", "Description": "OS allows local attackers to bypass the password protection of idled sessions via the programmer's switch or CMD-PWR keyboard sequence, which brings up a debugger that the attacker can use to disable the lock.", "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1077"}, {"Reference": "CVE-2003-0304", "Description": "Direct request of installation file allows attacker to create administrator accounts.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0304"}, {"Reference": "CVE-2002-0870", "Description": "Attackers may gain additional privileges by directly requesting the web management URL.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0870"}, {"Reference": "CVE-2002-0066", "Description": "Bypass authentication via direct request to named pipe.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0066"}, {"Reference": "CVE-2003-1035", "Description": "User can avoid lockouts by using an API instead of the GUI to conduct brute force password guessing.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1035"}], "RelatedAttackPatterns": ["127", "665"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Relationship", "Note": "overlaps Unprotected Alternate Channel"}], "Top25Examples": [{"Reference": "CVE-2022-40684", "Description": "An authentication bypass using an alternate path or channel [CWE-288] in Fortinet FortiOS version 7.2.0 through 7.2.1 and 7.0.0 through 7.0.6, FortiProxy version 7.2.0 and version 7.0.0 through 7.0.6 and FortiSwitchManager version 7.2.0 and 7.0.0 allows an unauthenticated atttacker to perform operations on the administrative interface via specially crafted HTTP or HTTPS requests."}, {"Reference": "CVE-2022-42458", "Description": "Authentication bypass using an alternate path or channel vulnerability in bingo!CMS version1.7.4.1 and earlier allows a remote unauthenticated attacker to upload an arbitrary file. As a result, an arbitrary script may be executed and/or a file may be altered."}, {"Reference": "CVE-2022-34380", "Description": "Dell CloudLink 7.1.3 and all earlier versions contain an Authentication Bypass Using an Alternate Path or Channel Vulnerability. A high privileged local attacker may potentially exploit this vulnerability leading to authentication bypass and access the CloudLink system console. This is critical severity vulnerability as it allows attacker to take control of the system."}, {"Reference": "CVE-2021-44525", "Description": "Zoho ManageEngine PAM360 before build 5303 allows attackers to modify a few aspects of application state because of a filter bypass in which authentication is not required."}, {"Reference": "CVE-2021-41995", "Description": "A misconfiguration of RSA in PingID Mac Login prior to 1.1 is vulnerable to pre-computed dictionary attacks, leading to an offline MFA bypass."}, {"Reference": "CVE-2022-23722", "Description": "When a password reset mechanism is configured to use the Authentication API with an Authentication Policy, email One-Time Password, PingID or SMS authentication, an existing user can reset another existing user\u2019s password."}, {"Reference": "CVE-2022-23723", "Description": "An MFA bypass vulnerability exists in the PingFederate PingOne MFA Integration Kit when adapter HTML templates are used as part of an authentication flow."}, {"Reference": "CVE-2022-24813", "Description": "CreateWiki is Miraheze's MediaWiki extension for requesting & creating wikis. Without the patch for this issue, anonymous comments can be made using Special:RequestWikiQueue when sent directly via POST. A patch for this issue is available in the `master` branch of CreateWiki's GitHub repository."}, {"Reference": "CVE-2022-24857", "Description": "django-mfa3 is a library that implements multi factor authentication for the django web framework. It achieves this by modifying the regular login view. Django however has a second login view for its admin area. This second login view was not modified, so the multi factor authentication can be bypassed. Users are affected if they have activated both django-mfa3 (< 0.5.0) and django.contrib.admin and have not taken any other measures to prevent users from accessing the admin login view. The issue has been fixed in django-mfa3 0.5.0. It is possible to work around the issue by overwriting the admin login route, e.g. by adding the following URL definition *before* the admin routes: url('admin/login/', lambda request: redirect(settings.LOGIN_URL)"}, {"Reference": "CVE-2022-33202", "Description": "Authentication bypass vulnerability in the setup screen of L2Blocker(on-premise) Ver4.8.5 and earlier and L2Blocker(Cloud) Ver4.8.5 and earlier allows an adjacent attacker to perform an unauthorized login and obtain the stored information or cause a malfunction of the device by using alternative paths or channels for Sensor."}, {"Reference": "CVE-2022-34372", "Description": "Dell PowerProtect Cyber Recovery versions before 19.11.0.2 contain an authentication bypass vulnerability. A remote unauthenticated attacker may potentially access and interact with the docker registry API leading to an authentication bypass. The attacker may potentially alter the docker images leading to a loss of integrity and confidentiality"}, {"Reference": "CVE-2022-40966", "Description": "Authentication bypass vulnerability in multiple Buffalo network devices allows a network-adjacent attacker to bypass authentication and access the device. The affected products/versions are as follows: WCR-300 firmware Ver. 1.87 and earlier, WHR-HP-G300N firmware Ver. 2.00 and earlier, WHR-HP-GN firmware Ver. 1.87 and earlier, WPL-05G300 firmware Ver. 1.88 and earlier, WRM-D2133HP firmware Ver. 2.85 and earlier, WRM-D2133HS firmware Ver. 2.96 and earlier, WTR-M2133HP firmware Ver. 2.85 and earlier, WTR-M2133HS firmware Ver. 2.96 and earlier, WXR-1900DHP firmware Ver. 2.50 and earlier, WXR-1900DHP2 firmware Ver. 2.59 and earlier, WXR-1900DHP3 firmware Ver. 2.63 and earlier, WXR-5950AX12 firmware Ver. 3.40 and earlier, WXR-6000AX12B firmware Ver. 3.40 and earlier, WXR-6000AX12S firmware Ver. 3.40 and earlier, WZR-300HP firmware Ver. 2.00 and earlier, WZR-450HP firmware Ver. 2.00 and earlier, WZR-600DHP firmware Ver. 2.00 and earlier, WZR-900DHP firmware Ver. 1.15 and earlier, WZR-1750DHP2 firmware Ver. 2.31 and earlier, WZR-HP-AG300H firmware Ver. 1.76 and earlier, WZR-HP-G302H firmware Ver. 1.86 and earlier, WEM-1266 firmware Ver. 2.85 and earlier, WEM-1266WP firmware Ver. 2.85 and earlier, WLAE-AG300N firmware Ver. 1.86 and earlier, FS-600DHP firmware Ver. 3.40 and earlier, FS-G300N firmware Ver. 3.14 and earlier, FS-HP-G300N firmware Ver. 3.33 and earlier, FS-R600DHP firmware Ver. 3.40 and earlier, BHR-4GRV firmware Ver. 2.00 and earlier, DWR-HP-G300NH firmware Ver. 1.84 and earlier, DWR-PG firmware Ver. 1.83 and earlier, HW-450HP-ZWE firmware Ver. 2.00 and earlier, WER-A54G54 firmware Ver. 1.43 and earlier, WER-AG54 firmware Ver. 1.43 and earlier, WER-AM54G54 firmware Ver. 1.43 and earlier, WER-AMG54 firmware Ver. 1.43 and earlier, WHR-300 firmware Ver. 2.00 and earlier, WHR-300HP firmware Ver. 2.00 and earlier, WHR-AM54G54 firmware Ver. 1.43 and earlier, WHR-AMG54 firmware Ver. 1.43 and earlier, WHR-AMPG firmware Ver. 1.52 and earlier, WHR-G firmware Ver. 1.49 and earlier, WHR-G300N firmware Ver. 1.65 and earlier, WHR-G301N firmware Ver. 1.87 and earlier, WHR-G54S firmware Ver. 1.43 and earlier, WHR-G54S-NI firmware Ver. 1.24 and earlier, WHR-HP-AMPG firmware Ver. 1.43 and earlier, WHR-HP-G firmware Ver. 1.49 and earlier, WHR-HP-G54 firmware Ver. 1.43 and earlier, WLI-H4-D600 firmware Ver. 1.88 and earlier, WS024BF firmware Ver. 1.60 and earlier, WS024BF-NW firmware Ver. 1.60 and earlier, WXR-1750DHP firmware Ver. 2.60 and earlier, WXR-1750DHP2 firmware Ver. 2.60 and earlier, WZR-1166DHP firmware Ver. 2.18 and earlier, WZR-1166DHP2 firmware Ver. 2.18 and earlier, WZR-1750DHP firmware Ver. 2.30 and earlier, WZR2-G300N firmware Ver. 1.55 and earlier, WZR-450HP-CWT firmware Ver. 2.00 and earlier, WZR-450HP-UB firmware Ver. 2.00 and earlier, WZR-600DHP2 firmware Ver. 1.15 and earlier, WZR-600DHP3 firmware Ver. 2.19 and earlier, WZR-900DHP2 firmware Ver. 2.19 and earlier, WZR-AGL300NH firmware Ver. 1.55 and earlier, WZR-AMPG144NH firmware Ver. 1.49 and earlier, WZR-AMPG300NH firmware Ver. 1.51 and earlier, WZR-D1100H firmware Ver. 2.00 and earlier, WZR-G144N firmware Ver. 1.48 and earlier, WZR-G144NH firmware Ver. 1.48 and earlier, WZR-HP-G300NH firmware Ver. 1.84 and earlier, WZR-HP-G301NH firmware Ver. 1.84 and earlier, WZR-HP-G450H firmware Ver. 1.90 and earlier, WZR-S1750DHP firmware Ver. 2.32 and earlier, WZR-S600DHP firmware Ver. 2.19 and earlier, and WZR-S900DHP firmware Ver. 2.19 and earlier."}, {"Reference": "CVE-2021-35530", "Description": "A vulnerability in the application authentication and authorization mechanism in Hitachi Energy's TXpert Hub CoreTec 4, that depends on a token validation of the session identifier, allows an unauthorized modified message to be executed in the server enabling an unauthorized actor to change an existing user password, and further gain authorized access into the system via login mechanism. This issue affects: Hitachi Energy TXpert Hub CoreTec 4 version 2.0.0 2.1.0; 2.1.0; 2.1.1; 2.1.2; 2.1.3; 2.2.0; 2.2.1."}, {"Reference": "CVE-2022-4874", "Description": "Authentication bypass in Netcomm router models NF20MESH, NF20, and NL1902 allows an unauthenticated user to access content. In order to serve static content, the application performs a check for the existence of specific characters in the URL (.css, .png etc). If it exists, it performs a \"fake login\" to give the request an active session to load the file and not redirect to the login page."}, {"Reference": "CVE-2022-26865", "Description": "Dell Support Assist OS Recovery versions before 5.5.2 contain an Authentication Bypass vulnerability. An unauthenticated attacker with physical access to the system may exploit this vulnerability by bypassing OS Recovery authentication in order to run arbitrary code on the system as Administrator."}, {"Reference": "CVE-2022-26870", "Description": "Dell PowerStore versions 2.1.0.x contain an Authentication bypass vulnerability. A remote unauthenticated attacker could potentially exploit this vulnerability under specific configuration. An attacker would gain unauthorized access upon successful exploit."}, {"Reference": "CVE-2022-27510", "Description": "Unauthorized access to Gateway user capabilities "}, {"Reference": "CVE-2022-30623", "Description": "The server checks the user's cookie in a non-standard way, and a value is entered in the cookie value name of the status and its value is set to true to bypass the identification with the system using a username and password."}]}
{"ID": "289", "Name": "Authentication Bypass by Alternate Name", "Abstraction": "Base", "Structure": "Simple", "Status": "Incomplete", "Description": "The product performs authentication based on the name of a resource being accessed, or the name of the actor performing the access, but it does not properly check all possible names for that resource or actor.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "1390", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic."}, {"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Bypass Protection Mechanism"]}], "PotentialMitigations": [{"MitigationID": "MIT-44", "Phase": ["Architecture and Design"], "Strategy": "Input Validation", "Description": "Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names."}, {"MitigationID": "MIT-5", "Phase": ["Implementation"], "Strategy": "Input Validation", "Description": "\n\nAssume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.\n\n\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"\n\n\nDo not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.\n"}, {"MitigationID": "MIT-20", "Phase": ["Implementation"], "Strategy": "Input Validation", "Description": "Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked."}], "ObservedExamples": [{"Reference": "CVE-2003-0317", "Description": "Protection mechanism that restricts URL access can be bypassed using URL encoding.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0317"}, {"Reference": "CVE-2004-0847", "Description": "Bypass of authentication for files using \"\\\" (backslash) or \"%5C\" (encoded backslash).", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0847"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Relationship", "Note": "Overlaps equivalent encodings, canonicalization, authorization, multiple trailing slash, trailing space, mixed case, and other equivalence issues."}, {"Type": "Theoretical", "Note": "Alternate names are useful in data driven manipulation attacks, not just for authentication."}], "Top25Examples": [{"Reference": "CVE-2022-4722", "Description": "Authentication Bypass by Primary Weakness in GitHub repository ikus060/rdiffweb prior to 2.5.5."}, {"Reference": "CVE-2022-23317", "Description": "CobaltStrike <=4.5 HTTP(S) listener does not determine whether the request URL begins with \"/\", and attackers can obtain relevant information by specifying the URL."}]}
{"ID": "29", "Name": "Path Traversal: '\\..\\filename'", "Abstraction": "Variant", "Structure": "Simple", "Status": "Incomplete", "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\\..\\filename' (leading backslash dot dot) sequences that can resolve to a location that is outside of that directory.", "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nThis is similar to CWE-25, except using \"\\\" instead of \"/\". Sometimes a program checks for \"..\\\" at the beginning of the input, so a \"\\..\\\" can bypass that check. It is also useful for bypassing path traversal protection schemes that only assume that the \"/\" separator is valid.\n", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "23", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Operating_System", "Class": "Windows", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Confidentiality", "Integrity"], "Impact": ["Read Files or Directories", "Modify Files or Directories"]}], "PotentialMitigations": [{"MitigationID": "MIT-5.1", "Phase": ["Implementation"], "Strategy": "Input Validation", "Description": "\n\nAssume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.\n\n\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"\n\n\nDo not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.\n\n\nWhen validating filenames, use stringent allowlists that limit the character set to be used. If feasible, only allow a single \".\" character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as \"/\" to avoid CWE-36. Use a list of allowable file extensions, which will help to avoid CWE-434.\n\n\nDo not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a denylist, which may be incomplete (CWE-184). For example, filtering \"/\" is insufficient protection if the filesystem also supports the use of \"\\\" as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if \"../\" sequences are removed from the \".../...//\" string in a sequential fashion, two instances of \"../\" would be removed from the original string, but the remaining characters would still form the \"../\" string.\n"}, {"MitigationID": "MIT-20", "Phase": ["Implementation"], "Strategy": "Input Validation", "Description": "Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked."}], "ObservedExamples": [{"Reference": "CVE-2002-1987", "Description": "Protection mechanism checks for \"/..\" but doesn't account for Windows-specific \"\\..\" allowing read of arbitrary files.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1987"}, {"Reference": "CVE-2005-2142", "Description": "Directory traversal vulnerability in FTP server allows remote authenticated attackers to list arbitrary directories via a \"\\..\" sequence in an LS command.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2142"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2022-2788", "Description": "Emerson Electric's Proficy Machine Edition Version 9.80 and prior is vulnerable to CWE-29 Path Traversal: '\\\\..\\\\Filename', also known as a ZipSlip attack, through an upload procedure which enables attackers to implant a malicious .BLZ file on the PLC. The file can transfer through the engineering station onto Windows in a way that executes the malicious code."}]}
{"ID": "290", "Name": "Authentication Bypass by Spoofing", "Abstraction": "Base", "Structure": "Simple", "Status": "Incomplete", "Description": "This attack-focused weakness is caused by incorrectly implemented authentication schemes that are subject to spoofing attacks.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "1390", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "287", "ViewID": "1003", "Ordinal": "Primary"}], "ModesOfIntroduction": [{"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Bypass Protection Mechanism", "Gain Privileges or Assume Identity"], "Note": "This weakness can allow an attacker to access resources which are not otherwise accessible without proper authentication."}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "The following code authenticates users."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tString sourceIP = request.getRemoteAddr();\n\tif (sourceIP != null && sourceIP.equals(APPROVED_IP)) {\n\t\tauthenticated = true;\n\t}\n```"}, {"BodyText": "The authentication mechanism implemented relies on an IP address for source validation. If an attacker is able to spoof the IP, they may be able to bypass the authentication mechanism."}]}, {"ID": "DX-99", "Entries": [{"IntroText": "Both of these examples check if a request is from a trusted address before responding to the request."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tsd = socket(AF_INET, SOCK_DGRAM, 0);\n\tserv.sin_family = AF_INET;\n\tserv.sin_addr.s_addr = htonl(INADDR_ANY);\n\tservr.sin_port = htons(1008);\n\tbind(sd, (struct sockaddr *) & serv, sizeof(serv));\n\twhile (1) {\n\t\tmemset(msg, 0x0, MAX_MSG);\n\t\tclilen = sizeof(cli);\n\t\tif (inet_ntoa(cli.sin_addr)==getTrustedAddress()) {\n\t\t\tn = recvfrom(sd, msg, MAX_MSG, 0, (struct sockaddr *) & cli, &clilen);\n\t\t}\n\t}\n```"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\twhile(true) {\n\t\t\tDatagramPacket rp=new DatagramPacket(rData,rData.length);\n\t\t\toutSock.receive(rp);\n\t\t\tString in = new String(p.getData(),0, rp.getLength());\n\t\t\tInetAddress clientIPAddress = rp.getAddress();\n\t\t\tint port = rp.getPort();\n\t\t\tif (isTrustedAddress(clientIPAddress) & secretKey.equals(in)) {\n\t\t\t\tout = secret.getBytes();\n\t\t\t\tDatagramPacket sp =new DatagramPacket(out,out.length, IPAddress, port); outSock.send(sp);\n\t\t\t}\n\t}\n```"}, {"BodyText": "The code only verifies the address as stored in the request packet. An attacker can spoof this address, thus impersonating a trusted client."}]}, {"ID": "DX-93", "Entries": [{"IntroText": "The following code samples use a DNS lookup in order to decide whether or not an inbound request is from a trusted host. If an attacker can poison the DNS cache, they can gain trusted status."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tstruct hostent *hp;struct in_addr myaddr;\n\tchar* tHost = \"trustme.example.com\";\n\tmyaddr.s_addr=inet_addr(ip_addr_string);\n\thp = gethostbyaddr((char *) &myaddr, sizeof(struct in_addr), AF_INET);\n\tif (hp && !strncmp(hp->h_name, tHost, sizeof(tHost))) {\n\t\ttrusted = true;\n\t} else {\n\t\ttrusted = false;\n\t}\n```"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tString ip = request.getRemoteAddr();\n\tInetAddress addr = InetAddress.getByName(ip);\n\tif (addr.getCanonicalHostName().endsWith(\"trustme.com\")) {\n\t\ttrusted = true;\n\t}\n```"}, {"Nature": "Bad", "Language": "C#", "ExampleCode": "```\n\tIPAddress hostIPAddress = IPAddress.Parse(RemoteIpAddress);\n\tIPHostEntry hostInfo = Dns.GetHostByAddress(hostIPAddress);\n\tif (hostInfo.HostName.EndsWith(\"trustme.com\")) {\n\t\ttrusted = true;\n\t}\n```"}, {"BodyText": "IP addresses are more reliable than DNS names, but they can also be spoofed. Attackers can easily forge the source IP address of the packets they send, but response packets will return to the forged IP address. To see the response packets, the attacker has to sniff the traffic between the victim machine and the forged IP address. In order to accomplish the required sniffing, attackers typically attempt to locate themselves on the same subnet as the victim machine. Attackers may be able to circumvent this requirement by using source routing, but source routing is disabled across much of the Internet today. In summary, IP address verification can be a useful part of an authentication scheme, but it should not be the single factor required for authentication."}]}], "ObservedExamples": [{"Reference": "CVE-2022-30319", "Description": "S-bus functionality in a home automation product performs access control using an IP allowlist, which can be bypassed by a forged IP address.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30319"}, {"Reference": "CVE-2009-1048", "Description": "VOIP product allows authentication bypass using 127.0.0.1 in the Host header.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1048"}], "RelatedAttackPatterns": ["21", "22", "459", "461", "473", "476", "59", "60", "667", "94"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Relationship", "Note": "This can be resultant from insufficient verification."}], "Top25Examples": [{"Reference": "CVE-2022-23131", "Description": "In the case of instances where the SAML SSO authentication is enabled (non-default), session data can be modified by a malicious actor, because a user login stored in the session was not verified. Malicious unauthenticated actor may exploit this issue to escalate privileges and gain admin access to Zabbix Frontend. To perform the attack, SAML authentication is required to be enabled and the actor has to know the username of Zabbix user (or use the guest account, which is disabled by default)."}, {"Reference": "CVE-2022-0030", "Description": "An authentication bypass vulnerability in the Palo Alto Networks PAN-OS 8.1 web interface allows a network-based attacker with specific knowledge of the target firewall or Panorama appliance to impersonate an existing PAN-OS administrator and perform privileged actions."}, {"Reference": "CVE-2022-2310", "Description": "An authentication bypass vulnerability in Skyhigh SWG in main releases 10.x prior to 10.2.12, 9.x prior to 9.2.23, 8.x prior to 8.2.28, and controlled release 11.x prior to 11.2.1 allows a remote attacker to bypass authentication into the administration User Interface. This is possible because of SWG incorrectly whitelisting authentication bypass methods and using a weak crypto password. This can lead to the attacker logging into the SWG admin interface, without valid credentials, as the super user with complete control over the SWG."}, {"Reference": "CVE-2022-25989", "Description": "An authentication bypass vulnerability exists in the libxm_av.so getpeermac() functionality of Anker Eufy Homebase 2 2.1.8.5h. A specially-crafted DHCP packet can lead to authentication bypass. An attacker can DHCP poison to trigger this vulnerability."}, {"Reference": "CVE-2022-32747", "Description": "A CWE-290: Authentication Bypass by Spoofing vulnerability exists that could cause legitimate users to be locked out of devices or facilitate backdoor account creation by spoofing a device on the local network. Affected Products: EcoStruxure\u2122 Cybersecurity Admin Expert (CAE) (Versions prior to 2.2)"}, {"Reference": "CVE-2022-39227", "Description": "python-jwt is a module for generating and verifying JSON Web Tokens. Versions prior to 3.3.4 are subject to Authentication Bypass by Spoofing, resulting in identity spoofing, session hijacking or authentication bypass. An attacker who obtains a JWT can arbitrarily forge its contents without knowing the secret key. Depending on the application, this may for example enable the attacker to spoof other user's identities, hijack their sessions, or bypass authentication. Users should upgrade to version 3.3.4. There are no known workarounds."}, {"Reference": "CVE-2022-40269", "Description": "Authentication Bypass by Spoofing vulnerability in Mitsubishi Electric Corporation GOT2000 Series GT27 model versions 01.14.000 to 01.47.000, Mitsubishi Electric Corporation GOT2000 Series GT25 model versions 01.14.000 to 01.47.000 and Mitsubishi Electric Corporation GT SoftGOT2000 versions 1.265B to 1.285X allows a remote unauthenticated attacker to disclose sensitive information from users' browsers or spoof legitimate users by abusing inappropriate HTML attributes."}, {"Reference": "CVE-2022-4098", "Description": "Multiple Wiesemann&Theis products of the ComServer Series are prone to an authentication bypass through IP spoofing. After a user logged in to the WBM of the Com-Server an unauthenticated attacker in the same subnet can obtain the session ID and through IP spoofing change arbitrary settings by crafting modified HTTP Get requests. This may result in a complete takeover of the device."}, {"Reference": "CVE-2022-32744", "Description": "A flaw was found in Samba. The KDC accepts kpasswd requests encrypted with any key known to it. By encrypting forged kpasswd requests with its own key, a user can change other users' passwords, enabling full domain takeover."}, {"Reference": "CVE-2022-2368", "Description": "Authentication Bypass by Spoofing in GitHub repository microweber/microweber prior to 1.2.20. "}, {"Reference": "CVE-2021-40288", "Description": "A denial-of-service attack in WPA2, and WPA3-SAE authentication methods in TP-Link AX10v1 before V1_211014, allows a remote unauthenticated attacker to disconnect an already connected wireless client via sending with a wireless adapter specific spoofed authentication frames"}, {"Reference": "CVE-2022-35629", "Description": "Due to a bug in the handling of the communication between the client and server, it was possible for one client, already registered with their own client ID, to send messages to the server claiming to come from another client ID. This issue was resolved in Velociraptor 0.6.5-2."}, {"Reference": "CVE-2021-34548", "Description": "An issue was discovered in Tor before 0.4.6.5, aka TROVE-2021-003. An attacker can forge RELAY_END or RELAY_RESOLVED to bypass the intended access control for ending a stream."}, {"Reference": "CVE-2021-38598", "Description": "OpenStack Neutron before 16.4.1, 17.x before 17.1.3, and 18.0.0 allows hardware address impersonation when the linuxbridge driver with ebtables-nft is used on a Netfilter-based platform. By sending carefully crafted packets, anyone in control of a server instance connected to the virtual switch can impersonate the hardware addresses of other systems on the network, resulting in denial of service or in some cases possibly interception of traffic intended for other destinations."}, {"Reference": "CVE-2021-40823", "Description": "A logic error in the room key sharing functionality of matrix-js-sdk (aka Matrix Javascript SDK) before 12.4.1 allows a malicious Matrix homeserver present in an encrypted room to steal room encryption keys (via crafted Matrix protocol messages) that were originally sent by affected Matrix clients participating in that room. This allows the homeserver to decrypt end-to-end encrypted messages sent by affected clients."}, {"Reference": "CVE-2021-40824", "Description": "A logic error in the room key sharing functionality of Element Android before 1.2.2 and matrix-android-sdk2 (aka Matrix SDK for Android) before 1.2.2 allows a malicious Matrix homeserver present in an encrypted room to steal room encryption keys (via crafted Matrix protocol messages) that were originally sent by affected Matrix clients participating in that room. This allows the attacker to decrypt end-to-end encrypted messages sent by affected clients."}]}
{"ID": "291", "Name": "Reliance on IP Address for Authentication", "Abstraction": "Variant", "Structure": "Simple", "Status": "Incomplete", "Description": "The product uses an IP address for authentication.", "ExtendedDescription": "IP addresses can be easily spoofed. Attackers can forge the source IP address of the packets they send, but response packets will return to the forged IP address. To see the response packets, the attacker has to sniff the traffic between the victim machine and the forged IP address. In order to accomplish the required sniffing, attackers typically attempt to locate themselves on the same subnet as the victim machine. Attackers may be able to circumvent this requirement by using source routing, but source routing is disabled across much of the Internet today. In summary, IP address verification can be a useful part of an authentication scheme, but it should not be the single factor required for authentication.", "LikelihoodOfExploit": "High", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "290", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "923", "ViewID": "1000"}, {"Nature": "ChildOf", "CweID": "471", "ViewID": "1000"}], "WeaknessOrdinalities": [{"Ordinality": "Resultant"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control", "Non-Repudiation"], "Impact": ["Hide Activities", "Gain Privileges or Assume Identity"], "Note": "Malicious users can fake authentication information, impersonating any IP address."}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "Use other means of identity verification that cannot be simply spoofed. Possibilities include a username/password or certificate."}], "DemonstrativeExamples": [{"ID": "DX-99", "Entries": [{"IntroText": "Both of these examples check if a request is from a trusted address before responding to the request."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tsd = socket(AF_INET, SOCK_DGRAM, 0);\n\tserv.sin_family = AF_INET;\n\tserv.sin_addr.s_addr = htonl(INADDR_ANY);\n\tservr.sin_port = htons(1008);\n\tbind(sd, (struct sockaddr *) & serv, sizeof(serv));\n\twhile (1) {\n\t\tmemset(msg, 0x0, MAX_MSG);\n\t\tclilen = sizeof(cli);\n\t\tif (inet_ntoa(cli.sin_addr)==getTrustedAddress()) {\n\t\t\tn = recvfrom(sd, msg, MAX_MSG, 0, (struct sockaddr *) & cli, &clilen);\n\t\t}\n\t}\n```"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\twhile(true) {\n\t\t\tDatagramPacket rp=new DatagramPacket(rData,rData.length);\n\t\t\toutSock.receive(rp);\n\t\t\tString in = new String(p.getData(),0, rp.getLength());\n\t\t\tInetAddress clientIPAddress = rp.getAddress();\n\t\t\tint port = rp.getPort();\n\t\t\tif (isTrustedAddress(clientIPAddress) & secretKey.equals(in)) {\n\t\t\t\tout = secret.getBytes();\n\t\t\t\tDatagramPacket sp =new DatagramPacket(out,out.length, IPAddress, port); outSock.send(sp);\n\t\t\t}\n\t}\n```"}, {"BodyText": "The code only verifies the address as stored in the request packet. An attacker can spoof this address, thus impersonating a trusted client."}]}], "ObservedExamples": [{"Reference": "CVE-2022-30319", "Description": "S-bus functionality in a home automation product performs access control using an IP allowlist, which can be bypassed by a forged IP address.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30319"}], "RelatedAttackPatterns": ["4"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2021-40867", "Description": "Certain NETGEAR smart switches are affected by an authentication hijacking race-condition vulnerability by an unauthenticated attacker who uses the same source IP address as an admin in the process of logging in (e.g., behind the same NAT device, or already in possession of a foothold on an admin's machine). This occurs because the multi-step HTTP authentication process is effectively tied only to the source IP address. This affects GC108P before 1.0.8.2, GC108PP before 1.0.8.2, GS108Tv3 before 7.0.7.2, GS110TPP before 7.0.7.2, GS110TPv3 before 7.0.7.2, GS110TUP before 1.0.5.3, GS308T before 1.0.3.2, GS310TP before 1.0.3.2, GS710TUP before 1.0.5.3, GS716TP before 1.0.4.2, GS716TPP before 1.0.4.2, GS724TPP before 2.0.6.3, GS724TPv2 before 2.0.6.3, GS728TPPv2 before 6.0.8.2, GS728TPv2 before 6.0.8.2, GS750E before 1.0.1.10, GS752TPP before 6.0.8.2, GS752TPv2 before 6.0.8.2, MS510TXM before 1.0.4.2, and MS510TXUP before 1.0.4.2."}, {"Reference": "CVE-2022-21142", "Description": "Authentication bypass vulnerability in a-blog cms Ver.2.8.x series versions prior to Ver.2.8.74, Ver.2.9.x series versions prior to Ver.2.9.39, Ver.2.10.x series versions prior to Ver.2.10.43, and Ver.2.11.x series versions prior to Ver.2.11.41 allows a remote unauthenticated attacker to bypass authentication under the specific condition."}, {"Reference": "CVE-2022-30319", "Description": "Saia Burgess Controls (SBC) PCD through 2022-05-06 allows Authentication bypass. According to FSCT-2022-0062, there is a Saia Burgess Controls (SBC) PCD S-Bus authentication bypass issue. The affected components are characterized as: S-Bus (5050/UDP) authentication. The potential impact is: Authentication bypass. The Saia Burgess Controls (SBC) PCD controllers utilize the S-Bus protocol (5050/UDP) for a variety of engineering purposes. It is possible to configure a password in order to restrict access to sensitive engineering functionality. Authentication functions on the basis of a MAC/IP whitelist with inactivity timeout to which an authenticated client's MAC/IP is stored. UDP traffic can be spoofed to bypass the whitelist-based access control. Since UDP is stateless, an attacker capable of passively observing traffic can spoof arbitrary messages using the MAC/IP of an authenticated client. This allows the attacker access to sensitive engineering functionality such as uploading/downloading control logic and manipulating controller configuration."}, {"Reference": "CVE-2022-47648", "Description": "An Improper Access Control vulnerability allows an attacker to access the control panel of the B420 without requiring any sort of authorization or authentication due to the IP based authorization. If an authorized user has accessed a publicly available B420 product using valid credentials, an insider attacker can gain access to the same panel without requiring any sort of authorization. The B420 module was already obsolete at the time this vulnerability was found (The End of Life announcement was made in 2013)."}]}
{"ID": "292", "Name": "DEPRECATED: Trusting Self-reported DNS Name", "Abstraction": "Variant", "Structure": "Simple", "Status": "Deprecated", "Description": "This entry has been deprecated because it was a duplicate of CWE-350. All content has been transferred to CWE-350.", "MappingNotes": {"Usage": "Prohibited", "Rationale": "This CWE has been deprecated.", "Comments": "See description and name for possible suggestions of other CWEs to consider.", "Reasons": ["Deprecated"]}}
{"ID": "293", "Name": "Using Referer Field for Authentication", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "The referer field in HTTP requests can be easily modified and, as such, is not a valid means of message integrity checking.", "LikelihoodOfExploit": "High", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "290", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "BackgroundDetails": ["The referer field in HTML requests can be simply modified by malicious users, rendering it useless as a means of checking the validity of the request in question."], "AlternateTerms": [{"Term": "referrer", "Description": "While the proper spelling might be regarded as \"referrer,\" the HTTP RFCs and their implementations use \"referer,\" so this is regarded as the correct spelling."}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Gain Privileges or Assume Identity"], "Note": "Actions, which may not be authorized otherwise, can be carried out as if they were validated by the server referred to."}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "In order to usefully check if a given action is authorized, some means of strong authentication and method protection must be used. Use other means of authorization that cannot be simply spoofed. Possibilities include a username/password or certificate."}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "The following code samples check a packet's referer in order to decide whether or not an inbound request is from a trusted host."}, {"Nature": "Bad", "Language": "C++", "ExampleCode": "```\n\tString trustedReferer = \"http://www.example.com/\"\n\twhile(true){\n\t\tn = read(newsock, buffer, BUFSIZE);\n\t\trequestPacket = processPacket(buffer, n);\n\t\tif (requestPacket.referer == trustedReferer){\n\t\t\topenNewSecureSession(requestPacket);\n\t\t}\n\t}\n```"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tboolean processConnectionRequest(HttpServletRequest request){\n\t\tString referer = request.getHeader(\"referer\")\n\t\tString trustedReferer = \"http://www.example.com/\"\n\t\tif(referer.equals(trustedReferer)){\n\t\t\topenPrivilegedConnection(request);\n\t\t\treturn true;\n\t\t}\n\t\telse{\n\t\t\tsendPrivilegeError(request);\n\t\t\treturn false;\n\t\t}\n\t}\n```"}, {"BodyText": "These examples check if a request is from a trusted referer before responding to a request, but the code only verifies the referer name as stored in the request packet. An attacker can spoof the referer, thus impersonating a trusted client."}]}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}}
{"ID": "294", "Name": "Authentication Bypass by Capture-replay", "Abstraction": "Base", "Structure": "Simple", "Status": "Incomplete", "Description": "A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).", "ExtendedDescription": "Capture-replay attacks are common and can be difficult to defeat without cryptography. They are a subset of network injection attacks that rely on observing previously-sent valid commands, then changing them slightly if necessary and resending the same commands to the server.", "LikelihoodOfExploit": "High", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "1390", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "287", "ViewID": "1003", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Gain Privileges or Assume Identity"], "Note": "Messages sent with a capture-relay attack allow access to resources which are not otherwise accessible without proper authentication."}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "Utilize some sequence or time stamping functionality along with a checksum which takes this into account in order to ensure that messages can be parsed only once."}, {"Phase": ["Architecture and Design"], "Description": "Since any attacker who can listen to traffic can see sequence numbers, it is necessary to sign messages with some kind of cryptography to ensure that sequence numbers are not simply doctored along with content."}], "ObservedExamples": [{"Reference": "CVE-2005-3435", "Description": "product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3435"}, {"Reference": "CVE-2007-4961", "Description": "Chain: cleartext transmission of the MD5 hash of password (CWE-319) enables attacks against a server that is susceptible to replay (CWE-294).", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4961"}], "RelatedAttackPatterns": ["102", "509", "555", "561", "60", "644", "645", "652", "701", "94"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2022-22806", "Description": "A CWE-294: Authentication Bypass by Capture-replay vulnerability exists that could cause an unauthenticated connection to the UPS when a malformed connection is sent. Affected Product: SmartConnect Family: SMT Series (SMT Series ID=1015: UPS 04.5 and prior), SMC Series (SMC Series ID=1018: UPS 04.2 and prior), SMTL Series (SMTL Series ID=1026: UPS 02.9 and prior), SCL Series (SCL Series ID=1029: UPS 02.5 and prior / SCL Series ID=1030: UPS 02.5 and prior / SCL Series ID=1036: UPS 02.5 and prior / SCL Series ID=1037: UPS 03.1 and prior), SMX Series (SMX Series ID=1031: UPS 03.1 and prior)"}, {"Reference": "CVE-2022-25159", "Description": "Authentication Bypass by Capture-replay vulnerability in Mitsubishi Electric MELSEC iQ-F series FX5U(C) CPU all versions, Mitsubishi Electric MELSEC iQ-F series FX5UJ CPU all versions, Mitsubishi Electric MELSEC iQ-R series R00/01/02CPU all versions, Mitsubishi Electric MELSEC iQ-R series R04/08/16/32/120(EN)CPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120SFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PSFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R16/32/64MTCPU all versions, Mitsubishi Electric MELSEC iQ-R series RJ71C24(-R2/R4) all versions, Mitsubishi Electric MELSEC iQ-R series RJ71EN71 all versions, Mitsubishi Electric MELSEC iQ-R series RJ72GF15-T2 all versions, Mitsubishi Electric MELSEC Q series Q03/04/06/13/26UDVCPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/13/26UDPVCPU all versions, Mitsubishi Electric MELSEC Q series QJ71C24N(-R2/R4) all versions and Mitsubishi Electric MELSEC Q series QJ71E71-100 all versions allows a remote unauthenticated attacker to login to the product by replay attack."}, {"Reference": "CVE-2022-30466", "Description": "joyebike Joy ebike Wolf Manufacturing year 2022 is vulnerable to Authentication Bypass by Capture-replay."}, {"Reference": "CVE-2022-33208", "Description": "Authentication bypass by capture-replay vulnerability exists in Machine automation controller NJ series all models V 1.48 and earlier, Machine automation controller NX7 series all models V1.28 and earlier, Machine automation controller NX1 series all models V1.48 and earlier, Automation software 'Sysmac Studio' all models V1.49 and earlier, and Programmable Terminal (PT) NA series NA5-15W/NA5-12W/NA5-9W/NA5-7W models Runtime V1.15 and earlier, which may allow a remote attacker who can analyze the communication between the affected controller and automation software 'Sysmac Studio' and/or a Programmable Terminal (PT) to access the controller."}, {"Reference": "CVE-2022-33971", "Description": "Authentication bypass by capture-replay vulnerability exists in Machine automation controller NX7 series all models V1.28 and earlier, Machine automation controller NX1 series all models V1.48 and earlier, and Machine automation controller NJ series all models V 1.48 and earlier, which may allow an adjacent attacker who can analyze the communication between the controller and the specific software used by OMRON internally to cause a denial-of-service (DoS) condition or execute a malicious program."}, {"Reference": "CVE-2022-45789", "Description": "A CWE-294: Authentication Bypass by Capture-replay vulnerability exists that could cause execution of unauthorized Modbus functions on the controller when hijacking an authenticated Modbus session. Affected Products: EcoStruxure Control Expert (All Versions), EcoStruxure Process Expert (All Versions), Modicon M340 CPU - part numbers BMXP34* (All Versions), Modicon M580 CPU - part numbers BMEP* and BMEH* (All Versions), Modicon M580 CPU Safety - part numbers BMEP58*S and BMEH58*S (All Versions) "}, {"Reference": "CVE-2021-22640", "Description": "An attacker can decrypt the Ovarro TBox login password by communication capture and brute force attacks."}, {"Reference": "CVE-2021-38296", "Description": "Apache Spark supports end-to-end encryption of RPC connections via \"spark.authenticate\" and \"spark.network.crypto.enabled\". In versions 3.1.2 and earlier, it uses a bespoke mutual authentication protocol that allows for full encryption key recovery. After an initial interactive attack, this would allow someone to decrypt plaintext traffic offline. Note that this does not affect security mechanisms controlled by \"spark.authenticate.enableSaslEncryption\", \"spark.io.encryption.enabled\", \"spark.ssl\", \"spark.ui.strictTransportSecurity\". Update to Apache Spark 3.1.3 or later"}, {"Reference": "CVE-2022-22936", "Description": "An issue was discovered in SaltStack Salt in versions before 3002.8, 3003.4, 3004.1. Job publishes and file server replies are susceptible to replay attacks, which can result in an attacker replaying job publishes causing minions to run old jobs. File server replies can also be re-played. A sufficient craft attacker could gain root access on minion under certain scenarios."}, {"Reference": "CVE-2022-29878", "Description": "A vulnerability has been identified in SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00). Affected devices use a limited range for challenges that are sent during the unencrypted challenge-response communication. An unauthenticated attacker could capture a valid challenge-response pair generated by a legitimate user, and request the webpage repeatedly to wait for the same challenge to reappear for which the correct response is known. This could allow the attacker to access the management interface of the device."}, {"Reference": "CVE-2022-31157", "Description": "LTI 1.3 Tool Library is a library used for building IMS-certified LTI 1.3 tool providers in PHP. Prior to version 5.0, the function used to generate random nonces was not sufficiently cryptographically complex. Users should upgrade to version 5.0 to receive a patch. There are currently no known workarounds."}, {"Reference": "CVE-2022-40621", "Description": "Because the WAVLINK Quantum D4G (WN531G3) running firmware version M31G3.V5030.200325 and earlier communicates over HTTP and not HTTPS, and because the hashing mechanism does not rely on a server-supplied key, it is possible for an attacker with sufficient network access to capture the hashed password of a logged on user and use it in a classic Pass-the-Hash style attack."}, {"Reference": "CVE-2022-41541", "Description": "TP-Link AX10v1 V1_211117 allows attackers to execute a replay attack by using a previously transmitted encrypted authentication message and valid authentication token. Attackers are able to login to the web application as an admin user."}, {"Reference": "CVE-2022-25180", "Description": "Jenkins Pipeline: Groovy Plugin 2648.va9433432b33c and earlier includes password parameters from the original build in replayed builds, allowing attackers with Run/Replay permission to obtain the values of password parameters passed to previous builds of a Pipeline."}, {"Reference": "CVE-2022-29334", "Description": "An issue in H v1.0 allows attackers to bypass authentication via a session replay attack."}, {"Reference": "CVE-2022-31158", "Description": "LTI 1.3 Tool Library is a library used for building IMS-certified LTI 1.3 tool providers in PHP. Prior to version 5.0, the Nonce Claim Value was not being validated against the nonce value sent in the Authentication Request. Users should upgrade to version 5.0 to receive a patch. There are currently no known workarounds."}]}
{"ID": "295", "Name": "Improper Certificate Validation", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product does not validate, or incorrectly validates, a certificate.", "ExtendedDescription": "When a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. The product might connect to a malicious host while believing it is a trusted host, or the product might be deceived into accepting spoofed data that appears to originate from a trusted host.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "287", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "287", "ViewID": "1003", "Ordinal": "Primary"}, {"Nature": "PeerOf", "CweID": "322", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "Mobile", "Prevalence": "Undetermined"}], "BackgroundDetails": ["A certificate is a token that associates an identity (principal) to a cryptographic key. Certificates can be used to check if a public key belongs to the assumed owner."], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}, {"Phase": "Implementation", "Note": "When the product uses certificate pinning, the developer might not properly validate all relevant components of the certificate before pinning the certificate. This can make it difficult or expensive to test after the pinning is complete."}], "CommonConsequences": [{"Scope": ["Integrity", "Authentication"], "Impact": ["Bypass Protection Mechanism", "Gain Privileges or Assume Identity"]}], "DetectionMethods": [{"Method": "Automated Static Analysis - Binary or Bytecode", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tBytecode Weakness Analysis - including disassembler + source code weakness analysis\n\t\tBinary Weakness Analysis - including disassembler + source code weakness analysis", "Effectiveness": "SOAR Partial"}, {"Method": "Manual Static Analysis - Binary or Bytecode", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tBinary / Bytecode disassembler - then use manual analysis for vulnerabilities & anomalies", "Effectiveness": "SOAR Partial"}, {"Method": "Dynamic Analysis with Automated Results Interpretation", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tWeb Application Scanner", "Effectiveness": "SOAR Partial"}, {"Method": "Dynamic Analysis with Manual Results Interpretation", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tMan-in-the-middle attack tool", "Effectiveness": "High"}, {"Method": "Manual Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tFocused Manual Spotcheck - Focused manual analysis of source\n\t\tManual Source Code Review (not inspections)", "Effectiveness": "High"}, {"Method": "Automated Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tSource code Weakness Analyzer\n\t\tContext-configured Source Code Weakness Analyzer", "Effectiveness": "SOAR Partial"}, {"Method": "Architecture or Design Review", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tInspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"Phase": ["Architecture and Design", "Implementation"], "Description": "Certificates should be carefully managed and checked to assure that data are encrypted with the intended owner's public key."}, {"Phase": ["Implementation"], "Description": "If certificate pinning is being used, ensure that all relevant properties of the certificate are fully validated before the certificate is pinned, including the hostname."}], "DemonstrativeExamples": [{"ID": "DX-121", "Entries": [{"IntroText": "This code checks the certificate of a connected peer."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tif ((cert = SSL_get_peer_certificate(ssl)) && host)\n\t\tfoo=SSL_get_verify_result(ssl);\n\tif ((X509_V_OK==foo) || X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN==foo))\n```\n// certificate looks good, host can be trusted*"}, {"BodyText": "In this case, because the certificate is self-signed, there was no external authority that could prove the identity of the host. The program could be communicating with a different system that is spoofing the host, e.g. by poisoning the DNS cache or using an Adversary-in-the-Middle (AITM) attack to modify the traffic from server to client."}]}, {"ID": "DX-122", "Entries": [{"IntroText": "The following OpenSSL code obtains a certificate and verifies it."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tcert = SSL_get_peer_certificate(ssl);\n\tif (cert && (SSL_get_verify_result(ssl)==X509_V_OK)) {\n```\n// do secret things* \n\t\t\t}"}, {"BodyText": "Even though the \"verify\" step returns X509_V_OK, this step does not include checking the Common Name against the name of the host. That is, there is no guarantee that the certificate is for the desired host. The SSL connection could have been established with a malicious host that provided a valid certificate."}]}, {"ID": "DX-123", "Entries": [{"IntroText": "The following OpenSSL code ensures that there is a certificate and allows the use of expired certificates."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tif (cert = SSL_get_peer(certificate(ssl)) {\n\t\t\tfoo=SSL_get_verify_result(ssl);\n\t\t\tif ((X509_V_OK==foo) || (X509_V_ERR_CERT_HAS_EXPIRED==foo))\n```\n//do stuff*"}, {"BodyText": "If the call to SSL_get_verify_result() returns X509_V_ERR_CERT_HAS_EXPIRED, this means that the certificate has expired. As time goes on, there is an increasing chance for attackers to compromise the certificate."}]}, {"ID": "DX-124", "Entries": [{"IntroText": "The following OpenSSL code ensures that there is a certificate before continuing execution."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tif (cert = SSL_get_peer_certificate(ssl)) {\n```\n// got a certificate, do secret things*"}, {"BodyText": "Because this code does not use SSL_get_verify_results() to check the certificate, it could accept certificates that have been revoked (X509_V_ERR_CERT_REVOKED). The software could be communicating with a malicious host."}]}, {"ID": "DX-125", "Entries": [{"IntroText": "The following OpenSSL code ensures that the host has a certificate."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tif (cert = SSL_get_peer_certificate(ssl)) {\n```\n// got certificate, host can be trusted* \n\t\t\t\n\t\t\t\n\t\t\t *//foo=SSL_get_verify_result(ssl);* \n\t\t\t\n\t\t\t\n\t\t\t *//if (X509_V_OK==foo) ...* \n\t\t\t}"}, {"BodyText": "Note that the code does not call SSL_get_verify_result(ssl), which effectively disables the validation step that checks the certificate."}]}], "ObservedExamples": [{"Reference": "CVE-2019-12496", "Description": "A Go framework for robotics, drones, and IoT devices skips verification of root CA certificates by default.", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-12496"}, {"Reference": "CVE-2014-1266", "Description": "chain: incorrect \"goto\" in Apple SSL product bypasses certificate validation, allowing Adversary-in-the-Middle (AITM) attack (Apple \"goto fail\" bug). CWE-705 (Incorrect Control Flow Scoping) -> CWE-561 (Dead Code) -> CWE-295 (Improper Certificate Validation) -> CWE-393 (Return of Wrong Status Code) -> CWE-300 (Channel Accessible by Non-Endpoint).", "Link": "https://www.cve.org/CVERecord?id=CVE-2014-1266"}, {"Reference": "CVE-2021-22909", "Description": "Chain: router's firmware update procedure uses curl with \"-k\" (insecure) option that disables certificate validation (CWE-295), allowing adversary-in-the-middle (AITM) compromise with a malicious firmware image (CWE-494).", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-22909"}, {"Reference": "CVE-2008-4989", "Description": "Verification function trusts certificate chains in which the last certificate is self-signed.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4989"}, {"Reference": "CVE-2012-5821", "Description": "Web browser uses a TLS-related function incorrectly, preventing it from verifying that a server's certificate is signed by a trusted certification authority (CA)", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5821"}, {"Reference": "CVE-2009-3046", "Description": "Web browser does not check if any intermediate certificates are revoked.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3046"}, {"Reference": "CVE-2011-0199", "Description": "Operating system does not check Certificate Revocation List (CRL) in some cases, allowing spoofing using a revoked certificate.", "Link": "https://www.cve.org/CVERecord?id=CVE-2011-0199"}, {"Reference": "CVE-2012-5810", "Description": "Mobile banking application does not verify hostname, leading to financial loss.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5810"}, {"Reference": "CVE-2012-3446", "Description": "Cloud-support library written in Python uses incorrect regular expression when matching hostname.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-3446"}, {"Reference": "CVE-2009-2408", "Description": "Web browser does not correctly handle '\\0' character (NUL) in Common Name, allowing spoofing of https sites.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2408"}, {"Reference": "CVE-2012-2993", "Description": "Smartphone device does not verify hostname, allowing spoofing of mail services.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-2993"}, {"Reference": "CVE-2012-5822", "Description": "Application uses third-party library that does not validate hostname.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5822"}, {"Reference": "CVE-2012-5819", "Description": "Cloud storage management application does not validate hostname.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5819"}, {"Reference": "CVE-2012-5817", "Description": "Java library uses JSSE SSLSocket and SSLEngine classes, which do not verify the hostname.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5817"}, {"Reference": "CVE-2010-1378", "Description": "chain: incorrect calculation allows attackers to bypass certificate checks.", "Link": "https://www.cve.org/CVERecord?id=CVE-2010-1378"}, {"Reference": "CVE-2005-3170", "Description": "LDAP client accepts certificates even if they are not from a trusted CA.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3170"}, {"Reference": "CVE-2009-0265", "Description": "chain: DNS server does not correctly check return value from the OpenSSL EVP_VerifyFinal function allows bypass of validation of the certificate chain.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0265"}, {"Reference": "CVE-2003-1229", "Description": "chain: product checks if client is trusted when it intended to check if the server is trusted, allowing validation of signed code.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1229"}, {"Reference": "CVE-2002-0862", "Description": "Cryptographic API, as used in web browsers, mail clients, and other software, does not properly validate Basic Constraints.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0862"}, {"Reference": "CVE-2009-1358", "Description": "chain: OS package manager does not check properly check the return value, allowing bypass using a revoked certificate.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1358"}], "RelatedAttackPatterns": ["459", "475"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2021-3935", "Description": "When PgBouncer is configured to use \"cert\" authentication, a man-in-the-middle attacker can inject arbitrary SQL queries when a connection is first established, despite the use of TLS certificate verification and encryption. This flaw affects PgBouncer versions prior to 1.16.1."}, {"Reference": "CVE-2022-20703", "Description": "Multiple vulnerabilities in Cisco Small Business RV160, RV260, RV340, and RV345 Series Routers could allow an attacker to do any of the following: Execute arbitrary code Elevate privileges Execute arbitrary commands Bypass authentication and authorization protections Fetch and run unsigned software Cause denial of service (DoS) For more information about these vulnerabilities, see the Details section of this advisory."}, {"Reference": "CVE-2022-26923", "Description": "Active Directory Domain Services Elevation of Privilege Vulnerability"}, {"Reference": "CVE-2022-1632", "Description": "An Improper Certificate Validation attack was found in Openshift. A re-encrypt Route with destinationCACertificate explicitly set to the default serviceCA skips internal Service TLS certificate validation. This flaw allows an attacker to exploit an invalid certificate, resulting in a loss of confidentiality."}, {"Reference": "CVE-2022-21656", "Description": "Envoy is an open source edge and service proxy, designed for cloud-native applications. The default_validator.cc implementation used to implement the default certificate validation routines has a \"type confusion\" bug when processing subjectAltNames. This processing allows, for example, an rfc822Name or uniformResourceIndicator to be authenticated as a domain name. This confusion allows for the bypassing of nameConstraints, as processed by the underlying OpenSSL/BoringSSL implementation, exposing the possibility of impersonation of arbitrary servers. As a result Envoy will trust upstream certificates that should not be trusted."}, {"Reference": "CVE-2022-29482", "Description": "'Mobaoku-Auction&Flea Market' App for iOS versions prior to 5.5.16 improperly verifies server certificates, which may allow an attacker to eavesdrop on an encrypted communication via a man-in-the-middle attack."}, {"Reference": "CVE-2022-34156", "Description": "'Hulu / ????' App for iOS versions prior to 3.0.81 improperly verifies server certificates, which may allow an attacker to eavesdrop on an encrypted communication via a man-in-the-middle attack."}, {"Reference": "CVE-2022-45597", "Description": "ComponentSpace.Saml2 4.4.0 Missing SSL Certificate Validation. NOTE: the vendor does not consider this a vulnerability because the report is only about use of certificates at the application layer (not the transport layer) and \"Certificates are exchanged in a controlled fashion between entities within a trust relationship. This is why self-signed certificates may be used and why validating certificates isn\u2019t as important as doing so for the transport layer certificates.\""}, {"Reference": "CVE-2022-29908", "Description": "The folioupdate service in Fabasoft Cloud Enterprise Client 22.4.0043 allows Local Privilege Escalation."}, {"Reference": "CVE-2021-45035", "Description": "Velneo vClient on its 28.1.3 version, does not correctly check the certificate of authenticity by default. This could allow an attacker that has access to the network to perform a MITM attack in order to obtain the user\u00b4s credentials."}, {"Reference": "CVE-2022-25640", "Description": "In wolfSSL before 5.2.0, a TLS 1.3 server cannot properly enforce a requirement for mutual authentication. A client can simply omit the certificate_verify message from the handshake, and never present a certificate."}, {"Reference": "CVE-2022-31083", "Description": "Parse Server is an open source backend that can be deployed to any infrastructure that can run Node.js. Prior to versions 4.10.11 and 5.2.2, the certificate in the Parse Server Apple Game Center auth adapter not validated. As a result, authentication could potentially be bypassed by making a fake certificate accessible via certain Apple domains and providing the URL to that certificate in an authData object. Versions 4.0.11 and 5.2.2 prevent this by introducing a new `rootCertificateUrl` property to the Parse Server Apple Game Center auth adapter which takes the URL to the root certificate of Apple's Game Center authentication certificate. If no value is set, the `rootCertificateUrl` property defaults to the URL of the current root certificate as of May 27, 2022. Keep in mind that the root certificate can change at any time and that it is the developer's responsibility to keep the root certificate URL up-to-date when using the Parse Server Apple Game Center auth adapter. There are no known workarounds for this issue."}]}
{"ID": "296", "Name": "Improper Following of a Certificate's Chain of Trust", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product does not follow, or incorrectly follows, the chain of trust for a certificate back to a trusted root certificate, resulting in incorrect trust of any resource that is associated with that certificate.", "ExtendedDescription": "\n\nIf a system does not follow the chain of trust of a certificate to a root server, the certificate loses all usefulness as a metric of trust. Essentially, the trust gained from a certificate is derived from a chain of trust -- with a reputable trusted entity at the end of that list. The end user must trust that reputable source, and this reputable source must vouch for the resource in question through the medium of the certificate.\n\n\nIn some cases, this trust traverses several entities who vouch for one another. The entity trusted by the end user is at one end of this trust chain, while the certificate-wielding resource is at the other end of the chain. If the user receives a certificate at the end of one of these trust chains and then proceeds to check only that the first link in the chain, no real trust has been derived, since the entire chain must be traversed back to a trusted source to verify the certificate.\n\n\nThere are several ways in which the chain of trust might be broken, including but not limited to:\n\n\n  - Any certificate in the chain is self-signed, unless it the root.\n\n  - Not every intermediate certificate is checked, starting from the original certificate all the way up to the root certificate.\n\n  - An intermediate, CA-signed certificate does not have the expected Basic Constraints or other important extensions.\n\n  - The root certificate has been compromised or authorized to the wrong party.\n\n", "LikelihoodOfExploit": "Low", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "295", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "573", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation", "Note": "When the product uses certificate pinning, the developer might not properly validate all relevant components of the certificate before pinning the certificate. This can make it difficult or expensive to test after the pinning is complete."}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Non-Repudiation"], "Impact": ["Hide Activities"], "Note": "Exploitation of this flaw can lead to the trust of data that may have originated with a spoofed source."}, {"Scope": ["Integrity", "Confidentiality", "Availability", "Access Control"], "Impact": ["Gain Privileges or Assume Identity", "Execute Unauthorized Code or Commands"], "Note": "Data, requests, or actions taken by the attacking entity can be carried out as a spoofed benign entity."}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "Ensure that proper certificate checking is included in the system design."}, {"Phase": ["Implementation"], "Description": "Understand, and properly implement all checks necessary to ensure the integrity of certificate trust integrity."}, {"Phase": ["Implementation"], "Description": "If certificate pinning is being used, ensure that all relevant properties of the certificate are fully validated before the certificate is pinned, including the full chain of trust."}], "DemonstrativeExamples": [{"ID": "DX-121", "Entries": [{"IntroText": "This code checks the certificate of a connected peer."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tif ((cert = SSL_get_peer_certificate(ssl)) && host)\n\t\tfoo=SSL_get_verify_result(ssl);\n\tif ((X509_V_OK==foo) || X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN==foo))\n```\n// certificate looks good, host can be trusted*"}, {"BodyText": "In this case, because the certificate is self-signed, there was no external authority that could prove the identity of the host. The program could be communicating with a different system that is spoofing the host, e.g. by poisoning the DNS cache or using an Adversary-in-the-Middle (AITM) attack to modify the traffic from server to client."}]}], "ObservedExamples": [{"Reference": "CVE-2016-2402", "Description": "Server allows bypass of certificate pinning by sending a chain of trust that includes a trusted CA that is not pinned.", "Link": "https://www.cve.org/CVERecord?id=CVE-2016-2402"}, {"Reference": "CVE-2008-4989", "Description": "Verification function trusts certificate chains in which the last certificate is self-signed.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4989"}, {"Reference": "CVE-2012-5821", "Description": "Chain: Web browser uses a TLS-related function incorrectly, preventing it from verifying that a server's certificate is signed by a trusted certification authority (CA).", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5821"}, {"Reference": "CVE-2009-3046", "Description": "Web browser does not check if any intermediate certificates are revoked.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3046"}, {"Reference": "CVE-2009-0265", "Description": "chain: DNS server does not correctly check return value from the OpenSSL EVP_VerifyFinal function allows bypass of validation of the certificate chain.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0265"}, {"Reference": "CVE-2009-0124", "Description": "chain: incorrect check of return value from the OpenSSL EVP_VerifyFinal function allows bypass of validation of the certificate chain.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0124"}, {"Reference": "CVE-2002-0970", "Description": "File-transfer software does not validate Basic Constraints of an intermediate CA-signed certificate.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0970"}, {"Reference": "CVE-2002-0862", "Description": "Cryptographic API, as used in web browsers, mail clients, and other software, does not properly validate Basic Constraints.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0862"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2021-44532", "Description": "Node.js < 12.22.9, < 14.18.3, < 16.13.2, and < 17.3.1 converts SANs (Subject Alternative Names) to a string format. It uses this string to check peer certificates against hostnames when validating connections. The string format was subject to an injection vulnerability when name constraints were used within a certificate chain, allowing the bypass of these name constraints.Versions of Node.js with the fix for this escape SANs containing the problematic characters in order to prevent the injection. This behavior can be reverted through the --security-revert command-line option."}]}
{"ID": "297", "Name": "Improper Validation of Certificate with Host Mismatch", "Abstraction": "Variant", "Structure": "Simple", "Status": "Incomplete", "Description": "The product communicates with a host that provides a certificate, but the product does not properly ensure that the certificate is actually associated with that host.", "ExtendedDescription": "\n\nEven if a certificate is well-formed, signed, and follows the chain of trust, it may simply be a valid certificate for a different site than the site that the product is interacting with. If the certificate's host-specific data is not properly checked - such as the Common Name (CN) in the Subject or the Subject Alternative Name (SAN) extension of an X.509 certificate - it may be possible for a redirection or spoofing attack to allow a malicious host with a valid certificate to provide data, impersonating a trusted host. In order to ensure data integrity, the certificate must be valid and it must pertain to the site that is being accessed.\n\n\nEven if the product attempts to check the hostname, it is still possible to incorrectly check the hostname. For example, attackers could create a certificate with a name that begins with a trusted name followed by a NUL byte, which could cause some string-based comparisons to only examine the portion that contains the trusted name.\n\n\nThis weakness can occur even when the product uses Certificate Pinning, if the product does not verify the hostname at the time a certificate is pinned.\n", "LikelihoodOfExploit": "High", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "923", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "295", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "Mobile", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "Not Technology-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation", "Note": "When the product uses certificate pinning, the developer might not properly validate all relevant components of the certificate before pinning the certificate. This can make it difficult or expensive to test after the pinning is complete."}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Gain Privileges or Assume Identity"], "Note": "The data read from the system vouched for by the certificate may not be from the expected system."}, {"Scope": ["Authentication", "Other"], "Impact": ["Other"], "Note": "Trust afforded to the system in question - based on the malicious certificate - may allow for spoofing or redirection attacks."}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}, {"Method": "Dynamic Analysis with Manual Results Interpretation", "Description": "Set up an untrusted endpoint (e.g. a server) with which the product will connect. Create a test certificate that uses an invalid hostname but is signed by a trusted CA and provide this certificate from the untrusted endpoint. If the product performs any operations instead of disconnecting and reporting an error, then this indicates that the hostname is not being checked and the test certificate has been accepted."}, {"Method": "Black Box", "Description": "When Certificate Pinning is being used in a mobile application, consider using a tool such as Spinner [REF-955]. This methodology might be extensible to other technologies."}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "Fully check the hostname of the certificate and provide the user with adequate information about the nature of the problem and how to proceed."}, {"Phase": ["Implementation"], "Description": "If certificate pinning is being used, ensure that all relevant properties of the certificate are fully validated before the certificate is pinned, including the hostname."}], "DemonstrativeExamples": [{"ID": "DX-122", "Entries": [{"IntroText": "The following OpenSSL code obtains a certificate and verifies it."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tcert = SSL_get_peer_certificate(ssl);\n\tif (cert && (SSL_get_verify_result(ssl)==X509_V_OK)) {\n```\n// do secret things* \n\t\t\t}"}, {"BodyText": "Even though the \"verify\" step returns X509_V_OK, this step does not include checking the Common Name against the name of the host. That is, there is no guarantee that the certificate is for the desired host. The SSL connection could have been established with a malicious host that provided a valid certificate."}]}], "ObservedExamples": [{"Reference": "CVE-2012-5810", "Description": "Mobile banking application does not verify hostname, leading to financial loss.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5810"}, {"Reference": "CVE-2012-5811", "Description": "Mobile application for printing documents does not verify hostname, allowing attackers to read sensitive documents.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5811"}, {"Reference": "CVE-2012-5807", "Description": "Software for electronic checking does not verify hostname, leading to financial loss.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5807"}, {"Reference": "CVE-2012-3446", "Description": "Cloud-support library written in Python uses incorrect regular expression when matching hostname.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-3446"}, {"Reference": "CVE-2009-2408", "Description": "Web browser does not correctly handle '\\0' character (NUL) in Common Name, allowing spoofing of https sites.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2408"}, {"Reference": "CVE-2012-0867", "Description": "Database program truncates the Common Name during hostname verification, allowing spoofing.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-0867"}, {"Reference": "CVE-2010-2074", "Description": "Incorrect handling of '\\0' character (NUL) in hostname verification allows spoofing.", "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2074"}, {"Reference": "CVE-2009-4565", "Description": "Mail server's incorrect handling of '\\0' character (NUL) in hostname verification allows spoofing.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-4565"}, {"Reference": "CVE-2009-3767", "Description": "LDAP server's incorrect handling of '\\0' character (NUL) in hostname verification allows spoofing.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3767"}, {"Reference": "CVE-2012-5806", "Description": "Payment processing module does not verify hostname when connecting to PayPal using PHP fsockopen function.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5806"}, {"Reference": "CVE-2012-2993", "Description": "Smartphone device does not verify hostname, allowing spoofing of mail services.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-2993"}, {"Reference": "CVE-2012-5804", "Description": "E-commerce module does not verify hostname when connecting to payment site.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5804"}, {"Reference": "CVE-2012-5824", "Description": "Chat application does not validate hostname, leading to loss of privacy.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5824"}, {"Reference": "CVE-2012-5822", "Description": "Application uses third-party library that does not validate hostname.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5822"}, {"Reference": "CVE-2012-5819", "Description": "Cloud storage management application does not validate hostname.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5819"}, {"Reference": "CVE-2012-5817", "Description": "Java library uses JSSE SSLSocket and SSLEngine classes, which do not verify the hostname.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5817"}, {"Reference": "CVE-2012-5784", "Description": "SOAP platform does not verify the hostname.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5784"}, {"Reference": "CVE-2012-5782", "Description": "PHP library for payments does not verify the hostname.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5782"}, {"Reference": "CVE-2012-5780", "Description": "Merchant SDK for payments does not verify the hostname.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-5780"}, {"Reference": "CVE-2003-0355", "Description": "Web browser does not validate Common Name, allowing spoofing of https sites.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0355"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2021-41028", "Description": "A combination of a use of hard-coded cryptographic key vulnerability [CWE-321] in FortiClientEMS 7.0.1 and below, 6.4.6 and below and an improper certificate validation vulnerability [CWE-297] in FortiClientWindows, FortiClientLinux and FortiClientMac 7.0.1 and below, 6.4.6 and below may allow an unauthenticated and network adjacent attacker to perform a man-in-the-middle attack between the EMS and the FCT via the telemetry protocol."}, {"Reference": "CVE-2021-22131", "Description": "A improper validation of certificate with host mismatch in Fortinet FortiTokenAndroid version 5.0.3 and below, Fortinet FortiTokeniOS version 5.2.0 and below, Fortinet FortiTokenWinApp version 4.0.3 and below allows attacker to retrieve information disclosed via man-in-the-middle attacks."}, {"Reference": "CVE-2022-29082", "Description": "Dell EMC NetWorker versions 19.1.x, 19.1.0.x, 19.1.1.x, 19.2.x, 19.2.0.x, 19.2.1.x 19.3.x, 19.3.0.x, 19.4.x, 19.4.0.x, 19.5.x,19.5.0.x, 19.6 and 19.6.0.1 and 19.6.0.2 contain an Improper Validation of Certificate with Host Mismatch vulnerability in Rabbitmq port 5671 which could allow remote attackers to spoof certificates."}, {"Reference": "CVE-2022-48306", "Description": "Improper Validation of Certificate with Host Mismatch vulnerability in Gotham Chat IRC helper of Palantir Gotham allows A malicious attacker in a privileged network position could abuse this to perform a man-in-the-middle attack. A successful man-in-the-middle attack would allow them to intercept, read, or modify network communications to and from the affected service. This issue affects: Palantir Palantir Gotham Chat IRC helper versions prior to 30221005.210011.9242."}]}
{"ID": "298", "Name": "Improper Validation of Certificate Expiration", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "A certificate expiration is not validated or is incorrectly validated, so trust may be assigned to certificates that have been abandoned due to age.", "ExtendedDescription": "When the expiration of a certificate is not taken into account, no trust has necessarily been conveyed through it. Therefore, the validity of the certificate cannot be verified and all benefit of the certificate is lost.", "LikelihoodOfExploit": "Low", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "295", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "672", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation", "Note": "When the software uses certificate pinning, the developer might not properly validate all relevant components of the certificate before pinning the certificate. This can make it difficult or expensive to test after the pinning is complete."}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Integrity", "Other"], "Impact": ["Other"], "Note": "The data read from the system vouched for by the expired certificate may be flawed due to malicious spoofing."}, {"Scope": ["Authentication", "Other"], "Impact": ["Other"], "Note": "Trust afforded to the system in question - based on the expired certificate - may allow for spoofing attacks."}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "Check for expired certificates and provide the user with adequate information about the nature of the problem and how to proceed."}, {"Phase": ["Implementation"], "Description": "If certificate pinning is being used, ensure that all relevant properties of the certificate are fully validated before the certificate is pinned, including the expiration."}], "DemonstrativeExamples": [{"ID": "DX-123", "Entries": [{"IntroText": "The following OpenSSL code ensures that there is a certificate and allows the use of expired certificates."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tif (cert = SSL_get_peer(certificate(ssl)) {\n\t\t\tfoo=SSL_get_verify_result(ssl);\n\t\t\tif ((X509_V_OK==foo) || (X509_V_ERR_CERT_HAS_EXPIRED==foo))\n```\n//do stuff*"}, {"BodyText": "If the call to SSL_get_verify_result() returns X509_V_ERR_CERT_HAS_EXPIRED, this means that the certificate has expired. As time goes on, there is an increasing chance for attackers to compromise the certificate."}]}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}}
{"ID": "299", "Name": "Improper Check for Certificate Revocation", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product does not check or incorrectly checks the revocation status of a certificate, which may cause it to use a certificate that has been compromised.", "ExtendedDescription": "An improper check for certificate revocation is a far more serious flaw than related certificate failures. This is because the use of any revoked certificate is almost certainly malicious. The most common reason for certificate revocation is compromise of the system in question, with the result that no legitimate servers will be using a revoked certificate, unless they are sorely out of sync.", "LikelihoodOfExploit": "Medium", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "295", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "404", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation", "Note": "When the product uses certificate pinning, the developer might not properly validate all relevant components of the certificate before pinning the certificate. This can make it difficult or expensive to test after the pinning is complete."}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Gain Privileges or Assume Identity"], "Note": "Trust may be assigned to an entity who is not who it claims to be."}, {"Scope": ["Integrity", "Other"], "Impact": ["Other"], "Note": "Data from an untrusted (and possibly malicious) source may be integrated."}, {"Scope": ["Confidentiality"], "Impact": ["Read Application Data"], "Note": "Data may be disclosed to an entity impersonating a trusted entity, resulting in information disclosure."}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "Ensure that certificates are checked for revoked status."}, {"Phase": ["Implementation"], "Description": "If certificate pinning is being used, ensure that all relevant properties of the certificate are fully validated before the certificate is pinned, including the revoked status."}], "DemonstrativeExamples": [{"ID": "DX-124", "Entries": [{"IntroText": "The following OpenSSL code ensures that there is a certificate before continuing execution."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tif (cert = SSL_get_peer_certificate(ssl)) {\n```\n// got a certificate, do secret things*"}, {"BodyText": "Because this code does not use SSL_get_verify_results() to check the certificate, it could accept certificates that have been revoked (X509_V_ERR_CERT_REVOKED). The product could be communicating with a malicious host."}]}], "ObservedExamples": [{"Reference": "CVE-2011-2014", "Description": "LDAP-over-SSL implementation does not check Certificate Revocation List (CRL), allowing spoofing using a revoked certificate.", "Link": "https://www.cve.org/CVERecord?id=CVE-2011-2014"}, {"Reference": "CVE-2011-0199", "Description": "Operating system does not check Certificate Revocation List (CRL) in some cases, allowing spoofing using a revoked certificate.", "Link": "https://www.cve.org/CVERecord?id=CVE-2011-0199"}, {"Reference": "CVE-2010-5185", "Description": "Antivirus product does not check whether certificates from signed executables have been revoked.", "Link": "https://www.cve.org/CVERecord?id=CVE-2010-5185"}, {"Reference": "CVE-2009-3046", "Description": "Web browser does not check if any intermediate certificates are revoked.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3046"}, {"Reference": "CVE-2009-0161", "Description": "chain: Ruby module for OCSP misinterprets a response, preventing detection of a revoked certificate.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0161"}, {"Reference": "CVE-2011-2701", "Description": "chain: incorrect parsing of replies from OCSP responders allows bypass using a revoked certificate.", "Link": "https://www.cve.org/CVERecord?id=CVE-2011-2701"}, {"Reference": "CVE-2011-0935", "Description": "Router can permanently cache certain public keys, which would allow bypass if the certificate is later revoked.", "Link": "https://www.cve.org/CVERecord?id=CVE-2011-0935"}, {"Reference": "CVE-2009-1358", "Description": "chain: OS package manager does not properly check the return value, allowing bypass using a revoked certificate.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1358"}, {"Reference": "CVE-2009-0642", "Description": "chain: language interpreter does not properly check the return value from an OSCP function, allowing bypass using a revoked certificate.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0642"}, {"Reference": "CVE-2008-4679", "Description": "chain: web service component does not call the expected method, which prevents a check for revoked certificates.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4679"}, {"Reference": "CVE-2006-4410", "Description": "Certificate revocation list not searched for certain certificates.", "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4410"}, {"Reference": "CVE-2006-4409", "Description": "Product cannot access certificate revocation list when an HTTP proxy is being used.", "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4409"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2022-21170", "Description": "Improper check for certificate revocation in i-FILTER Ver.10.45R01 and earlier, i-FILTER Ver.9.50R10 and earlier, i-FILTER Browser & Cloud MultiAgent for Windows Ver.4.93R04 and earlier, and D-SPA (Ver.3 / Ver.4) using i-FILTER allows a remote unauthenticated attacker to conduct a man-in-the-middle attack and eavesdrop on an encrypted communication."}]}
{"ID": "30", "Name": "Path Traversal: '\\dir\\..\\filename'", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\\dir\\..\\filename' (leading backslash dot dot) sequences that can resolve to a location that is outside of that directory.", "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nThis is similar to CWE-26, except using \"\\\" instead of \"/\". The '\\dir\\..\\filename' manipulation is useful for bypassing some path traversal protection schemes. Sometimes a program only checks for \"..\\\" at the beginning of the input, so a \"\\..\\\" can bypass that check.\n", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "23", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Operating_System", "Class": "Windows", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Confidentiality", "Integrity"], "Impact": ["Read Files or Directories", "Modify Files or Directories"]}], "PotentialMitigations": [{"MitigationID": "MIT-5.1", "Phase": ["Implementation"], "Strategy": "Input Validation", "Description": "\n\nAssume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.\n\n\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"\n\n\nDo not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.\n\n\nWhen validating filenames, use stringent allowlists that limit the character set to be used. If feasible, only allow a single \".\" character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as \"/\" to avoid CWE-36. Use a list of allowable file extensions, which will help to avoid CWE-434.\n\n\nDo not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a denylist, which may be incomplete (CWE-184). For example, filtering \"/\" is insufficient protection if the filesystem also supports the use of \"\\\" as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if \"../\" sequences are removed from the \".../...//\" string in a sequential fashion, two instances of \"../\" would be removed from the original string, but the remaining characters would still form the \"../\" string.\n"}, {"MitigationID": "MIT-20", "Phase": ["Implementation"], "Strategy": "Input Validation", "Description": "Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked."}], "ObservedExamples": [{"Reference": "CVE-2002-1987", "Description": "Protection mechanism checks for \"/..\" but doesn't account for Windows-specific \"\\..\" allowing read of arbitrary files.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1987"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}}
{"ID": "300", "Name": "Channel Accessible by Non-Endpoint", "Abstraction": "Class", "Structure": "Simple", "Status": "Draft", "Description": "The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.", "ExtendedDescription": "In order to establish secure communication between two parties, it is often important to adequately verify the identity of entities at each end of the communication channel. Inadequate or inconsistent verification may result in insufficient or incorrect identification of either communicating entity. This can have negative consequences such as misplaced trust in the entity at the other end of the channel. An attacker can leverage this by interposing between the communicating entities and masquerading as the original entity. In the absence of sufficient verification of identity, such an attacker can eavesdrop and potentially modify the communication between the original entities.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "923", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "AlternateTerms": [{"Term": "Adversary-in-the-Middle / AITM"}, {"Term": "Man-in-the-Middle / MITM"}, {"Term": "Person-in-the-Middle / PITM"}, {"Term": "Monkey-in-the-Middle"}, {"Term": "Monster-in-the-Middle"}, {"Term": "Manipulator-in-the-Middle"}, {"Term": "On-path attack"}, {"Term": "Interception attack"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Confidentiality", "Integrity", "Access Control"], "Impact": ["Read Application Data", "Modify Application Data", "Gain Privileges or Assume Identity"], "Note": "An attacker could pose as one of the entities and read or possibly modify the communication."}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"Phase": ["Implementation"], "Description": "Always fully authenticate both ends of any communications channel."}, {"Phase": ["Architecture and Design"], "Description": "Adhere to the principle of complete mediation."}, {"Phase": ["Implementation"], "Description": "A certificate binds an identity to a cryptographic key to authenticate a communicating party. Often, the certificate takes the encrypted form of the hash of the identity of the subject, the public key, and information such as time of issue or expiration using the issuer's private key. The certificate can be validated by deciphering the certificate with the issuer's public key. See also X.509 certificate signature chains and the PGP certification structure."}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "In the Java snippet below, data is sent over an unencrypted channel to a remote server."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tSocket sock;\n\tPrintWriter out;\n\ttry {\n\t\t\tsock = new Socket(REMOTE_HOST, REMOTE_PORT);\n\t\t\tout = new PrintWriter(echoSocket.getOutputStream(), true);\n```\n// Write data to remote host via socket output stream.* \n\t\t\t...}"}, {"BodyText": "By eavesdropping on the communication channel or posing as the endpoint, an attacker would be able to read all of the transmitted data."}]}], "ObservedExamples": [{"Reference": "CVE-2014-1266", "Description": "chain: incorrect \"goto\" in Apple SSL product bypasses certificate validation, allowing Adversry-in-the-Middle (AITM) attack (Apple \"goto fail\" bug). CWE-705 (Incorrect Control Flow Scoping) -> CWE-561 (Dead Code) -> CWE-295 (Improper Certificate Validation) -> CWE-393 (Return of Wrong Status Code) -> CWE-300 (Channel Accessible by Non-Endpoint).", "Link": "https://www.cve.org/CVERecord?id=CVE-2014-1266"}], "RelatedAttackPatterns": ["466", "57", "589", "590", "612", "613", "615", "662", "94"], "MappingNotes": {"Usage": "Discouraged", "Rationale": "CWE-300 is commonly misused for vulnerabilities in which the prerequisites for exploitation require the adversary to be in a privileged \"in-the-middle\" position.", "Comments": "Consider root-cause weaknesses that allow adversary-in-the-middle attacks to happen, such as CWEs involving poor integrity protection.", "Reasons": ["Frequent Misuse"]}, "Notes": [{"Type": "Maintenance", "Note": "The summary identifies multiple distinct possibilities, suggesting that this is a category that must be broken into more specific weaknesses."}], "Top25Examples": [{"Reference": "CVE-2021-41028", "Description": "A combination of a use of hard-coded cryptographic key vulnerability [CWE-321] in FortiClientEMS 7.0.1 and below, 6.4.6 and below and an improper certificate validation vulnerability [CWE-297] in FortiClientWindows, FortiClientLinux and FortiClientMac 7.0.1 and below, 6.4.6 and below may allow an unauthenticated and network adjacent attacker to perform a man-in-the-middle attack between the EMS and the FCT via the telemetry protocol."}, {"Reference": "CVE-2021-3716", "Description": "A flaw was found in nbdkit due to to improperly caching plaintext state across the STARTTLS encryption boundary. A MitM attacker could use this flaw to inject a plaintext NBD_OPT_STRUCTURED_REPLY before proxying everything else a client sends to the server, potentially leading the client to terminate the NBD session. The highest threat from this vulnerability is to system availability."}, {"Reference": "CVE-2022-45190", "Description": "An issue was discovered on Microchip RN4870 1.43 devices. An attacker within BLE radio range can bypass passkey entry in the legacy pairing of the device."}, {"Reference": "CVE-2021-21469", "Description": "When security guidelines for SAP NetWeaver Master Data Management running on windows have not been thoroughly reviewed, it might be possible for an external operator to try and set custom paths in the MDS server configuration. When no adequate protection has been enforced on any level (e.g., MDS Server password not set, network and OS configuration not properly secured, etc.), a malicious user might define UNC paths which could then be exploited to put the system at risk using a so-called SMB relay attack and obtain highly sensitive data, which leads to Information Disclosure."}]}
{"ID": "301", "Name": "Reflection Attack in an Authentication Protocol", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "Simple authentication protocols are subject to reflection attacks if a malicious user can use the target machine to impersonate a trusted user.", "ExtendedDescription": "\n\nA mutual authentication protocol requires each party to respond to a random challenge by the other party by encrypting it with a pre-shared key. Often, however, such protocols employ the same pre-shared key for communication with a number of different entities. A malicious user or an attacker can easily compromise this protocol without possessing the correct key by employing a reflection attack on the protocol.\n\n\nReflection attacks capitalize on mutual authentication schemes in order to trick the target into revealing the secret shared between it and another valid user. In a basic mutual-authentication scheme, a secret is known to both the valid user and the server; this allows them to authenticate. In order that they may verify this shared secret without sending it plainly over the wire, they utilize a Diffie-Hellman-style scheme in which they each pick a value, then request the hash of that value as keyed by the shared secret. In a reflection attack, the attacker claims to be a valid user and requests the hash of a random value from the server. When the server returns this value and requests its own value to be hashed, the attacker opens another connection to the server. This time, the hash requested by the attacker is the value which the server requested in the first connection. When the server returns this hashed value, it is used in the first connection, authenticating the attacker successfully as the impersonated valid user.\n", "LikelihoodOfExploit": "Medium", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "1390", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "PeerOf", "CweID": "327", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Gain Privileges or Assume Identity"], "Note": "The primary result of reflection attacks is successful authentication with a target machine -- as an impersonated user."}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "Use different keys for the initiator and responder or of a different type of challenge for the initiator and responder."}, {"Phase": ["Architecture and Design"], "Description": "Let the initiator prove its identity before proceeding."}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "The following example demonstrates the weakness."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tunsigned char *simple_digest(char *alg,char *buf,unsigned int len, int *olen) {\n\t\tconst EVP_MD *m;\n\t\tEVP_MD_CTX ctx;\n\t\tunsigned char *ret;\n\t\tOpenSSL_add_all_digests();\n\t\tif (!(m = EVP_get_digestbyname(alg))) return NULL;\n\t\tif (!(ret = (unsigned char*)malloc(EVP_MAX_MD_SIZE))) return NULL;\n\t\tEVP_DigestInit(&ctx, m);\n\t\tEVP_DigestUpdate(&ctx,buf,len);\n\t\tEVP_DigestFinal(&ctx,ret,olen);\n\t\treturn ret;\n\t}\n\tunsigned char *generate_password_and_cmd(char *password_and_cmd) {\n\t\tsimple_digest(\"sha1\",password,strlen(password_and_cmd)\n\t\t...\n\t\t);\n\t}\n```"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tString command = new String(\"some cmd to execute & the password\") MessageDigest encer = MessageDigest.getInstance(\"SHA\");\n\tencer.update(command.getBytes(\"UTF-8\"));\n\tbyte[] digest = encer.digest();\n```"}]}], "ObservedExamples": [{"Reference": "CVE-2005-3435", "Description": "product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3435"}], "RelatedAttackPatterns": ["90"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "The term \"reflection\" is used in multiple ways within CWE and the community, so its usage should be reviewed."}]}
{"ID": "302", "Name": "Authentication Bypass by Assumed-Immutable Data", "Abstraction": "Base", "Structure": "Simple", "Status": "Incomplete", "Description": "The authentication scheme or implementation uses key data elements that are assumed to be immutable, but can be controlled or modified by the attacker.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "1390", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "807", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic."}, {"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Bypass Protection Mechanism"]}], "PotentialMitigations": [{"Phase": ["Architecture and Design", "Operation", "Implementation"], "Description": "Implement proper protection for immutable data (e.g. environment variable, hidden form fields, etc.)"}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "In the following example, an \"authenticated\" cookie is used to determine whether or not a user should be granted access to a system."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tboolean authenticated = new Boolean(getCookieValue(\"authenticated\")).booleanValue();\n\tif (authenticated) {\n\t\t...\n\t}\n```"}, {"BodyText": "Modifying the value of a cookie on the client-side is trivial, but many developers assume that cookies are essentially immutable."}]}], "ObservedExamples": [{"Reference": "CVE-2002-0367", "Description": "DebPloit", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0367"}, {"Reference": "CVE-2004-0261", "Description": "Web auth", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0261"}, {"Reference": "CVE-2002-1730", "Description": "Authentication bypass by setting certain cookies to \"true\".", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1730"}, {"Reference": "CVE-2002-1734", "Description": "Authentication bypass by setting certain cookies to \"true\".", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1734"}, {"Reference": "CVE-2002-2064", "Description": "Admin access by setting a cookie.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2064"}, {"Reference": "CVE-2002-2054", "Description": "Gain privileges by setting cookie.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2054"}, {"Reference": "CVE-2004-1611", "Description": "Product trusts authentication information in cookie.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1611"}, {"Reference": "CVE-2005-1708", "Description": "Authentication bypass by setting admin-testing variable to true.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1708"}, {"Reference": "CVE-2005-1787", "Description": "Bypass auth and gain privileges by setting a variable.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1787"}], "RelatedAttackPatterns": ["10", "13", "21", "274", "31", "39", "45", "77"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2022-35843", "Description": "An authentication bypass by assumed-immutable data vulnerability [CWE-302] in the FortiOS SSH login component 7.2.0, 7.0.0 through 7.0.7, 6.4.0 through 6.4.9, 6.2 all versions, 6.0 all versions and FortiProxy SSH login component 7.0.0 through 7.0.5, 2.0.0 through 2.0.10, 1.2.0 all versions may allow a remote and unauthenticated attacker to login into the device via sending specially crafted Access-Challenge response from the Radius server."}, {"Reference": "CVE-2022-40703", "Description": "CWE-302 Authentication Bypass by Assumed-Immutable Data in AliveCor Kardia App version 5.17.1-754993421 and prior on Android allows an unauthenticated attacker with physical access to the Android device containing the app to bypass application authentication and alter information in the app."}, {"Reference": "CVE-2022-2133", "Description": "The OAuth Single Sign On WordPress plugin before 6.22.6 doesn't validate that OAuth access token requests are legitimate, which allows attackers to log onto the site with the only knowledge of a user's email address."}, {"Reference": "CVE-2022-22729", "Description": "CAMS for HIS Server contained in the following Yokogawa Electric products improperly authenticate the receiving packets. The authentication may be bypassed via some crafted packets: CENTUM CS 3000 versions from R3.08.10 to R3.09.00, CENTUM VP versions from R4.01.00 to R4.03.00, from R5.01.00 to R5.04.20, and from R6.01.00 to R6.08.00, and Exaopc versions from R3.72.00 to R3.79.00."}]}
{"ID": "303", "Name": "Incorrect Implementation of Authentication Algorithm", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.", "ExtendedDescription": "This incorrect implementation may allow authentication to be bypassed.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "1390", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Bypass Protection Mechanism"]}], "ObservedExamples": [{"Reference": "CVE-2003-0750", "Description": "Conditional should have been an 'or' not an 'and'.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0750"}], "RelatedAttackPatterns": ["90"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2022-20695", "Description": "A vulnerability in the authentication functionality of Cisco Wireless LAN Controller (WLC) Software could allow an unauthenticated, remote attacker to bypass authentication controls and log in to the device through the management interface This vulnerability is due to the improper implementation of the password validation algorithm. An attacker could exploit this vulnerability by logging in to an affected device with crafted credentials. A successful exploit could allow the attacker to bypass authentication and log in to the device as an administrator. The attacker could obtain privileges that are the same level as an administrative user but it depends on the crafted credentials. Note: This vulnerability exists because of a non-default device configuration that must be present for it to be exploitable. For details about the vulnerable configuration, see the Vulnerable Products section of this advisory."}, {"Reference": "CVE-2022-20923", "Description": "A vulnerability in the IPSec VPN Server authentication functionality of Cisco Small Business RV110W, RV130, RV130W, and RV215W Routers could allow an unauthenticated, remote attacker to bypass authentication controls and access the IPSec VPN network. This vulnerability is due to the improper implementation of the password validation algorithm. An attacker could exploit this vulnerability by logging in to the VPN from an affected device with crafted credentials. A successful exploit could allow the attacker to bypass authentication and access the IPSec VPN network. The attacker may obtain privileges that are the same level as an administrative user, depending on the crafted credentials that are used. Cisco has not released software updates that address this vulnerability."}, {"Reference": "CVE-2022-33736", "Description": "A vulnerability has been identified in Opcenter Quality V13.1 (All versions < V13.1.20220624), Opcenter Quality V13.2 (All versions < V13.2.20220624). The affected applications do not properly validate login information during authentication. This could lead to denial of service condition for existing users or allow unauthenticated remote attackers to successfully login without credentials."}, {"Reference": "CVE-2022-4861", "Description": "Incorrect implementation in authentication protocol in M-Files Client before 22.5.11356.0 allows high privileged user to get other users tokens to another resource."}, {"Reference": "CVE-2022-29865", "Description": "OPC UA .NET Standard Stack allows a remote attacker to bypass the application authentication check via crafted fake credentials."}]}
{"ID": "304", "Name": "Missing Critical Step in Authentication", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product implements an authentication technique, but it skips a step that weakens the technique.", "ExtendedDescription": "Authentication techniques should follow the algorithms that define them exactly, otherwise authentication can be bypassed or more easily subjected to brute force attacks.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "303", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "573", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control", "Integrity", "Confidentiality"], "Impact": ["Bypass Protection Mechanism", "Gain Privileges or Assume Identity", "Read Application Data", "Execute Unauthorized Code or Commands"], "Note": "This weakness can lead to the exposure of resources or functionality to unintended actors, possibly providing attackers with sensitive information or allowing attackers to execute arbitrary code."}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "ObservedExamples": [{"Reference": "CVE-2004-2163", "Description": "Shared secret not verified in a RADIUS response packet, allowing authentication bypass by spoofing server replies.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2163"}, {"Reference": "CVE-2005-3327", "Description": "Chain: Authentication bypass by skipping the first startup step as required by the protocol.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3327"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2022-48195", "Description": "An issue was discovered in Mellium mellium.im/sasl before 0.3.1. When performing SCRAM-based SASL authentication, if the remote end advertises support for channel binding, no random nonce is generated (instead, the nonce is empty). This causes authentication to fail in the best case, but (if paired with a remote end that does not validate the length of the nonce) could lead to insufficient randomness being used during authentication."}, {"Reference": "CVE-2022-2302", "Description": "Multiple Lenze products of the cabinet series skip the password verification upon second login. After a user has been logged on to the device once, a remote attacker can get full access without knowledge of the password."}]}
{"ID": "305", "Name": "Authentication Bypass by Primary Weakness", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The authentication algorithm is sound, but the implemented mechanism can be bypassed as the result of a separate weakness that is primary to the authentication error.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "1390", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Bypass Protection Mechanism"]}], "ObservedExamples": [{"Reference": "CVE-2002-1374", "Description": "The provided password is only compared against the first character of the real password.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1374"}, {"Reference": "CVE-2000-0979", "Description": "The password is not properly checked, which allows remote attackers to bypass access controls by sending a 1-byte password that matches the first character of the real password.", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0979"}, {"Reference": "CVE-2001-0088", "Description": "Chain: Forum software does not properly initialize an array, which inadvertently sets the password to a single character, allowing remote attackers to easily guess the password and gain administrative privileges.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0088"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Relationship", "Note": "Most \"authentication bypass\" errors are resultant, not primary."}], "Top25Examples": [{"Reference": "CVE-2022-0547", "Description": "OpenVPN 2.1 until v2.4.12 and v2.5.6 may enable authentication bypass in external authentication plug-ins when more than one of them makes use of deferred authentication replies, which allows an external user to be granted access with only partially correct credentials."}, {"Reference": "CVE-2022-23729", "Description": "When the device is in factory state, it can be access the shell without adb authentication process. The LG ID is LVE-SMP-210010."}, {"Reference": "CVE-2022-38064", "Description": "OpenHarmony-v3.1.2 and prior versions have a permission bypass vulnerability. Local attackers can bypass permission control and get sensitive information."}, {"Reference": "CVE-2022-38081", "Description": "OpenHarmony-v3.1.2 and prior versions have a permission bypass vulnerability. LAN attackers can bypass the distributed permission control.To take advantage of this weakness, attackers need another vulnerability to obtain system."}, {"Reference": "CVE-2022-38700", "Description": "OpenHarmony-v3.1.1 and prior versions have a permission bypass vulnerability. LAN attackers can bypass permission control and get control of camera service."}]}
{"ID": "306", "Name": "Missing Authentication for Critical Function", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Diagram": "/data/images/CWE-306-Diagram.png", "Description": "The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.", "LikelihoodOfExploit": "High", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "287", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "287", "ViewID": "1003", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "Cloud Computing", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "ICS/OT", "Prevalence": "Often"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase."}, {"Phase": "Architecture and Design", "Note": "Developers sometimes perform authentication at the primary channel, but open up a secondary channel that is assumed to be private. For example, a login mechanism may be listening on one network port, but after successful authentication, it may open up a second port where it waits for the connection, but avoids authentication because it assumes that only the authenticated party will connect to the port."}, {"Phase": "Operation", "Note": "When migrating data to the cloud (e.g., S3 buckets, Azure blobs, Google Cloud Storage, etc.), there is a risk of losing the protections that were originally provided by hosting on internal networks. If access does not require authentication, it can be easier for attackers to access the data from anywhere on the Internet."}], "CommonConsequences": [{"Scope": ["Access Control", "Other"], "Impact": ["Gain Privileges or Assume Identity", "Varies by Context"], "Note": "Exposing critical functionality essentially provides an attacker with the privilege level of that functionality. The consequences will depend on the associated functionality, but they can range from reading or modifying sensitive data, accessing administrative or other privileged functionality, or possibly even executing arbitrary code."}], "DetectionMethods": [{"DetectionMethodID": "DM-7.2", "Method": "Manual Analysis", "Description": "\n\nThis weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.\n\n\nSpecifically, manual static analysis is useful for evaluating the correctness of custom authentication mechanisms.\n", "EffectivenessNotes": "These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules."}, {"DetectionMethodID": "DM-6.1", "Method": "Automated Static Analysis", "Description": "\n\nAutomated static analysis is useful for detecting commonly-used idioms for authentication. A tool may be able to analyze related configuration files, such as .htaccess in Apache web servers, or detect the usage of commonly-used authentication libraries.\n\n\nGenerally, automated static analysis tools have difficulty detecting custom authentication schemes. In addition, the software's design may include some functionality that is accessible to any user and does not require an established identity; an automated technique that detects the absence of authentication may report false positives.\n", "Effectiveness": "Limited"}, {"Method": "Manual Static Analysis - Binary or Bytecode", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tBinary / Bytecode disassembler - then use manual analysis for vulnerabilities & anomalies", "Effectiveness": "SOAR Partial"}, {"Method": "Dynamic Analysis with Automated Results Interpretation", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tWeb Application Scanner\n\t\tWeb Services Scanner\n\t\tDatabase Scanners", "Effectiveness": "SOAR Partial"}, {"Method": "Dynamic Analysis with Manual Results Interpretation", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tHost Application Interface Scanner\n\t\tFuzz Tester\n\t\tFramework-based Fuzzer", "Effectiveness": "SOAR Partial"}, {"Method": "Manual Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tFocused Manual Spotcheck - Focused manual analysis of source\n\t\tManual Source Code Review (not inspections)", "Effectiveness": "SOAR Partial"}, {"Method": "Automated Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tSource code Weakness Analyzer\n\t\tContext-configured Source Code Weakness Analyzer", "Effectiveness": "SOAR Partial"}, {"Method": "Architecture or Design Review", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tInspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.)\n\t\tFormal Methods / Correct-By-Construction\n\t```\n\t\tCost effective for partial coverage:\n```\n\n\t\tAttack Modeling", "Effectiveness": "High"}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "\n\nDivide the software into anonymous, normal, privileged, and administrative areas. Identify which of these areas require a proven user identity, and use a centralized authentication capability.\n\n\nIdentify all potential communication channels, or other means of interaction with the software, to ensure that all channels are appropriately protected, including those channels that are assumed to be accessible only by authorized parties. Developers sometimes perform authentication at the primary channel, but open up a secondary channel that is assumed to be private. For example, a login mechanism may be listening on one network port, but after successful authentication, it may open up a second port where it waits for the connection, but avoids authentication because it assumes that only the authenticated party will connect to the port.\n\n\nIn general, if the software or protocol allows a single session or user state to persist across multiple connections or channels, authentication and appropriate credential management need to be used throughout.\n"}, {"MitigationID": "MIT-15", "Phase": ["Architecture and Design"], "Description": "For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server."}, {"Phase": ["Architecture and Design"], "Description": "\n\nWhere possible, avoid implementing custom, \"grow-your-own\" authentication routines and consider using authentication capabilities as provided by the surrounding framework, operating system, or environment. These capabilities may avoid common weaknesses that are unique to authentication; support automatic auditing and tracking; and make it easier to provide a clear separation between authentication tasks and authorization tasks.\n\n\nIn environments such as the World Wide Web, the line between authentication and authorization is sometimes blurred. If custom authentication routines are required instead of those provided by the server, then these routines must be applied to every single page, since these pages could be requested directly.\n"}, {"MitigationID": "MIT-4.5", "Phase": ["Architecture and Design"], "Strategy": "Libraries or Frameworks", "Description": "\n\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\n\n\nFor example, consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator [REF-45].\n"}, {"Phase": ["Implementation", "System Configuration", "Operation"], "Description": "When storing data in the cloud (e.g., S3 buckets, Azure blobs, Google Cloud Storage, etc.), use the provider's controls to require strong authentication for users who should be allowed to access the data [REF-1297] [REF-1298] [REF-1302]."}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "In the following Java example the method createBankAccount is used to create a BankAccount object for a bank management application."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tpublic BankAccount createBankAccount(String accountNumber, String accountType,\n\tString accountName, String accountSSN, double balance) {\n\t\t\tBankAccount account = new BankAccount();\n\t\t\taccount.setAccountNumber(accountNumber);\n\t\t\taccount.setAccountType(accountType);\n\t\t\taccount.setAccountOwnerName(accountName);\n\t\t\taccount.setAccountOwnerSSN(accountSSN);\n\t\t\taccount.setBalance(balance);\n\t\t\treturn account;\n\t}\n```"}, {"BodyText": "However, there is no authentication mechanism to ensure that the user creating this bank account object has the authority to create new bank accounts. Some authentication mechanisms should be used to verify that the user has the authority to create bank account objects."}, {"BodyText": "The following Java code includes a boolean variable and method for authenticating a user. If the user has not been authenticated then the createBankAccount will not create the bank account object."}, {"Nature": "Good", "Language": "Java", "ExampleCode": "```\n\tprivate boolean isUserAuthentic = false;\n```\n// authenticate user,* \n\t\n\t\n\t *// if user is authenticated then set variable to true* \n\t\n\t\n\t *// otherwise set variable to false* \n\tpublic boolean authenticateUser(String username, String password) {\n\t```\n\t\t...\n\t}\n\tpublic BankAccount createNewBankAccount(String accountNumber, String accountType,\n\tString accountName, String accountSSN, double balance) {\n\t\t\tBankAccount account = null;\n\t\t\tif (isUserAuthentic) {\n\t\t\t\taccount = new BankAccount();\n\t\t\t\taccount.setAccountNumber(accountNumber);\n\t\t\t\taccount.setAccountType(accountType);\n\t\t\t\taccount.setAccountOwnerName(accountName);\n\t\t\t\taccount.setAccountOwnerSSN(accountSSN);\n\t\t\t\taccount.setBalance(balance);\n\t\t\t}\n\t\t\treturn account;\n\t}\n```"}]}, {"ID": "DX-153", "Entries": [{"IntroText": "In 2022, the OT:ICEFALL study examined products by 10 different Operational Technology (OT) vendors. The researchers reported 56 vulnerabilities and said that the products were \"insecure by design\" [REF-1283]. If exploited, these vulnerabilities often allowed adversaries to change how the products operated, ranging from denial of service to changing the code that the products executed. Since these products were often used in industries such as power, electrical, water, and others, there could even be safety implications."}, {"BodyText": "Multiple vendors did not use any authentication for critical functionality in their OT products."}]}, {"ID": "DX-155", "Entries": [{"IntroText": "In 2021, a web site operated by PeopleGIS stored data of US municipalities in Amazon Web Service (AWS) Simple Storage Service (S3) buckets."}, {"Nature": "Bad", "Language": "Other", "ExampleCode": "```\n\tA security researcher found 86 S3 buckets that could be accessed without authentication (CWE-306) and stored data unencrypted (CWE-312). These buckets exposed over 1000 GB of data and 1.6 million files including physical addresses, phone numbers, tax documents, pictures of driver's license IDs, etc. [REF-1296] [REF-1295]\n```"}, {"BodyText": "While it was not publicly disclosed how the data was protected after discovery, multiple options could have been considered."}, {"Nature": "Good", "Language": "Other", "ExampleCode": "```\n\tThe sensitive information could have been protected by ensuring that the buckets did not have public read access, e.g., by enabling the s3-account-level-public-access-blocks-periodic rule to Block Public Access. In addition, the data could have been encrypted at rest using the appropriate S3 settings, e.g., by enabling server-side encryption using the s3-bucket-server-side-encryption-enabled setting. Other settings are available to further prevent bucket data from being leaked. [REF-1297]\n```"}]}], "ObservedExamples": [{"Reference": "CVE-2022-31260", "Description": "Chain: a digital asset management program has an undisclosed backdoor in the legacy version of a PHP script (CWE-912) that could allow an unauthenticated user to export metadata (CWE-306)", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-31260"}, {"Reference": "CVE-2022-29951", "Description": "TCP-based protocol in Programmable Logic Controller (PLC) has no authentication.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29951"}, {"Reference": "CVE-2022-29952", "Description": "Condition Monitor firmware uses a protocol that does not require authentication.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29952"}, {"Reference": "CVE-2022-30276", "Description": "SCADA-based protocol for bridging WAN and LAN traffic has no authentication.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30276"}, {"Reference": "CVE-2022-30313", "Description": "Safety Instrumented System uses proprietary TCP protocols with no authentication.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30313"}, {"Reference": "CVE-2022-30317", "Description": "Distributed Control System (DCS) uses a protocol that has no authentication.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30317"}, {"Reference": "CVE-2021-21972", "Description": "Chain: Cloud computing virtualization platform does not require authentication for upload of a tar format file (CWE-306), then uses .. path traversal sequences (CWE-23) in the file to access unexpected files, as exploited in the wild per CISA KEV.", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-21972"}, {"Reference": "CVE-2020-10263", "Description": "Bluetooth speaker does not require authentication for the debug functionality on the UART port, allowing root shell access", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-10263"}, {"Reference": "CVE-2021-23147", "Description": "WiFi router does not require authentication for its UART port, allowing adversaries with physical access to execute commands as root", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-23147"}, {"Reference": "CVE-2021-37415", "Description": "IT management product does not perform authentication for some REST API requests, as exploited in the wild per CISA KEV.", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-37415"}, {"Reference": "CVE-2020-13927", "Description": "Default setting in workflow management product allows all API requests without authentication, as exploited in the wild per CISA KEV.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-13927"}, {"Reference": "CVE-2002-1810", "Description": "MFV. Access TFTP server without authentication and obtain configuration file with sensitive plaintext information.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1810"}, {"Reference": "CVE-2008-6827", "Description": "Agent software running at privileges does not authenticate incoming requests over an unprotected channel, allowing a Shatter\" attack.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-6827"}, {"Reference": "CVE-2004-0213", "Description": "Product enforces restrictions through a GUI but not through privileged APIs.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0213"}, {"Reference": "CVE-2020-15483", "Description": "monitor device allows access to physical UART debug port without authentication", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-15483"}, {"Reference": "CVE-2019-9201", "Description": "Programmable Logic Controller (PLC) does not have an authentication feature on its communication protocols.", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-9201"}], "RelatedAttackPatterns": ["12", "166", "216", "36", "62"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2022-20857", "Description": "Multiple vulnerabilities in Cisco Nexus Dashboard could allow an unauthenticated, remote attacker to execute arbitrary commands, read or upload container image files, or perform a cross-site request forgery attack. For more information about these vulnerabilities, see the Details section of this advisory."}, {"Reference": "CVE-2022-40202", "Description": " The database backup function in Delta Electronics InfraSuite Device Master Versions 00.00.01a and prior lacks proper authentication. An attacker could provide malicious serialized objects which, when deserialized, could activate an opcode for a backup scheduling function without authentication. This function allows the user to designate all function arguments and the file to be executed. This could allow the attacker to start any new process and achieve remote code execution. "}, {"Reference": "CVE-2022-20858", "Description": "Multiple vulnerabilities in Cisco Nexus Dashboard could allow an unauthenticated, remote attacker to execute arbitrary commands, read or upload container image files, or perform a cross-site request forgery attack. For more information about these vulnerabilities, see the Details section of this advisory."}, {"Reference": "CVE-2021-21472", "Description": "SAP Software Provisioning Manager 1.0 (SAP NetWeaver Master Data Management Server 7.1) does not have an option to set password during its installation, this allows an authenticated attacker to perform various security attacks like Directory Traversal, Password Brute force Attack, SMB Relay attack, Security Downgrade."}, {"Reference": "CVE-2022-26143", "Description": "The TP-240 (aka tp240dvr) component in Mitel MiCollab before 9.4 SP1 FP1 and MiVoice Business Express through 8.1 allows remote attackers to obtain sensitive information and cause a denial of service (performance degradation and excessive outbound traffic). This was exploited in the wild in February and March 2022 for the TP240PhoneHome DDoS attack."}, {"Reference": "CVE-2022-26501", "Description": "Veeam Backup & Replication 10.x and 11.x has Incorrect Access Control (issue 1 of 2)."}, {"Reference": "CVE-2021-37415", "Description": "Zoho ManageEngine ServiceDesk Plus before 11302 is vulnerable to authentication bypass that allows a few REST-API URLs without authentication."}, {"Reference": "CVE-2021-39144", "Description": "XStream is a simple library to serialize objects to XML and back again. In affected versions this vulnerability may allow a remote attacker has sufficient rights to execute commands of the host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose."}, {"Reference": "CVE-2021-44077", "Description": "Zoho ManageEngine ServiceDesk Plus before 11306, ServiceDesk Plus MSP before 10530, and SupportCenter Plus before 11014 are vulnerable to unauthenticated remote code execution. This is related to /RestAPI URLs in a servlet, and ImportTechnicians in the Struts configuration."}, {"Reference": "CVE-2022-21587", "Description": "Vulnerability in the Oracle Web Applications Desktop Integrator product of Oracle E-Business Suite (component: Upload). Supported versions that are affected are 12.2.3-12.2.11. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle Web Applications Desktop Integrator. Successful attacks of this vulnerability can result in takeover of Oracle Web Applications Desktop Integrator. CVSS 3.1 Base Score 9.8 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)."}, {"Reference": "CVE-2022-24990", "Description": "TerraMaster NAS 4.2.29 and earlier allows remote attackers to discover the administrative password by sending \"User-Agent: TNAS\" to module/api.php?mobile/webNasIPS and then reading the PWD field in the response."}, {"Reference": "CVE-2022-26925", "Description": "Windows LSA Spoofing Vulnerability"}, {"Reference": "CVE-2021-41418", "Description": "AriaNg v0.1.0~v1.2.2 is affected by an incorrect access control vulnerability through not authenticating visitors' access rights."}, {"Reference": "CVE-2021-43447", "Description": "ONLYOFFICE all versions as of 2021-11-08 is affected by Incorrect Access Control. An authentication bypass in the document editor allows attackers to edit documents without authentication."}, {"Reference": "CVE-2022-1598", "Description": "The WPQA Builder WordPress plugin before 5.5 which is a companion to the Discy and Himer , lacks authentication in a REST API endpoint, allowing unauthenticated users to discover private questions sent between users on the site."}, {"Reference": "CVE-2022-2242", "Description": "The KUKA SystemSoftware V/KSS in versions prior to 8.6.5 is prone to improper access control as an unauthorized attacker can directly read and write robot configurations when access control is not available or not enabled (default)."}, {"Reference": "CVE-2022-23345", "Description": "BigAnt Software BigAnt Server v5.6.06 was discovered to contain incorrect access control."}, {"Reference": "CVE-2022-26833", "Description": "An improper authentication vulnerability exists in the REST API functionality of Open Automation Software OAS Platform V16.00.0121. A specially-crafted series of HTTP requests can lead to unauthenticated use of the REST API. An attacker can send a series of HTTP requests to trigger this vulnerability."}, {"Reference": "CVE-2022-28771", "Description": "Due to missing authentication check, SAP Business one License service API - version 10.0 allows an unauthenticated attacker to send malicious http requests over the network. On successful exploitation, an attacker can break the whole application making it inaccessible. "}, {"Reference": "CVE-2022-31701", "Description": "VMware Workspace ONE Access and Identity Manager contain a broken authentication vulnerability. VMware has evaluated the severity of this issue to be in the Moderate severity range with a maximum CVSSv3 base score of 5.3."}, {"Reference": "CVE-2022-36521", "Description": "Insecure permissions in cskefu v7.0.1 allows unauthenticated attackers to arbitrarily add administrator accounts."}, {"Reference": "CVE-2022-37680", "Description": "An improper authentication for critical function issue in Hitachi Kokusai Electric Network products for monitoring system (Camera, Decoder and Encoder) and bellow allows attckers to remotely reboot the device via a crafted POST request to the endpoint /ptipupgrade.cgi. Security information ID hitachi-sec-2022-001 contains fixes for the issue."}, {"Reference": "CVE-2022-38817", "Description": "Dapr Dashboard v0.1.0 through v0.10.0 is vulnerable to Incorrect Access Control that allows attackers to obtain sensitive data."}, {"Reference": "CVE-2022-41263", "Description": "Due to a missing authentication check, SAP Business Objects Business Intelligence Platform (Web Intelligence) - versions 420, 430, allows an authenticated non-administrator attacker to modify the data source information for a document that is otherwise restricted. On successful exploitation, the attacker can modify information causing a limited impact on the integrity of the application."}, {"Reference": "CVE-2022-42785", "Description": "Multiple W&T products of the ComServer Series are prone to an authentication bypass. An unathenticated remote attacker, can log in without knowledge of the password by crafting a modified HTTP GET Request."}, {"Reference": "CVE-2022-3738", "Description": "The vulnerability allows a remote unauthenticated attacker to download a backup file, if one exists. That backup file might contain sensitive information like credentials and cryptographic material. A valid user has to create a backup after the last reboot for this attack to be successfull. "}, {"Reference": "CVE-2022-45423", "Description": "Some Dahua software products have a vulnerability of unauthenticated request of MQTT credentials. An attacker can obtain encrypted MQTT credentials by sending a specific crafted packet to the vulnerable interface (the credentials cannot be directly exploited)."}, {"Reference": "CVE-2022-45424", "Description": "Some Dahua software products have a vulnerability of unauthenticated request of AES crypto key. An attacker can obtain the AES crypto key by sending a specific crafted packet to the vulnerable interface."}, {"Reference": "CVE-2022-20060", "Description": "In preloader (usb), there is a possible permission bypass due to a missing proper image authentication. This could lead to local escalation of privilege, for an attacker who has physical access to the device, with no additional execution privileges needed. User interaction is needed for exploitation. Patch ID: ALPS06160806; Issue ID: ALPS06137462."}, {"Reference": "CVE-2021-28809", "Description": "An improper access control vulnerability has been reported to affect certain legacy versions of HBS 3. If exploited, this vulnerability allows attackers to compromise the security of the operating system.QNAP have already fixed this vulnerability in the following versions of HBS 3: QTS 4.3.6: HBS 3 v3.0.210507 and later QTS 4.3.4: HBS 3 v3.0.210506 and later QTS 4.3.3: HBS 3 v3.0.210506 and later"}, {"Reference": "CVE-2022-4229", "Description": "A vulnerability classified as critical was found in SourceCodester Book Store Management System 1.0. This vulnerability affects unknown code of the file /bsms_ci/index.php. The manipulation leads to improper access controls. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-214588."}, {"Reference": "CVE-2021-31814", "Description": "In Stormshield 1.1.0, and 2.1.0 through 2.9.0, an attacker can block a client from accessing the VPN and can obtain sensitive information through the SN VPN SSL Client."}, {"Reference": "CVE-2022-26267", "Description": "Piwigo v12.2.0 was discovered to contain an information leak via the action parameter in /admin/maintenance_actions.php."}, {"Reference": "CVE-2022-27332", "Description": "An access control issue in Zammad v5.0.3 allows attackers to write entries to the CTI caller log without authentication. This vulnerability can allow attackers to execute phishing attacks or cause a Denial of Service (DoS)."}, {"Reference": "CVE-2022-36780", "Description": "Avdor CIS - crystal quality Credentials Management Errors. The product is phone call recorder, you can hear all the recorded calls without authenticate to the system. Attacker sends crafted URL to the system: ip:port//V=2;ChannellD=number;Ext=number;Command=startLM;Client=number;Request=number;R=number number - id of the recorded number."}, {"Reference": "CVE-2022-22652", "Description": "The GSMA authentication panel could be presented on the lock screen. The issue was resolved by requiring device unlock to interact with the GSMA authentication panel. This issue is fixed in iOS 15.4 and iPadOS 15.4. A person with physical access may be able to view and modify the carrier account information and settings from the lock screen."}, {"Reference": "CVE-2022-31260", "Description": "In Montala ResourceSpace through 9.8 before r19636, csv_export_results_metadata.php allows attackers to export collection metadata via a non-NULL k value."}, {"Reference": "CVE-2022-47703", "Description": "TIANJIE CPE906-3 is vulnerable to password disclosure. This is present on Software Version WEB5.0_LCD_20200513, Firmware Version MV8.003, and Hardware Version CPF906-V5.0_LCD_20200513."}, {"Reference": "CVE-2021-40866", "Description": "Certain NETGEAR smart switches are affected by a remote admin password change by an unauthenticated attacker via the (disabled by default) /sqfs/bin/sccd daemon, which fails to check authentication when the authentication TLV is missing from a received NSDP packet. This affects GC108P before 1.0.8.2, GC108PP before 1.0.8.2, GS108Tv3 before 7.0.7.2, GS110TPP before 7.0.7.2, GS110TPv3 before 7.0.7.2, GS110TUP before 1.0.5.3, GS308T before 1.0.3.2, GS310TP before 1.0.3.2, GS710TUP before 1.0.5.3, GS716TP before 1.0.4.2, GS716TPP before 1.0.4.2, GS724TPP before 2.0.6.3, GS724TPv2 before 2.0.6.3, GS728TPPv2 before 6.0.8.2, GS728TPv2 before 6.0.8.2, GS750E before 1.0.1.10, GS752TPP before 6.0.8.2, GS752TPv2 before 6.0.8.2, MS510TXM before 1.0.4.2, and MS510TXUP before 1.0.4.2."}, {"Reference": "CVE-2022-0992", "Description": "The SiteGround Security plugin for WordPress is vulnerable to authentication bypass that allows unauthenticated users to log in as administrative users due to missing identity verification on initial 2FA set-up that allows unauthenticated and unauthorized users to configure 2FA for pending accounts. Upon successful configuration, the attacker is logged in as that user without access to a username/password pair which is the expected first form of authentication. This affects versions up to, and including, 1.2.5."}, {"Reference": "CVE-2022-0993", "Description": "The SiteGround Security plugin for WordPress is vulnerable to authentication bypass that allows unauthenticated users to log in as administrative users due to missing identity verification on the 2FA back-up code implementation that logs users in upon success. This affects versions up to, and including, 1.2.5."}, {"Reference": "CVE-2022-1248", "Description": "A vulnerability was found in SAP Information System 1.0 which has been rated as critical. Affected by this issue is the file /SAP_Information_System/controllers/add_admin.php. An unauthenticated attacker is able to create a new admin account for the web application with a simple POST request. Exploit details were disclosed."}, {"Reference": "CVE-2022-2141", "Description": "SMS-based GPS commands can be executed by MiCODUS MV720 GPS tracker without authentication."}, {"Reference": "CVE-2022-22576", "Description": "An improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only)."}, {"Reference": "CVE-2022-23220", "Description": "USBView 2.1 before 2.2 allows some local users (e.g., ones logged in via SSH) to execute arbitrary code as root because certain Polkit settings (e.g., allow_any=yes) for pkexec disable the authentication requirement. Code execution can, for example, use the --gtk-module option. This affects Ubuntu, Debian, and Gentoo."}, {"Reference": "CVE-2022-23719", "Description": "PingID Windows Login prior to 2.8 does not authenticate communication with a local Java service used to capture security key requests. An attacker with the ability to execute code on the target machine maybe able to exploit and spoof the local Java service using multiple attack vectors. A successful attack can lead to code executed as SYSTEM by the PingID Windows Login application, or even a denial of service for offline security key authentication."}, {"Reference": "CVE-2022-24047", "Description": "This vulnerability allows remote attackers to bypass authentication on affected installations of BMC Track-It! 20.21.01.102. Authentication is not required to exploit this vulnerability. The specific flaw exists within the authorization of HTTP requests. The issue results from the lack of authentication prior to allowing access to functionality. An attacker can leverage this vulnerability to bypass authentication on the system. Was ZDI-CAN-14618."}, {"Reference": "CVE-2022-24562", "Description": "In IOBit IOTransfer 4.3.1.1561, an unauthenticated attacker can send GET and POST requests to Airserv and gain arbitrary read/write access to the entire file-system (with admin privileges) on the victim's endpoint, which can result in data theft and remote code execution."}, {"Reference": "CVE-2022-25359", "Description": "On ICL ScadaFlex II SCADA Controller SC-1 and SC-2 1.03.07 devices, unauthenticated remote attackers can overwrite, delete, or create files."}, {"Reference": "CVE-2022-2552", "Description": "The Duplicator WordPress plugin before 1.4.7 does not authenticate or authorize visitors before displaying information about the system such as server software, php version and full file system path to the site."}, {"Reference": "CVE-2022-34767", "Description": "Web page which \"wizardpwd.asp\" ALLNET Router model WR0500AC is prone to Authorization bypass vulnerability \u2013 the password, located at \"admin\" allows changing the http[s]://wizardpwd.asp/cgi-bin. Does not validate the user's identity and can be accessed publicly."}, {"Reference": "CVE-2022-34858", "Description": "Authentication Bypass vulnerability in miniOrange OAuth 2.0 client for SSO plugin <= 1.11.3 at WordPress. "}, {"Reference": "CVE-2022-35122", "Description": "An access control issue in Ecowitt GW1100 Series Weather Stations <=GW1100B_v2.1.5 allows unauthenticated attackers to access sensitive information including device and local WiFi passwords."}, {"Reference": "CVE-2021-20238", "Description": "It was found in OpenShift Container Platform 4 that ignition config, served by the Machine Config Server, can be accessed externally from clusters without authentication. The MCS endpoint (port 22623) provides ignition configuration used for bootstrapping Nodes and can include some sensitive data, e.g. registry pull secrets. There are two scenarios where this data can be accessed. The first is on Baremetal, OpenStack, Ovirt, Vsphere and KubeVirt deployments which do not have a separate internal API endpoint and allow access from outside the cluster to port 22623 from the standard OpenShift API Virtual IP address. The second is on cloud deployments when using unsupported network plugins, which do not create iptables rules that prevent to port 22623. In this scenario, the ignition config is exposed to all pods within the cluster and cannot be accessed externally."}, {"Reference": "CVE-2021-26637", "Description": "There is no account authentication and permission check logic in the firmware and existing apps of SiHAS's SGW-300, ACM-300, GCM-300, so unauthorized users can remotely control the device."}, {"Reference": "CVE-2022-44013", "Description": "An issue was discovered in Simmeth Lieferantenmanager before 5.6. An attacker can make various API calls without authentication because the password in a Credential Object is not checked."}, {"Reference": "CVE-2022-45378", "Description": "In the default configuration of Apache SOAP, an RPCRouterServlet is available without authentication. This gives an attacker the possibility to invoke methods on the classpath that meet certain criteria. Depending on what classes are available on the classpath this might even lead to arbitrary remote code execution. NOTE: This vulnerability only affects products that are no longer supported by the maintainer."}, {"Reference": "CVE-2022-45933", "Description": "KubeView through 0.1.31 allows attackers to obtain control of a Kubernetes cluster because api/scrape/kube-system does not require authentication, and retrieves certificate files that can be used for authentication as kube-admin. NOTE: the vendor's position is that KubeView was a \"fun side project and a learning exercise,\" and not \"very secure.\""}, {"Reference": "CVE-2022-46145", "Description": "authentik is an open-source identity provider. Versions prior to 2022.11.2 and 2022.10.2 are vulnerable to unauthorized user creation and potential account takeover. With the default flows, unauthenticated users can create new accounts in authentik. If a flow exists that allows for email-verified password recovery, this can be used to overwrite the email address of admin accounts and take over their accounts. authentik 2022.11.2 and 2022.10.2 fix this issue. As a workaround, a policy can be created and bound to the `default-user-settings-flow flow` with the contents `return request.user.is_authenticated`."}, {"Reference": "CVE-2022-26971", "Description": "Barco Control Room Management Suite web application, which is part of TransForm N before 3.14, is exposing a license file upload mechanism. This upload can be executed without authentication."}, {"Reference": "CVE-2022-2765", "Description": "A vulnerability was found in SourceCodester Company Website CMS 1.0. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file /dashboard/settings. The manipulation leads to improper authentication. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-206161 was assigned to this vulnerability."}, {"Reference": "CVE-2022-29883", "Description": "A vulnerability has been identified in SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00). Affected devices do not restrict unauthenticated access to certain pages of the web interface. This could allow an attacker to delete log files without authentication."}, {"Reference": "CVE-2022-29934", "Description": "USU Oracle Optimization before 5.17.5 lacks Polkit authentication, which allows smartcollector users to achieve root access via pkexec. NOTE: this is not an Oracle Corporation product."}, {"Reference": "CVE-2022-30229", "Description": "A vulnerability has been identified in SICAM GridEdge Essential ARM (All versions < V2.6.6), SICAM GridEdge Essential Intel (All versions < V2.6.6), SICAM GridEdge Essential with GDS ARM (All versions < V2.6.6), SICAM GridEdge Essential with GDS Intel (All versions < V2.6.6). The affected software does not require authenticated access for privileged functions. This could allow an unauthenticated attacker to change data of an user, such as credentials, in case that user's id is known."}, {"Reference": "CVE-2022-3119", "Description": "The OAuth client Single Sign On WordPress plugin before 3.0.4 does not have authorisation and CSRF when updating its settings, which could allow unauthenticated attackers to update them and change the OAuth endpoints to ones they controls, allowing them to then be authenticated as admin if they know the correct email address"}, {"Reference": "CVE-2022-31461", "Description": "Owl Labs Meeting Owl 5.2.0.15 allows attackers to deactivate the passcode protection mechanism via a certain c 11 message."}, {"Reference": "CVE-2022-44216", "Description": "Gnuboard 5.5.4 and 5.5.5 is vulnerable to Insecure Permissions. An attacker can change password of all users without knowing victim's original password."}, {"Reference": "CVE-2022-0188", "Description": "The CMP WordPress plugin before 4.0.19 allows any user, even not logged in, to arbitrarily change the coming soon page layout."}, {"Reference": "CVE-2022-1521", "Description": "LRM does not implement authentication or authorization by default. A malicious actor can inject, replay, modify, and/or intercept sensitive data."}, {"Reference": "CVE-2022-24190", "Description": "The /device/acceptBind end-point for Ourphoto App version 1.4.1 does not require authentication or authorization. The user_token header is not implemented or present on this end-point. An attacker can send a request to bind their account to any users picture frame, then send a POST request to accept their own bind request, without the end-users approval or interaction."}, {"Reference": "CVE-2022-32557", "Description": "An issue was discovered in Couchbase Server before 7.0.4. The Index Service does not enforce authentication for TCP/TLS servers."}, {"Reference": "CVE-2022-35136", "Description": "Boodskap IoT Platform v4.4.9-02 allows attackers to make unauthenticated API requests."}, {"Reference": "CVE-2022-3675", "Description": "Fedora CoreOS supports setting a GRUB bootloader password using a Butane config. When this feature is enabled, GRUB requires a password to access the GRUB command-line, modify kernel command-line arguments, or boot non-default OSTree deployments. Recent Fedora CoreOS releases have a misconfiguration which allows booting non-default OSTree deployments without entering a password. This allows someone with access to the GRUB menu to boot into an older version of Fedora CoreOS, reverting any security fixes that have recently been applied to the machine. A password is still required to modify kernel command-line arguments and to access the GRUB command line. "}, {"Reference": "CVE-2022-29270", "Description": "In Nagios XI through 5.8.5, it is possible for a user without password verification to change his e-mail address."}, {"Reference": "CVE-2022-36129", "Description": "HashiCorp Vault Enterprise 1.7.0 through 1.9.7, 1.10.4, and 1.11.0 clusters using Integrated Storage expose an unauthenticated API endpoint that could be abused to override the voter status of a node within a Vault HA cluster, introducing potential for future data loss or catastrophic failure. Fixed in Vault Enterprise 1.9.8, 1.10.5, and 1.11.1."}, {"Reference": "CVE-2022-45190", "Description": "An issue was discovered on Microchip RN4870 1.43 devices. An attacker within BLE radio range can bypass passkey entry in the legacy pairing of the device."}, {"Reference": "CVE-2021-37234", "Description": "Incorrect Access Control vulnerability in Modern Honey Network commit 0abf0db9cd893c6d5c727d036e1f817c02de4c7b allows remote attackers to view sensitive information via crafted PUT request to Web API."}, {"Reference": "CVE-2022-24935", "Description": "Lexmark products through 2022-02-10 have Incorrect Access Control."}, {"Reference": "CVE-2022-3124", "Description": "The Frontend File Manager Plugin WordPress plugin before 21.3 allows any unauthenticated user to rename uploaded files from users. Furthermore, due to the lack of validation in the destination filename, this could allow allow them to change the content of arbitrary files on the web server"}, {"Reference": "CVE-2022-27897", "Description": "Palantir Gotham versions prior to 3.22.11.2 included an unauthenticated endpoint that would load portions of maliciously crafted zip files to memory. An attacker could repeatedly upload a malicious zip file, which would allow them to exhaust memory resources on the dispatch server."}, {"Reference": "CVE-2022-3312", "Description": "Insufficient validation of untrusted input in VPN in Google Chrome on ChromeOS prior to 106.0.5249.62 allowed a local attacker to bypass managed device restrictions via physical access to the device. (Chromium security severity: Medium)"}, {"Reference": "CVE-2021-42889", "Description": "In TOTOLINK EX1200T V4.1.2cu.5215, an attacker can obtain sensitive information (wifikey, wifiname, etc.) without authorization."}, {"Reference": "CVE-2021-42891", "Description": "In TOTOLINK EX1200T V4.1.2cu.5215, an attacker can obtain sensitive information (wifikey, etc.) without authorization."}, {"Reference": "CVE-2021-42893", "Description": "In TOTOLINK EX1200T V4.1.2cu.5215, an attacker can obtain sensitive information (wifikey, etc.) without authorization through getSysStatusCfg."}, {"Reference": "CVE-2022-0140", "Description": "The Visual Form Builder WordPress plugin before 3.0.6 does not perform access control on entry form export, allowing unauthenticated users to see the form entries or export it as a CSV File using the vfb-export endpoint."}, {"Reference": "CVE-2022-24820", "Description": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. A guest user without the right to view pages of the wiki can still list documents by rendering some velocity documents. The problem has been patched in XWiki versions 12.10.11, 13.4.4, and 13.9-rc-1. There is no known workaround for this problem."}, {"Reference": "CVE-2022-25245", "Description": "Zoho ManageEngine ServiceDesk Plus before 13001 allows anyone to know the organisation's default currency name."}, {"Reference": "CVE-2022-27891", "Description": "Palantir Gotham included an unauthenticated endpoint that listed all active usernames on the stack with an active session. The affected services have been patched and automatically deployed to all Apollo-managed Gotham instances. It is highly recommended that customers upgrade all affected services to the latest version. This issue affects: Palantir Gotham versions prior to 103.30221005.0."}, {"Reference": "CVE-2022-31176", "Description": "Grafana Image Renderer is a Grafana backend plugin that handles rendering of panels & dashboards to PNGs using a headless browser (Chromium/Chrome). An internal security review identified an unauthorized file disclosure vulnerability. It is possible for a malicious user to retrieve unauthorized files under some network conditions or via a fake datasource (if user has admin permissions in Grafana). All Grafana installations should be upgraded to version 3.6.1 as soon as possible. As a workaround it is possible to [disable HTTP remote rendering](https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/#plugingrafana-image-renderer)."}, {"Reference": "CVE-2022-35572", "Description": "On Linksys E5350 WiFi Router with firmware version 1.0.00.037 and lower, (and potentially other vendors/devices due to code reuse), the /SysInfo.htm URI does not require a session ID. This web page calls a show_sysinfo function which retrieves WPA passwords, SSIDs, MAC Addresses, serial numbers, WPS Pins, and hardware/firmware versions, and prints this information into the web page. This web page is visible when remote management is enabled. A user who has access to the web interface of the device can extract these secrets. If the device has remote management enabled and is connected directly to the internet, this vulnerability is exploitable over the internet without interaction."}, {"Reference": "CVE-2022-36884", "Description": "The webhook endpoint in Jenkins Git Plugin 4.11.3 and earlier provide unauthenticated attackers information about the existence of jobs configured to use an attacker-specified Git repository."}, {"Reference": "CVE-2022-4228", "Description": "A vulnerability classified as problematic has been found in SourceCodester Book Store Management System 1.0. This affects an unknown part of the file /bsms_ci/index.php/user/edit_user/. The manipulation of the argument password leads to information disclosure. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-214587."}, {"Reference": "CVE-2022-21952", "Description": "A Missing Authentication for Critical Function vulnerability in spacewalk-java of SUSE Manager Server 4.1, SUSE Manager Server 4.2 allows remote attackers to easily exhaust available disk resources leading to DoS. This issue affects: SUSE Manager Server 4.1 spacewalk-java versions prior to 4.1.46. SUSE Manager Server 4.2 spacewalk-java versions prior to 4.2.37. "}, {"Reference": "CVE-2022-25508", "Description": "An access control issue in the component /ManageRoute/postRoute of FreeTAKServer v1.9.8 allows unauthenticated attackers to cause a Denial of Service (DoS) via an unusually large amount of created routes, or create unsafe or false routes for legitimate users."}, {"Reference": "CVE-2021-21816", "Description": "An information disclosure vulnerability exists in the Syslog functionality of D-LINK DIR-3040 1.13B03. A specially crafted network request can lead to the disclosure of sensitive information. An attacker can send an HTTP request to trigger this vulnerability."}]}
{"ID": "307", "Name": "Improper Restriction of Excessive Authentication Attempts", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product does not implement sufficient measures to prevent multiple failed authentication attempts within a short time frame, making it more susceptible to brute force attacks.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "1390", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "287", "ViewID": "1003", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "799", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Bypass Protection Mechanism"], "Note": "An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account."}], "DetectionMethods": [{"Method": "Dynamic Analysis with Automated Results Interpretation", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tWeb Application Scanner\n\t\tWeb Services Scanner\n\t\tDatabase Scanners\n\t```\n\t\tCost effective for partial coverage:\n```\n\n\t\tHost-based Vulnerability Scanners - Examine configuration for flaws, verifying that audit mechanisms work, ensure host configuration meets certain predefined criteria", "Effectiveness": "High"}, {"Method": "Dynamic Analysis with Manual Results Interpretation", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tFuzz Tester\n\t\tFramework-based Fuzzer\n\t```\n\t\tCost effective for partial coverage:\n```\n\n\t\tForced Path Execution", "Effectiveness": "High"}, {"Method": "Manual Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tFocused Manual Spotcheck - Focused manual analysis of source\n\t\tManual Source Code Review (not inspections)", "Effectiveness": "High"}, {"Method": "Automated Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tSource code Weakness Analyzer\n\t\tContext-configured Source Code Weakness Analyzer", "Effectiveness": "SOAR Partial"}, {"Method": "Automated Static Analysis", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tConfiguration Checker", "Effectiveness": "SOAR Partial"}, {"Method": "Architecture or Design Review", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tFormal Methods / Correct-By-Construction\n\t```\n\t\tCost effective for partial coverage:\n```\n\n\t\tInspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "\n\nCommon protection mechanisms include:\n\n\n  - Disconnecting the user after a small number of failed attempts\n\n  - Implementing a timeout\n\n  - Locking out a targeted account\n\n  - Requiring a computational task on the user's part.\n\n"}, {"MitigationID": "MIT-4", "Phase": ["Architecture and Design"], "Strategy": "Libraries or Frameworks", "Description": "\n\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\n\n\nConsider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator. [REF-45]\n"}], "DemonstrativeExamples": [{"ID": "DX-117", "Entries": [{"IntroText": "In January 2009, an attacker was able to gain administrator access to a Twitter server because the server did not restrict the number of login attempts [REF-236]. The attacker targeted a member of Twitter's support team and was able to successfully guess the member's password using a brute force attack by guessing a large number of common words. After gaining access as the member of the support staff, the attacker used the administrator panel to gain access to 33 accounts that belonged to celebrities and politicians. Ultimately, fake Twitter messages were sent that appeared to come from the compromised accounts."}, {"Reference": "REF-236"}]}, {"Entries": [{"IntroText": "The following code, extracted from a servlet's doPost() method, performs an authentication lookup every time the servlet is invoked."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tString username = request.getParameter(\"username\");\n\tString password = request.getParameter(\"password\");\n\tint authResult = authenticateUser(username, password);\n```"}, {"BodyText": "However, the software makes no attempt to restrict excessive authentication attempts."}]}, {"Entries": [{"IntroText": "This code attempts to limit the number of login attempts by causing the process to sleep before completing the authentication."}, {"Nature": "Bad", "Language": "PHP", "ExampleCode": "```\n\t$username = $_POST['username'];\n\t$password = $_POST['password'];\n\tsleep(2000);\n\t$isAuthenticated = authenticateUser($username, $password);\n```"}, {"BodyText": "However, there is no limit on parallel connections, so this does not increase the amount of time an attacker needs to complete an attack."}]}, {"Entries": [{"IntroText": "In the following C/C++ example the validateUser method opens a socket connection, reads a username and password from the socket and attempts to authenticate the username and password."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tint validateUser(char *host, int port)\n\t{\n\t\t\tint socket = openSocketConnection(host, port);\n\t\t\tif (socket < 0) {\n\t\t\t\tprintf(\"Unable to open socket connection\");\n\t\t\t\treturn(FAIL);\n\t\t\t}\n\t\t\tint isValidUser = 0;\n\t\t\tchar username[USERNAME_SIZE];\n\t\t\tchar password[PASSWORD_SIZE];\n\t\t\twhile (isValidUser == 0) {\n\t\t\t\t\tif (getNextMessage(socket, username, USERNAME_SIZE) > 0) {\n\t\t\t\t\t\tif (getNextMessage(socket, password, PASSWORD_SIZE) > 0) {\n\t\t\t\t\t\t\tisValidUser = AuthenticateUser(username, password);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\t\t\treturn(SUCCESS);\n\t}\n```"}, {"BodyText": "The validateUser method will continuously check for a valid username and password without any restriction on the number of authentication attempts made. The method should limit the number of authentication attempts made to prevent brute force attacks as in the following example code."}, {"Nature": "Good", "Language": "C", "ExampleCode": "```\n\tint validateUser(char *host, int port)\n\t{\n\t\t\t...\n\t\t\tint count = 0;\n\t\t\twhile ((isValidUser == 0) && (count < MAX_ATTEMPTS)) {\n\t\t\t\t\tif (getNextMessage(socket, username, USERNAME_SIZE) > 0) {\n\t\t\t\t\t\tif (getNextMessage(socket, password, PASSWORD_SIZE) > 0) {\n\t\t\t\t\t\t\tisValidUser = AuthenticateUser(username, password);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcount++;\n\t\t\t}\n\t\t\tif (isValidUser) {\n\t\t\t\treturn(SUCCESS);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn(FAIL);\n\t\t\t}\n\t}\n```"}]}, {"Entries": [{"IntroText": "Consider this example from a real-world attack against the iPhone [REF-1218]. An attacker can use brute force methods; each time there is a failed guess, the attacker quickly cuts the power before the failed entry is recorded, effectively bypassing the intended limit on the number of failed authentication attempts. Note that this attack requires removal of the cell phone battery and connecting directly to the phone's power source, and the brute force attack is still time-consuming."}]}], "ObservedExamples": [{"Reference": "CVE-2019-0039", "Description": "the REST API for a network OS has a high limit for number of connections, allowing brute force password guessing", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-0039"}, {"Reference": "CVE-1999-1152", "Description": "Product does not disconnect or timeout after multiple failed logins.", "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1152"}, {"Reference": "CVE-2001-1291", "Description": "Product does not disconnect or timeout after multiple failed logins.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1291"}, {"Reference": "CVE-2001-0395", "Description": "Product does not disconnect or timeout after multiple failed logins.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0395"}, {"Reference": "CVE-2001-1339", "Description": "Product does not disconnect or timeout after multiple failed logins.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1339"}, {"Reference": "CVE-2002-0628", "Description": "Product does not disconnect or timeout after multiple failed logins.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0628"}, {"Reference": "CVE-1999-1324", "Description": "User accounts not disabled when they exceed a threshold; possibly a resultant problem.", "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1324"}], "RelatedAttackPatterns": ["16", "49", "560", "565", "600", "652", "653"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2021-22640", "Description": "An attacker can decrypt the Ovarro TBox login password by communication capture and brute force attacks."}, {"Reference": "CVE-2022-30305", "Description": "An insufficient logging [CWE-778] vulnerability in FortiSandbox versions 4.0.0 to 4.0.2, 3.2.0 to 3.2.3 and 3.1.0 to 3.1.5 and FortiDeceptor versions 4.2.0, 4.1.0 through 4.1.1, 4.0.0 through 4.0.2, 3.3.0 through 3.3.3, 3.2.0 through 3.2.2,3.1.0 through 3.1.1 and 3.0.0 through 3.0.2 may allow a remote attacker to repeatedly enter incorrect credentials without causing a log entry, and with no limit on the number of failed authentication attempts."}, {"Reference": "CVE-2022-3993", "Description": "Improper Restriction of Excessive Authentication Attempts in GitHub repository kareadita/kavita prior to 0.6.0.3. "}, {"Reference": "CVE-2022-22485", "Description": "In some cases, an unsuccessful attempt to log into IBM Spectrum Protect Operations Center 8.1.0.000 through 8.1.14.000 does not cause the administrator's invalid sign-on count to be incremented on the IBM Spectrum Protect Server. An attacker could exploit this vulnerability using brute force techniques to gain unauthorized administrative access to the IBM Spectrum Protect Server. IBM X-Force ID: 226325."}, {"Reference": "CVE-2022-22487", "Description": "An IBM Spectrum Protect storage agent could allow a remote attacker to perform a brute force attack by allowing unlimited attempts to login to the storage agent without locking the administrative ID. A remote attacker could exploit this vulnerability using brute force techniques to gain unauthorized administrative access to both the IBM Spectrum Protect storage agent and the IBM Spectrum Protect Server 8.1.0.000 through 8.1.14 with which it communicates. IBM X-Force ID: 226326."}, {"Reference": "CVE-2022-35925", "Description": "BookWyrm is a social network for tracking reading. Versions prior to 0.4.5 were found to lack rate limiting on authentication views which allows brute-force attacks. This issue has been patched in version 0.4.5. Admins with existing instances will need to update their `nginx.conf` file that was created when the instance was set up. Users are advised advised to upgrade. Users unable to upgrade may update their nginx.conf files with the changes manually."}, {"Reference": "CVE-2022-2778", "Description": "In affected versions of Octopus Deploy it is possible to bypass rate limiting on login using null bytes."}]}
{"ID": "308", "Name": "Use of Single-factor Authentication", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.", "ExtendedDescription": "While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.", "LikelihoodOfExploit": "High", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "1390", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "654", "ViewID": "1000"}, {"Nature": "PeerOf", "CweID": "309", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Bypass Protection Mechanism"], "Note": "If the secret in a single-factor authentication scheme gets compromised, full authentication is possible."}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise."}], "DemonstrativeExamples": [{"ID": "DX-101", "Entries": [{"IntroText": "In both of these examples, a user is logged in if their given password matches a stored password:"}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tunsigned char *check_passwd(char *plaintext) {\n\t\tctext = simple_digest(\"sha1\",plaintext,strlen(plaintext), ... );\n```\n//Login if hash matches stored hash* \n\t\tif (equal(ctext, secret_password())) {\n\t\t```\n\t\t\tlogin_user();\n\t\t}\n\t}\n```"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tString plainText = new String(plainTextIn);\n\tMessageDigest encer = MessageDigest.getInstance(\"SHA\");\n\tencer.update(plainTextIn);\n\tbyte[] digest = password.digest();\n```\n//Login if hash matches stored hash* \n\tif (equal(digest,secret_password())) {\n\t```\n\t\tlogin_user();\n\t}\n```"}, {"BodyText": "This code relies exclusively on a password mechanism (CWE-309) using only one factor of authentication (CWE-308). If an attacker can steal or guess a user's password, they are given full access to their account. Note this code also uses SHA-1, which is a weak hash (CWE-328). It also does not use a salt (CWE-759)."}]}], "ObservedExamples": [{"Reference": "CVE-2022-35248", "Description": "Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-35248"}], "RelatedAttackPatterns": ["16", "49", "509", "55", "555", "560", "561", "565", "600", "644", "645", "652", "653", "70"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2022-35248", "Description": "A improper authentication vulnerability exists in Rocket.Chat <v5, <v4.8.2 and <v4.7.5 that allowed two factor authentication can be bypassed when telling the server to use CAS during login."}]}
{"ID": "309", "Name": "Use of Password System for Primary Authentication", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.", "LikelihoodOfExploit": "High", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "1390", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "654", "ViewID": "1000"}, {"Nature": "PeerOf", "CweID": "308", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "BackgroundDetails": ["Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical."], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Bypass Protection Mechanism", "Gain Privileges or Assume Identity"], "Note": "A password authentication mechanism error will almost always result in attackers being authorized as valid users."}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "\n\nIn order to protect password systems from compromise, the following should be noted:\n\n\n  - Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the passwords are not retrievable. Due to password reuse, this information may be useful in the compromise of other systems these users work with. In order to protect these passwords, they should be stored encrypted, in a non-reversible state, such that the original text password cannot be extracted from the stored value.\n\n  - Password aging should be strictly enforced to ensure that passwords do not remain unchanged for long periods of time. The longer a password remains in use, the higher the probability that it has been compromised. For this reason, passwords should require refreshing periodically, and users should be informed of the risk of passwords which remain in use for too long.\n\n  - Password strength should be enforced intelligently. Rather than restrict passwords to specific content, or specific length, users should be encouraged to use upper and lower case letters, numbers, and symbols in their passwords. The system should also ensure that no passwords are derived from dictionary words.\n\n"}, {"Phase": ["Architecture and Design"], "Description": "Use a zero-knowledge password protocol, such as SRP."}, {"Phase": ["Architecture and Design"], "Description": "Ensure that passwords are stored safely and are not reversible."}, {"Phase": ["Architecture and Design"], "Description": "Implement password aging functionality that requires passwords be changed after a certain point."}, {"Phase": ["Architecture and Design"], "Description": "Use a mechanism for determining the strength of a password and notify the user of weak password use."}, {"Phase": ["Architecture and Design"], "Description": "Inform the user of why password protections are in place, how they work to protect data integrity, and why it is important to heed their warnings."}], "DemonstrativeExamples": [{"ID": "DX-101", "Entries": [{"IntroText": "In both of these examples, a user is logged in if their given password matches a stored password:"}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tunsigned char *check_passwd(char *plaintext) {\n\t\tctext = simple_digest(\"sha1\",plaintext,strlen(plaintext), ... );\n```\n//Login if hash matches stored hash* \n\t\tif (equal(ctext, secret_password())) {\n\t\t```\n\t\t\tlogin_user();\n\t\t}\n\t}\n```"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tString plainText = new String(plainTextIn);\n\tMessageDigest encer = MessageDigest.getInstance(\"SHA\");\n\tencer.update(plainTextIn);\n\tbyte[] digest = password.digest();\n```\n//Login if hash matches stored hash* \n\tif (equal(digest,secret_password())) {\n\t```\n\t\tlogin_user();\n\t}\n```"}, {"BodyText": "This code relies exclusively on a password mechanism (CWE-309) using only one factor of authentication (CWE-308). If an attacker can steal or guess a user's password, they are given full access to their account. Note this code also uses SHA-1, which is a weak hash (CWE-328). It also does not use a salt (CWE-759)."}]}], "RelatedAttackPatterns": ["16", "49", "509", "55", "555", "560", "561", "565", "600", "652", "653", "70"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}}
{"ID": "31", "Name": "Path Traversal: 'dir\\..\\..\\filename'", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize 'dir\\..\\..\\filename' (multiple internal backslash dot dot) sequences that can resolve to a location that is outside of that directory.", "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nThe 'dir\\..\\..\\filename' manipulation is useful for bypassing some path traversal protection schemes. Sometimes a program only removes one \"..\\\" sequence, so multiple \"..\\\" can bypass that check. Alternately, this manipulation could be used to bypass a check for \"..\\\" at the beginning of the pathname, moving up more than one directory level.\n", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "23", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Operating_System", "Class": "Windows", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Confidentiality", "Integrity"], "Impact": ["Read Files or Directories", "Modify Files or Directories"]}], "PotentialMitigations": [{"MitigationID": "MIT-5.1", "Phase": ["Implementation"], "Strategy": "Input Validation", "Description": "\n\nAssume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.\n\n\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"\n\n\nDo not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.\n\n\nWhen validating filenames, use stringent allowlists that limit the character set to be used. If feasible, only allow a single \".\" character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as \"/\" to avoid CWE-36. Use a list of allowable file extensions, which will help to avoid CWE-434.\n\n\nDo not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a denylist, which may be incomplete (CWE-184). For example, filtering \"/\" is insufficient protection if the filesystem also supports the use of \"\\\" as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if \"../\" sequences are removed from the \".../...//\" string in a sequential fashion, two instances of \"../\" would be removed from the original string, but the remaining characters would still form the \"../\" string.\n"}, {"MitigationID": "MIT-20", "Phase": ["Implementation"], "Strategy": "Input Validation", "Description": "Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked."}], "ObservedExamples": [{"Reference": "CVE-2002-0160", "Description": "The administration function in Access Control Server allows remote attackers to read HTML, Java class, and image files outside the web root via a \"..\\..\" sequence in the URL to port 2002.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0160"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}}
{"ID": "311", "Name": "Missing Encryption of Sensitive Data", "Abstraction": "Class", "Structure": "Simple", "Status": "Draft", "Description": "The product does not encrypt sensitive or critical information before storage or transmission.", "ExtendedDescription": "The lack of proper data encryption passes up the guarantees of confidentiality, integrity, and accountability that properly implemented encryption conveys.", "LikelihoodOfExploit": "High", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "693", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase."}, {"Phase": "Operation"}], "CommonConsequences": [{"Scope": ["Confidentiality"], "Impact": ["Read Application Data"], "Note": "If the application does not use a secure channel, such as SSL, to exchange sensitive information, it is possible for an attacker with access to the network traffic to sniff packets from the connection and uncover the data. This attack is not technically difficult, but does require physical access to some portion of the network over which the sensitive data travels. This access is usually somewhere near where the user is connected to the network (such as a colleague on the company network) but can be anywhere along the path from the user to the end server."}, {"Scope": ["Confidentiality", "Integrity"], "Impact": ["Modify Application Data"], "Note": "Omitting the use of encryption in any program which transfers data over a network of any kind should be considered on par with delivering the data sent to each user on the local networks of both the sender and receiver. Worse, this omission allows for the injection of data into a stream of communication between two parties -- with no means for the victims to separate valid data from invalid. In this day of widespread network attacks and password collection sniffers, it is an unnecessary risk to omit encryption from the design of any system which might benefit from it."}], "DetectionMethods": [{"Method": "Manual Analysis", "Description": "The characterizaton of sensitive data often requires domain-specific understanding, so manual methods are useful. However, manual efforts might not achieve desired code coverage within limited time constraints. Black box methods may produce artifacts (e.g. stored data or unencrypted network transfer) that require manual evaluation.", "Effectiveness": "High"}, {"Method": "Automated Analysis", "Description": "Automated measurement of the entropy of an input/output source may indicate the use or lack of encryption, but human analysis is still required to distinguish intentionally-unencrypted data (e.g. metadata) from sensitive data."}, {"Method": "Manual Static Analysis - Binary or Bytecode", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tBinary / Bytecode disassembler - then use manual analysis for vulnerabilities & anomalies", "Effectiveness": "SOAR Partial"}, {"Method": "Dynamic Analysis with Automated Results Interpretation", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tWeb Application Scanner\n\t\tWeb Services Scanner\n\t\tDatabase Scanners", "Effectiveness": "SOAR Partial"}, {"Method": "Dynamic Analysis with Manual Results Interpretation", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tNetwork Sniffer\n\t```\n\t\tCost effective for partial coverage:\n```\n\n\t\tFuzz Tester\n\t\tFramework-based Fuzzer\n\t\tAutomated Monitored Execution\n\t\tMan-in-the-middle attack tool", "Effectiveness": "High"}, {"Method": "Manual Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tFocused Manual Spotcheck - Focused manual analysis of source\n\t\tManual Source Code Review (not inspections)", "Effectiveness": "High"}, {"Method": "Automated Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tContext-configured Source Code Weakness Analyzer", "Effectiveness": "SOAR Partial"}, {"Method": "Architecture or Design Review", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tInspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.)\n\t\tFormal Methods / Correct-By-Construction\n\t```\n\t\tCost effective for partial coverage:\n```\n\n\t\tAttack Modeling", "Effectiveness": "High"}], "PotentialMitigations": [{"Phase": ["Requirements"], "Description": "Clearly specify which data or resources are valuable enough that they should be protected by encryption. Require that any transmission or storage of this data/resource should use well-vetted encryption algorithms."}, {"Phase": ["Architecture and Design"], "Description": "\n\nEnsure that encryption is properly integrated into the system design, including but not necessarily limited to:\n\n\n  - Encryption that is needed to store or transmit private data of the users of the system\n\n  - Encryption that is needed to protect the system itself from unauthorized disclosure or tampering\n\nIdentify the separate needs and contexts for encryption:\n\n  - One-way (i.e., only the user or recipient needs to have the key). This can be achieved using public key cryptography, or other techniques in which the encrypting party (i.e., the product) does not need to have access to a private key.\n\n  - Two-way (i.e., the encryption can be automatically performed on behalf of a user, but the key must be available so that the plaintext can be automatically recoverable by that user). This requires storage of the private key in a format that is recoverable only by the user (or perhaps by the operating system) in a way that cannot be recovered by others.\n\nUsing threat modeling or other techniques, assume that data can be compromised through a separate vulnerability or weakness, and determine where encryption will be most effective. Ensure that data that should be private is not being inadvertently exposed using weaknesses such as insecure permissions (CWE-732). [REF-7]"}, {"MitigationID": "MIT-24", "Phase": ["Architecture and Design"], "Strategy": "Libraries or Frameworks", "Description": "\n\nWhen there is a need to store or transmit sensitive data, use strong, up-to-date cryptographic algorithms to encrypt that data. Select a well-vetted algorithm that is currently considered to be strong by experts in the field, and use well-tested implementations. As with all cryptographic mechanisms, the source code should be available for analysis.\n\n\nFor example, US government systems require FIPS 140-2 certification.\n\n\nDo not develop custom or private cryptographic algorithms. They will likely be exposed to attacks that are well-understood by cryptographers. Reverse engineering techniques are mature. If the algorithm can be compromised if attackers find out how it works, then it is especially weak.\n\n\nPeriodically ensure that the cryptography has not become obsolete. Some older algorithms, once thought to require a billion years of computing time, can now be broken in days or hours. This includes MD4, MD5, SHA1, DES, and other algorithms that were once regarded as strong. [REF-267]\n"}, {"MitigationID": "MIT-46", "Phase": ["Architecture and Design"], "Strategy": "Separation of Privilege", "Description": "\n\nCompartmentalize the system to have \"safe\" areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area.\n\n\nEnsure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.\n"}, {"MitigationID": "MIT-25", "Phase": ["Implementation", "Architecture and Design"], "Description": "When using industry-approved techniques, use them correctly. Don't cut corners by skipping resource-intensive steps (CWE-325). These steps are often essential for preventing common attacks."}, {"MitigationID": "MIT-33", "Phase": ["Implementation"], "Strategy": "Attack Surface Reduction", "Description": "Use naming conventions and strong types to make it easier to spot when sensitive data is being used. When creating structures, objects, or other complex entities, separate the sensitive and non-sensitive data as much as possible.", "Effectiveness": "Defense in Depth", "EffectivenessNotes": "This makes it easier to spot places in the code where data is being used that is unencrypted."}], "DemonstrativeExamples": [{"ID": "DX-40", "Entries": [{"IntroText": "This code writes a user's login information to a cookie so the user does not have to login again later."}, {"Nature": "Bad", "Language": "PHP", "ExampleCode": "```\n\tfunction persistLogin($username, $password){\n\t\t$data = array(\"username\" => $username, \"password\"=> $password);\n\t\tsetcookie (\"userdata\", $data);\n\t}\n```"}, {"BodyText": "The code stores the user's username and password in plaintext in a cookie on the user's machine. This exposes the user's login information if their computer is compromised by an attacker. Even if the user's machine is not compromised, this weakness combined with cross-site scripting (CWE-79) could allow an attacker to remotely copy the cookie."}, {"BodyText": "Also note this example code also exhibits Plaintext Storage in a Cookie (CWE-315)."}]}, {"ID": "DX-41", "Entries": [{"IntroText": "The following code attempts to establish a connection, read in a password, then store it to a buffer."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tserver.sin_family = AF_INET; hp = gethostbyname(argv[1]);\n\tif (hp==NULL) error(\"Unknown host\");\n\tmemcpy( (char *)&server.sin_addr,(char *)hp->h_addr,hp->h_length);\n\tif (argc < 3) port = 80;\n\telse port = (unsigned short)atoi(argv[3]);\n\tserver.sin_port = htons(port);\n\tif (connect(sock, (struct sockaddr *)&server, sizeof server) < 0) error(\"Connecting\");\n\t...\n\twhile ((n=read(sock,buffer,BUFSIZE-1))!=-1) {\n\t\t\twrite(dfd,password_buffer,n);\n\t\t\t...\n```"}, {"BodyText": "While successful, the program does not encrypt the data before writing it to a buffer, possibly exposing it to unauthorized actors."}]}, {"ID": "DX-42", "Entries": [{"IntroText": "The following code attempts to establish a connection to a site to communicate sensitive information."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\ttry {\n\t\tURL u = new URL(\"http://www.secret.example.org/\");\n\t\tHttpURLConnection hu = (HttpURLConnection) u.openConnection();\n\t\thu.setRequestMethod(\"PUT\");\n\t\thu.connect();\n\t\tOutputStream os = hu.getOutputStream();\n\t\thu.disconnect();\n\t}\n\tcatch (IOException e) {\n```\n//...* \n\t\t\t}"}, {"BodyText": "Though a connection is successfully made, the connection is unencrypted and it is possible that all sensitive data sent to or received from the server will be read by unintended actors."}]}], "ObservedExamples": [{"Reference": "CVE-2009-2272", "Description": "password and username stored in cleartext in a cookie", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2272"}, {"Reference": "CVE-2009-1466", "Description": "password stored in cleartext in a file with insecure permissions", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1466"}, {"Reference": "CVE-2009-0152", "Description": "chat program disables SSL in some circumstances even when the user says to use SSL.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0152"}, {"Reference": "CVE-2009-1603", "Description": "Chain: product uses an incorrect public exponent when generating an RSA key, which effectively disables the encryption", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1603"}, {"Reference": "CVE-2009-0964", "Description": "storage of unencrypted passwords in a database", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0964"}, {"Reference": "CVE-2008-6157", "Description": "storage of unencrypted passwords in a database", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-6157"}, {"Reference": "CVE-2008-6828", "Description": "product stores a password in cleartext in memory", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-6828"}, {"Reference": "CVE-2008-1567", "Description": "storage of a secret key in cleartext in a temporary file", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1567"}, {"Reference": "CVE-2008-0174", "Description": "SCADA product uses HTTP Basic Authentication, which is not encrypted", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0174"}, {"Reference": "CVE-2007-5778", "Description": "login credentials stored unencrypted in a registry key", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5778"}, {"Reference": "CVE-2002-1949", "Description": "Passwords transmitted in cleartext.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1949"}, {"Reference": "CVE-2008-4122", "Description": "Chain: Use of HTTPS cookie without \"secure\" flag causes it to be transmitted across unencrypted HTTP.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4122"}, {"Reference": "CVE-2008-3289", "Description": "Product sends password hash in cleartext in violation of intended policy.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3289"}, {"Reference": "CVE-2008-4390", "Description": "Remote management feature sends sensitive information including passwords in cleartext.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4390"}, {"Reference": "CVE-2007-5626", "Description": "Backup routine sends password in cleartext in email.", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5626"}, {"Reference": "CVE-2004-1852", "Description": "Product transmits Blowfish encryption key in cleartext.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1852"}, {"Reference": "CVE-2008-0374", "Description": "Printer sends configuration information, including administrative password, in cleartext.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0374"}, {"Reference": "CVE-2007-4961", "Description": "Chain: cleartext transmission of the MD5 hash of password enables attacks against a server that is susceptible to replay (CWE-294).", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4961"}, {"Reference": "CVE-2007-4786", "Description": "Product sends passwords in cleartext to a log server.", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4786"}, {"Reference": "CVE-2005-3140", "Description": "Product sends file with cleartext passwords in e-mail message intended for diagnostic purposes.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3140"}], "RelatedAttackPatterns": ["157", "158", "204", "31", "37", "383", "384", "385", "386", "387", "388", "477", "609", "65"], "MappingNotes": {"Usage": "Discouraged", "Rationale": "CWE-311 is high-level with more precise children available. It is a level-1 Class (i.e., a child of a Pillar).", "Comments": "Consider children CWE-312: Cleartext Storage of Sensitive Information or CWE-319: Cleartext Transmission of Sensitive Information.", "Reasons": ["Abstraction"]}, "Notes": [{"Type": "Relationship", "Note": "There is an overlapping relationship between insecure storage of sensitive information (CWE-922) and missing encryption of sensitive information (CWE-311). Encryption is often used to prevent an attacker from reading the sensitive data. However, encryption does not prevent the attacker from erasing or overwriting the data."}], "Top25Examples": [{"Reference": "CVE-2021-37050", "Description": "There is a Missing sensitive data encryption vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may affect service confidentiality."}, {"Reference": "CVE-2022-0183", "Description": "Missing encryption of sensitive data vulnerability in 'MIRUPASS' PW10 firmware all versions and 'MIRUPASS' PW20 firmware all versions allows an attacker who can physically access the device to obtain the stored passwords."}, {"Reference": "CVE-2022-35860", "Description": "Missing AES encryption in Corsair K63 Wireless 3.1.3 allows physically proximate attackers to inject and sniff keystrokes via 2.4 GHz radio transmissions."}, {"Reference": "CVE-2022-38658", "Description": "BigFix deployments that have installed the Notification Service on Windows are susceptible to disclosing SMTP BigFix operator's sensitive data in clear text. Operators who use Notification Service related content from BES Support are at risk of leaving their SMTP sensitive data exposed. "}, {"Reference": "CVE-2021-27779", "Description": "VersionVault Express exposes sensitive information that an attacker can use to impersonate the server or eavesdrop on communications with the server."}, {"Reference": "CVE-2021-27783", "Description": "User generated PPKG file for Bulk Enroll may have unencrypted sensitive information exposed."}, {"Reference": "CVE-2022-30237", "Description": "A CWE-311: Missing Encryption of Sensitive Data vulnerability exists that could allow authentication credentials to be recovered when an attacker breaks the encoding. Affected Products: Wiser Smart, EER21000 & EER21001 (V4.5 and prior)"}, {"Reference": "CVE-2022-39014", "Description": "Under certain conditions SAP BusinessObjects Business Intelligence Platform Central Management Console (CMC) - version 430, allows an attacker to access certain unencrypted sensitive parameters which would otherwise be restricted."}]}
{"ID": "312", "Name": "Cleartext Storage of Sensitive Information", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product stores sensitive information in cleartext within a resource that might be accessible to another control sphere.", "ExtendedDescription": "\n\nBecause the information is stored in cleartext (i.e., unencrypted), attackers could potentially read it. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.\n\n\nWhen organizations adopt cloud services, it can be easier for attackers to access the data from anywhere on the Internet.\n\n\nIn some systems/environments such as cloud, the use of \"double encryption\" (at both the software and hardware layer) might be required, and the developer might be solely responsible for both layers, instead of shared responsibility with the administrator of the broader system/environment.\n", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "311", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "311", "ViewID": "1003", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "922", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "Cloud Computing", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "ICS/OT", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "Mobile", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase."}], "CommonConsequences": [{"Scope": ["Confidentiality"], "Impact": ["Read Application Data"], "Note": "An attacker with access to the system could read sensitive information stored in cleartext."}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"Phase": ["Implementation", "System Configuration", "Operation"], "Description": "When storing data in the cloud (e.g., S3 buckets, Azure blobs, Google Cloud Storage, etc.), use the provider's controls to encrypt the data at rest. [REF-1297] [REF-1299] [REF-1301]"}], "DemonstrativeExamples": [{"ID": "DX-44", "Entries": [{"IntroText": "The following code excerpt stores a plaintext user account ID in a browser cookie."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tresponse.addCookie( new Cookie(\"userAccountID\", acctID);\n```"}, {"BodyText": "Because the account ID is in plaintext, the user's account information is exposed if their computer is compromised by an attacker."}]}, {"ID": "DX-40", "Entries": [{"IntroText": "This code writes a user's login information to a cookie so the user does not have to login again later."}, {"Nature": "Bad", "Language": "PHP", "ExampleCode": "```\n\tfunction persistLogin($username, $password){\n\t\t$data = array(\"username\" => $username, \"password\"=> $password);\n\t\tsetcookie (\"userdata\", $data);\n\t}\n```"}, {"BodyText": "The code stores the user's username and password in plaintext in a cookie on the user's machine. This exposes the user's login information if their computer is compromised by an attacker. Even if the user's machine is not compromised, this weakness combined with cross-site scripting (CWE-79) could allow an attacker to remotely copy the cookie."}, {"BodyText": "Also note this example code also exhibits Plaintext Storage in a Cookie (CWE-315)."}]}, {"ID": "DX-41", "Entries": [{"IntroText": "The following code attempts to establish a connection, read in a password, then store it to a buffer."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tserver.sin_family = AF_INET; hp = gethostbyname(argv[1]);\n\tif (hp==NULL) error(\"Unknown host\");\n\tmemcpy( (char *)&server.sin_addr,(char *)hp->h_addr,hp->h_length);\n\tif (argc < 3) port = 80;\n\telse port = (unsigned short)atoi(argv[3]);\n\tserver.sin_port = htons(port);\n\tif (connect(sock, (struct sockaddr *)&server, sizeof server) < 0) error(\"Connecting\");\n\t...\n\twhile ((n=read(sock,buffer,BUFSIZE-1))!=-1) {\n\t\t\twrite(dfd,password_buffer,n);\n\t\t\t...\n```"}, {"BodyText": "While successful, the program does not encrypt the data before writing it to a buffer, possibly exposing it to unauthorized actors."}]}, {"ID": "DX-43", "Entries": [{"IntroText": "The following examples show a portion of properties and configuration files for Java and ASP.NET applications. The files include username and password information but they are stored in cleartext."}, {"BodyText": "This Java example shows a properties file with a cleartext username / password pair."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n```\n# Java Web App ResourceBundle properties file* \n\t...\n\twebapp.ldap.username=secretUsername\n\twebapp.ldap.password=secretPassword\n\t..."}, {"BodyText": "The following example shows a portion of a configuration file for an ASP.Net application. This configuration file includes username and password information for a connection to a database but the pair is stored in cleartext."}, {"Nature": "Bad", "Language": "ASP.NET", "ExampleCode": "```\n\t...\n\t<connectionStrings>\n\t\t<add name=\"ud_DEV\" connectionString=\"connectDB=uDB; uid=db2admin; pwd=password; dbalias=uDB;\" providerName=\"System.Data.Odbc\" />\n\t</connectionStrings>\n\t...\n```"}, {"BodyText": "Username and password information should not be included in a configuration file or a properties file in cleartext as this will allow anyone who can read the file access to the resource. If possible, encrypt this information."}]}, {"ID": "DX-153", "Entries": [{"IntroText": "In 2022, the OT:ICEFALL study examined products by 10 different Operational Technology (OT) vendors. The researchers reported 56 vulnerabilities and said that the products were \"insecure by design\" [REF-1283]. If exploited, these vulnerabilities often allowed adversaries to change how the products operated, ranging from denial of service to changing the code that the products executed. Since these products were often used in industries such as power, electrical, water, and others, there could even be safety implications."}, {"BodyText": "At least one OT product stored a password in plaintext."}]}, {"ID": "DX-155", "Entries": [{"IntroText": "In 2021, a web site operated by PeopleGIS stored data of US municipalities in Amazon Web Service (AWS) Simple Storage Service (S3) buckets."}, {"Nature": "Bad", "Language": "Other", "ExampleCode": "```\n\tA security researcher found 86 S3 buckets that could be accessed without authentication (CWE-306) and stored data unencrypted (CWE-312). These buckets exposed over 1000 GB of data and 1.6 million files including physical addresses, phone numbers, tax documents, pictures of driver's license IDs, etc. [REF-1296] [REF-1295]\n```"}, {"BodyText": "While it was not publicly disclosed how the data was protected after discovery, multiple options could have been considered."}, {"Nature": "Good", "Language": "Other", "ExampleCode": "```\n\tThe sensitive information could have been protected by ensuring that the buckets did not have public read access, e.g., by enabling the s3-account-level-public-access-blocks-periodic rule to Block Public Access. In addition, the data could have been encrypted at rest using the appropriate S3 settings, e.g., by enabling server-side encryption using the s3-bucket-server-side-encryption-enabled setting. Other settings are available to further prevent bucket data from being leaked. [REF-1297]\n```"}]}, {"Entries": [{"IntroText": "Consider the following PowerShell command examples for encryption scopes of Azure storage objects. In the first example, an encryption scope is set for the storage account."}, {"Nature": "Bad", "Language": "Shell", "ExampleCode": "```\n\tNew-AzStorageEncryptionScope -ResourceGroupName \"MyResourceGroup\" -AccountName \"MyStorageAccount\" -EncryptionScopeName testscope -StorageEncryption\n```"}, {"BodyText": "The result (edited and formatted for readability) might be:"}, {"Nature": "Bad", "Language": "Other", "ExampleCode": "```\n\tResourceGroupName: MyResourceGroup, StorageAccountName: MyStorageAccount\n```\n\n```\n```\n\n\t\t\n\t\t\tName\n\t\t\tState\n\t\t\tSource\n\t\t\tRequireInfrastructureEncryption\n\t\t\n\t\t\ttestscope\n\t\t\tEnabled\n\t\t\tMicrosoft.Storage"}, {"BodyText": "However, the empty string under RequireInfrastructureEncryption indicates this service was not enabled at the time of creation, because the -RequireInfrastructureEncryption argument was not specified in the command."}, {"BodyText": "Including the -RequireInfrastructureEncryption argument addresses the issue:"}, {"Nature": "Good", "Language": "Shell", "ExampleCode": "```\n\tNew-AzStorageEncryptionScope -ResourceGroupName \"MyResourceGroup\" -AccountName \"MyStorageAccount\" -EncryptionScopeName testscope -StorageEncryption -RequireInfrastructureEncryption\n```"}, {"BodyText": "This produces the report:"}, {"Nature": "Result", "Language": "Other", "ExampleCode": "```\n\tResourceGroupName: MyResourceGroup, StorageAccountName: MyStorageAccount\n```\n\n```\n```\n\n\t\t\n\t\t\tName\n\t\t\tState\n\t\t\tSource\n\t\t\tRequireInfrastructureEncryption\n\t\t\n\t\t\ttestscope\n\t\t\tEnabled\n\t\t\tMicrosoft.Keyvault\n\t\t\tTrue"}, {"BodyText": "In a scenario where both software and hardware layer encryption is required (\"double encryption\"), Azure's infrastructure encryption setting can be enabled via the CLI or Portal. An important note is that infrastructure hardware encryption cannot be enabled or disabled after a blob is created. Furthermore, the default value for infrastructure encryption is disabled in blob creations."}]}], "ObservedExamples": [{"Reference": "CVE-2022-30275", "Description": "Remote Terminal Unit (RTU) uses a driver that relies on a password stored in plaintext.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30275"}, {"Reference": "CVE-2009-2272", "Description": "password and username stored in cleartext in a cookie", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2272"}, {"Reference": "CVE-2009-1466", "Description": "password stored in cleartext in a file with insecure permissions", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1466"}, {"Reference": "CVE-2009-0152", "Description": "chat program disables SSL in some circumstances even when the user says to use SSL.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0152"}, {"Reference": "CVE-2009-1603", "Description": "Chain: product uses an incorrect public exponent when generating an RSA key, which effectively disables the encryption", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1603"}, {"Reference": "CVE-2009-0964", "Description": "storage of unencrypted passwords in a database", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0964"}, {"Reference": "CVE-2008-6157", "Description": "storage of unencrypted passwords in a database", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-6157"}, {"Reference": "CVE-2008-6828", "Description": "product stores a password in cleartext in memory", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-6828"}, {"Reference": "CVE-2008-1567", "Description": "storage of a secret key in cleartext in a temporary file", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-1567"}, {"Reference": "CVE-2008-0174", "Description": "SCADA product uses HTTP Basic Authentication, which is not encrypted", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0174"}, {"Reference": "CVE-2007-5778", "Description": "login credentials stored unencrypted in a registry key", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5778"}, {"Reference": "CVE-2001-1481", "Description": "Plaintext credentials in world-readable file.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1481"}, {"Reference": "CVE-2005-1828", "Description": "Password in cleartext in config file.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1828"}, {"Reference": "CVE-2005-2209", "Description": "Password in cleartext in config file.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2209"}, {"Reference": "CVE-2002-1696", "Description": "Decrypted copy of a message written to disk given a combination of options and when user replies to an encrypted message.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1696"}, {"Reference": "CVE-2004-2397", "Description": "Plaintext storage of private key and passphrase in log file when user imports the key.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2397"}, {"Reference": "CVE-2002-1800", "Description": "Admin password in plaintext in a cookie.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1800"}, {"Reference": "CVE-2001-1537", "Description": "Default configuration has cleartext usernames/passwords in cookie.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1537"}, {"Reference": "CVE-2001-1536", "Description": "Usernames/passwords in cleartext in cookies.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1536"}, {"Reference": "CVE-2005-2160", "Description": "Authentication information stored in cleartext in a cookie.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2160"}], "RelatedAttackPatterns": ["37"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Terminology", "Note": "Different people use \"cleartext\" and \"plaintext\" to mean the same thing: the lack of encryption. However, within cryptography, these have more precise meanings. Plaintext is the information just before it is fed into a cryptographic algorithm, including already-encrypted text. Cleartext is any information that is unencrypted, although it might be in an encoded form that is not easily human-readable (such as base64 encoding)."}], "Top25Examples": [{"Reference": "CVE-2022-37857", "Description": "bilde2910 Hauk v1.6.1 requires a hardcoded password which by default is blank. This hardcoded password is hashed but stored within the config.php file server-side as well as in clear-text on the android client device by default."}, {"Reference": "CVE-2022-26390", "Description": "The Baxter Spectrum Wireless Battery Module (WBM) stores network credentials and PHI (only applicable to Spectrum IQ pumps using auto programming) in unencrypted form. An attacker with physical access to a device that hasn't had all data and settings erased may be able to extract sensitive information."}, {"Reference": "CVE-2022-22069", "Description": "Devices with keyprotect off may store unencrypted keybox in RPMB and cause cryptographic issue in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Wearables"}, {"Reference": "CVE-2022-27549", "Description": "HCL Launch may store certain data for recurring activities in a plain text format."}, {"Reference": "CVE-2022-20219", "Description": "In multiple functions of StorageManagerService.java and UserManagerService.java, there is a possible way to leave user's directories unencrypted due to a logic error in the code. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12LAndroid ID: A-224585613"}, {"Reference": "CVE-2022-29959", "Description": "Emerson OpenBSI through 2022-04-29 mishandles credential storage. It is an engineering environment for the ControlWave and Bristol Babcock line of RTUs. This environment provides access control functionality through user authentication and privilege management. The credentials for various users are stored insecurely in the SecUsers.ini file by using a simple string transformation rather than a cryptographic mechanism."}]}
{"ID": "313", "Name": "Cleartext Storage in a File or on Disk", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "The product stores sensitive information in cleartext in a file, or on disk.", "ExtendedDescription": "The sensitive information could be read by attackers with access to the file, or with physical or administrator access to the raw disk. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "312", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase."}], "CommonConsequences": [{"Scope": ["Confidentiality"], "Impact": ["Read Application Data"]}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "DemonstrativeExamples": [{"ID": "DX-43", "Entries": [{"IntroText": "The following examples show a portion of properties and configuration files for Java and ASP.NET applications. The files include username and password information but they are stored in cleartext."}, {"BodyText": "This Java example shows a properties file with a cleartext username / password pair."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n```\n# Java Web App ResourceBundle properties file* \n\t...\n\twebapp.ldap.username=secretUsername\n\twebapp.ldap.password=secretPassword\n\t..."}, {"BodyText": "The following example shows a portion of a configuration file for an ASP.Net application. This configuration file includes username and password information for a connection to a database but the pair is stored in cleartext."}, {"Nature": "Bad", "Language": "ASP.NET", "ExampleCode": "```\n\t...\n\t<connectionStrings>\n\t\t<add name=\"ud_DEV\" connectionString=\"connectDB=uDB; uid=db2admin; pwd=password; dbalias=uDB;\" providerName=\"System.Data.Odbc\" />\n\t</connectionStrings>\n\t...\n```"}, {"BodyText": "Username and password information should not be included in a configuration file or a properties file in cleartext as this will allow anyone who can read the file access to the resource. If possible, encrypt this information."}]}], "ObservedExamples": [{"Reference": "CVE-2001-1481", "Description": "Cleartext credentials in world-readable file.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1481"}, {"Reference": "CVE-2005-1828", "Description": "Password in cleartext in config file.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1828"}, {"Reference": "CVE-2005-2209", "Description": "Password in cleartext in config file.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2209"}, {"Reference": "CVE-2002-1696", "Description": "Decrypted copy of a message written to disk given a combination of options and when user replies to an encrypted message.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1696"}, {"Reference": "CVE-2004-2397", "Description": "Cleartext storage of private key and passphrase in log file when user imports the key.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2397"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Terminology", "Note": "Different people use \"cleartext\" and \"plaintext\" to mean the same thing: the lack of encryption. However, within cryptography, these have more precise meanings. Plaintext is the information just before it is fed into a cryptographic algorithm, including already-encrypted text. Cleartext is any information that is unencrypted, although it might be in an encoded form that is not easily human-readable (such as base64 encoding)."}], "Top25Examples": [{"Reference": "CVE-2022-42931", "Description": "Logins saved by Firefox should be managed by the Password Manager component which uses encryption to save files on-disk. Instead, the username (not password) was saved by the Form Manager to an unencrypted file on disk. This vulnerability affects Firefox < 106."}]}
{"ID": "314", "Name": "Cleartext Storage in the Registry", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "The product stores sensitive information in cleartext in the registry.", "ExtendedDescription": "Attackers can read the information by accessing the registry key. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "312", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase."}], "CommonConsequences": [{"Scope": ["Confidentiality"], "Impact": ["Read Application Data"]}], "ObservedExamples": [{"Reference": "CVE-2005-2227", "Description": "Cleartext passwords in registry key.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2227"}], "RelatedAttackPatterns": ["37"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Terminology", "Note": "Different people use \"cleartext\" and \"plaintext\" to mean the same thing: the lack of encryption. However, within cryptography, these have more precise meanings. Plaintext is the information just before it is fed into a cryptographic algorithm, including already-encrypted text. Cleartext is any information that is unencrypted, although it might be in an encoded form that is not easily human-readable (such as base64 encoding)."}], "Top25Examples": [{"Reference": "CVE-2022-22031", "Description": "Windows Credential Guard Domain-joined Public Key Elevation of Privilege Vulnerability"}]}
{"ID": "315", "Name": "Cleartext Storage of Sensitive Information in a Cookie", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "The product stores sensitive information in cleartext in a cookie.", "ExtendedDescription": "Attackers can use widely-available tools to view the cookie and read the sensitive information. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "312", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase."}], "CommonConsequences": [{"Scope": ["Confidentiality"], "Impact": ["Read Application Data"]}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "DemonstrativeExamples": [{"ID": "DX-44", "Entries": [{"IntroText": "The following code excerpt stores a plaintext user account ID in a browser cookie."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tresponse.addCookie( new Cookie(\"userAccountID\", acctID);\n```"}, {"BodyText": "Because the account ID is in plaintext, the user's account information is exposed if their computer is compromised by an attacker."}]}], "ObservedExamples": [{"Reference": "CVE-2002-1800", "Description": "Admin password in cleartext in a cookie.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1800"}, {"Reference": "CVE-2001-1537", "Description": "Default configuration has cleartext usernames/passwords in cookie.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1537"}, {"Reference": "CVE-2001-1536", "Description": "Usernames/passwords in cleartext in cookies.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1536"}, {"Reference": "CVE-2005-2160", "Description": "Authentication information stored in cleartext in a cookie.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2160"}], "RelatedAttackPatterns": ["31", "37", "39", "74"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Terminology", "Note": "Different people use \"cleartext\" and \"plaintext\" to mean the same thing: the lack of encryption. However, within cryptography, these have more precise meanings. Plaintext is the information just before it is fed into a cryptographic algorithm, including already-encrypted text. Cleartext is any information that is unencrypted, although it might be in an encoded form that is not easily human-readable (such as base64 encoding)."}], "Top25Examples": [{"Reference": "CVE-2021-45025", "Description": "ASG technologies ( A Rocket Software Company) ASG-Zena Cross Platform Server Enterprise Edition 4.2.1 is vulnerable to Cleartext Storage of Sensitive Information in a Cookie."}]}
{"ID": "316", "Name": "Cleartext Storage of Sensitive Information in Memory", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "The product stores sensitive information in cleartext in memory.", "ExtendedDescription": "\n\nThe sensitive memory might be saved to disk, stored in a core dump, or remain uncleared if the product crashes, or if the programmer does not properly clear the memory before freeing it.\n\n\nIt could be argued that such problems are usually only exploitable by those with administrator privileges. However, swapping could cause the memory to be written to disk and leave it accessible to physical attack afterwards. Core dump files might have insecure permissions or be stored in archive files that are accessible to untrusted people. Or, uncleared sensitive memory might be inadvertently exposed to attackers due to another weakness.\n", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "312", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase."}], "CommonConsequences": [{"Scope": ["Confidentiality"], "Impact": ["Read Memory"]}], "ObservedExamples": [{"Reference": "CVE-2001-1517", "Description": "Sensitive authentication information in cleartext in memory.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1517"}, {"Reference": "CVE-2001-0984", "Description": "Password protector leaves passwords in memory when window is minimized, even when \"clear password when minimized\" is set.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0984"}, {"Reference": "CVE-2003-0291", "Description": "SSH client does not clear credentials from memory.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0291"}], "AffectedResources": ["Memory"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Relationship", "Note": "This could be a resultant weakness, e.g. if the compiler removes code that was intended to wipe memory."}, {"Type": "Terminology", "Note": "Different people use \"cleartext\" and \"plaintext\" to mean the same thing: the lack of encryption. However, within cryptography, these have more precise meanings. Plaintext is the information just before it is fed into a cryptographic algorithm, including already-encrypted text. Cleartext is any information that is unencrypted, although it might be in an encoded form that is not easily human-readable (such as base64 encoding)."}], "Top25Examples": [{"Reference": "CVE-2022-29832", "Description": "Cleartext Storage of Sensitive Information in Memory vulnerability in Mitsubishi Electric Corporation GX Works3 versions 1.015R and later, GX Works2 all versions and GX Developer versions 8.40S and later allows a remote unauthenticated attacker to disclose sensitive information. As a result, unauthenticated users could obtain information about the project file for MELSEC safety CPU modules or project file for MELSEC Q/FX/L series with security setting."}, {"Reference": "CVE-2022-31205", "Description": "In Omron CS series, CJ series, and CP series PLCs through 2022-05-18, the password for access to the Web UI is stored in memory area D1449...D1452 and can be read out using the Omron FINS protocol without any further authentication."}]}
{"ID": "317", "Name": "Cleartext Storage of Sensitive Information in GUI", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "The product stores sensitive information in cleartext within the GUI.", "ExtendedDescription": "An attacker can often obtain data from a GUI, even if hidden, by using an API to directly access GUI objects such as windows and menus. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "312", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Operating_System", "Class": "Windows", "Prevalence": "Sometimes"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase."}], "CommonConsequences": [{"Scope": ["Confidentiality"], "Impact": ["Read Memory", "Read Application Data"]}], "ObservedExamples": [{"Reference": "CVE-2002-1848", "Description": "Unencrypted passwords stored in GUI dialog may allow local users to access the passwords.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1848"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Terminology", "Note": "Different people use \"cleartext\" and \"plaintext\" to mean the same thing: the lack of encryption. However, within cryptography, these have more precise meanings. Plaintext is the information just before it is fed into a cryptographic algorithm, including already-encrypted text. Cleartext is any information that is unencrypted, although it might be in an encoded form that is not easily human-readable (such as base64 encoding)."}]}
{"ID": "318", "Name": "Cleartext Storage of Sensitive Information in Executable", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "The product stores sensitive information in cleartext in an executable.", "ExtendedDescription": "Attackers can reverse engineer binary code to obtain secret data. This is especially easy when the cleartext is plain ASCII. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "312", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Confidentiality"], "Impact": ["Read Application Data"]}], "ObservedExamples": [{"Reference": "CVE-2005-1794", "Description": "Product stores RSA private key in a DLL and uses it to sign a certificate, allowing spoofing of servers and Adversary-in-the-Middle (AITM) attacks.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1794"}, {"Reference": "CVE-2001-1527", "Description": "administration passwords in cleartext in executable", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1527"}], "RelatedAttackPatterns": ["37", "65"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Terminology", "Note": "Different people use \"cleartext\" and \"plaintext\" to mean the same thing: the lack of encryption. However, within cryptography, these have more precise meanings. Plaintext is the information just before it is fed into a cryptographic algorithm, including already-encrypted text. Cleartext is any information that is unencrypted, although it might be in an encoded form that is not easily human-readable (such as base64 encoding)."}]}
{"ID": "319", "Name": "Cleartext Transmission of Sensitive Information", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.", "ExtendedDescription": "\n\nMany communication channels can be \"sniffed\" (monitored) by adversaries during data transmission. For example, in networking, packets can traverse many intermediary nodes from the source to the destination, whether across the internet, an internal network, the cloud, etc. Some actors might have privileged access to a network interface or any link along the channel, such as a router, but they might not be authorized to collect the underlying data. As a result, network traffic could be sniffed by adversaries, spilling security-critical data.\n\n\nApplicable communication channels are not limited to software products. Applicable channels include hardware-specific technologies such as internal hardware networks and external debug channels, supporting remote JTAG debugging. When mitigations are not applied to combat adversaries within the product's threat model, this weakness significantly lowers the difficulty of exploitation by such adversaries.\n\n\nWhen full communications are recorded or logged, such as with a packet dump, an adversary could attempt to obtain the dump long after the transmission has occurred and try to \"sniff\" the cleartext from the recorded communications in the dump itself. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information. \n", "LikelihoodOfExploit": "High", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "311", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "311", "ViewID": "1003", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "Cloud Computing", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "Mobile", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "ICS/OT", "Prevalence": "Often"}, {"Type": "Technology", "Class": "System on Chip", "Prevalence": "Undetermined"}, {"Type": "Technology", "Name": "Test/Debug Hardware", "Prevalence": "Often"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase."}, {"Phase": "Architecture and Design", "Note": "For hardware, this may be introduced when design does not plan for an attacker having physical access while a legitimate user is remotely operating the device."}, {"Phase": "Operation"}, {"Phase": "System Configuration"}], "CommonConsequences": [{"Scope": ["Integrity", "Confidentiality"], "Impact": ["Read Application Data", "Modify Files or Directories"], "Note": "Anyone can read the information by gaining access to the channel being used for communication."}], "DetectionMethods": [{"DetectionMethodID": "DM-11", "Method": "Black Box", "Description": "\n\nUse monitoring tools that examine the software's process as it interacts with the operating system and the network. This technique is useful in cases when source code is unavailable, if the software was not developed by you, or if you want to verify that the build phase did not introduce any new weaknesses. Examples include debuggers that directly attach to the running process; system-call tracing utilities such as truss (Solaris) and strace (Linux); system activity monitors such as FileMon, RegMon, Process Monitor, and other Sysinternals utilities (Windows); and sniffers and protocol analyzers that monitor network traffic.\n\n\nAttach the monitor to the process, trigger the feature that sends the data, and look for the presence or absence of common cryptographic functions in the call tree. Monitor the network and determine if the data packets contain readable commands. Tools exist for detecting if certain encodings are in use. If the traffic contains high entropy, this might indicate the usage of encryption.\n"}, {"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "Before transmitting, encrypt the data using reliable, confidentiality-protecting cryptographic protocols."}, {"Phase": ["Implementation"], "Description": "When using web applications with SSL, use SSL for the entire session from login to logout, not just for the initial login page."}, {"Phase": ["Implementation"], "Description": "When designing hardware platforms, ensure that approved encryption algorithms (such as those recommended by NIST) protect paths from security critical data to trusted user applications."}, {"Phase": ["Testing"], "Description": "Use tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session. These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules."}, {"Phase": ["Operation"], "Description": "Configure servers to use encrypted channels for communication, which may include SSL or other secure protocols."}], "DemonstrativeExamples": [{"ID": "DX-42", "Entries": [{"IntroText": "The following code attempts to establish a connection to a site to communicate sensitive information."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\ttry {\n\t\tURL u = new URL(\"http://www.secret.example.org/\");\n\t\tHttpURLConnection hu = (HttpURLConnection) u.openConnection();\n\t\thu.setRequestMethod(\"PUT\");\n\t\thu.connect();\n\t\tOutputStream os = hu.getOutputStream();\n\t\thu.disconnect();\n\t}\n\tcatch (IOException e) {\n```\n//...* \n\t\t}"}, {"BodyText": "Though a connection is successfully made, the connection is unencrypted and it is possible that all sensitive data sent to or received from the server will be read by unintended actors."}]}, {"ID": "DX-153", "Entries": [{"IntroText": "In 2022, the OT:ICEFALL study examined products by 10 different Operational Technology (OT) vendors. The researchers reported 56 vulnerabilities and said that the products were \"insecure by design\" [REF-1283]. If exploited, these vulnerabilities often allowed adversaries to change how the products operated, ranging from denial of service to changing the code that the products executed. Since these products were often used in industries such as power, electrical, water, and others, there could even be safety implications."}, {"BodyText": "Multiple vendors used cleartext transmission of sensitive information in their OT products."}]}, {"Entries": [{"IntroText": "A TAP accessible register is read/written by a JTAG based tool, for internal use by authorized users. However, an adversary can connect a probing device and collect the values from the unencrypted channel connecting the JTAG interface to the authorized user, if no additional protections are employed."}]}, {"Entries": [{"IntroText": "The following Azure CLI command lists the properties of a particular storage account:"}, {"Nature": "Informative", "Language": "Shell", "ExampleCode": "```\n\taz storage account show -g {ResourceGroupName} -n {StorageAccountName}\n```"}, {"BodyText": "The JSON result might be:"}, {"Nature": "Bad", "Language": "JSON", "ExampleCode": "```\n\t {\n\t\t \"name\": \"{StorageAccountName}\",\n\t\t \"enableHttpsTrafficOnly\": false,\n\t\t \"type\": \"Microsoft.Storage/storageAccounts\"\n\t } \n```"}, {"BodyText": "The enableHttpsTrafficOnly value is set to false, because the default setting for Secure transfer is set to Disabled. This allows cloud storage resources to successfully connect and transfer data without the use of encryption (e.g., HTTP, SMB 2.1, SMB 3.0, etc.)."}, {"BodyText": "Azure's storage accounts can be configured to only accept requests from secure connections made over HTTPS. The secure transfer setting can be enabled using Azure's Portal (GUI) or programmatically by setting the enableHttpsTrafficOnly property to True on the storage account, such as:"}, {"Nature": "Good", "Language": "Shell", "ExampleCode": "```\n\taz storage account update -g {ResourceGroupName} -n {StorageAccountName} --https-only true\n```"}, {"BodyText": "The change can be confirmed from the result by verifying that the enableHttpsTrafficOnly value is true:"}, {"Nature": "Good", "Language": "JSON", "ExampleCode": "```\n\t {\n\t\t \"name\": \"{StorageAccountName}\",\n\t\t \"enableHttpsTrafficOnly\": true,\n\t\t \"type\": \"Microsoft.Storage/storageAccounts\"\n\t } \n```"}, {"BodyText": "Note: to enable secure transfer using Azure's Portal instead of the command line:\n\n\n  1. Open the Create storage account pane in the Azure portal.\n\n  1. In the Advanced page, select the Enable secure transfer checkbox."}]}], "ObservedExamples": [{"Reference": "CVE-2022-29519", "Description": "Programmable Logic Controller (PLC) sends sensitive information in plaintext, including passwords and session tokens.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29519"}, {"Reference": "CVE-2022-30312", "Description": "Building Controller uses a protocol that transmits authentication credentials in plaintext.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30312"}, {"Reference": "CVE-2022-31204", "Description": "Programmable Logic Controller (PLC) sends password in plaintext.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-31204"}, {"Reference": "CVE-2002-1949", "Description": "Passwords transmitted in cleartext.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1949"}, {"Reference": "CVE-2008-4122", "Description": "Chain: Use of HTTPS cookie without \"secure\" flag causes it to be transmitted across unencrypted HTTP.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4122"}, {"Reference": "CVE-2008-3289", "Description": "Product sends password hash in cleartext in violation of intended policy.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3289"}, {"Reference": "CVE-2008-4390", "Description": "Remote management feature sends sensitive information including passwords in cleartext.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4390"}, {"Reference": "CVE-2007-5626", "Description": "Backup routine sends password in cleartext in email.", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5626"}, {"Reference": "CVE-2004-1852", "Description": "Product transmits Blowfish encryption key in cleartext.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1852"}, {"Reference": "CVE-2008-0374", "Description": "Printer sends configuration information, including administrative password, in cleartext.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0374"}, {"Reference": "CVE-2007-4961", "Description": "Chain: cleartext transmission of the MD5 hash of password enables attacks against a server that is susceptible to replay (CWE-294).", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4961"}, {"Reference": "CVE-2007-4786", "Description": "Product sends passwords in cleartext to a log server.", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4786"}, {"Reference": "CVE-2005-3140", "Description": "Product sends file with cleartext passwords in e-mail message intended for diagnostic purposes.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-3140"}], "RelatedAttackPatterns": ["102", "117", "383", "477", "65"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "The Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are still under review and might change in future CWE versions. These draft mappings were performed by members of the \"Mapping CWE to 62443\" subgroup of the CWE-CAPEC ICS/OT Special Interest Group (SIG), and their work is incomplete as of CWE 4.10. The mappings are included to facilitate discussion and review by the broader ICS/OT community, and they are likely to change in future CWE versions."}], "Top25Examples": [{"Reference": "CVE-2022-23509", "Description": "Weave GitOps is a simple open source developer platform for people who want cloud native applications, without needing Kubernetes expertise. GitOps run has a local S3 bucket which it uses for synchronizing files that are later applied against a Kubernetes cluster. The communication between GitOps Run and the local S3 bucket is not encrypted. This allows privileged users or process to tap the local traffic to gain information permitting access to the s3 bucket. From that point, it would be possible to alter the bucket content, resulting in changes in the Kubernetes cluster's resources. There are no known workaround(s) for this vulnerability. This vulnerability has been fixed by commits ce2bbff and babd915. Users should upgrade to Weave GitOps version >= v0.12.0 released on 08/12/2022. "}, {"Reference": "CVE-2022-39287", "Description": "tiny-csrf is a Node.js cross site request forgery (CSRF) protection middleware. In versions prior to 1.1.0 cookies were not encrypted and thus CSRF tokens were transmitted in the clear. This issue has been addressed in commit `8eead6d` and the patch with be included in version 1.1.0. Users are advised to upgrade. There are no known workarounds for this issue."}, {"Reference": "CVE-2021-1896", "Description": "Weak configuration in WLAN could cause forwarding of unencrypted packets from one client to another in Snapdragon Compute, Snapdragon Connectivity"}, {"Reference": "CVE-2021-35246", "Description": "The application fails to prevent users from connecting to it over unencrypted connections. An attacker able to modify a legitimate user's network traffic could bypass the application's use of SSL/TLS encryption and use the application as a platform for attacks against its users."}, {"Reference": "CVE-2021-40148", "Description": "In Modem EMM, there is a possible information disclosure due to a missing data encryption. This could lead to remote information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: MOLY00716585; Issue ID: ALPS05886933."}, {"Reference": "CVE-2021-4161", "Description": "The affected products contain vulnerable firmware, which could allow an attacker to sniff the traffic and decrypt login credential details. This could give an attacker admin rights through the HTTP web server."}, {"Reference": "CVE-2021-41849", "Description": "An issue was discovered in Luna Simo PPR1.180610.011/202001031830. It sends the following Personally Identifiable Information (PII) in plaintext using HTTP to servers located in China: user's list of installed apps and device International Mobile Equipment Identity (IMEI). This PII is transmitted to log.skyroam.com.cn using HTTP, independent of whether the user uses the Simo software."}, {"Reference": "CVE-2021-43270", "Description": "Datalust Seq.App.EmailPlus (aka seq-app-htmlemail) 3.1.0-dev-00148, 3.1.0-dev-00170, and 3.1.0-dev-00176 can use cleartext SMTP on port 25 in some cases where encryption on port 465 was intended."}, {"Reference": "CVE-2022-1524", "Description": "LRM version 2.4 and lower does not implement TLS encryption. A malicious actor can MITM attack sensitive data in-transit, including credentials."}, {"Reference": "CVE-2022-21951", "Description": "A Cleartext Transmission of Sensitive Information vulnerability in SUSE Rancher, Rancher allows attackers on the network to read and change network data due to missing encryption of data transmitted via the network when a cluster is created from an RKE template with the CNI value overridden This issue affects: SUSE Rancher Rancher versions prior to 2.5.14; Rancher versions prior to 2.6.5. "}, {"Reference": "CVE-2022-2338", "Description": "Softing Secure Integration Server V1.22 is vulnerable to authentication bypass via a machine-in-the-middle attack. The default the administration interface is accessible via plaintext HTTP protocol, facilitating the attack. The HTTP request may contain the session cookie in the request, which may be captured for use in authenticating to the server."}, {"Reference": "CVE-2022-32227", "Description": "A cleartext transmission of sensitive information exists in Rocket.Chat <v5, <v4.8.2 and <v4.7.5 relating to Oauth tokens by having the permission \"view-full-other-user-info\", this could cause an oauth token leak in the product."}, {"Reference": "CVE-2022-41627", "Description": " The physical IoT device of the AliveCor's KardiaMobile, a smartphone-based personal electrocardiogram (EKG) has no encryption for its data-over-sound protocols. Exploiting this vulnerability could allow an attacker to read patient EKG results or create a denial-of-service condition by emitting sounds at similar frequencies as the device, disrupting the smartphone microphone\u2019s ability to accurately read the data. To carry out this attack, the attacker must be close (less than 5 feet) to pick up and emit sound waves. "}, {"Reference": "CVE-2022-41983", "Description": "On specific hardware platforms, on BIG-IP versions 16.1.x before 16.1.3.1, 15.1.x before 15.1.7, 14.1.x before 14.1.5.1, and all versions of 13.1.x, while Intel QAT (QuickAssist Technology) and the AES-GCM/CCM cipher is in use, undisclosed conditions can cause BIG-IP to send data unencrypted even with an SSL Profile applied."}, {"Reference": "CVE-2022-45877", "Description": "OpenHarmony-v3.1.4 and prior versions had an vulnerability. PIN code is transmitted to the peer device in plain text during cross-device authentication, which reduces the difficulty of man-in-the-middle attacks."}, {"Reference": "CVE-2022-0005", "Description": "Sensitive information accessible by physical probing of JTAG interface for some Intel(R) Processors with SGX may allow an unprivileged user to potentially enable information disclosure via physical access."}, {"Reference": "CVE-2021-22923", "Description": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened."}, {"Reference": "CVE-2022-23223", "Description": "On Apache ShenYu versions 2.4.0 and 2.4.1, and endpoint existed that disclosed the passwords of all users. Users are recommended to upgrade to version 2.4.2 or later."}, {"Reference": "CVE-2022-24978", "Description": "Zoho ManageEngine ADAudit Plus before 7055 allows authenticated Privilege Escalation on Integrated products. This occurs because a password field is present in a JSON response."}, {"Reference": "CVE-2022-25180", "Description": "Jenkins Pipeline: Groovy Plugin 2648.va9433432b33c and earlier includes password parameters from the original build in replayed builds, allowing attackers with Run/Replay permission to obtain the values of password parameters passed to previous builds of a Pipeline."}, {"Reference": "CVE-2022-27774", "Description": "An insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers."}, {"Reference": "CVE-2022-47714", "Description": "Last Yard 22.09.8-1 does not enforce HSTS headers"}, {"Reference": "CVE-2022-0553", "Description": "There is no check to see if slot 0 is being uploaded from the device to the host. When using encrypted images this means the unencrypted firmware can be retrieved easily."}, {"Reference": "CVE-2022-29945", "Description": "DJI drone devices sold in 2017 through 2022 broadcast unencrypted information about the drone operator's physical location via the AeroScope protocol."}, {"Reference": "CVE-2021-31898", "Description": "In JetBrains WebStorm before 2021.1, HTTP requests were used instead of HTTPS."}, {"Reference": "CVE-2022-2083", "Description": "The Simple Single Sign On WordPress plugin through 4.1.0 leaks its OAuth client_secret, which could be used by attackers to gain unauthorized access to the site."}, {"Reference": "CVE-2022-3206", "Description": "The Passster WordPress plugin before 3.5.5.5.2 stores the password inside a cookie named \"passster\" using base64 encoding method which is easy to decode. This puts the password at risk in case the cookies get leaked."}, {"Reference": "CVE-2021-45081", "Description": "An issue was discovered in Cobbler through 3.3.1. Routines in several files use the HTTP protocol instead of the more secure HTTPS."}]}
{"ID": "32", "Name": "Path Traversal: '...' (Triple Dot)", "Abstraction": "Variant", "Structure": "Simple", "Status": "Incomplete", "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '...' (triple dot) sequences that can resolve to a location that is outside of that directory.", "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nThe '...' manipulation is useful for bypassing some path traversal protection schemes. On some Windows systems, it is equivalent to \"..\\..\" and might bypass checks that assume only two dots are valid. Incomplete filtering, such as removal of \"./\" sequences, can ultimately produce valid \"..\" sequences due to a collapse into unsafe value (CWE-182).\n", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "23", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Confidentiality", "Integrity"], "Impact": ["Read Files or Directories", "Modify Files or Directories"]}], "PotentialMitigations": [{"MitigationID": "MIT-5.1", "Phase": ["Implementation"], "Strategy": "Input Validation", "Description": "\n\nAssume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.\n\n\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"\n\n\nDo not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.\n\n\nWhen validating filenames, use stringent allowlists that limit the character set to be used. If feasible, only allow a single \".\" character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as \"/\" to avoid CWE-36. Use a list of allowable file extensions, which will help to avoid CWE-434.\n\n\nDo not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a denylist, which may be incomplete (CWE-184). For example, filtering \"/\" is insufficient protection if the filesystem also supports the use of \"\\\" as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if \"../\" sequences are removed from the \".../...//\" string in a sequential fashion, two instances of \"../\" would be removed from the original string, but the remaining characters would still form the \"../\" string.\n", "Effectiveness": "High"}, {"MitigationID": "MIT-20", "Phase": ["Implementation"], "Strategy": "Input Validation", "Description": "Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked."}], "ObservedExamples": [{"Reference": "CVE-2001-0467", "Description": "\"\\...\" in web server", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0467"}, {"Reference": "CVE-2001-0615", "Description": "\"...\" or \"....\" in chat server", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0615"}, {"Reference": "CVE-2001-0963", "Description": "\"...\" in cd command in FTP server", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0963"}, {"Reference": "CVE-2001-1193", "Description": "\"...\" in cd command in FTP server", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1193"}, {"Reference": "CVE-2001-1131", "Description": "\"...\" in cd command in FTP server", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1131"}, {"Reference": "CVE-2001-0480", "Description": "read of arbitrary files and directories using GET or CD with \"...\" in Windows-based FTP server.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0480"}, {"Reference": "CVE-2002-0288", "Description": "read files using \".\" and Unicode-encoded \"/\" or \"\\\" characters in the URL.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0288"}, {"Reference": "CVE-2003-0313", "Description": "Directory listing of web server using \"...\"", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0313"}, {"Reference": "CVE-2005-1658", "Description": "Triple dot", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1658"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "\n\nThis manipulation-focused entry is currently hiding two distinct weaknesses, so it might need to be split. The manipulation is effective in two different contexts:\n\n\n  - it is equivalent to \"..\\..\" on Windows, or\n\n  - it can take advantage of incomplete filtering, e.g. if the programmer does a single-pass removal of \"./\" in a string (collapse of data into unsafe value, CWE-182).\n\n"}]}
{"ID": "321", "Name": "Use of Hard-coded Cryptographic Key", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered.", "LikelihoodOfExploit": "High", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "798", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "798", "ViewID": "1305", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "798", "ViewID": "1340", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "ICS/OT", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Bypass Protection Mechanism", "Gain Privileges or Assume Identity"], "Note": "If hard-coded cryptographic keys are used, it is almost certain that malicious users will gain access through the account in question."}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "Prevention schemes mirror that of hard-coded password storage."}], "DemonstrativeExamples": [{"ID": "DX-92", "Entries": [{"IntroText": "The following code examples attempt to verify a password using a hard-coded cryptographic key."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tint VerifyAdmin(char *password) {\n\t\t\tif (strcmp(password,\"68af404b513073584c4b6f22b6c63e6b\")) {\n\t\t\t\t\tprintf(\"Incorrect Password!\\n\");\n\t\t\t\t\treturn(0);\n\t\t\t}\n\t\t\tprintf(\"Entering Diagnostic Mode...\\n\");\n\t\t\treturn(1);\n\t}\n```"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tpublic boolean VerifyAdmin(String password) {\n\t\tif (password.equals(\"68af404b513073584c4b6f22b6c63e6b\")) {\n\t\t\tSystem.out.println(\"Entering Diagnostic Mode...\");\n\t\t\treturn true;\n\t\t}\n\t\tSystem.out.println(\"Incorrect Password!\");\n\t\treturn false;\n```"}, {"Nature": "Bad", "Language": "C#", "ExampleCode": "```\n\tint VerifyAdmin(String password) {\n\t\tif (password.Equals(\"68af404b513073584c4b6f22b6c63e6b\")) {\n\t\t\tConsole.WriteLine(\"Entering Diagnostic Mode...\");\n\t\t\treturn(1);\n\t\t}\n\t\tConsole.WriteLine(\"Incorrect Password!\");\n\t\treturn(0);\n\t}\n```"}, {"BodyText": "The cryptographic key is within a hard-coded string value that is compared to the password. It is likely that an attacker will be able to read the key and compromise the system."}]}, {"ID": "DX-153", "Entries": [{"IntroText": "In 2022, the OT:ICEFALL study examined products by 10 different Operational Technology (OT) vendors. The researchers reported 56 vulnerabilities and said that the products were \"insecure by design\" [REF-1283]. If exploited, these vulnerabilities often allowed adversaries to change how the products operated, ranging from denial of service to changing the code that the products executed. Since these products were often used in industries such as power, electrical, water, and others, there could even be safety implications."}, {"BodyText": "Multiple vendors used hard-coded keys for critical functionality in their OT products."}]}], "ObservedExamples": [{"Reference": "CVE-2022-29960", "Description": "Engineering Workstation uses hard-coded cryptographic keys that could allow for unathorized filesystem access and privilege escalation", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29960"}, {"Reference": "CVE-2022-30271", "Description": "Remote Terminal Unit (RTU) uses a hard-coded SSH private key that is likely to be used by default.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30271"}, {"Reference": "CVE-2020-10884", "Description": "WiFi router service has a hard-coded encryption key, allowing root access", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-10884"}, {"Reference": "CVE-2014-2198", "Description": "Communications / collaboration product has a hardcoded SSH private key, allowing access to root account", "Link": "https://www.cve.org/CVERecord?id=CVE-2014-2198"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Other", "Note": "The main difference between the use of hard-coded passwords and the use of hard-coded cryptographic keys is the false sense of security that the former conveys. Many people believe that simply hashing a hard-coded password before storage will protect the information from malicious users. However, many hashes are reversible (or at least vulnerable to brute force attacks) -- and further, many authentication protocols simply request the hash itself, making it no better than a password."}, {"Type": "Maintenance", "Note": "The Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are still under review and might change in future CWE versions. These draft mappings were performed by members of the \"Mapping CWE to 62443\" subgroup of the CWE-CAPEC ICS/OT Special Interest Group (SIG), and their work is incomplete as of CWE 4.10. The mappings are included to facilitate discussion and review by the broader ICS/OT community, and they are likely to change in future CWE versions."}], "Top25Examples": [{"Reference": "CVE-2022-35857", "Description": "kvf-admin through 2022-02-12 allows remote attackers to execute arbitrary code because deserialization is mishandled. The rememberMe parameter is encrypted with a hardcoded key from the com.kalvin.kvf.common.shiro.ShiroConfig file."}, {"Reference": "CVE-2021-41028", "Description": "A combination of a use of hard-coded cryptographic key vulnerability [CWE-321] in FortiClientEMS 7.0.1 and below, 6.4.6 and below and an improper certificate validation vulnerability [CWE-297] in FortiClientWindows, FortiClientLinux and FortiClientMac 7.0.1 and below, 6.4.6 and below may allow an unauthenticated and network adjacent attacker to perform a man-in-the-middle attack between the EMS and the FCT via the telemetry protocol."}, {"Reference": "CVE-2021-22644", "Description": "Ovarro TBox TWinSoft uses the custom hardcoded user \u201cTWinSoft\u201d with a hardcoded key."}, {"Reference": "CVE-2022-1400", "Description": "Use of Hard-coded Cryptographic Key vulnerability in the WebReportsApi.dll of Exago Web Reports, as used in the Device42 Asset Management Appliance, allows an attacker to leak session IDs and elevate privileges. This issue affects: Device42 CMDB versions prior to 18.01.00."}, {"Reference": "CVE-2022-1701", "Description": "SonicWall SMA1000 series firmware 12.4.0, 12.4.1-02965 and earlier versions uses a shared and hard-coded encryption key to store data."}, {"Reference": "CVE-2022-23440", "Description": "A use of hard-coded cryptographic key vulnerability [CWE-321] in the registration mechanism of FortiEDR collectors versions 5.0.2, 5.0.1, 5.0.0, 4.0.0 may allow a local attacker to disable and uninstall the collectors from the end-points within the same deployment."}, {"Reference": "CVE-2022-23441", "Description": "A use of hard-coded cryptographic key vulnerability [CWE-321] in FortiEDR versions 5.0.2, 5.0.1, 5.0.0, 4.0.0 may allow an unauthenticated attacker on the network to disguise as and forge messages from other collectors."}, {"Reference": "CVE-2022-23650", "Description": "Netmaker is a platform for creating and managing virtual overlay networks using WireGuard. Prior to versions 0.8.5, 0.9.4, and 010.0, there is a hard-coded cryptographic key in the code base which can be exploited to run admin commands on a remote server if the exploiter know the address and username of the admin. This effects the server (netmaker) component, and not clients. This has been patched in Netmaker v0.8.5, v0.9.4, and v0.10.0. There are currently no known workarounds."}, {"Reference": "CVE-2022-23724", "Description": "Use of static encryption key material allows forging an authentication token to other users within a tenant organization. MFA may be bypassed by redirecting an authentication flow to a target user. To exploit the vulnerability, must have compromised user credentials."}, {"Reference": "CVE-2022-24860", "Description": "Databasir is a team-oriented relational database model document management platform. Databasir 1.01 has Use of Hard-coded Cryptographic Key vulnerability. An attacker can use hard coding to generate login credentials of any user and log in to the service background located at different IP addresses."}, {"Reference": "CVE-2022-25217", "Description": "Use of a hard-coded cryptographic key pair by the telnetd_startup service allows an attacker on the local area network to obtain a root shell on the device over telnet. The builds of telnetd_startup included in the version 22.5.9.163 of the K2 firmware, and version 32.1.15.93 of the K3C firmware (possibly amongst many other releases) included both the private and public RSA keys. The remaining versions cited here redacted the private key, but left the public key unchanged. An attacker in possession of the leaked private key may, through a scripted exchange of UDP packets, instruct telnetd_startup to spawn an unauthenticated telnet shell as root, by means of which they can then obtain complete control of the device. A consequence of the limited availablility of firmware images for testing is that models and versions not listed here may share this vulnerability."}, {"Reference": "CVE-2022-2660", "Description": "Delta Industrial Automation DIALink versions 1.4.0.0 and prior are vulnerable to the use of a hard-coded cryptographic key which could allow an attacker to decrypt sensitive data and compromise the machine. "}, {"Reference": "CVE-2022-29060", "Description": "A use of hard-coded cryptographic key vulnerability [CWE-321] in FortiDDoS API 5.5.0 through 5.5.1, 5.4.0 through 5.4.2, 5.3.0 through 5.3.1, 5.2.0, 5.1.0 may allow an attacker who managed to retrieve the key from one device to sign JWT tokens for any device."}, {"Reference": "CVE-2022-29827", "Description": "Use of Hard-coded Cryptographic Key vulnerability in Mitsubishi Electric GX Works3 versions from 1.000A and later allows a remote unauthenticated attacker to disclose sensitive information. As a result, unauthenticated attackers may view programs and project files or execute programs illegally."}, {"Reference": "CVE-2022-29828", "Description": "Use of Hard-coded Cryptographic Key vulnerability in Mitsubishi Electric GX Works3 versions from 1.000A and later allows a remote unauthenticated attacker to disclose sensitive information. As a result, unauthenticated attackers may view programs and project file or execute programs illegally."}, {"Reference": "CVE-2022-29829", "Description": "Use of Hard-coded Cryptographic Key vulnerability in Mitsubishi Electric GX Works3 versions from 1.000A to 1.090U, GT Designer3 Version1 (GOT2000) versions from 1.122C to 1.290C and Motion Control Setting(GX Works3 related software) versions from 1.035M to 1.042U allows a remote unauthenticated attacker to disclose sensitive information. As a result, unauthenticated users may view programs and project files or execute programs illegally."}, {"Reference": "CVE-2022-29830", "Description": "Use of Hard-coded Cryptographic Key vulnerability in Mitsubishi Electric GX Works3 versions from 1.000A to 1.095Z and Motion Control Setting(GX Works3 related software) versions from 1.000A and later allows a remote unauthenticated attacker to disclose or tamper with sensitive information. As a result, unauthenticated attackers may obtain information about project files illegally."}, {"Reference": "CVE-2022-29856", "Description": "A hardcoded cryptographic key in Automation360 22 allows an attacker to decrypt exported RPA packages."}, {"Reference": "CVE-2022-30271", "Description": "The Motorola ACE1000 RTU through 2022-05-02 ships with a hardcoded SSH private key and initialization scripts (such as /etc/init.d/sshd_service) only generate a new key if no private-key file exists. Thus, this hardcoded key is likely to be used by default."}, {"Reference": "CVE-2022-30274", "Description": "The Motorola ACE1000 RTU through 2022-05-02 uses ECB encryption unsafely. It can communicate with an XRT LAN-to-radio gateway by means of an embedded client. Credentials for accessing this gateway are stored after being encrypted with the Tiny Encryption Algorithm (TEA) in ECB mode using a hardcoded key. Similarly, the ACE1000 RTU can route MDLC traffic over Extended Command and Management Protocol (XCMP) and Network Layer (XNL) networks via the MDLC driver. Authentication to the XNL port is protected by TEA in ECB mode using a hardcoded key."}, {"Reference": "CVE-2022-34440", "Description": "Dell EMC SCG Policy Manager, versions from 5.10 to 5.12, contain(s) a contain a Hard-coded Cryptographic Key vulnerability. An attacker with the knowledge of the hard-coded sensitive information, could potentially exploit this vulnerability to login to the system to gain admin privileges. "}, {"Reference": "CVE-2022-34441", "Description": " Dell EMC SCG Policy Manager, versions from 5.10 to 5.12, contain(s) a contain a Hard-coded Cryptographic Key vulnerability. An attacker with the knowledge of the hard-coded sensitive information, could potentially exploit this vulnerability to login to the system to gain admin privileges. "}, {"Reference": "CVE-2022-34442", "Description": " Dell EMC SCG Policy Manager, versions from 5.10 to 5.12, contain(s) a contain a Hard-coded Cryptographic Key vulnerability. An attacker with the knowledge of the hard-coded sensitive information, could potentially exploit this vulnerability to login to the system to gain LDAP user privileges. "}, {"Reference": "CVE-2022-34449", "Description": " PowerPath Management Appliance with versions 3.3 & 3.2* contains a Hardcoded Cryptographic Keys vulnerability. Authenticated admin users can exploit the issue that leads to view and modifying sensitive information stored in the application. "}, {"Reference": "CVE-2022-34906", "Description": "A hard-coded cryptographic key is used in FileWave before 14.6.3 and 14.7.x before 14.7.2. Exploitation could allow an unauthenticated actor to decrypt sensitive information saved in FileWave, and even send crafted requests."}, {"Reference": "CVE-2022-41540", "Description": "The web app client of TP-Link AX10v1 V1_211117 uses hard-coded cryptographic keys when communicating with the router. Attackers who are able to intercept the communications between the web client and router through a man-in-the-middle attack can then obtain the sequence key via a brute-force attack, and access sensitive information."}, {"Reference": "CVE-2021-23842", "Description": "Communication to the AMC2 uses a state-of-the-art cryptographic algorithm for symmetric encryption called Blowfish. An attacker could retrieve the key from the firmware to decrypt network traffic between the AMC2 and the host system. Thus, an attacker can exploit this vulnerability to decrypt and modify network traffic, decrypt and further investigate the device\\\\'s firmware file, and change the device configuration. The attacker needs to have access to the local network, typically even the same subnet."}, {"Reference": "CVE-2021-45458", "Description": "Apache Kylin provides encryption classes PasswordPlaceholderConfigurer to help users encrypt their passwords. In the encryption algorithm used by this encryption class, the cipher is initialized with a hardcoded key and IV. If users use class PasswordPlaceholderConfigurer to encrypt their password and configure it into kylin's configuration file, there is a risk that the password may be decrypted. This issue affects Apache Kylin 2 version 2.6.6 and prior versions; Apache Kylin 3 version 3.1.2 and prior versions; Apache Kylin 4 version 4.0.0 and prior versions."}, {"Reference": "CVE-2022-23942", "Description": "Apache Doris, prior to 1.0.0, used a hardcoded key and IV to initialize the cipher used for ldap password, which may lead to information disclosure."}, {"Reference": "CVE-2022-25806", "Description": "An issue was discovered in the IGEL Universal Management Suite (UMS) 6.07.100. A hardcoded DES key in the PrefDBCredentials class allows an attacker, who has discovered encrypted superuser credentials, to decrypt those credentials using a static 8-byte DES key."}, {"Reference": "CVE-2022-25807", "Description": "An issue was discovered in the IGEL Universal Management Suite (UMS) 6.07.100. A hardcoded DES key in the LDAPDesPWEncrypter class allows an attacker, who has discovered encrypted LDAP bind credentials, to decrypt those credentials using a static 8-byte DES key."}, {"Reference": "CVE-2022-26660", "Description": "RunAsSpc 4.0 uses a universal and recoverable encryption key. In possession of a file encrypted by RunAsSpc, an attacker can recover the credentials that were used."}, {"Reference": "CVE-2022-34045", "Description": "Wavlink WN530HG4 M30HG4.V5030.191116 was discovered to contain a hardcoded encryption/decryption key for its configuration files at /etc_ro/lighttpd/www/cgi-bin/ExportAllSettings.sh."}, {"Reference": "CVE-2022-34386", "Description": " Dell SupportAssist for Home PCs (version 3.11.4 and prior) and SupportAssist for Business PCs (version 3.2.0 and prior) contain cryptographic weakness vulnerability. An authenticated non-admin user could potentially exploit the issue and obtain sensitive information. "}, {"Reference": "CVE-2022-34425", "Description": "Dell Enterprise SONiC OS, 4.0.0, 4.0.1, contain a cryptographic key vulnerability in SSH. An unauthenticated remote attacker could potentially exploit this vulnerability, leading to unauthorized access to communication."}, {"Reference": "CVE-2022-37710", "Description": "Patterson Dental Eaglesoft 21 has AES-256 encryption but there are two ways to obtain a keyfile: (1) keybackup.data > License > Encryption Key or (2) Eaglesoft.Server.Configuration.data > DbEncryptKeyPrimary > Encryption Key. Applicable files are encrypted with keys and salt that are hardcoded into a DLL or EXE file."}, {"Reference": "CVE-2022-38117", "Description": "Juiker app hard-coded its AES key in the source code. A physical attacker, after getting the Android root privilege, can use the AES key to decrypt users\u2019 ciphertext and tamper with it."}, {"Reference": "CVE-2022-45425", "Description": "Some Dahua software products have a vulnerability of using of hard-coded cryptographic key. An attacker can obtain the AES crypto key by exploiting this vulnerability."}, {"Reference": "CVE-2021-40903", "Description": "A vulnerability in Antminer Monitor 0.50.0 exists because of backdoor or misconfiguration inside a settings file in flask server. Settings file has a predefined secret string, which would be randomly generated, however it is static."}, {"Reference": "CVE-2022-26020", "Description": "An information disclosure vulnerability exists in the router configuration export functionality of InHand Networks InRouter302 V3.5.4. A specially-crafted network request can lead to increased privileges. An attacker can send an HTTP request to trigger this vulnerability."}]}
{"ID": "322", "Name": "Key Exchange without Entity Authentication", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product performs a key exchange with an actor without verifying the identity of that actor.", "ExtendedDescription": "Performing a key exchange will preserve the integrity of the information sent between two entities, but this will not guarantee that the entities are who they claim they are. This may enable an attacker to impersonate an actor by modifying traffic between the two entities. Typically, this involves a victim client that contacts a malicious server that is impersonating a trusted server. If the client skips authentication or ignores an authentication failure, the malicious server may request authentication information from the user. The malicious server can then use this authentication information to log in to the trusted server using the victim's credentials, sniff traffic between the victim and trusted server, etc.", "LikelihoodOfExploit": "High", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "306", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "CanPrecede", "CweID": "923", "ViewID": "1000"}, {"Nature": "PeerOf", "CweID": "295", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase."}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Bypass Protection Mechanism"], "Note": "No authentication takes place in this process, bypassing an assumed protection of encryption."}, {"Scope": ["Confidentiality"], "Impact": ["Read Application Data"], "Note": "The encrypted communication between a user and a trusted host may be subject to sniffing by any actor in the communication path."}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "Ensure that proper authentication is included in the system design."}, {"Phase": ["Implementation"], "Description": "Understand and properly implement all checks necessary to ensure the identity of entities involved in encrypted communications."}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "Many systems have used Diffie-Hellman key exchange without authenticating the entities exchanging keys, allowing attackers to influence communications by redirecting or interfering with the communication path. Many people using SSL/TLS skip the authentication (often unknowingly)."}]}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2021-0133", "Description": "Key exchange without entity authentication in the Intel(R) Security Library before version 3.3 may allow an authenticated user to potentially enable escalation of privilege via network access."}, {"Reference": "CVE-2021-38878", "Description": "IBM QRadar 7.3, 7.4, and 7.5 could allow a malicious actor to impersonate an actor due to key exchange without entity authentication. IBM X-Force ID: 208756."}, {"Reference": "CVE-2022-39254", "Description": "matrix-nio is a Python Matrix client library, designed according to sans I/O principles. Prior to version 0.20, when a users requests a room key from their devices, the software correctly remember the request. Once they receive a forwarded room key, they accept it without checking who the room key came from. This allows homeservers to try to insert room keys of questionable validity, potentially mounting an impersonation attack. Version 0.20 fixes the issue."}]}
{"ID": "323", "Name": "Reusing a Nonce, Key Pair in Encryption", "Abstraction": "Base", "Structure": "Simple", "Status": "Incomplete", "Description": "Nonces should be used for the present occasion and only once.", "LikelihoodOfExploit": "High", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "344", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "BackgroundDetails": ["Nonces are often bundled with a key in a communication exchange to produce a new session key for each exchange."], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Bypass Protection Mechanism", "Gain Privileges or Assume Identity"], "Note": "Potentially a replay attack, in which an attacker could send the same data twice, could be crafted if nonces are allowed to be reused. This could allow a user to send a message which masquerades as a valid message from a valid user."}], "PotentialMitigations": [{"Phase": ["Implementation"], "Description": "Refuse to reuse nonce values."}, {"Phase": ["Implementation"], "Description": "Use techniques such as requiring incrementing, time based and/or challenge response to assure uniqueness of nonces."}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "This code takes a password, concatenates it with a nonce, then encrypts it before sending over a network:"}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tvoid encryptAndSendPassword(char *password){\n\t\tchar *nonce = \"bad\";\n\t\t...\n\t\tchar *data = (unsigned char*)malloc(20);\n\t\tint para_size = strlen(nonce) + strlen(password);\n\t\tchar *paragraph = (char*)malloc(para_size);\n\t\tSHA1((const unsigned char*)paragraph,parsize,(unsigned char*)data);\n\t\tsendEncryptedData(data)\n\t}\n```"}, {"BodyText": "Because the nonce used is always the same, an attacker can impersonate a trusted party by intercepting and resending the encrypted password. This attack avoids the need to learn the unencrypted password."}]}, {"Entries": [{"IntroText": "This code sends a command to a remote server, using an encrypted password and nonce to prove the command is from a trusted party:"}, {"Nature": "Bad", "Language": "C++", "ExampleCode": "```\n\tString command = new String(\"some command to execute\");\n\tMessageDigest nonce = MessageDigest.getInstance(\"SHA\");\n\tnonce.update(String.valueOf(\"bad nonce\"));\n\tbyte[] nonce = nonce.digest();\n\tMessageDigest password = MessageDigest.getInstance(\"SHA\");\n\tpassword.update(nonce + \"secretPassword\");\n\tbyte[] digest = password.digest();\n\tsendCommand(digest, command)\n```"}, {"BodyText": "Once again the nonce used is always the same. An attacker may be able to replay previous legitimate commands or execute new arbitrary commands."}]}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}}
{"ID": "324", "Name": "Use of a Key Past its Expiration Date", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product uses a cryptographic key or password past its expiration date, which diminishes its safety significantly by increasing the timing window for cracking attacks against that key.", "ExtendedDescription": "While the expiration of keys does not necessarily ensure that they are compromised, it is a significant concern that keys which remain in use for prolonged periods of time have a decreasing probability of integrity. For this reason, it is important to replace keys within a period of time proportional to their strength.", "LikelihoodOfExploit": "Low", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "672", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "PeerOf", "CweID": "298", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Bypass Protection Mechanism", "Gain Privileges or Assume Identity"], "Note": "The cryptographic key in question may be compromised, providing a malicious user with a method for authenticating as the victim."}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "Adequate consideration should be put in to the user interface in order to notify users previous to the key's expiration, to explain the importance of new key generation and to walk users through the process as painlessly as possible."}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "The following code attempts to verify that a certificate is valid."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tif (cert = SSL_get_peer_certificate(ssl)) {\n\t\t\tfoo=SSL_get_verify_result(ssl);\n\t\t\tif ((X509_V_OK==foo) || (X509_V_ERRCERT_NOT_YET_VALID==foo))\n```\n//do stuff* \n\t\t\t\t\t}"}, {"BodyText": "The code checks if the certificate is not yet valid, but it fails to check if a certificate is past its expiration date, thus treating expired certificates as valid."}]}], "ObservedExamples": [{"Reference": "CVE-2021-33020", "Description": "Picture Archiving and Communication System (PACS) system for hospitals uses a cryptographic key or password past its expiration date", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-33020"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2021-33020", "Description": "Philips Vue PACS versions 12.2.x.x and prior uses a cryptographic key or password past its expiration date, which diminishes its safety significantly by increasing the timing window for cracking attacks against that key."}]}
{"ID": "325", "Name": "Missing Cryptographic Step", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product does not implement a required step in a cryptographic algorithm, resulting in weaker encryption than advertised by the algorithm.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "573", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "PeerOf", "CweID": "358", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "Not Technology-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation", "Note": "Developers sometimes omit \"expensive\" (resource-intensive) steps in order to improve performance, especially in devices with limited memory or slower CPUs. This step may be taken under a mistaken impression that the step is unnecessary for the cryptographic algorithm."}, {"Phase": "Requirements", "Note": "This issue may happen when the requirements for the cryptographic algorithm are not clearly stated."}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Bypass Protection Mechanism"]}, {"Scope": ["Confidentiality", "Integrity"], "Impact": ["Read Application Data", "Modify Application Data"]}, {"Scope": ["Accountability", "Non-Repudiation"], "Impact": ["Hide Activities"]}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "The example code is taken from the HMAC engine inside the buggy OpenPiton SoC of HACK@DAC'21 [REF-1358]. HAMC is a message authentication code (MAC) that uses both a hash and a secret crypto key. The HMAC engine in HACK@DAC SoC uses the SHA-256 module for the calculation of the HMAC for 512 bits messages."}, {"Nature": "Bad", "Language": "Verilog", "ExampleCode": "**logic [511:0] bigData;** \n ...\n\n hmac hmac(\n\n```\n\t .clk_i(clk_i),\n\t .rst_ni(rst_ni && ~rst_4),\n\t .init_i(startHash && ~startHash_r),\n\t .key_i(key),\n\t .ikey_hash_i(ikey_hash), \n\t .okey_hash_i(okey_hash), \n\t .key_hash_bypass_i(key_hash_bypass),\n```\n.message_i(bigData),** \n\t .hash_o(hash),\n\t .ready_o(ready),\n\t .hash_valid_o(hashValid)"}, {"BodyText": "However, this HMAC engine cannot handle messages that are longer than 512 bits. Moreover, a complete HMAC will contain an iterate hash function that breaks up a message into blocks of a fixed size and iterates over them with a compression function (e.g., SHA-256). Therefore, the implementation of the HMAC in OpenPiton SoC is incomplete. Such HMAC engines will not be used in real-world applications as the messages will usually be longer than 512 bits. For instance, OpenTitan offers a comprehensive HMAC implementation that utilizes a FIFO for temporarily storing the truncated message, as detailed in [REF-1359]."}, {"BodyText": "To mitigate this, implement the iterative function to break up a message into blocks of a fixed size."}]}], "ObservedExamples": [{"Reference": "CVE-2001-1585", "Description": "Missing challenge-response step allows authentication bypass using public key.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1585"}], "FunctionalAreas": ["Cryptography"], "RelatedAttackPatterns": ["68"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Relationship", "Note": "Overlaps incomplete/missing security check."}, {"Type": "Relationship", "Note": "Can be resultant."}], "Top25Examples": [{"Reference": "CVE-2022-1279", "Description": "A vulnerability in the encryption implementation of EBICS messages in the open source librairy ebics-java/ebics-java-client allows an attacker sniffing network traffic to decrypt EBICS payloads. This issue affects: ebics-java/ebics-java-client versions prior to 1.2."}, {"Reference": "CVE-2022-22934", "Description": "An issue was discovered in SaltStack Salt in versions before 3002.8, 3003.4, 3004.1. Salt Masters do not sign pillar data with the minion\u2019s public key, which can result in attackers substituting arbitrary pillar data."}, {"Reference": "CVE-2022-29053", "Description": "A missing cryptographic steps vulnerability [CWE-325] in the functions that encrypt the keytab files in FortiOS version 7.2.0, 7.0.0 through 7.0.5 and below 7.0.0 may allow an attacker in possession of the encrypted file to decipher it."}, {"Reference": "CVE-2022-29054", "Description": "A missing cryptographic steps vulnerability [CWE-325] in the functions that encrypt the DHCP and DNS keys in Fortinet FortiOS version 7.2.0, 7.0.0 through 7.0.5, 6.4.0 through 6.4.9, 6.2.x and 6.0.x may allow an attacker in possession of the encrypted key to decipher it."}, {"Reference": "CVE-2022-29229", "Description": "CaSS is a Competency and Skills System. CaSS Library, (npm:cassproject) has a missing cryptographic step when storing cryptographic keys that can allow a server administrator access to an account\u2019s cryptographic keys. This affects CaSS servers using standalone username/password authentication, which uses a method that expects e2e cryptographic security of authorization credentials. The issue has been patched in 1.5.8, however, the vulnerable accounts are only resecured when the user next logs in using standalone authentication, as the data required to resecure the account is not available to the server. The issue may be mitigated by using SSO or client side certificates to log in. Please note that SSO and client side certificate authentication does not have this expectation of no-knowledge credential access, and cryptographic keys are available to the server administrator."}, {"Reference": "CVE-2021-26099", "Description": "Missing cryptographic steps in the Identity-Based Encryption service of FortiMail before 7.0.0 may allow an attacker who comes in possession of the encrypted master keys to compromise their confidentiality by observing a few invariant properties of the ciphertext."}, {"Reference": "CVE-2021-32591", "Description": "A missing cryptographic steps vulnerability in the function that encrypts users' LDAP and RADIUS credentials in FortiSandbox before 4.0.1, FortiWeb before 6.3.12, FortiADC before 6.2.1, FortiMail 7.0.1 and earlier may allow an attacker in possession of the password store to compromise the confidentiality of the encrypted secrets."}, {"Reference": "CVE-2021-3798", "Description": "A flaw was found in openCryptoki. The openCryptoki Soft token does not check if an EC key is valid when an EC key is created via C_CreateObject, nor when C_DeriveKey is used with ECDH public data. This may allow a malicious user to extract the private key by performing an invalid curve attack."}]}
{"ID": "326", "Name": "Inadequate Encryption Strength", "Abstraction": "Class", "Structure": "Simple", "Status": "Draft", "Description": "The product stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.", "ExtendedDescription": "A weak encryption scheme can be subjected to brute force attacks that have a reasonable chance of succeeding using current attack methods and resources.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "693", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control", "Confidentiality"], "Impact": ["Bypass Protection Mechanism", "Read Application Data"], "Note": "An attacker may be able to decrypt the data using brute force attacks."}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "Use an encryption scheme that is currently considered to be strong by experts in the field."}], "ObservedExamples": [{"Reference": "CVE-2001-1546", "Description": "Weak encryption", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1546"}, {"Reference": "CVE-2004-2172", "Description": "Weak encryption (chosen plaintext attack)", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2172"}, {"Reference": "CVE-2002-1682", "Description": "Weak encryption", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1682"}, {"Reference": "CVE-2002-1697", "Description": "Weak encryption produces same ciphertext from the same plaintext blocks.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1697"}, {"Reference": "CVE-2002-1739", "Description": "Weak encryption", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1739"}, {"Reference": "CVE-2005-2281", "Description": "Weak encryption scheme", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2281"}, {"Reference": "CVE-2002-1872", "Description": "Weak encryption (XOR)", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1872"}, {"Reference": "CVE-2002-1910", "Description": "Weak encryption (reversible algorithm).", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1910"}, {"Reference": "CVE-2002-1946", "Description": "Weak encryption (one-to-one mapping).", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1946"}, {"Reference": "CVE-2002-1975", "Description": "Encryption error uses fixed salt, simplifying brute force / dictionary attacks (overlaps randomness).", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1975"}], "RelatedAttackPatterns": ["112", "192", "20"], "MappingNotes": {"Usage": "Allowed-with-Review", "Rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate", "Comments": "Examine children of this entry to see if there is a better fit", "Reasons": ["Abstraction"]}, "Top25Examples": [{"Reference": "CVE-2021-40341", "Description": "DES cipher, which has inadequate encryption strength, is used Hitachi Energy FOXMAN-UN to encrypt user credentials used to access the Network Elements. Successful exploitation allows sensitive information to be decrypted easily. This issue affects * FOXMAN-UN product: FOXMAN-UN R16A, FOXMAN-UN R15B, FOXMAN-UN R15A, FOXMAN-UN R14B, FOXMAN-UN R14A, FOXMAN-UN R11B, FOXMAN-UN R11A, FOXMAN-UN R10C, FOXMAN-UN R9C; * UNEM product: UNEM R16A, UNEM R15B, UNEM R15A, UNEM R14B, UNEM R14A, UNEM R11B, UNEM R11A, UNEM R10C, UNEM R9C. List of CPEs: * cpe:2.3:a:hitachienergy:foxman-un:R16A:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:foxman-un:R15B:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:foxman-un:R15A:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:foxman-un:R14B:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:foxman-un:R14A:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:foxman-un:R11B:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:foxman-un:R11A:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:foxman-un:R10C:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:foxman-un:R9C:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:unem:R16A:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:unem:R15B:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:unem:R15A:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:unem:R14B:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:unem:R14A:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:unem:R11B:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:unem:R11A:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:unem:R10C:*:*:*:*:*:*:* * cpe:2.3:a:hitachienergy:unem:R9C:*:*:*:*:*:*:* "}, {"Reference": "CVE-2021-27761", "Description": "Weak web transport security (Weak TLS): An attacker may be able to decrypt the data using attacks"}, {"Reference": "CVE-2021-32010", "Description": "Inadequate Encryption Strength vulnerability in TLS stack of Secomea SiteManager, LinkManager, GateManager may facilitate man in the middle attacks. This issue affects: Secomea SiteManager All versions prior to 9.7. Secomea LinkManager versions prior to 9.7. Secomea GateManager versions prior to 9.7."}, {"Reference": "CVE-2021-32945", "Description": "An attacker could decipher the encryption and gain access to MDT AutoSave versions prior to v6.02.06."}, {"Reference": "CVE-2021-38947", "Description": "IBM Spectrum Copy Data Management 2.2.13 and earlier uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 211242."}, {"Reference": "CVE-2022-21139", "Description": "Inadequate encryption strength for some Intel(R) PROSet/Wireless WiFi products may allow an unauthenticated user to potentially enable escalation of privilege via adjacent access."}, {"Reference": "CVE-2022-22368", "Description": "IBM Spectrum Scale 5.1.0 through 5.1.3.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 221012."}, {"Reference": "CVE-2022-22453", "Description": "IBM Security Verify Identity Manager 10.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 224919."}, {"Reference": "CVE-2022-22464", "Description": "IBM Security Access Manager Appliance 10.0.0.0, 10.0.1.0, 10.0.2.0, and 10.0.3.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 225081."}, {"Reference": "CVE-2022-24116", "Description": "Certain General Electric Renewable Energy products have inadequate encryption strength. This affects iNET and iNET II before 8.3.0."}, {"Reference": "CVE-2022-24318", "Description": "A CWE-326: Inadequate Encryption Strength vulnerability exists that could cause non-encrypted communication with the server when outdated versions of the ViewX client are used. Affected Product: ClearSCADA (All Versions), EcoStruxure Geo SCADA Expert 2019 (All Versions), EcoStruxure Geo SCADA Expert 2020 (All Versions)"}, {"Reference": "CVE-2022-2640", "Description": "The Config-files of Horner Automation\u2019s RCC 972 with firmware version 15.40 are encrypted with weak XOR encryption vulnerable to reverse engineering. This could allow an attacker to obtain credentials to run services such as File Transfer Protocol (FTP) and Hypertext Transfer Protocol (HTTP)."}, {"Reference": "CVE-2022-2758", "Description": "Passwords are not adequately encrypted during the communication process between all versions of LS Industrial Systems (LSIS) Co. Ltd LS Electric XG5000 software prior to V4.0 and LS Electric PLCs: all versions of XGK-CPUU/H/A/S/E prior to V3.50, all versions of XGI-CPUU/UD/H/S/E prior to V3.20, all versions of XGR-CPUH prior to V1.80, all versions of XGB-XBMS prior to V3.00, all versions of XGB-XBCH prior to V1.90, and all versions of XGB-XECH prior to V1.30. This would allow an attacker to identify and decrypt the password of the affected PLCs by sniffing the PLC\u2019s communication traffic."}, {"Reference": "CVE-2022-34385", "Description": " SupportAssist for Home PCs (version 3.11.4 and prior) and SupportAssist for Business PCs (version 3.2.0 and prior) contain cryptographic weakness vulnerability. An authenticated non-admin user could potentially exploit the issue and obtain sensitive information. "}, {"Reference": "CVE-2022-41209", "Description": "SAP Customer Data Cloud (Gigya mobile app for Android) - version 7.4, uses encryption method which lacks proper diffusion and does not hide the patterns well. This can lead to information disclosure. In certain scenarios, application might also be susceptible to replay attacks. "}, {"Reference": "CVE-2021-27450", "Description": "SSH server configuration file does not implement some best practices. This could lead to a weakening of the SSH protocol strength, which could lead to additional misconfiguration or be leveraged as part of a larger attack on the MU320E (all firmware versions prior to v04A00.1)."}, {"Reference": "CVE-2021-37209", "Description": "A vulnerability has been identified in RUGGEDCOM i800 (All versions < V4.3.8), RUGGEDCOM i801 (All versions < V4.3.8), RUGGEDCOM i802 (All versions < V4.3.8), RUGGEDCOM i803 (All versions < V4.3.8), RUGGEDCOM M2100 (All versions < V4.3.8), RUGGEDCOM M2200 (All versions < V4.3.8), RUGGEDCOM M969 (All versions < V4.3.8), RUGGEDCOM RMC30 (All versions < V4.3.8), RUGGEDCOM RMC8388 V4.X (All versions < V4.3.8), RUGGEDCOM RMC8388 V5.X (All versions < V5.7.0), RUGGEDCOM RP110 (All versions < V4.3.8), RUGGEDCOM RS1600 (All versions < V4.3.8), RUGGEDCOM RS1600F (All versions < V4.3.8), RUGGEDCOM RS1600T (All versions < V4.3.8), RUGGEDCOM RS400 (All versions < V4.3.8), RUGGEDCOM RS401 (All versions < V4.3.8), RUGGEDCOM RS416 (All versions < V4.3.8), RUGGEDCOM RS416P (All versions < V4.3.8), RUGGEDCOM RS416Pv2 V4.X (All versions < V4.3.8), RUGGEDCOM RS416Pv2 V5.X (All versions < V5.7.0), RUGGEDCOM RS416v2 V4.X (All versions < V4.3.8), RUGGEDCOM RS416v2 V5.X (All versions < V5.7.0), RUGGEDCOM RS8000 (All versions < V4.3.8), RUGGEDCOM RS8000A (All versions < V4.3.8), RUGGEDCOM RS8000H (All versions < V4.3.8), RUGGEDCOM RS8000T (All versions < V4.3.8), RUGGEDCOM RS900 (All versions < V4.3.8), RUGGEDCOM RS900 (32M) V4.X (All versions < V4.3.8), RUGGEDCOM RS900 (32M) V5.X (All versions < V5.7.0), RUGGEDCOM RS900G (All versions < V4.3.8), RUGGEDCOM RS900G (32M) V4.X (All versions < V4.3.8), RUGGEDCOM RS900G (32M) V5.X (All versions < V5.7.0), RUGGEDCOM RS900GP (All versions < V4.3.8), RUGGEDCOM RS900L (All versions < V4.3.8), RUGGEDCOM RS900M-GETS-C01 (All versions < V4.3.8), RUGGEDCOM RS900M-GETS-XX (All versions < V4.3.8), RUGGEDCOM RS900M-STND-C01 (All versions < V4.3.8), RUGGEDCOM RS900M-STND-XX (All versions < V4.3.8), RUGGEDCOM RS900W (All versions < V4.3.8), RUGGEDCOM RS910 (All versions < V4.3.8), RUGGEDCOM RS910L (All versions < V4.3.8), RUGGEDCOM RS910W (All versions < V4.3.8), RUGGEDCOM RS920L (All versions < V4.3.8), RUGGEDCOM RS920W (All versions < V4.3.8), RUGGEDCOM RS930L (All versions < V4.3.8), RUGGEDCOM RS930W (All versions < V4.3.8), RUGGEDCOM RS940G (All versions < V4.3.8), RUGGEDCOM RS969 (All versions < V4.3.8), RUGGEDCOM RSG2100 (All versions < V4.3.8), RUGGEDCOM RSG2100 (32M) V4.X (All versions < V4.3.8), RUGGEDCOM RSG2100 (32M) V5.X (All versions < V5.7.0), RUGGEDCOM RSG2100P (All versions < V4.3.8), RUGGEDCOM RSG2200 (All versions < V4.3.8), RUGGEDCOM RSG2288 V4.X (All versions < V4.3.8), RUGGEDCOM RSG2288 V5.X (All versions < V5.7.0), RUGGEDCOM RSG2300 V4.X (All versions < V4.3.8), RUGGEDCOM RSG2300 V5.X (All versions < V5.7.0), RUGGEDCOM RSG2300P V4.X (All versions < V4.3.8), RUGGEDCOM RSG2300P V5.X (All versions < V5.7.0), RUGGEDCOM RSG2488 V4.X (All versions < V4.3.8), RUGGEDCOM RSG2488 V5.X (All versions < V5.7.0), RUGGEDCOM RSG907R (All versions < V5.7.0), RUGGEDCOM RSG908C (All versions < V5.7.0), RUGGEDCOM RSG909R (All versions < V5.7.0), RUGGEDCOM RSG910C (All versions < V5.7.0), RUGGEDCOM RSG920P V4.X (All versions < V4.3.8), RUGGEDCOM RSG920P V5.X (All versions < V5.7.0), RUGGEDCOM RSL910 (All versions < V5.7.0), RUGGEDCOM RST2228 (All versions < V5.7.0), RUGGEDCOM RST2228P (All versions < V5.7.0), RUGGEDCOM RST916C (All versions < V5.7.0), RUGGEDCOM RST916P (All versions < V5.7.0). The SSH server on affected devices is configured to offer weak ciphers by default. This could allow an unauthorized attacker in a man-in-the-middle position to read and modify any data passed over the connection between legitimate clients and the affected device."}]}
{"ID": "327", "Name": "Use of a Broken or Risky Cryptographic Algorithm", "Abstraction": "Class", "Structure": "Simple", "Status": "Draft", "Description": "The product uses a broken or risky cryptographic algorithm or protocol.", "ExtendedDescription": "\n\nCryptographic algorithms are the methods by which data is scrambled to prevent observation or influence by unauthorized actors. Insecure cryptography can be exploited to expose sensitive information, modify data in unexpected ways, spoof identities of other users or devices, or other impacts.\n\n\nIt is very difficult to produce a secure algorithm, and even high-profile algorithms by accomplished cryptographic experts have been broken. Well-known techniques exist to break or weaken various kinds of cryptography. Accordingly, there are a small number of well-understood and heavily studied algorithms that should be used by most products. Using a non-standard or known-insecure algorithm is dangerous because a determined adversary may be able to break the algorithm and compromise whatever data has been protected.\n\n\nSince the state of cryptography advances so rapidly, it is common for an algorithm to be considered \"unsafe\" even if it was once thought to be strong. This can happen when new attacks are discovered, or if computing power increases so much that the cryptographic algorithm no longer provides the amount of protection that was originally thought.\n\n\nFor a number of reasons, this weakness is even more challenging to manage with hardware deployment of cryptographic algorithms as opposed to software implementation. First, if a flaw is discovered with hardware-implemented cryptography, the flaw cannot be fixed in most cases without a recall of the product, because hardware is not easily replaceable like software. Second, because the hardware product is expected to work for years, the adversary's computing power will only increase over time.\n", "LikelihoodOfExploit": "High", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "693", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "PeerOf", "CweID": "311", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Language", "Name": "Verilog", "Prevalence": "Undetermined"}, {"Type": "Language", "Name": "VHDL", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "Not Technology-Specific", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "ICS/OT", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic."}, {"Phase": "Implementation", "Note": "With hardware, the Architecture or Design Phase might start with compliant cryptography, but it is replaced with a non-compliant crypto during the later Implementation phase due to implementation constraints (e.g., not enough entropy to make it function properly, or not enough silicon real estate available to implement). Or, in rare cases (especially for long projects that span over years), the Architecture specifications might start with cryptography that was originally compliant at the time the Architectural specs were written, but over the time it became non-compliant due to progress made in attacking the crypto."}], "CommonConsequences": [{"Scope": ["Confidentiality"], "Impact": ["Read Application Data"], "Note": "The confidentiality of sensitive data may be compromised by the use of a broken or risky cryptographic algorithm."}, {"Scope": ["Integrity"], "Impact": ["Modify Application Data"], "Note": "The integrity of sensitive data may be compromised by the use of a broken or risky cryptographic algorithm."}, {"Scope": ["Accountability", "Non-Repudiation"], "Impact": ["Hide Activities"], "Note": "If the cryptographic algorithm is used to ensure the identity of the source of the data (such as digital signatures), then a broken algorithm will compromise this scheme and the source of the data cannot be proven."}], "DetectionMethods": [{"Method": "Automated Analysis", "Description": "Automated methods may be useful for recognizing commonly-used libraries or features that have become obsolete.", "Effectiveness": "Moderate", "EffectivenessNotes": "False negatives may occur if the tool is not aware of the cryptographic libraries in use, or if custom cryptography is being used."}, {"DetectionMethodID": "DM-7", "Method": "Manual Analysis", "Description": "This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.", "EffectivenessNotes": "These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules."}, {"Method": "Automated Static Analysis - Binary or Bytecode", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tBytecode Weakness Analysis - including disassembler + source code weakness analysis\n\t\tBinary Weakness Analysis - including disassembler + source code weakness analysis\n\t\tBinary / Bytecode simple extractor - strings, ELF readers, etc.", "Effectiveness": "SOAR Partial"}, {"Method": "Manual Static Analysis - Binary or Bytecode", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tBinary / Bytecode disassembler - then use manual analysis for vulnerabilities & anomalies", "Effectiveness": "SOAR Partial"}, {"Method": "Dynamic Analysis with Automated Results Interpretation", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tWeb Application Scanner\n\t\tWeb Services Scanner\n\t\tDatabase Scanners", "Effectiveness": "SOAR Partial"}, {"Method": "Dynamic Analysis with Manual Results Interpretation", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tMan-in-the-middle attack tool\n\t```\n\t\tCost effective for partial coverage:\n```\n\n\t\tFramework-based Fuzzer\n\t\tAutomated Monitored Execution\n\t\tMonitored Virtual Environment - run potentially malicious code in sandbox / wrapper / virtual machine, see if it does anything suspicious", "Effectiveness": "High"}, {"Method": "Manual Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tManual Source Code Review (not inspections)\n\t```\n\t\tCost effective for partial coverage:\n```\n\n\t\tFocused Manual Spotcheck - Focused manual analysis of source", "Effectiveness": "High"}, {"Method": "Automated Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tSource code Weakness Analyzer\n\t\tContext-configured Source Code Weakness Analyzer", "Effectiveness": "High"}, {"Method": "Automated Static Analysis", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tConfiguration Checker", "Effectiveness": "SOAR Partial"}, {"Method": "Architecture or Design Review", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tFormal Methods / Correct-By-Construction\n\t```\n\t\tCost effective for partial coverage:\n```\n\n\t\tInspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"MitigationID": "MIT-24", "Phase": ["Architecture and Design"], "Strategy": "Libraries or Frameworks", "Description": "\n\nWhen there is a need to store or transmit sensitive data, use strong, up-to-date cryptographic algorithms to encrypt that data. Select a well-vetted algorithm that is currently considered to be strong by experts in the field, and use well-tested implementations. As with all cryptographic mechanisms, the source code should be available for analysis.\n\n\nFor example, US government systems require FIPS 140-2 certification [REF-1192].\n\n\nDo not develop custom or private cryptographic algorithms. They will likely be exposed to attacks that are well-understood by cryptographers. Reverse engineering techniques are mature. If the algorithm can be compromised if attackers find out how it works, then it is especially weak.\n\n\nPeriodically ensure that the cryptography has not become obsolete. Some older algorithms, once thought to require a billion years of computing time, can now be broken in days or hours. This includes MD4, MD5, SHA1, DES, and other algorithms that were once regarded as strong. [REF-267]\n"}, {"MitigationID": "MIT-52", "Phase": ["Architecture and Design"], "Description": "Ensure that the design allows one cryptographic algorithm to be replaced with another in the next generation or version. Where possible, use wrappers to make the interfaces uniform. This will make it easier to upgrade to stronger algorithms. With hardware, design the product at the Intellectual Property (IP) level so that one cryptographic algorithm can be replaced with another in the next generation of the hardware product.", "Effectiveness": "Defense in Depth"}, {"Phase": ["Architecture and Design"], "Description": "Carefully manage and protect cryptographic keys (see CWE-320). If the keys can be guessed or stolen, then the strength of the cryptography itself is irrelevant."}, {"MitigationID": "MIT-4", "Phase": ["Architecture and Design"], "Strategy": "Libraries or Frameworks", "Description": "\n\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\n\n\nIndustry-standard implementations will save development time and may be more likely to avoid errors that can occur during implementation of cryptographic algorithms. Consider the ESAPI Encryption feature.\n"}, {"MitigationID": "MIT-25", "Phase": ["Implementation", "Architecture and Design"], "Description": "When using industry-approved techniques, use them correctly. Don't cut corners by skipping resource-intensive steps (CWE-325). These steps are often essential for preventing common attacks."}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "These code examples use the Data Encryption Standard (DES)."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tEVP_des_ecb();\n```"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tCipher des=Cipher.getInstance(\"DES...\");\n\tdes.initEncrypt(key2);\n```"}, {"Nature": "Bad", "Language": "PHP", "ExampleCode": "```\n\tfunction encryptPassword($password){\n\t\t$iv_size = mcrypt_get_iv_size(MCRYPT_DES, MCRYPT_MODE_ECB);\n\t\t$iv = mcrypt_create_iv($iv_size, MCRYPT_RAND);\n\t\t$key = \"This is a password encryption key\";\n\t\t$encryptedPassword = mcrypt_encrypt(MCRYPT_DES, $key, $password, MCRYPT_MODE_ECB, $iv);\n\t\treturn $encryptedPassword;\n\t}\n```"}, {"BodyText": "Once considered a strong algorithm, DES now regarded as insufficient for many applications. It has been replaced by Advanced Encryption Standard (AES)."}]}, {"Entries": [{"IntroText": "Suppose a chip manufacturer decides to implement a hashing scheme for verifying integrity property of certain bitstream, and it chooses to implement a SHA1 hardware accelerator for to implement the scheme."}, {"Nature": "Bad", "Language": "Other", "ExampleCode": "```\n\tThe manufacturer chooses a SHA1 hardware accelerator for to implement the scheme because it already has a working SHA1 Intellectual Property (IP) that the manufacturer had created and used earlier, so this reuse of IP saves design cost.\n```"}, {"BodyText": "However, SHA1 was theoretically broken in 2005 and practically broken in 2017 at a cost of $110K. This means an attacker with access to cloud-rented computing power will now be able to provide a malicious bitstream with the same hash value, thereby defeating the purpose for which the hash was used."}, {"BodyText": "This issue could have been avoided with better design."}, {"Nature": "Good", "Language": "Other", "ExampleCode": "```\n\tThe manufacturer could have chosen a cryptographic solution that is recommended by the wide security community (including standard-setting bodies like NIST) and is not expected to be broken (or even better, weakened) within the reasonable life expectancy of the hardware product. In this case, the architects could have used SHA-2 or SHA-3, even if it meant that such choice would cost extra.\n```"}]}, {"ID": "DX-153", "Entries": [{"IntroText": "In 2022, the OT:ICEFALL study examined products by 10 different Operational Technology (OT) vendors. The researchers reported 56 vulnerabilities and said that the products were \"insecure by design\" [REF-1283]. If exploited, these vulnerabilities often allowed adversaries to change how the products operated, ranging from denial of service to changing the code that the products executed. Since these products were often used in industries such as power, electrical, water, and others, there could even be safety implications."}, {"BodyText": "Multiple OT products used weak cryptography."}]}], "ObservedExamples": [{"Reference": "CVE-2022-30273", "Description": "SCADA-based protocol supports a legacy encryption mode that uses Tiny Encryption Algorithm (TEA) in ECB mode, which leaks patterns in messages and cannot protect integrity", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30273"}, {"Reference": "CVE-2022-30320", "Description": "Programmable Logic Controller (PLC) uses a protocol with a cryptographically insecure hashing algorithm for passwords.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30320"}, {"Reference": "CVE-2008-3775", "Description": "Product uses \"ROT-25\" to obfuscate the password in the registry.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3775"}, {"Reference": "CVE-2007-4150", "Description": "product only uses \"XOR\" to obfuscate sensitive data", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4150"}, {"Reference": "CVE-2007-5460", "Description": "product only uses \"XOR\" and a fixed key to obfuscate sensitive data", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-5460"}, {"Reference": "CVE-2005-4860", "Description": "Product substitutes characters with other characters in a fixed way, and also leaves certain input characters unchanged.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-4860"}, {"Reference": "CVE-2002-2058", "Description": "Attackers can infer private IP addresses by dividing each octet by the MD5 hash of '20'.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-2058"}, {"Reference": "CVE-2008-3188", "Description": "Product uses DES when MD5 has been specified in the configuration, resulting in weaker-than-expected password hashes.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3188"}, {"Reference": "CVE-2005-2946", "Description": "Default configuration of product uses MD5 instead of stronger algorithms that are available, simplifying forgery of certificates.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2946"}, {"Reference": "CVE-2007-6013", "Description": "Product uses the hash of a hash for authentication, allowing attackers to gain privileges if they can obtain the original hash.", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-6013"}], "RelatedAttackPatterns": ["20", "459", "473", "475", "608", "614", "97"], "MappingNotes": {"Usage": "Allowed-with-Review", "Rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate", "Comments": "Examine children of this entry to see if there is a better fit", "Reasons": ["Abstraction"]}, "Notes": [{"Type": "Maintenance", "Note": "Since CWE 4.4, various cryptography-related entries, including CWE-327 and CWE-1240, have been slated for extensive research, analysis, and community consultation to define consistent terminology, improve relationships, and reduce overlap or duplication. As of CWE 4.6, this work is still ongoing."}, {"Type": "Maintenance", "Note": "The Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are still under review and might change in future CWE versions. These draft mappings were performed by members of the \"Mapping CWE to 62443\" subgroup of the CWE-CAPEC ICS/OT Special Interest Group (SIG), and their work is incomplete as of CWE 4.10. The mappings are included to facilitate discussion and review by the broader ICS/OT community, and they are likely to change in future CWE versions."}], "Top25Examples": [{"Reference": "CVE-2021-31562", "Description": "The SSL/TLS configuration of Fresenius Kabi Agilia Link + version 3.0 has serious deficiencies that may allow an attacker to compromise SSL/TLS sessions in different ways. An attacker may be able to eavesdrop on transferred data, manipulate data allegedly secured by SSL/TLS, and impersonate an entity to gain access to sensitive information."}, {"Reference": "CVE-2021-2351", "Description": "Vulnerability in the Advanced Networking Option component of Oracle Database Server. Supported versions that are affected are 12.1.0.2, 12.2.0.1 and 19c. Difficult to exploit vulnerability allows unauthenticated attacker with network access via Oracle Net to compromise Advanced Networking Option. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Advanced Networking Option, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Advanced Networking Option. Note: The July 2021 Critical Patch Update introduces a number of Native Network Encryption changes to deal with vulnerability CVE-2021-2351 and prevent the use of weaker ciphers. Customers should review: \"Changes in Native Network Encryption with the July 2021 Critical Patch Update\" (Doc ID 2791571.1). CVSS 3.1 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H)."}, {"Reference": "CVE-2021-37588", "Description": "In Charm 0.43, any two users can collude to achieve the ability to decrypt YCT14 data."}, {"Reference": "CVE-2021-40363", "Description": "A vulnerability has been identified in SIMATIC PCS 7 V8.2 (All versions), SIMATIC PCS 7 V9.0 (All versions), SIMATIC PCS 7 V9.1 (All versions < V9.1 SP1), SIMATIC WinCC V15 and earlier (All versions < V15 SP1 Update 7), SIMATIC WinCC V16 (All versions < V16 Update 5), SIMATIC WinCC V17 (All versions < V17 Update 2), SIMATIC WinCC V17 (All versions <= V17 Update 4), SIMATIC WinCC V7.4 (All versions < V7.4 SP1 Update 19), SIMATIC WinCC V7.5 (All versions < V7.5 SP2 Update 6). The affected component stores the credentials of a local system account in a potentially publicly accessible project file using an outdated cipher algorithm. An attacker may use this to brute force the credentials and take over the system."}, {"Reference": "CVE-2021-43774", "Description": "A risky-algorithm issue was discovered on Fujifilm DocuCentre-VI C4471 1.8 devices. An attacker that obtained access to the administrative web interface of a printer (e.g., by using the default credentials) can download the address book file, which contains the list of users (domain users, FTP users, etc.) stored on the printer, together with their encrypted passwords. The passwords are protected by a weak cipher, such as ROT13, which requires minimal effort to instantly retrieve the original password, giving the attacker a list of valid domain or FTP usernames and passwords."}, {"Reference": "CVE-2021-43989", "Description": "mySCADA myPRO Versions 8.20.0 and prior stores passwords using MD5, which may allow an attacker to crack the previously retrieved password hashes."}, {"Reference": "CVE-2021-45512", "Description": "Certain NETGEAR devices are affected by weak cryptography. This affects D7000v2 before 1.0.0.62, D8500 before 1.0.3.50, EX3700 before 1.0.0.84, EX3800 before 1.0.0.84, EX6120 before 1.0.0.54, EX6130 before 1.0.0.36, EX7000 before 1.0.1.90, R6250 before 1.0.4.42, R6400v2 before 1.0.4.98, R6700v3 before 1.0.4.98, R6900P before 1.3.2.124, R7000 before 1.0.11.106, R7000P before 1.3.2.124, R7100LG before 1.0.0.56, R7900 before 1.0.4.26, R8000 before 1.0.4.58, R8300 before 1.0.2.134, R8500 before 1.0.2.134, RS400 before 1.5.0.48, WNR3500Lv2 before 1.2.0.62, and XR300 before 1.0.3.50."}, {"Reference": "CVE-2021-45696", "Description": "An issue was discovered in the sha2 crate 0.9.7 before 0.9.8 for Rust. Hashes of long messages may be incorrect when the AVX2-accelerated backend is used."}, {"Reference": "CVE-2021-46744", "Description": "An attacker with access to a malicious hypervisor may be able to infer data values used in a SEV guest on AMD CPUs by monitoring ciphertext values over time."}, {"Reference": "CVE-2022-0377", "Description": "Users of the LearnPress WordPress plugin before 4.1.5 can upload an image as a profile avatar after the registration. After this process the user crops and saves the image. Then a \"POST\" request that contains user supplied name of the image is sent to the server for renaming and cropping of the image. As a result of this request, the name of the user-supplied image is changed with a MD5 value. This process can be conducted only when type of the image is JPG or PNG. An attacker can use this vulnerability in order to rename an arbitrary image file. By doing this, they could destroy the design of the web site."}, {"Reference": "CVE-2022-1252", "Description": "Use of a Broken or Risky Cryptographic Algorithm in GitHub repository gnuboard/gnuboard5 prior to and including 5.5.5. A vulnerability in gnuboard v5.5.5 and below uses weak encryption algorithms leading to sensitive information exposure. This allows an attacker to derive the email address of any user, including when the 'Let others see my information.' box is ticked off. Or to send emails to any email address, with full control of its contents "}, {"Reference": "CVE-2022-1434", "Description": "The OpenSSL 3.0 implementation of the RC4-MD5 ciphersuite incorrectly uses the AAD data as the MAC key. This makes the MAC key trivially predictable. An attacker could exploit this issue by performing a man-in-the-middle attack to modify data being sent from one endpoint to an OpenSSL 3.0 recipient such that the modified data would still pass the MAC integrity check. Note that data sent from an OpenSSL 3.0 endpoint to a non-OpenSSL 3.0 endpoint will always be rejected by the recipient and the connection will fail at that point. Many application protocols require data to be sent from the client to the server first. Therefore, in such a case, only an OpenSSL 3.0 server would be impacted when talking to a non-OpenSSL 3.0 client. If both endpoints are OpenSSL 3.0 then the attacker could modify data being sent in both directions. In this case both clients and servers could be affected, regardless of the application protocol. Note that in the absence of an attacker this bug means that an OpenSSL 3.0 endpoint communicating with a non-OpenSSL 3.0 endpoint will fail to complete the handshake when using this ciphersuite. The confidentiality of data is not impacted by this issue, i.e. an attacker cannot decrypt data that has been encrypted using this ciphersuite - they can only modify it. In order for this attack to work both endpoints must legitimately negotiate the RC4-MD5 ciphersuite. This ciphersuite is not compiled by default in OpenSSL 3.0, and is not available within the default provider or the default ciphersuite list. This ciphersuite will never be used if TLSv1.3 has been negotiated. In order for an OpenSSL 3.0 endpoint to use this ciphersuite the following must have occurred: 1) OpenSSL must have been compiled with the (non-default) compile time option enable-weak-ssl-ciphers 2) OpenSSL must have had the legacy provider explicitly loaded (either through application code or via configuration) 3) The ciphersuite must have been explicitly added to the ciphersuite list 4) The libssl security level must have been set to 0 (default is 1) 5) A version of SSL/TLS below TLSv1.3 must have been negotiated 6) Both endpoints must negotiate the RC4-MD5 ciphersuite in preference to any others that both endpoints have in common Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2)."}, {"Reference": "CVE-2022-1666", "Description": "The default password for the web application\u2019s root user (the vendor\u2019s private account) was weak and the MD5 hash was used to crack the password using a widely available open-source tool."}, {"Reference": "CVE-2022-20805", "Description": "A vulnerability in the automatic decryption process in Cisco Umbrella Secure Web Gateway (SWG) could allow an authenticated, adjacent attacker to bypass the SSL decryption and content filtering policies on an affected system. This vulnerability is due to how the decryption function uses the TLS Sever Name Indication (SNI) extension of an HTTP request to discover the destination domain and determine if the request needs to be decrypted. An attacker could exploit this vulnerability by sending a crafted request over TLS from a client to an unknown or controlled URL. A successful exploit could allow an attacker to bypass the decryption process of Cisco Umbrella SWG and allow malicious content to be downloaded to a host on a protected network. There are workarounds that address this vulnerability."}, {"Reference": "CVE-2022-2097", "Description": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p)."}, {"Reference": "CVE-2022-2781", "Description": "In affected versions of Octopus Server it was identified that the same encryption process was used for both encrypting session cookies and variables."}, {"Reference": "CVE-2022-28164", "Description": "Brocade SANnav before SANnav 2.2.0 application uses the Blowfish symmetric encryption algorithm for the storage of passwords. This could allow an authenticated attacker to decrypt stored account passwords."}, {"Reference": "CVE-2022-28382", "Description": "An issue was discovered in certain Verbatim drives through 2022-03-31. Due to the use of an insecure encryption AES mode (Electronic Codebook, aka ECB), an attacker may be able to extract information even from encrypted data, for example by observing repeating byte patterns. The firmware of the USB-to-SATA bridge controller INIC-3637EN uses AES-256 with the ECB mode. This operation mode of block ciphers (e.g., AES) always encrypts identical plaintext data, in this case blocks of 16 bytes, to identical ciphertext data. For some data, for instance bitmap images, the lack of the cryptographic property called diffusion, within ECB, can leak sensitive information even in encrypted data. Thus, the use of the ECB operation mode can put the confidentiality of specific information at risk, even in an encrypted form. This affects Keypad Secure USB 3.2 Gen 1 Drive Part Number #49428, Store 'n' Go Secure Portable HDD GD25LK01-3637-C VER4.0, Executive Fingerprint Secure SSD GDMSFE01-INI3637-C VER1.1, and Fingerprint Secure Portable Hard Drive Part Number #53650."}, {"Reference": "CVE-2022-29960", "Description": "Emerson OpenBSI through 2022-04-29 uses weak cryptography. It is an engineering environment for the ControlWave and Bristol Babcock line of RTUs. DES with hardcoded cryptographic keys is used for protection of certain system credentials, engineering files, and sensitive utilities."}, {"Reference": "CVE-2022-30320", "Description": "Saia Burgess Controls (SBC) PCD through 2022-05-06 uses a Broken or Risky Cryptographic Algorithm. According to FSCT-2022-0063, there is a Saia Burgess Controls (SBC) PCD S-Bus weak credential hashing scheme issue. The affected components are characterized as: S-Bus (5050/UDP) authentication. The potential impact is: Authentication bypass. The Saia Burgess Controls (SBC) PCD controllers utilize the S-Bus protocol (5050/UDP) for a variety of engineering purposes. It is possible to configure a password in order to restrict access to sensitive engineering functionality. Authentication is done by using the S-Bus 'write byte' message to a specific address and supplying a hashed version of the password. The hashing algorithm used is based on CRC-16 and as such not cryptographically secure. An insecure hashing algorithm is used. An attacker capable of passively observing traffic can intercept the hashed credentials and trivially find collisions allowing for authentication without having to bruteforce a keyspace defined by the actual strength of the password. This allows the attacker access to sensitive engineering functionality such as uploading/downloading control logic and manipulating controller configuration."}, {"Reference": "CVE-2022-35513", "Description": "The Blink1Control2 application <= 2.2.7 uses weak password encryption and an insecure method of storage."}, {"Reference": "CVE-2022-38493", "Description": "Rhonabwy 0.9.99 through 1.1.x before 1.1.7 doesn't check the RSA private key length before RSA-OAEP decryption. This allows attackers to cause a Denial of Service via a crafted JWE (JSON Web Encryption) token."}, {"Reference": "CVE-2022-39237", "Description": "syslabs/sif is the Singularity Image Format (SIF) reference implementation. In versions prior to 2.8.1the `github.com/sylabs/sif/v2/pkg/integrity` package did not verify that the hash algorithm(s) used are cryptographically secure when verifying digital signatures. A patch is available in version >= v2.8.1 of the module. Users are encouraged to upgrade. Users unable to upgrade may independently validate that the hash algorithm(s) used for metadata digest(s) and signature hash are cryptographically secure."}, {"Reference": "CVE-2022-4304", "Description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation which could be sufficient to recover a plaintext across a network in a Bleichenbacher style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP and RSASVE. For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection. "}, {"Reference": "CVE-2022-28166", "Description": "In Brocade SANnav version before SANN2.2.0.2 and Brocade SANNav before 2.1.1.8, the implementation of TLS/SSL Server Supports the Use of Static Key Ciphers (ssl-static-key-ciphers) on ports 443 & 18082."}, {"Reference": "CVE-2022-30187", "Description": "Azure Storage Library Information Disclosure Vulnerability"}, {"Reference": "CVE-2021-23839", "Description": "OpenSSL 1.0.2 supports SSLv2. If a client attempts to negotiate SSLv2 with a server that is configured to support both SSLv2 and more recent SSL and TLS versions then a check is made for a version rollback attack when unpadding an RSA signature. Clients that support SSL or TLS versions greater than SSLv2 are supposed to use a special form of padding. A server that supports greater than SSLv2 is supposed to reject connection attempts from a client where this special form of padding is present, because this indicates that a version rollback has occurred (i.e. both client and server support greater than SSLv2, and yet this is the version that is being requested). The implementation of this padding check inverted the logic so that the connection attempt is accepted if the padding is present, and rejected if it is absent. This means that such as server will accept a connection if a version rollback attack has occurred. Further the server will erroneously reject a connection if a normal SSLv2 connection attempt is made. Only OpenSSL 1.0.2 servers from version 1.0.2s to 1.0.2x are affected by this issue. In order to be vulnerable a 1.0.2 server must: 1) have configured SSLv2 support at compile time (this is off by default), 2) have configured SSLv2 support at runtime (this is off by default), 3) have configured SSLv2 ciphersuites (these are not in the default ciphersuite list) OpenSSL 1.1.1 does not have SSLv2 support and therefore is not vulnerable to this issue. The underlying error is in the implementation of the RSA_padding_check_SSLv23() function. This also affects the RSA_SSLV23_PADDING padding mode used by various other functions. Although 1.1.1 does not support SSLv2 the RSA_padding_check_SSLv23() function still exists, as does the RSA_SSLV23_PADDING padding mode. Applications that directly call that function or use that padding mode will encounter this issue. However since there is no support for the SSLv2 protocol in 1.1.1 this is considered a bug and not a security issue in that version. OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.0.2y (Affected 1.0.2s-1.0.2x)."}, {"Reference": "CVE-2021-20379", "Description": "IBM Guardium Data Encryption (GDE) 3.0.0.3 and 4.0.0.4 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 195711."}, {"Reference": "CVE-2021-20406", "Description": "IBM Security Verify Information Queue 1.0.6 and 1.0.7 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 196184. "}, {"Reference": "CVE-2021-20419", "Description": "IBM Security Guardium 11.2 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 196280."}, {"Reference": "CVE-2021-20441", "Description": "IBM Security Verify Bridge uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 196617."}, {"Reference": "CVE-2021-20479", "Description": "IBM Cloud Pak System 2.3.0 through 2.3.3.3 Interim Fix 1 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 197498."}, {"Reference": "CVE-2021-20497", "Description": "IBM Security Verify Access Docker 10.0.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 197969"}, {"Reference": "CVE-2021-20566", "Description": "IBM Resilient SOAR V38.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 199238."}, {"Reference": "CVE-2021-22212", "Description": "ntpkeygen can generate keys that ntpd fails to parse. NTPsec 1.2.0 allows ntpkeygen to generate keys with '#' characters. ntpd then either pads, shortens the key, or fails to load these keys entirely, depending on the key type and the placement of the '#'. This results in the administrator not being able to use the keys as expected or the keys are shorter than expected and easier to brute-force, possibly resulting in MITM attacks between ntp clients and ntp servers. For short AES128 keys, ntpd generates a warning that it is padding them."}, {"Reference": "CVE-2021-22356", "Description": "There is a weak secure algorithm vulnerability in Huawei products. A weak secure algorithm is used in a module. Attackers can exploit this vulnerability by capturing and analyzing the messages between devices to obtain information. This can lead to information leak.Affected product versions include: IPS Module V500R005C00SPC100, V500R005C00SPC200; NGFW Module V500R005C00SPC100, V500R005C00SPC200; Secospace USG6300 V500R001C30SPC200, V500R001C30SPC600, V500R001C60SPC500, V500R005C00SPC100, V500R005C00SPC200; Secospace USG6500 V500R001C30SPC200, V500R001C30SPC600, V500R001C60SPC500, V500R005C00SPC100, V500R005C00SPC200; Secospace USG6600 V500R001C30SPC200, V500R001C30SPC600, V500R001C60SPC500, V500R005C00SPC100, V500R005C00SPC200; USG9500 V500R001C30SPC200, V500R001C30SPC600, V500R001C60SPC500, V500R005C00SPC100, V500R005C00SPC200."}, {"Reference": "CVE-2021-22738", "Description": "Use of a Broken or Risky Cryptographic Algorithm vulnerability exists in homeLYnk (Wiser For KNX) and spaceLYnk V2.60 and prior that could cause unauthorized access when credentials are discovered after a brute force attack."}, {"Reference": "CVE-2021-25763", "Description": "In JetBrains Ktor before 1.4.2, weak cipher suites were enabled by default."}, {"Reference": "CVE-2021-27756", "Description": "\"TLS-RSA cipher suites are not disabled in BigFix Compliance up to v2.0.5. If TLS 2.0 and secure ciphers are not enabled then an attacker can passively record traffic and later decrypt it.\""}, {"Reference": "CVE-2021-29704", "Description": "IBM Security SOAR uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information."}, {"Reference": "CVE-2021-29722", "Description": "IBM Sterling Secure Proxy 6.0.1, 6.0.2, 2.4.3.2, and 3.4.3.2 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 201095."}, {"Reference": "CVE-2021-29723", "Description": "IBM Sterling Secure Proxy 6.0.1, 6.0.2, 2.4.3.2, and 3.4.3.2 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-ForceID: 201100."}, {"Reference": "CVE-2021-29750", "Description": "IBM QRadar SIEM 7.3 and 7.4 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 201778."}, {"Reference": "CVE-2021-29894", "Description": "IBM Cloud Pak for Security (CP4S) 1.7.0.0, 1.7.1.0, 1.7.2.0, and 1.8.0.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 207320."}, {"Reference": "CVE-2021-32593", "Description": "A use of a broken or risky cryptographic algorithm vulnerability [CWE-327] in the Dynamic Tunnel Protocol of FortiWAN before 4.5.9 may allow an unauthenticated remote attacker to decrypt and forge protocol communication messages."}, {"Reference": "CVE-2021-33018", "Description": "The use of a broken or risky cryptographic algorithm in Philips Vue PACS versions 12.2.x.x and prior is an unnecessary risk that may result in the exposure of sensitive information."}, {"Reference": "CVE-2021-33846", "Description": "Fresenius Kabi Vigilant Software Suite (Mastermed Dashboard) version 2.0.1.3 issues authentication tokens to authenticated users that are signed with a symmetric encryption key. An attacker in possession of the key can issue valid JWTs and impersonate arbitrary users."}, {"Reference": "CVE-2021-36647", "Description": "Use of a Broken or Risky Cryptographic Algorithm in the function mbedtls_mpi_exp_mod() in lignum.c in Mbed TLS Mbed TLS all versions before 3.0.0, 2.27.0 or 2.16.11 allows attackers with access to precise enough timing and memory access information (typically an untrusted operating system attacking a secure enclave such as SGX or the TrustZone secure world) to recover the private keys used in RSA."}, {"Reference": "CVE-2021-38921", "Description": "IBM Security Verify 10.0.0, 10.0.1.0, and 10.0.2.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 210067."}, {"Reference": "CVE-2021-39002", "Description": "IBM DB2 for Linux, UNIX and Windows (includes DB2 Connect Server) 9.7, 10.1, 10.5, 11.1, and 11.5 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information."}, {"Reference": "CVE-2021-39058", "Description": "IBM Spectrum Copy Data Management 2.2.13 and earlier uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 214617."}, {"Reference": "CVE-2021-39076", "Description": "IBM Security Guardium 10.5 and 11.3 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt sensitive information. IBM X-Force ID: 215585."}, {"Reference": "CVE-2021-39082", "Description": "IBM UrbanCode Deploy (UCD) 7.1.1.2 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information."}, {"Reference": "CVE-2021-41096", "Description": "Rucky is a USB HID Rubber Ducky Launch Pad for Android. Versions 2.2 and earlier for release builds and versions 425 and earlier for nightly builds suffer from use of a weak cryptographic algorithm (RSA/ECB/PKCS1Padding). The issue will be patched in v2.3 for release builds and 426 onwards for nightly builds. As a workaround, one may disable an advance security feature if not required."}, {"Reference": "CVE-2021-41278", "Description": "Functions SDK for EdgeX is meant to provide all the plumbing necessary for developers to get started in processing/transforming/exporting data out of the EdgeX IoT platform. In affected versions broken encryption in app-functions-sdk \u201cAES\u201d transform in EdgeX Foundry releases prior to Jakarta allows attackers to decrypt messages via unspecified vectors. The app-functions-sdk exports an \u201caes\u201d transform that user scripts can optionally call to encrypt data in the processing pipeline. No decrypt function is provided. Encryption is not enabled by default, but if used, the level of protection may be less than the user may expects due to a broken implementation. Version v2.1.0 (EdgeX Foundry Jakarta release and later) of app-functions-sdk-go/v2 deprecates the \u201caes\u201d transform and provides an improved \u201caes256\u201d transform in its place. The broken implementation will remain in a deprecated state until it is removed in the next EdgeX major release to avoid breakage of existing software that depends on the broken implementation. As the broken transform is a library function that is not invoked by default, users who do not use the AES transform in their processing pipelines are unaffected. Those that are affected are urged to upgrade to the Jakarta EdgeX release and modify processing pipelines to use the new \"aes256\" transform."}, {"Reference": "CVE-2021-42583", "Description": "A Broken or Risky Cryptographic Algorithm exists in Max Mazurov Maddy before 0.5.2, which is an unnecessary risk that may result in the exposure of sensitive information."}, {"Reference": "CVE-2021-43550", "Description": "The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in the exposure of sensitive information, which affects the communications between Patient Information Center iX (PIC iX) Versions C.02 and C.03 and Efficia CM Series Revisions A.01 to C.0x and 4.0."}, {"Reference": "CVE-2022-20117", "Description": "In (TBD) of (TBD), there is a possible way to decrypt local data encrypted by the GSC due to improperly used crypto. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-217475903References: N/A"}, {"Reference": "CVE-2022-22327", "Description": "IBM UrbanCode Deploy (UCD) 7.0.5, 7.1.0, 7.1.1, and 7.1.2 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 218859."}, {"Reference": "CVE-2022-22461", "Description": " IBM Security Verify Governance, Identity Manager 10.0.1 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 225007. "}, {"Reference": "CVE-2022-22462", "Description": " IBM Security Verify Governance, Identity Manager virtual appliance component 10.0.1 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 225078. "}, {"Reference": "CVE-2022-22559", "Description": "Dell PowerScale OneFS, version 9.3.0, contains a use of a broken or risky cryptographic algorithm. An unprivileged network attacker could exploit this vulnerability, leading to the potential for information disclosure."}, {"Reference": "CVE-2022-22564", "Description": "Dell EMC Unity versions before 5.2.0.0.5.173 , use(es) broken cryptographic algorithm. A remote unauthenticated attacker could potentially exploit this vulnerability by performing MitM attacks and let attackers obtain sensitive information. "}, {"Reference": "CVE-2022-24296", "Description": "Use of a Broken or Risky Cryptographic Algorithm vulnerability in Air Conditioning System G-150AD Ver. 3.21 and prior, Air Conditioning System AG-150A-A Ver. 3.21 and prior, Air Conditioning System AG-150A-J Ver. 3.21 and prior, Air Conditioning System GB-50AD Ver. 3.21 and prior, Air Conditioning System GB-50ADA-A Ver. 3.21 and prior, Air Conditioning System GB-50ADA-J Ver. 3.21 and prior, Air Conditioning System EB-50GU-A Ver. 7.10 and prior, Air Conditioning System EB-50GU-J Ver. 7.10 and prior, Air Conditioning System AE-200J Ver. 7.97 and prior, Air Conditioning System AE-200A Ver. 7.97 and prior, Air Conditioning System AE-200E Ver. 7.97 and prior, Air Conditioning System AE-50J Ver. 7.97 and prior, Air Conditioning System AE-50A Ver. 7.97 and prior, Air Conditioning System AE-50E Ver. 7.97 and prior, Air Conditioning System EW-50J Ver. 7.97 and prior, Air Conditioning System EW-50A Ver. 7.97 and prior, Air Conditioning System EW-50E Ver. 7.97 and prior, Air Conditioning System TE-200A Ver. 7.97 and prior, Air Conditioning System TE-50A Ver. 7.97 and prior and Air Conditioning System TW-50A Ver. 7.97 and prior allows a remote unauthenticated attacker to cause a disclosure of encrypted message of the air conditioning systems by sniffing encrypted communications."}, {"Reference": "CVE-2022-26854", "Description": "Dell PowerScale OneFS, versions 8.2.x-9.2.x, contain risky cryptographic algorithms. A remote unprivileged malicious attacker could potentially exploit this vulnerability, leading to full system access"}, {"Reference": "CVE-2022-27581", "Description": "Use of a Broken or Risky Cryptographic Algorithm in SICK RFU61x firmware version <v2.25 allows a low-privileged remote attacker to decrypt the encrypted data if the user requested weak cipher suites to be used for encryption via the SSH interface. The patch and installation procedure for the firmware update is available from the responsible SICK customer contact person."}, {"Reference": "CVE-2022-28622", "Description": "A potential security vulnerability has been identified in HPE StoreOnce Software. The SSH server supports weak key exchange algorithms which could lead to remote unauthorized access. HPE has made the following software update to resolve the vulnerability in HPE StoreOnce Software 4.3.2."}, {"Reference": "CVE-2022-29217", "Description": "PyJWT is a Python implementation of RFC 7519. PyJWT supports multiple different JWT signing algorithms. With JWT, an attacker submitting the JWT token can choose the used signing algorithm. The PyJWT library requires that the application chooses what algorithms are supported. The application can specify `jwt.algorithms.get_default_algorithms()` to get support for all algorithms, or specify a single algorithm. The issue is not that big as `algorithms=jwt.algorithms.get_default_algorithms()` has to be used. Users should upgrade to v2.4.0 to receive a patch for this issue. As a workaround, always be explicit with the algorithms that are accepted and expected when decoding."}, {"Reference": "CVE-2022-29249", "Description": "JavaEZ is a library that adds new functions to make Java easier. A weakness in JavaEZ 1.6 allows force decryption of locked text by unauthorized actors. The issue is NOT critical for non-secure applications, however may be critical in a situation where the highest levels of security are required. This issue ONLY affects v1.6 and does not affect anything pre-1.6. The vulnerability has been patched in release 1.7. Currently, there is no way to fix the issue without upgrading."}, {"Reference": "CVE-2022-30111", "Description": "Due to the use of an insecure algorithm for rolling codes in MCK Smartlock 1.0, allows attackers to unlock the mechanism via replay attacks."}, {"Reference": "CVE-2022-30273", "Description": "The Motorola MDLC protocol through 2022-05-02 mishandles message integrity. It supports three security modes: Plain, Legacy Encryption, and New Encryption. In Legacy Encryption mode, traffic is encrypted via the Tiny Encryption Algorithm (TEA) block-cipher in ECB mode. This mode of operation does not offer message integrity and offers reduced confidentiality above the block level, as demonstrated by an ECB Penguin attack against any block ciphers."}, {"Reference": "CVE-2022-31230", "Description": "Dell PowerScale OneFS, versions 8.2.x-9.2.x, contain broken or risky cryptographic algorithm. A remote unprivileged malicious attacker could potentially exploit this vulnerability, leading to full system access."}, {"Reference": "CVE-2022-34319", "Description": "IBM CICS TX 11.7 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 229463."}, {"Reference": "CVE-2022-34320", "Description": " IBM CICS TX 11.1 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 229464. "}, {"Reference": "CVE-2022-34361", "Description": " IBM Sterling Secure Proxy 6.0.3 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 230522. "}, {"Reference": "CVE-2022-34444", "Description": " Dell PowerScale OneFS, versions 9.2.0.x through 9.4.0.x contain an information vulnerability. A remote unauthenticated attacker may potentially exploit this vulnerability to cause data leak. "}, {"Reference": "CVE-2022-34632", "Description": "Rocket-Chip commit 4f8114374d8824dfdec03f576a8cd68bebce4e56 was discovered to contain insufficient cryptography via the component /rocket/RocketCore.scala."}, {"Reference": "CVE-2022-34757", "Description": "A CWE-327: Use of a Broken or Risky Cryptographic Algorithm vulnerability exists where weak cipher suites can be used for the SSH connection between Easergy Pro software and the device, which may allow an attacker to observe protected communication details. Affected Products: Easergy P5 (V01.401.102 and prior)"}, {"Reference": "CVE-2022-35720", "Description": "IBM Sterling External Authentication Server 6.1.0 and IBM Sterling Secure Proxy 6.0.3 uses weaker than expected cryptographic algorithms during installation that could allow a local attacker to decrypt sensitive information. IBM X-Force ID: 231373."}, {"Reference": "CVE-2022-38391", "Description": " IBM Spectrum Control 5.4 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 233982. "}, {"Reference": "CVE-2022-4610", "Description": "A vulnerability, which was classified as problematic, has been found in Click Studios Passwordstate and Passwordstate Browser Extension Chrome. Affected by this issue is some unknown functionality. The manipulation leads to risky cryptographic algorithm. Local access is required to approach this attack. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-216272."}, {"Reference": "CVE-2022-46140", "Description": "Affected devices use a weak encryption scheme to encrypt the debug zip file. This could allow an authenticated attacker to decrypt the contents of the file and retrieve debug information about the system."}, {"Reference": "CVE-2022-46832", "Description": "Use of a Broken or Risky Cryptographic Algorithm in SICK RFU62x firmware version < 2.21 allows a low-privileged remote attacker to decrypt the encrypted data if the user requested weak cipher suites to be used for encryption via the SSH interface. The patch and installation procedure for the firmware update is available from the responsible SICK customer contact person."}, {"Reference": "CVE-2022-46833", "Description": "Use of a Broken or Risky Cryptographic Algorithm in SICK RFU63x firmware version < v2.21 allows a low-privileged remote attacker to decrypt the encrypted data if the user requested weak cipher suites to be used for encryption via the SSH interface. The patch and installation procedure for the firmware update is available from the responsible SICK customer contact person."}, {"Reference": "CVE-2022-46834", "Description": "Use of a Broken or Risky Cryptographic Algorithm in SICK RFU65x firmware version < v2.21 allows a low-privileged remote attacker to decrypt the encrypted data if the user requested weak cipher suites to be used for encryption via the SSH interface. The patch and installation procedure for the firmware update is available from the responsible SICK customer contact person."}]}
{"ID": "328", "Name": "Use of Weak Hash", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).", "ExtendedDescription": "\n\nA hash function is defined as an algorithm that maps arbitrarily sized data into a fixed-sized digest (output) such that the following properties hold:\n\n\n  1. The algorithm is not invertible (also called \"one-way\" or \"not reversible\")\n\n  1. The algorithm is deterministic; the same input produces the same digest every time\n\n Building on this definition, a cryptographic hash function must also ensure that a malicious actor cannot leverage the hash function to have a reasonable chance of success at determining any of the following:\n\n  1. the original input (preimage attack), given only the digest\n\n  1. another input that can produce the same digest (2nd preimage attack), given the original input\n\n  1. a set of two or more inputs that evaluate to the same digest (birthday attack), given the actor can arbitrarily choose the inputs to be hashed and can do so a reasonable amount of times\n\nWhat is regarded as \"reasonable\" varies by context and threat model, but in general, \"reasonable\" could cover any attack that is more efficient than brute force (i.e., on average, attempting half of all possible combinations). Note that some attacks might be more efficient than brute force but are still not regarded as achievable in the real world.\n\nAny algorithm that does not meet the above conditions will generally be considered weak for general use in hashing.\n\n\nIn addition to algorithmic weaknesses, a hash function can be made weak by using the hash in a security context that breaks its security guarantees. For example, using a hash function without a salt for storing passwords (that are sufficiently short) could enable an adversary to create a \"rainbow table\" [REF-637] to recover the password under certain conditions; this attack works against such hash functions as MD5, SHA-1, and SHA-2.\n", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "326", "ViewID": "1000"}, {"Nature": "ChildOf", "CweID": "327", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "ICS/OT", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Bypass Protection Mechanism"]}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"MitigationID": "MIT-51", "Phase": ["Architecture and Design"], "Description": "\n\nUse an adaptive hash function that can be configured to change the amount of computational effort needed to compute the hash, such as the number of iterations (\"stretching\") or the amount of memory required. Some hash functions perform salting automatically. These functions can significantly increase the overhead for a brute force attack compared to intentionally-fast functions such as MD5. For example, rainbow table attacks can become infeasible due to the high computing overhead. Finally, since computing power gets faster and cheaper over time, the technique can be reconfigured to increase the workload without forcing an entire replacement of the algorithm in use.\n\n\nSome hash functions that have one or more of these desired properties include bcrypt [REF-291], scrypt [REF-292], and PBKDF2 [REF-293]. While there is active debate about which of these is the most effective, they are all stronger than using salts with hash functions with very little computing overhead.\n\n\nNote that using these functions can have an impact on performance, so they require special consideration to avoid denial-of-service attacks. However, their configurability provides finer control over how much CPU and memory is used, so it could be adjusted to suit the environment's needs.\n", "Effectiveness": "High"}], "DemonstrativeExamples": [{"ID": "DX-101", "Entries": [{"IntroText": "In both of these examples, a user is logged in if their given password matches a stored password:"}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tunsigned char *check_passwd(char *plaintext) {\n\t\tctext = simple_digest(\"sha1\",plaintext,strlen(plaintext), ... );\n```\n//Login if hash matches stored hash* \n\t\tif (equal(ctext, secret_password())) {\n\t\t```\n\t\t\tlogin_user();\n\t\t}\n\t}\n```"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tString plainText = new String(plainTextIn);\n\tMessageDigest encer = MessageDigest.getInstance(\"SHA\");\n\tencer.update(plainTextIn);\n\tbyte[] digest = password.digest();\n```\n//Login if hash matches stored hash* \n\tif (equal(digest,secret_password())) {\n\t```\n\t\tlogin_user();\n\t}\n```"}, {"BodyText": "This code relies exclusively on a password mechanism (CWE-309) using only one factor of authentication (CWE-308). If an attacker can steal or guess a user's password, they are given full access to their account. Note this code also uses SHA-1, which is a weak hash (CWE-328). It also does not use a salt (CWE-759)."}]}, {"ID": "DX-153", "Entries": [{"IntroText": "In 2022, the OT:ICEFALL study examined products by 10 different Operational Technology (OT) vendors. The researchers reported 56 vulnerabilities and said that the products were \"insecure by design\" [REF-1283]. If exploited, these vulnerabilities often allowed adversaries to change how the products operated, ranging from denial of service to changing the code that the products executed. Since these products were often used in industries such as power, electrical, water, and others, there could even be safety implications."}, {"BodyText": "At least one OT product used weak hashes."}]}, {"Entries": [{"IntroText": "The example code below is taken from the JTAG access control mechanism of the Hack@DAC'21 buggy OpenPiton SoC [REF-1360]. Access to JTAG allows users to access sensitive information in the system. Hence, access to JTAG is controlled using cryptographic authentication of the users. In this example (see the vulnerable code source), the password checker uses HMAC-SHA256 for authentication. It takes a 512-bit secret message from the user, hashes it using HMAC, and compares its output with the expected output to determine the authenticity of the user."}, {"Nature": "Bad", "Language": "Verilog", "ExampleCode": "...\n\n **logic [31:0] data_d,**  data_q\n\n **logic [512-1:0] pass_data;** \n ...\n\n```\n\t Write: begin\n\t\t ...\n\t\t\t if (pass_mode) begin\n```\npass_data = { {60{8'h00}}, data_d};** \n\t\t\t\t state_d = PassChk;\n\t\t\t\t pass_mode = 1'b0;\n\t\t\t\t ...\n\t\t\t end\n\t ..."}, {"BodyText": "The vulnerable code shows an incorrect implementation of the HMAC authentication where it only uses the least significant 32 bits of the secret message for the authentication (the remaining 480 bits are hard coded as zeros). As a result, the system is susceptible to brute-force attacks where the attacker only needs to determine 32 bits of the secret message instead of 512 bits, weakening the cryptographic protocol."}, {"BodyText": "To mitigate, remove the zero padding and use all 512 bits of the secret message for HMAC authentication [REF-1361]."}, {"Nature": "Good", "Language": "Verilog", "ExampleCode": "...\n\n **logic [512-1:0] data_d,**  data_q\n logic [512-1:0] pass_data;\n ...\n\n```\n\t Write: begin\n\t\t ...\n\t\t\t if (pass_mode) begin\n```\npass_data = data_d;** \n\t\t\t\t state_d = PassChk;\n\t\t\t\t pass_mode = 1'b0;\n\t\t\t\t ...\n\t\t\t end\n\t ..."}]}], "ObservedExamples": [{"Reference": "CVE-2022-30320", "Description": "Programmable Logic Controller (PLC) uses a protocol with a cryptographically insecure hashing algorithm for passwords.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30320"}, {"Reference": "CVE-2005-4900", "Description": "SHA-1 algorithm is not collision-resistant.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-4900"}, {"Reference": "CVE-2020-25685", "Description": "DNS product uses a weak hash (CRC32 or SHA-1) of the query name, allowing attacker to forge responses by computing domain names with the same hash.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-25685"}, {"Reference": "CVE-2012-6707", "Description": "blogging product uses MD5-based algorithm for passwords.", "Link": "https://www.cve.org/CVERecord?id=CVE-2012-6707"}, {"Reference": "CVE-2019-14855", "Description": "forging of certificate signatures using SHA-1 collisions.", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-14855"}, {"Reference": "CVE-2017-15999", "Description": "mobile app for backup sends SHA-1 hash of password in cleartext.", "Link": "https://www.cve.org/CVERecord?id=CVE-2017-15999"}, {"Reference": "CVE-2006-4068", "Description": "Hard-coded hashed values for username and password contained in client-side script, allowing brute-force offline attacks.", "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4068"}], "RelatedAttackPatterns": ["461", "68"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "Since CWE 4.4, various cryptography-related entries including CWE-328 have been slated for extensive research, analysis, and community consultation to define consistent terminology, improve relationships, and reduce overlap or duplication. As of CWE 4.6, this work is still ongoing."}], "Top25Examples": [{"Reference": "CVE-2022-3433", "Description": "The aeson library is not safe to use to consume untrusted JSON input. A remote user could abuse this flaw to produce a hash collision in the underlying unordered-containers library by sending specially crafted JSON data, resulting in a denial of service."}, {"Reference": "CVE-2022-21653", "Description": "Jawn is an open source JSON parser. Extenders of the `org.typelevel.jawn.SimpleFacade` and `org.typelevel.jawn.MutableFacade` who don't override `objectContext()` are vulnerable to a hash collision attack which may result in a denial of service. Most applications do not implement these traits directly, but inherit from a library. `jawn-parser-1.3.1` fixes this issue and users are advised to upgrade. For users unable to upgrade override `objectContext()` to use a collision-safe collection."}, {"Reference": "CVE-2022-22321", "Description": "IBM MQ Appliance 9.2 CD and 9.2 LTS local messaging users stored with a password hash that provides insufficient protection. IBM X-Force ID: 218368."}, {"Reference": "CVE-2022-25156", "Description": "Use of Weak Hash vulnerability in Mitsubishi Electric MELSEC iQ-F series FX5U(C) CPU all versions, Mitsubishi Electric MELSEC iQ-F series FX5UJ CPU all versions, Mitsubishi Electric MELSEC iQ-R series R00/01/02CPU all versions, Mitsubishi Electric MELSEC iQ-R series R04/08/16/32/120(EN)CPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120SFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PSFCPU all versions, Mitsubishi Electric MELSEC iQ-R series RJ71C24(-R2/R4) all versions, Mitsubishi Electric MELSEC iQ-R series RJ71EN71 all versions, Mitsubishi Electric MELSEC iQ-R series RJ72GF15-T2 all versions, Mitsubishi Electric MELSEC Q series Q03UDECPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/10/13/20/26/50/100UDEHCPU all versions, Mitsubishi Electric MELSEC Q series Q03/04/06/13/26UDVCPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/13/26UDPVCPU all versions, Mitsubishi Electric MELSEC Q series QJ71C24N(-R2/R4) all versions, Mitsubishi Electric MELSEC Q series QJ71E71-100 all versions, Mitsubishi Electric MELSEC Q series QJ72BR15 all versions, Mitsubishi Electric MELSEC Q series QJ72LP25(-25/G/GE) all versions, Mitsubishi Electric MELSEC L series L02/06/26CPU(-P) all versions, Mitsubishi Electric MELSEC L series L26CPU-(P)BT all versions, Mitsubishi Electric MELSEC L series LJ71C24(-R2) all versions, Mitsubishi Electric MELSEC L series LJ71E71-100 all versions and Mitsubishi Electric MELSEC L series LJ72GF15-T2 all versions allows a remote unauthenticated attacker to login to the product by using a password reversed from a previously eavesdropped password hash."}, {"Reference": "CVE-2022-30285", "Description": "In Quest KACE Systems Management Appliance (SMA) through 12.0, a hash collision is possible during authentication. This may allow authentication with invalid credentials."}, {"Reference": "CVE-2022-31459", "Description": "Owl Labs Meeting Owl 5.2.0.15 allows attackers to retrieve the passcode hash via a certain c 10 value over Bluetooth."}, {"Reference": "CVE-2022-36555", "Description": "Hytec Inter HWL-2511-SS v1.05 and below implements a SHA512crypt hash for the root account which can be easily cracked via a brute-force attack."}, {"Reference": "CVE-2022-4036", "Description": "The Appointment Hour Booking plugin for WordPress is vulnerable to CAPTCHA bypass in versions up to, and including, 1.3.72. This is due to the use of insufficiently strong hashing algorithm on the CAPTCHA secret that is also displayed to the user via a cookie."}, {"Reference": "CVE-2022-43922", "Description": "IBM App Connect Enterprise Certified Container 4.1, 4.2, 5.0, 5.1, 5.2, 6.0, 6.1, and 6.2 could disclose sensitive information to an attacker due to a weak hash of an API Key in the configuration. IBM X-Force ID: 241583."}, {"Reference": "CVE-2022-45379", "Description": "Jenkins Script Security Plugin 1189.vb_a_b_7c8fd5fde and earlier stores whole-script approvals as the SHA-1 hash of the script, making it vulnerable to collision attacks."}, {"Reference": "CVE-2021-25761", "Description": "In JetBrains Ktor before 1.5.0, a birthday attack on SessionStorage key was possible."}, {"Reference": "CVE-2021-37606", "Description": "Meow hash 0.5/calico does not sufficiently thwart key recovery by an attacker who can query whether there's a collision in the bottom bits of the hashes of two messages, as demonstrated by an attack against a long-running web service that allows the attacker to infer collisions by measuring timing differences."}, {"Reference": "CVE-2021-39182", "Description": "EnroCrypt is a Python module for encryption and hashing. Prior to version 1.1.4, EnroCrypt used the MD5 hashing algorithm in the hashing file. Beginners who are unfamiliar with hashes can face problems as MD5 is considered an insecure hashing algorithm. The vulnerability is patched in v1.1.4 of the product. As a workaround, users can remove the `MD5` hashing function from the file `hashing.py`."}, {"Reference": "CVE-2021-42216", "Description": "A Broken or Risky Cryptographic Algorithm exists in AnonAddy 0.8.5 via VerificationController.php."}, {"Reference": "CVE-2021-44150", "Description": "The client in tusdotnet through 2.5.0 relies on SHA-1 to prevent spoofing of file content."}, {"Reference": "CVE-2022-21800", "Description": "MMP: All versions prior to v1.0.3, PTP C-series: Device versions prior to v2.8.6.1, and PTMP C-series and A5x: Device versions prior to v2.5.4.1 uses the MD5 algorithm to hash the passwords before storing them but does not salt the hash. As a result, attackers may be able to crack the hashed passwords."}, {"Reference": "CVE-2022-29161", "Description": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. The XWiki Crypto API will generate X509 certificates signed by default using SHA1 with RSA, which is not considered safe anymore for use in certificate signatures, due to the risk of collisions with SHA1. The problem has been patched in XWiki version 13.10.6, 14.3.1 and 14.4-rc-1. Since then, the Crypto API will generate X509 certificates signed by default using SHA256 with RSA. Administrators are advised to upgrade their XWiki installation to one of the patched versions. If the upgrade is not possible, it is possible to patch the module xwiki-platform-crypto in a local installation by applying the change exposed in 26728f3 and re-compiling the module."}, {"Reference": "CVE-2022-29249", "Description": "JavaEZ is a library that adds new functions to make Java easier. A weakness in JavaEZ 1.6 allows force decryption of locked text by unauthorized actors. The issue is NOT critical for non-secure applications, however may be critical in a situation where the highest levels of security are required. This issue ONLY affects v1.6 and does not affect anything pre-1.6. The vulnerability has been patched in release 1.7. Currently, there is no way to fix the issue without upgrading."}, {"Reference": "CVE-2022-29566", "Description": "The Bulletproofs 2017/1066 paper mishandles Fiat-Shamir generation because the hash computation fails to include all of the public values from the Zero Knowledge proof statement as well as all of the public values computed in the proof, aka the Frozen Heart issue."}, {"Reference": "CVE-2022-29835", "Description": "WD Discovery software executable files were signed with an unsafe SHA-1 hashing algorithm. An attacker could use this weakness to create forged certificate signatures due to the use of a hashing algorithm that is not collision-free. This could thereby impact the confidentiality of user content. This issue affects: Western Digital WD Discovery WD Discovery Desktop App versions prior to 4.4.396 on Mac; WD Discovery Desktop App versions prior to 4.4.396 on Windows."}, {"Reference": "CVE-2022-45141", "Description": "Since the Windows Kerberos RC4-HMAC Elevation of Privilege Vulnerability was disclosed by Microsoft on Nov 8 2022 and per RFC8429 it is assumed that rc4-hmac is weak, Vulnerable Samba Active Directory DCs will issue rc4-hmac encrypted tickets despite the target server supporting better encryption (eg aes256-cts-hmac-sha1-96)."}, {"Reference": "CVE-2022-47931", "Description": "IO FinNet tss-lib before 2.0.0 allows a collision of hash values."}]}
{"ID": "329", "Name": "Generation of Predictable IV with CBC Mode", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "The product generates and uses a predictable initialization Vector (IV) with Cipher Block Chaining (CBC) Mode, which causes algorithms to be susceptible to dictionary attacks when they are encrypted under the same key.", "ExtendedDescription": "\n\nCBC mode eliminates a weakness of Electronic Code Book (ECB) mode by allowing identical plaintext blocks to be encrypted to different ciphertext blocks. This is possible by the XOR-ing of an IV with the initial plaintext block so that every plaintext block in the chain is XOR'd with a different value before encryption. If IVs are reused, then identical plaintexts would be encrypted to identical ciphertexts. However, even if IVs are not identical but are predictable, then they still break the security of CBC mode against Chosen Plaintext Attacks (CPA).\n", "LikelihoodOfExploit": "Medium", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "1204", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "573", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "ICS/OT", "Prevalence": "Undetermined"}], "BackgroundDetails": ["\n\nCBC mode is a commonly used mode of operation for a block cipher. It works by XOR-ing an IV with the initial block of a plaintext prior to encryption and then XOR-ing each successive block of plaintext with the previous block of ciphertext before encryption.\n\n```\n\t C_0 = IV\n\t C_i = E_k{M_i XOR C_{i-1}} \n```\n When used properly, CBC mode provides security against chosen plaintext attacks. Having an unpredictable IV is a crucial underpinning of this. See [REF-1171]."], "ModesOfIntroduction": [{"Phase": "Implementation", "Note": "Developers might dismiss the importance of an unpredictable IV and choose an easier implementation to save effort, weakening the scheme in the process."}], "CommonConsequences": [{"Scope": ["Confidentiality"], "Impact": ["Read Application Data"], "Note": "If the IV is not properly initialized, data that is encrypted can be compromised and leak information."}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"Phase": ["Implementation"], "Description": "NIST recommends two methods of generating unpredictable IVs for CBC mode [REF-1172]. The first is to generate the IV randomly. The second method is to encrypt a nonce with the same key and cipher to be used to encrypt the plaintext. In this case the nonce must be unique but can be predictable, since the block cipher will act as a pseudo random permutation."}], "DemonstrativeExamples": [{"ID": "DX-143", "Entries": [{"IntroText": "In the following examples, CBC mode is used when encrypting data:"}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tEVP_CIPHER_CTX ctx;\n\tchar key[EVP_MAX_KEY_LENGTH];\n\tchar iv[EVP_MAX_IV_LENGTH];\n\tRAND_bytes(key, b);\n\tmemset(iv,0,EVP_MAX_IV_LENGTH);\n\tEVP_EncryptInit(&ctx,EVP_bf_cbc(), key,iv);\n```"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tpublic class SymmetricCipherTest {\n\t\t\tpublic static void main() {\n\t\t\t\t\tbyte[] text =\"Secret\".getBytes();\n\t\t\t\t\tbyte[] iv ={\n\t\t\t\t\t\t0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00\n\t\t\t\t\t};\n\t\t\t\t\tKeyGenerator kg = KeyGenerator.getInstance(\"DES\");\n\t\t\t\t\tkg.init(56);\n\t\t\t\t\tSecretKey key = kg.generateKey();\n\t\t\t\t\tCipher cipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");\n\t\t\t\t\tIvParameterSpec ips = new IvParameterSpec(iv);\n\t\t\t\t\tcipher.init(Cipher.ENCRYPT_MODE, key, ips);\n\t\t\t\t\treturn cipher.doFinal(inpBytes);\n\t\t\t}\n\t}\n```"}, {"BodyText": "In both of these examples, the initialization vector (IV) is always a block of zeros. This makes the resulting cipher text much more predictable and susceptible to a dictionary attack."}]}], "ObservedExamples": [{"Reference": "CVE-2020-5408", "Description": "encryption functionality in an authentication framework uses a fixed null IV with CBC mode, allowing attackers to decrypt traffic in applications that use this functionality", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-5408"}, {"Reference": "CVE-2017-17704", "Description": "messages for a door-unlocking product use a fixed IV in CBC mode, which is the same after each restart", "Link": "https://www.cve.org/CVERecord?id=CVE-2017-17704"}, {"Reference": "CVE-2017-11133", "Description": "application uses AES in CBC mode, but the pseudo-random secret and IV are generated using math.random, which is not cryptographically strong.", "Link": "https://www.cve.org/CVERecord?id=CVE-2017-11133"}, {"Reference": "CVE-2007-3528", "Description": "Blowfish-CBC implementation constructs an IV where each byte is calculated modulo 8 instead of modulo 256, resulting in less than 12 bits for the effective IV length, and less than 4096 possible IV values.", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-3528"}, {"Reference": "CVE-2011-3389", "Description": "BEAST attack in SSL 3.0 / TLS 1.0. In CBC mode, chained initialization vectors are non-random, allowing decryption of HTTPS traffic using a chosen plaintext attack.", "Link": "https://www.cve.org/CVERecord?id=CVE-2011-3389"}], "FunctionalAreas": ["Cryptography"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, \"randomness\" is used heavily. However, within cryptography, \"entropy\" is distinct, typically implied as a measurement. There are no commonly-used definitions, even within standards documents and cryptography papers. Future versions of CWE will attempt to define these terms and, if necessary, distinguish between them in ways that are appropriate for different communities but do not reduce the usability of CWE for mapping, understanding, or other scenarios."}]}
{"ID": "33", "Name": "Path Traversal: '....' (Multiple Dot)", "Abstraction": "Variant", "Structure": "Simple", "Status": "Incomplete", "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '....' (multiple dot) sequences that can resolve to a location that is outside of that directory.", "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nThe '....' manipulation is useful for bypassing some path traversal protection schemes. On some Windows systems, it is equivalent to \"..\\..\\..\" and might bypass checks that assume only two dots are valid. Incomplete filtering, such as removal of \"./\" sequences, can ultimately produce valid \"..\" sequences due to a collapse into unsafe value (CWE-182).\n", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "23", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Confidentiality", "Integrity"], "Impact": ["Read Files or Directories", "Modify Files or Directories"]}], "PotentialMitigations": [{"MitigationID": "MIT-5.1", "Phase": ["Implementation"], "Strategy": "Input Validation", "Description": "\n\nAssume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.\n\n\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"\n\n\nDo not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.\n\n\nWhen validating filenames, use stringent allowlists that limit the character set to be used. If feasible, only allow a single \".\" character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as \"/\" to avoid CWE-36. Use a list of allowable file extensions, which will help to avoid CWE-434.\n\n\nDo not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a denylist, which may be incomplete (CWE-184). For example, filtering \"/\" is insufficient protection if the filesystem also supports the use of \"\\\" as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if \"../\" sequences are removed from the \".../...//\" string in a sequential fashion, two instances of \"../\" would be removed from the original string, but the remaining characters would still form the \"../\" string.\n", "Effectiveness": "High"}, {"MitigationID": "MIT-20", "Phase": ["Implementation"], "Strategy": "Input Validation", "Description": "Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked."}], "ObservedExamples": [{"Reference": "CVE-2000-0240", "Description": "read files via \"/........../\" in URL", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0240"}, {"Reference": "CVE-2000-0773", "Description": "read files via \"....\" in web server", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0773"}, {"Reference": "CVE-1999-1082", "Description": "read files via \"......\" in web server (doubled triple dot?)", "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1082"}, {"Reference": "CVE-2004-2121", "Description": "read files via \"......\" in web server (doubled triple dot?)", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2121"}, {"Reference": "CVE-2001-0491", "Description": "multiple attacks using \"..\", \"...\", and \"....\" in different commands", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0491"}, {"Reference": "CVE-2001-0615", "Description": "\"...\" or \"....\" in chat server", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0615"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "Like the triple-dot CWE-32, this manipulation probably hides multiple weaknesses that should be made more explicit."}]}
{"ID": "330", "Name": "Use of Insufficiently Random Values", "Abstraction": "Class", "Structure": "Simple", "Status": "Stable", "Description": "The product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.", "ExtendedDescription": "When product generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information.", "LikelihoodOfExploit": "High", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "693", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "CanPrecede", "CweID": "804", "ViewID": "1000"}], "WeaknessOrdinalities": [{"Ordinality": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "Not Technology-Specific", "Prevalence": "Undetermined"}], "BackgroundDetails": ["Computers are deterministic machines, and as such are unable to produce true randomness. Pseudo-Random Number Generators (PRNGs) approximate randomness algorithmically, starting with a seed from which subsequent values are calculated. There are two types of PRNGs: statistical and cryptographic. Statistical PRNGs provide useful statistical properties, but their output is highly predictable and forms an easy to reproduce numeric stream that is unsuitable for use in cases where security depends on generated values being unpredictable. Cryptographic PRNGs address this problem by generating output that is more difficult to predict. For a value to be cryptographically secure, it must be impossible or highly improbable for an attacker to distinguish between it and a truly random value."], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Confidentiality", "Other"], "Impact": ["Other"], "Note": "When a protection mechanism relies on random values to restrict access to a sensitive resource, such as a session ID or a seed for generating a cryptographic key, then the resource being protected could be accessed by guessing the ID or key."}, {"Scope": ["Access Control", "Other"], "Impact": ["Bypass Protection Mechanism", "Other"], "Note": "If product relies on unique, unguessable IDs to identify a resource, an attacker might be able to guess an ID for a resource that is owned by another user. The attacker could then read the resource, or pre-create a resource with the same ID to prevent the legitimate program from properly sending the resource to the intended user. For example, a product might maintain session information in a file whose name is based on a username. An attacker could pre-create this file for a victim user, then set the permissions so that the application cannot generate the session for the victim, preventing the victim from using the application."}, {"Scope": ["Access Control"], "Impact": ["Bypass Protection Mechanism", "Gain Privileges or Assume Identity"], "Note": "When an authorization or authentication mechanism relies on random values to restrict access to restricted functionality, such as a session ID or a seed for generating a cryptographic key, then an attacker may access the restricted functionality by guessing the ID or key."}], "DetectionMethods": [{"DetectionMethodID": "DM-11.4", "Method": "Black Box", "Description": "\n\nUse monitoring tools that examine the software's process as it interacts with the operating system and the network. This technique is useful in cases when source code is unavailable, if the software was not developed by you, or if you want to verify that the build phase did not introduce any new weaknesses. Examples include debuggers that directly attach to the running process; system-call tracing utilities such as truss (Solaris) and strace (Linux); system activity monitors such as FileMon, RegMon, Process Monitor, and other Sysinternals utilities (Windows); and sniffers and protocol analyzers that monitor network traffic.\n\n\nAttach the monitor to the process and look for library functions that indicate when randomness is being used. Run the process multiple times to see if the seed changes. Look for accesses of devices or equivalent resources that are commonly used for strong (or weak) randomness, such as /dev/urandom on Linux. Look for library or system calls that access predictable information such as process IDs and system time.\n"}, {"Method": "Automated Static Analysis - Binary or Bytecode", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tBytecode Weakness Analysis - including disassembler + source code weakness analysis\n\t\tBinary Weakness Analysis - including disassembler + source code weakness analysis", "Effectiveness": "SOAR Partial"}, {"Method": "Manual Static Analysis - Binary or Bytecode", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tBinary / Bytecode disassembler - then use manual analysis for vulnerabilities & anomalies", "Effectiveness": "SOAR Partial"}, {"Method": "Dynamic Analysis with Manual Results Interpretation", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tMan-in-the-middle attack tool", "Effectiveness": "SOAR Partial"}, {"Method": "Manual Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tFocused Manual Spotcheck - Focused manual analysis of source\n\t\tManual Source Code Review (not inspections)", "Effectiveness": "High"}, {"Method": "Automated Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tSource code Weakness Analyzer\n\t\tContext-configured Source Code Weakness Analyzer", "Effectiveness": "SOAR Partial"}, {"Method": "Architecture or Design Review", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tInspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "\n\nUse a well-vetted algorithm that is currently considered to be strong by experts in the field, and select well-tested implementations with adequate length seeds.\n\n\nIn general, if a pseudo-random number generator is not advertised as being cryptographically secure, then it is probably a statistical PRNG and should not be used in security-sensitive contexts.\n\n\nPseudo-random number generators can produce predictable numbers if the generator is known and the seed can be guessed. A 256-bit seed is a good starting point for producing a \"random enough\" number.\n"}, {"Phase": ["Implementation"], "Description": "Consider a PRNG that re-seeds itself as needed from high quality pseudo-random output sources, such as hardware devices."}, {"Phase": ["Testing"], "Description": "Use automated static analysis tools that target this type of weakness. Many modern techniques use data flow analysis to minimize the number of false positives. This is not a perfect solution, since 100% accuracy and coverage are not feasible."}, {"MitigationID": "MIT-2", "Phase": ["Architecture and Design", "Requirements"], "Strategy": "Libraries or Frameworks", "Description": "Use products or modules that conform to FIPS 140-2 [REF-267] to avoid obvious entropy problems. Consult FIPS 140-2 Annex C (\"Approved Random Number Generators\")."}, {"Phase": ["Testing"], "Description": "Use tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session. These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules."}], "DemonstrativeExamples": [{"ID": "DX-45", "Entries": [{"IntroText": "This code attempts to generate a unique random identifier for a user's session."}, {"Nature": "Bad", "Language": "PHP", "ExampleCode": "```\n\tfunction generateSessionID($userID){\n\t\tsrand($userID);\n\t\treturn rand();\n\t}\n```"}, {"BodyText": "Because the seed for the PRNG is always the user's ID, the session ID will always be the same. An attacker could thus predict any user's session ID and potentially hijack the session."}, {"BodyText": "This example also exhibits a Small Seed Space (CWE-339)."}]}, {"ID": "DX-46", "Entries": [{"IntroText": "The following code uses a statistical PRNG to create a URL for a receipt that remains active for some period of time after a purchase."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tString GenerateReceiptURL(String baseUrl) {\n\t\tRandom ranGen = new Random();\n\t\tranGen.setSeed((new Date()).getTime());\n\t\treturn(baseUrl + ranGen.nextInt(400000000) + \".html\");\n\t}\n```"}, {"BodyText": "This code uses the Random.nextInt() function to generate \"unique\" identifiers for the receipt pages it generates. Because Random.nextInt() is a statistical PRNG, it is easy for an attacker to guess the strings it generates. Although the underlying design of the receipt system is also faulty, it would be more secure if it used a random number generator that did not produce predictable receipt identifiers, such as a cryptographic PRNG."}]}], "ObservedExamples": [{"Reference": "CVE-2021-3692", "Description": "PHP framework uses mt_rand() function (Marsenne Twister) when generating tokens", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-3692"}, {"Reference": "CVE-2020-7010", "Description": "Cloud application on Kubernetes generates passwords using a weak random number generator based on deployment time.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-7010"}, {"Reference": "CVE-2009-3278", "Description": "Crypto product uses rand() library function to generate a recovery key, making it easier to conduct brute force attacks.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3278"}, {"Reference": "CVE-2009-3238", "Description": "Random number generator can repeatedly generate the same value.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3238"}, {"Reference": "CVE-2009-2367", "Description": "Web application generates predictable session IDs, allowing session hijacking.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2367"}, {"Reference": "CVE-2009-2158", "Description": "Password recovery utility generates a relatively small number of random passwords, simplifying brute force attacks.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2158"}, {"Reference": "CVE-2009-0255", "Description": "Cryptographic key created with a seed based on the system time.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0255"}, {"Reference": "CVE-2008-5162", "Description": "Kernel function does not have a good entropy source just after boot.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5162"}, {"Reference": "CVE-2008-4905", "Description": "Blogging software uses a hard-coded salt when calculating a password hash.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4905"}, {"Reference": "CVE-2008-4929", "Description": "Bulletin board application uses insufficiently random names for uploaded files, allowing other users to access private files.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4929"}, {"Reference": "CVE-2008-3612", "Description": "Handheld device uses predictable TCP sequence numbers, allowing spoofing or hijacking of TCP connections.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-3612"}, {"Reference": "CVE-2008-2433", "Description": "Web management console generates session IDs based on the login time, making it easier to conduct session hijacking.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2433"}, {"Reference": "CVE-2008-0166", "Description": "SSL library uses a weak random number generator that only generates 65,536 unique keys.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0166"}, {"Reference": "CVE-2008-2108", "Description": "Chain: insufficient precision causes extra zero bits to be assigned, reducing entropy for an API function that generates random numbers.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2108"}, {"Reference": "CVE-2008-2108", "Description": "Chain: insufficient precision (CWE-1339) in random-number generator causes some zero bits to be reliably generated, reducing the amount of entropy (CWE-331)", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2108"}, {"Reference": "CVE-2008-2020", "Description": "CAPTCHA implementation does not produce enough different images, allowing bypass using a database of all possible checksums.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2020"}, {"Reference": "CVE-2008-0087", "Description": "DNS client uses predictable DNS transaction IDs, allowing DNS spoofing.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0087"}, {"Reference": "CVE-2008-0141", "Description": "Application generates passwords that are based on the time of day.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0141"}], "FunctionalAreas": ["Cryptography", "Authentication", "Session Management"], "RelatedAttackPatterns": ["112", "485", "59"], "MappingNotes": {"Usage": "Discouraged", "Rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate", "Comments": "Examine children of this entry to see if there is a better fit", "Reasons": ["Abstraction"]}, "Notes": [{"Type": "Relationship", "Note": "This can be primary to many other weaknesses such as cryptographic errors, authentication errors, symlink following, information leaks, and others."}, {"Type": "Maintenance", "Note": "As of CWE 4.3, CWE-330 and its descendants are being investigated by the CWE crypto team to identify gaps related to randomness and unpredictability, as well as the relationships between randomness and cryptographic primitives. This \"subtree analysis\" might result in the addition or deprecation of existing entries; the reorganization of relationships in some views, e.g. the research view (CWE-1000); more consistent use of terminology; and/or significant modifications to related entries."}, {"Type": "Maintenance", "Note": "As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, \"randomness\" is used heavily. However, within cryptography, \"entropy\" is distinct, typically implied as a measurement. There are no commonly-used definitions, even within standards documents and cryptography papers. Future versions of CWE will attempt to define these terms and, if necessary, distinguish between them in ways that are appropriate for different communities but do not reduce the usability of CWE for mapping, understanding, or other scenarios."}], "Top25Examples": [{"Reference": "CVE-2021-22968", "Description": "A bypass of adding remote files in Concrete CMS (previously concrete5) File Manager leads to remote code execution in Concrete CMS (concrete5) versions 8.5.6 and below.The external file upload feature stages files in the public directory even if they have disallowed file extensions. They are stored in a directory with a random name, but it's possible to stall the uploads and brute force the directory name. You have to be an admin with the ability to upload files, but this bug gives you the ability to upload restricted file types and execute them depending on server configuration.To fix this, a check for allowed file extensions was added before downloading files to a tmp directory.Concrete CMS Security Team gave this a CVSS v3.1 score of 5.4 AV:N/AC:H/PR:H/UI:R/S:C/C:N/I:H/A:NThis fix is also in Concrete version 9.0.0"}, {"Reference": "CVE-2021-24998", "Description": "The Simple JWT Login WordPress plugin before 3.3.0 can be used to create new WordPress user accounts with a randomly generated password. The password is generated using the str_shuffle PHP function that \"does not generate cryptographically secure values, and should not be used for cryptographic purposes\" according to PHP's documentation."}, {"Reference": "CVE-2021-28099", "Description": "In Netflix OSS Hollow, since the Files.exists(parent) is run before creating the directories, an attacker can pre-create these directories with wide permissions. Additionally, since an insecure source of randomness is used, the file names to be created can be deterministically calculated."}, {"Reference": "CVE-2021-34600", "Description": "Telenot CompasX versions prior to 32.0 use a weak seed for random number generation leading to predictable AES keys used in the NFC tags used for local authorization of users. This may lead to total loss of trustworthiness of the installation. "}, {"Reference": "CVE-2022-22922", "Description": "TP-Link TL-WA850RE Wi-Fi Range Extender before v6_200923 was discovered to use highly predictable and easily detectable session keys, allowing attackers to gain administrative privileges."}, {"Reference": "CVE-2022-23138", "Description": "ZTE's MF297D product has cryptographic issues vulnerability. Due to the use of weak random values, the security of the device is reduced, and it may face the risk of attack."}, {"Reference": "CVE-2022-24406", "Description": "OX App Suite through 7.10.6 allows SSRF because multipart/form-data boundaries are predictable, and this can lead to injection into internal Documentconverter API calls."}, {"Reference": "CVE-2022-25219", "Description": "A null byte interaction error has been discovered in the code that the telnetd_startup daemon uses to construct a pair of ephemeral passwords that allow a user to spawn a telnet service on the router, and to ensure that the telnet service persists upon reboot. By means of a crafted exchange of UDP packets, an unauthenticated attacker on the local network can leverage this null byte interaction error in such a way as to make those ephemeral passwords predictable (with 1-in-94 odds). Since the attacker must manipulate data processed by the OpenSSL function RSA_public_decrypt(), successful exploitation of this vulnerability depends on the use of an unpadded RSA cipher (CVE-2022-25218)."}, {"Reference": "CVE-2022-30295", "Description": "uClibc-ng through 1.0.40 and uClibc through 0.9.33.2 use predictable DNS transaction IDs that may lead to DNS cache poisoning. This is related to a reset of a value to 0x2."}, {"Reference": "CVE-2022-31157", "Description": "LTI 1.3 Tool Library is a library used for building IMS-certified LTI 1.3 tool providers in PHP. Prior to version 5.0, the function used to generate random nonces was not sufficiently cryptographically complex. Users should upgrade to version 5.0 to receive a patch. There are currently no known workarounds."}, {"Reference": "CVE-2022-32296", "Description": "The Linux kernel before 5.17.9 allows TCP servers to identify clients by observing what source ports are used. This occurs because of use of Algorithm 4 (\"Double-Hash Port Selection Algorithm\") of RFC 6056."}, {"Reference": "CVE-2022-40299", "Description": "In Singular before 4.3.1, a predictable /tmp pathname is used (e.g., by sdb.cc), which allows local users to gain the privileges of other users via a procedure in a file under /tmp. NOTE: this CVE Record is about sdb.cc and similar files in the Singular interface that have predictable /tmp pathnames; this CVE Record is not about the lack of a safe temporary-file creation capability in the Singular language."}, {"Reference": "CVE-2021-26726", "Description": "A remote code execution vulnerability affecting a Valmet DNA service listening on TCP port 1517, allows an attacker to execute commands with SYSTEM privileges This issue affects: Valmet DNA versions from Collection 2012 until Collection 2021."}, {"Reference": "CVE-2021-45487", "Description": "In NetBSD through 9.2, the IPv4 ID generation algorithm does not use appropriate cryptographic measures."}, {"Reference": "CVE-2021-45488", "Description": "In NetBSD through 9.2, there is an information leak in the TCP ISN (ISS) generation algorithm."}, {"Reference": "CVE-2021-0417", "Description": "In memory management driver, there is a possible system crash due to improper input validation. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS05403499; Issue ID: ALPS05336702."}]}
{"ID": "331", "Name": "Insufficient Entropy", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product uses an algorithm or scheme that produces insufficient entropy, leaving patterns or clusters of values that are more likely to occur than others.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "330", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "330", "ViewID": "1003", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control", "Other"], "Impact": ["Bypass Protection Mechanism", "Other"], "Note": "An attacker could guess the random numbers generated and could gain unauthorized access to a system if the random numbers are used for authentication and authorization."}], "PotentialMitigations": [{"Phase": ["Implementation"], "Description": "Determine the necessary entropy to adequately provide for randomness and predictability. This can be achieved by increasing the number of bits of objects such as keys and seeds."}], "DemonstrativeExamples": [{"ID": "DX-45", "Entries": [{"IntroText": "This code generates a unique random identifier for a user's session."}, {"Nature": "Bad", "Language": "PHP", "ExampleCode": "```\n\tfunction generateSessionID($userID){\n\t\tsrand($userID);\n\t\treturn rand();\n\t}\n```"}, {"BodyText": "Because the seed for the PRNG is always the user's ID, the session ID will always be the same. An attacker could thus predict any user's session ID and potentially hijack the session."}, {"BodyText": "This example also exhibits a Small Seed Space (CWE-339)."}]}, {"ID": "DX-46", "Entries": [{"IntroText": "The following code uses a statistical PRNG to create a URL for a receipt that remains active for some period of time after a purchase."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tString GenerateReceiptURL(String baseUrl) {\n\t\tRandom ranGen = new Random();\n\t\tranGen.setSeed((new Date()).getTime());\n\t\treturn(baseUrl + ranGen.nextInt(400000000) + \".html\");\n\t}\n```"}, {"BodyText": "This code uses the Random.nextInt() function to generate \"unique\" identifiers for the receipt pages it generates. Because Random.nextInt() is a statistical PRNG, it is easy for an attacker to guess the strings it generates. Although the underlying design of the receipt system is also faulty, it would be more secure if it used a random number generator that did not produce predictable receipt identifiers, such as a cryptographic PRNG."}]}], "ObservedExamples": [{"Reference": "CVE-2001-0950", "Description": "Insufficiently random data used to generate session tokens using C rand(). Also, for certificate/key generation, uses a source that does not block when entropy is low.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0950"}, {"Reference": "CVE-2008-2108", "Description": "Chain: insufficient precision (CWE-1339) in random-number generator causes some zero bits to be reliably generated, reducing the amount of entropy (CWE-331)", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2108"}], "RelatedAttackPatterns": ["59"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, \"randomness\" is used heavily. However, within cryptography, \"entropy\" is distinct, typically implied as a measurement. There are no commonly-used definitions, even within standards documents and cryptography papers. Future versions of CWE will attempt to define these terms and, if necessary, distinguish between them in ways that are appropriate for different communities but do not reduce the usability of CWE for mapping, understanding, or other scenarios."}], "Top25Examples": [{"Reference": "CVE-2021-22799", "Description": "A CWE-331: Insufficient Entropy vulnerability exists that could cause unintended connection from an internal network to an external network when an attacker manages to decrypt the SESU proxy password from the registry. Affected Product: Schneider Electric Software Update, V2.3.0 through V2.5.1"}, {"Reference": "CVE-2021-42138", "Description": "A user of a machine protected by SafeNet Agent for Windows Logon may leverage weak entropy to access the encrypted credentials of any or all the users on that machine."}, {"Reference": "CVE-2022-20941", "Description": "A vulnerability in the web-based management interface of Cisco Firepower Management Center (FMC) Software could allow an unauthenticated, remote attacker to access sensitive information. This vulnerability is due to missing authorization for certain resources in the web-based management interface together with insufficient entropy in these resource names. An attacker could exploit this vulnerability by sending a series of HTTPS requests to an affected device to enumerate resources on the device. A successful exploit could allow the attacker to retrieve sensitive information from the device."}, {"Reference": "CVE-2022-26307", "Description": "LibreOffice supports the storage of passwords for web connections in the user\u2019s configuration database. The stored passwords are encrypted with a single master key provided by the user. A flaw in LibreOffice existed where master key was poorly encoded resulting in weakening its entropy from 128 to 43 bits making the stored passwords vulerable to a brute force attack if an attacker has access to the users stored config. This issue affects: The Document Foundation LibreOffice 7.2 versions prior to 7.2.7; 7.3 versions prior to 7.3.3."}, {"Reference": "CVE-2022-29965", "Description": "The Emerson DeltaV Distributed Control System (DCS) controllers and IO cards through 2022-04-29 misuse passwords. Access to privileged operations on the maintenance port TELNET interface (23/TCP) on M-series and SIS (CSLS/LSNB/LSNG) nodes is controlled by means of utility passwords. These passwords are generated using a deterministic, insecure algorithm using a single seed value composed of a day/hour/minute timestamp with less than 16 bits of entropy. The seed value is fed through a lookup table and a series of permutation operations resulting in three different four-character passwords corresponding to different privilege levels. An attacker can easily reconstruct these passwords and thus gain access to privileged maintenance operations. NOTE: this is different from CVE-2014-2350."}, {"Reference": "CVE-2022-31034", "Description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v0.11.0 are vulnerable to a variety of attacks when an SSO login is initiated from the Argo CD CLI or UI. The vulnerabilities are due to the use of insufficiently random values in parameters in Oauth2/OIDC login flows. In each case, using a relatively-predictable (time-based) seed in a non-cryptographically-secure pseudo-random number generator made the parameter less random than required by the relevant spec or by general best practices. In some cases, using too short a value made the entropy even less sufficient. The attacks on login flows which are meant to be mitigated by these parameters are difficult to accomplish but can have a high impact potentially granting an attacker admin access to Argo CD. Patches for this vulnerability has been released in the following Argo CD versions: v2.4.1, v2.3.5, v2.2.10 and v2.1.16. There are no known workarounds for this vulnerability."}, {"Reference": "CVE-2022-34294", "Description": "totd 1.5.3 uses a fixed UDP source port in upstream queries sent to DNS resolvers. This allows DNS cache poisoning because there is not enough entropy to prevent traffic injection attacks."}, {"Reference": "CVE-2022-37401", "Description": "Apache OpenOffice supports the storage of passwords for web connections in the user's configuration database. The stored passwords are encrypted with a single master key provided by the user. A flaw in OpenOffice existed where master key was poorly encoded resulting in weakening its entropy from 128 to 43 bits making the stored passwords vulnerable to a brute force attack if an attacker has access to the users stored config. This issue affects: Apache OpenOffice versions prior to 4.1.13. Reference: CVE-2022-26307 - LibreOffice"}, {"Reference": "CVE-2021-31797", "Description": "The user identification mechanism used by CyberArk Credential Provider prior to 12.1 is susceptible to a local host race condition, leading to password disclosure."}]}
{"ID": "332", "Name": "Insufficient Entropy in PRNG", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "The lack of entropy available for, or used by, a Pseudo-Random Number Generator (PRNG) can be a stability and security threat.", "LikelihoodOfExploit": "Medium", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "331", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Availability"], "Impact": ["DoS: Crash, Exit, or Restart"], "Note": "If a pseudo-random number generator is using a limited entropy source which runs out (if the generator fails closed), the program may pause or crash."}, {"Scope": ["Access Control", "Other"], "Impact": ["Bypass Protection Mechanism", "Other"], "Note": "If a PRNG is using a limited entropy source which runs out, and the generator fails open, the generator could produce predictable random numbers. Potentially a weak source of random numbers could weaken the encryption method used for authentication of users."}], "PotentialMitigations": [{"MitigationID": "MIT-2", "Phase": ["Architecture and Design", "Requirements"], "Strategy": "Libraries or Frameworks", "Description": "Use products or modules that conform to FIPS 140-2 [REF-267] to avoid obvious entropy problems. Consult FIPS 140-2 Annex C (\"Approved Random Number Generators\")."}, {"Phase": ["Implementation"], "Description": "Consider a PRNG that re-seeds itself as needed from high-quality pseudo-random output, such as hardware devices."}, {"Phase": ["Architecture and Design"], "Description": "When deciding which PRNG to use, look at its sources of entropy. Depending on what your security needs are, you may need to use a random number generator that always uses strong random data -- i.e., a random number generator that attempts to be strong but will fail in a weak way or will always provide some middle ground of protection through techniques like re-seeding. Generally, something that always provides a predictable amount of strength is preferable."}], "ObservedExamples": [{"Reference": "[REF-1374]", "Description": "Chain: JavaScript-based cryptocurrency library can fall back to the insecure Math.random() function instead of reporting a failure (CWE-392), thus reducing the entropy (CWE-332) and leading to generation of non-unique cryptographic keys for Bitcoin wallets (CWE-1391)", "Link": "https://www.unciphered.com/blog/randstorm-you-cant-patch-a-house-of-cards"}, {"Reference": "CVE-2019-1715", "Description": "security product has insufficient entropy in the DRBG, allowing collisions and private key discovery", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-1715"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, \"randomness\" is used heavily. However, within cryptography, \"entropy\" is distinct, typically implied as a measurement. There are no commonly-used definitions, even within standards documents and cryptography papers. Future versions of CWE will attempt to define these terms and, if necessary, distinguish between them in ways that are appropriate for different communities but do not reduce the usability of CWE for mapping, understanding, or other scenarios."}]}
{"ID": "333", "Name": "Improper Handling of Insufficient Entropy in TRNG", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "True random number generators (TRNG) generally have a limited source of entropy and therefore can fail or block.", "ExtendedDescription": "The rate at which true random numbers can be generated is limited. It is important that one uses them only when they are needed for security.", "LikelihoodOfExploit": "Low", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "331", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "755", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Availability"], "Impact": ["DoS: Crash, Exit, or Restart"], "Note": "A program may crash or block if it runs out of random numbers."}], "PotentialMitigations": [{"Phase": ["Implementation"], "Description": "Rather than failing on a lack of random numbers, it is often preferable to wait for more numbers to be created."}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "This code uses a TRNG to generate a unique session id for new connections to a server:"}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\twhile (1){\n\t\t\tif (haveNewConnection()){\n\t\t\t\tif (hwRandom()){\n\t\t\t\t\tint sessionID = hwRandom();\n\t\t\t\t\tcreateNewConnection(sessionID);\n\t\t\t\t} } }\n```"}, {"BodyText": "This code does not attempt to limit the number of new connections or make sure the TRNG can successfully generate a new random number. An attacker may be able to create many new connections and exhaust the entropy of the TRNG. The TRNG may then block and cause the program to crash or hang."}]}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, \"randomness\" is used heavily. However, within cryptography, \"entropy\" is distinct, typically implied as a measurement. There are no commonly-used definitions, even within standards documents and cryptography papers. Future versions of CWE will attempt to define these terms and, if necessary, distinguish between them in ways that are appropriate for different communities but do not reduce the usability of CWE for mapping, understanding, or other scenarios."}]}
{"ID": "334", "Name": "Small Space of Random Values", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The number of possible random values is smaller than needed by the product, making it more susceptible to brute force attacks.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "330", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control", "Other"], "Impact": ["Bypass Protection Mechanism", "Other"], "Note": "An attacker could easily guess the values used. This could lead to unauthorized access to a system if the seed is used for authentication and authorization."}], "PotentialMitigations": [{"MitigationID": "MIT-2", "Phase": ["Architecture and Design", "Requirements"], "Strategy": "Libraries or Frameworks", "Description": "Use products or modules that conform to FIPS 140-2 [REF-267] to avoid obvious entropy problems. Consult FIPS 140-2 Annex C (\"Approved Random Number Generators\")."}], "DemonstrativeExamples": [{"ID": "DX-47", "Entries": [{"IntroText": "The following XML example code is a deployment descriptor for a Java web application deployed on a Sun Java Application Server. This deployment descriptor includes a session configuration property for configuring the session ID length."}, {"Nature": "Bad", "Language": "XML", "ExampleCode": "```\n\t<sun-web-app>\n\t\t\t...\n\t\t\t<session-config>\n\t\t\t\t\t<session-properties>\n\t\t\t\t\t\t<property name=\"idLengthBytes\" value=\"8\">\n\t\t\t\t\t\t\t<description>The number of bytes in this web module's session ID.</description>\n\t\t\t\t\t\t</property>\n\t\t\t\t\t</session-properties>\n\t\t\t</session-config>\n\t\t\t...\n\t</sun-web-app>\n```"}, {"BodyText": "This deployment descriptor has set the session ID length for this Java web application to 8 bytes (or 64 bits). The session ID length for Java web applications should be set to 16 bytes (128 bits) to prevent attackers from guessing and/or stealing a session ID and taking over a user's session."}, {"BodyText": "Note for most application servers including the Sun Java Application Server the session ID length is by default set to 128 bits and should not be changed. And for many application servers the session ID length cannot be changed from this default setting. Check your application server documentation for the session ID length default setting and configuration options to ensure that the session ID length is set to 128 bits."}]}], "ObservedExamples": [{"Reference": "CVE-2002-0583", "Description": "Product uses 5 alphanumeric characters for filenames of expense claim reports, stored under web root.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0583"}, {"Reference": "CVE-2002-0903", "Description": "Product uses small number of random numbers for a code to approve an action, and also uses predictable new user IDs, allowing attackers to hijack new accounts.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0903"}, {"Reference": "CVE-2003-1230", "Description": "SYN cookies implementation only uses 32-bit keys, making it easier to brute force ISN.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1230"}, {"Reference": "CVE-2004-0230", "Description": "Complex predictability / randomness (reduced space).", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0230"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, \"randomness\" is used heavily. However, within cryptography, \"entropy\" is distinct, typically implied as a measurement. There are no commonly-used definitions, even within standards documents and cryptography papers. Future versions of CWE will attempt to define these terms and, if necessary, distinguish between them in ways that are appropriate for different communities but do not reduce the usability of CWE for mapping, understanding, or other scenarios."}], "Top25Examples": [{"Reference": "CVE-2021-44151", "Description": "An issue was discovered in Reprise RLM 14.2. As the session cookies are small, an attacker can hijack any existing sessions by bruteforcing the 4 hex-character session cookie on the Windows version (the Linux version appears to have 8 characters). An attacker can obtain the static part of the cookie (cookie name) by first making a request to any page on the application (e.g., /goforms/menu) and saving the name of the cookie sent with the response. The attacker can then use the name of the cookie and try to request that same page, setting a random value for the cookie. If any user has an active session, the page should return with the authorized content, when a valid cookie value is hit."}, {"Reference": "CVE-2022-3959", "Description": "A vulnerability, which was classified as problematic, has been found in drogon up to 1.8.1. Affected by this issue is some unknown functionality of the component Session Hash Handler. The manipulation leads to small space of random values. The attack may be launched remotely. Upgrading to version 1.8.2 is able to address this issue. The name of the patch is c0d48da99f66aaada17bcd28b07741cac8697647. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-213464."}]}
{"ID": "335", "Name": "Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product uses a Pseudo-Random Number Generator (PRNG) but does not correctly manage seeds.", "ExtendedDescription": "\n\n PRNGs are deterministic and, while their output appears random, they cannot actually create entropy. They rely on cryptographically secure and unique seeds for entropy so proper seeding is critical to the secure operation of the PRNG.\n\n\n Management of seeds could be broken down into two main areas: \n\n\n  -  (1) protecting seeds as cryptographic material (such as a cryptographic key); \n\n  -  (2) whenever possible, using a uniquely generated seed from a cryptographically secure source \n\n PRNGs require a seed as input to generate a stream of numbers that are functionally indistinguishable from random numbers. While the output is, in many cases, sufficient for cryptographic uses, the output of any PRNG is directly determined by the seed provided as input. If the seed can be ascertained by a third party, the entire output of the PRNG can be made known to them. As such, the seed should be kept secret and should ideally not be able to be guessed. For example, the current time may be a poor seed. Knowing the approximate time the PRNG was seeded greatly reduces the possible key space. \n\n Seeds do not necessarily need to be unique, but reusing seeds may open up attacks if the seed is discovered. \n", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "330", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "330", "ViewID": "1003", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control", "Other"], "Impact": ["Bypass Protection Mechanism", "Other"], "Note": "If a PRNG is used incorrectly, such as using the same seed for each initialization or using a predictable seed, then an attacker may be able to easily guess the seed and thus the random numbers. This could lead to unauthorized access to a system if the seed is used for authentication and authorization."}], "DemonstrativeExamples": [{"ID": "DX-177", "Entries": [{"IntroText": "The following code uses a statistical PRNG to generate account IDs."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tprivate static final long SEED = 1234567890;\n\tpublic int generateAccountID() {\n\t\tRandom random = new Random(SEED);\n\t\treturn random.nextInt();\n\t}\n```"}, {"BodyText": "Because the program uses the same seed value for every invocation of the PRNG, its values are predictable, making the system vulnerable to attack."}]}, {"ID": "DX-102", "Entries": [{"IntroText": "Both of these examples use a statistical PRNG seeded with the current value of the system clock to generate a random number:"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tRandom random = new Random(System.currentTimeMillis());\n\tint accountID = random.nextInt();\n```"}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tsrand(time());\n\tint randNum = rand();\n```"}, {"BodyText": "An attacker can easily predict the seed used by these PRNGs, and so also predict the stream of random numbers generated. Note these examples also exhibit CWE-338 (Use of Cryptographically Weak PRNG)."}]}, {"ID": "DX-178", "Entries": [{"IntroText": "This code grabs some random bytes and uses them for a seed in a PRNG, in order to generate a new cryptographic key."}, {"Nature": "Bad", "Language": "Python", "ExampleCode": "```\n```\n# getting 2 bytes of randomness for the seeding the PRNG * \n\t seed = os.urandom(2)\n\t random.seed(a=seed)\n\t key = random.getrandbits(128)"}, {"BodyText": "Since only 2 bytes are used as a seed, an attacker will only need to guess 2^16 (65,536) values before being able to replicate the state of the PRNG."}]}], "ObservedExamples": [{"Reference": "CVE-2020-7010", "Description": "Cloud application on Kubernetes generates passwords using a weak random number generator based on deployment time.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-7010"}, {"Reference": "CVE-2019-11495", "Description": "server uses erlang:now() to seed the PRNG, which results in a small search space for potential random seeds", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-11495"}, {"Reference": "CVE-2018-12520", "Description": "Product's PRNG is not seeded for the generation of session IDs", "Link": "https://www.cve.org/CVERecord?id=CVE-2018-12520"}, {"Reference": "CVE-2016-10180", "Description": "Router's PIN generation is based on rand(time(0)) seeding.", "Link": "https://www.cve.org/CVERecord?id=CVE-2016-10180"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, \"randomness\" is used heavily. However, within cryptography, \"entropy\" is distinct, typically implied as a measurement. There are no commonly-used definitions, even within standards documents and cryptography papers. Future versions of CWE will attempt to define these terms and, if necessary, distinguish between them in ways that are appropriate for different communities but do not reduce the usability of CWE for mapping, understanding, or other scenarios."}], "Top25Examples": [{"Reference": "CVE-2021-34600", "Description": "Telenot CompasX versions prior to 32.0 use a weak seed for random number generation leading to predictable AES keys used in the NFC tags used for local authorization of users. This may lead to total loss of trustworthiness of the installation. "}, {"Reference": "CVE-2021-41117", "Description": "keypair is a a RSA PEM key generator written in javascript. keypair implements a lot of cryptographic primitives on its own or by borrowing from other libraries where possible, including node-forge. An issue was discovered where this library was generating identical RSA keys used in SSH. This would mean that the library is generating identical P, Q (and thus N) values which, in practical terms, is impossible with RSA-2048 keys. Generating identical values, repeatedly, usually indicates an issue with poor random number generation, or, poor handling of CSPRNG output. Issue 1: Poor random number generation (`GHSL-2021-1012`). The library does not rely entirely on a platform provided CSPRNG, rather, it uses it's own counter-based CMAC approach. Where things go wrong is seeding the CMAC implementation with \"true\" random data in the function `defaultSeedFile`. In order to seed the AES-CMAC generator, the library will take two different approaches depending on the JavaScript execution environment. In a browser, the library will use [`window.crypto.getRandomValues()`](https://github.com/juliangruber/keypair/blob/87c62f255baa12c1ec4f98a91600f82af80be6db/index.js#L971). However, in a nodeJS execution environment, the `window` object is not defined, so it goes down a much less secure solution, also of which has a bug in it. It does look like the library tries to use node's CSPRNG when possible unfortunately, it looks like the `crypto` object is null because a variable was declared with the same name, and set to `null`. So the node CSPRNG path is never taken. However, when `window.crypto.getRandomValues()` is not available, a Lehmer LCG random number generator is used to seed the CMAC counter, and the LCG is seeded with `Math.random`. While this is poor and would likely qualify in a security bug in itself, it does not explain the extreme frequency in which duplicate keys occur. The main flaw: The output from the Lehmer LCG is encoded incorrectly. The specific [line][https://github.com/juliangruber/keypair/blob/87c62f255baa12c1ec4f98a91600f82af80be6db/index.js#L1008] with the flaw is: `b.putByte(String.fromCharCode(next & 0xFF))` The [definition](https://github.com/juliangruber/keypair/blob/87c62f255baa12c1ec4f98a91600f82af80be6db/index.js#L350-L352) of `putByte` is `util.ByteBuffer.prototype.putByte = function(b) {this.data += String.fromCharCode(b);};`. Simplified, this is `String.fromCharCode(String.fromCharCode(next & 0xFF))`. The double `String.fromCharCode` is almost certainly unintentional and the source of weak seeding. Unfortunately, this does not result in an error. Rather, it results most of the buffer containing zeros. Since we are masking with 0xFF, we can determine that 97% of the output from the LCG are converted to zeros. The only outputs that result in meaningful values are outputs 48 through 57, inclusive. The impact is that each byte in the RNG seed has a 97% chance of being 0 due to incorrect conversion. When it is not, the bytes are 0 through 9. In summary, there are three immediate concerns: 1. The library has an insecure random number fallback path. Ideally the library would require a strong CSPRNG instead of attempting to use a LCG and `Math.random`. 2. The library does not correctly use a strong random number generator when run in NodeJS, even though a strong CSPRNG is available. 3. The fallback path has an issue in the implementation where a majority of the seed data is going to effectively be zero. Due to the poor random number generation, keypair generates RSA keys that are relatively easy to guess. This could enable an attacker to decrypt confidential messages or gain authorized access to an account belonging to the victim."}, {"Reference": "CVE-2021-43799", "Description": "Zulip is an open-source team collaboration tool. Zulip Server installs RabbitMQ for internal message passing. In versions of Zulip Server prior to 4.9, the initial installation (until first reboot, or restart of RabbitMQ) does not successfully limit the default ports which RabbitMQ opens; this includes port 25672, the RabbitMQ distribution port, which is used as a management port. RabbitMQ's default \"cookie\" which protects this port is generated using a weak PRNG, which limits the entropy of the password to at most 36 bits; in practicality, the seed for the randomizer is biased, resulting in approximately 20 bits of entropy. If other firewalls (at the OS or network level) do not protect port 25672, a remote attacker can brute-force the 20 bits of entropy in the \"cookie\" and leverage it for arbitrary execution of code as the rabbitmq user. They can also read all data which is sent through RabbitMQ, which includes all message traffic sent by users. Version 4.9 contains a patch for this vulnerability. As a workaround, ensure that firewalls prevent access to ports 5672 and 25672 from outside the Zulip server."}]}
{"ID": "336", "Name": "Same Seed in Pseudo-Random Number Generator (PRNG)", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "A Pseudo-Random Number Generator (PRNG) uses the same seed each time the product is initialized.", "ExtendedDescription": "Given the deterministic nature of PRNGs, using the same seed for each initialization will lead to the same output in the same order. If an attacker can guess (or knows) the seed, then the attacker may be able to determine the random numbers that will be produced from the PRNG.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "335", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Other", "Access Control"], "Impact": ["Other", "Bypass Protection Mechanism"]}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "Do not reuse PRNG seeds. Consider a PRNG that periodically re-seeds itself as needed from a high quality pseudo-random output, such as hardware devices."}, {"MitigationID": "MIT-2", "Phase": ["Architecture and Design", "Requirements"], "Strategy": "Libraries or Frameworks", "Description": "Use products or modules that conform to FIPS 140-2 [REF-267] to avoid obvious entropy problems, or use the more recent FIPS 140-3 [REF-1192] if possible."}], "DemonstrativeExamples": [{"ID": "DX-177", "Entries": [{"IntroText": "The following code uses a statistical PRNG to generate account IDs."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tprivate static final long SEED = 1234567890;\n\tpublic int generateAccountID() {\n\t\tRandom random = new Random(SEED);\n\t\treturn random.nextInt();\n\t}\n```"}, {"BodyText": "Because the program uses the same seed value for every invocation of the PRNG, its values are predictable, making the system vulnerable to attack."}]}, {"ID": "DX-45", "Entries": [{"IntroText": "This code attempts to generate a unique random identifier for a user's session."}, {"Nature": "Bad", "Language": "PHP", "ExampleCode": "```\n\tfunction generateSessionID($userID){\n\t\tsrand($userID);\n\t\treturn rand();\n\t}\n```"}, {"BodyText": "Because the seed for the PRNG is always the user's ID, the session ID will always be the same. An attacker could thus predict any user's session ID and potentially hijack the session."}, {"BodyText": "If the user IDs are generated sequentially, or otherwise restricted to a narrow range of values, then this example also exhibits a Small Seed Space (CWE-339)."}]}], "ObservedExamples": [{"Reference": "CVE-2022-39218", "Description": "SDK for JavaScript app builder for serverless code uses the same fixed seed for a PRNG, allowing cryptography bypass", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-39218"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, \"randomness\" is used heavily. However, within cryptography, \"entropy\" is distinct, typically implied as a measurement. There are no commonly-used definitions, even within standards documents and cryptography papers. Future versions of CWE will attempt to define these terms and, if necessary, distinguish between them in ways that are appropriate for different communities but do not reduce the usability of CWE for mapping, understanding, or other scenarios."}], "Top25Examples": [{"Reference": "CVE-2022-39218", "Description": "The JS Compute Runtime for Fastly's Compute@Edge platform provides the environment JavaScript is executed in when using the Compute@Edge JavaScript SDK. In versions prior to 0.5.3, the `Math.random` and `crypto.getRandomValues` methods fail to use sufficiently random values. The initial value to seed the PRNG (pseudorandom number generator) is baked-in to the final WebAssembly module, making the sequence of random values for that specific WebAssembly module predictable. An attacker can use the fixed seed to predict random numbers generated by these functions and bypass cryptographic security controls, for example to disclose sensitive data encrypted by functions that use these generators. The problem has been patched in version 0.5.3. No known workarounds exist."}]}
{"ID": "337", "Name": "Predictable Seed in Pseudo-Random Number Generator (PRNG)", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "A Pseudo-Random Number Generator (PRNG) is initialized from a predictable seed, such as the process ID or system time.", "ExtendedDescription": "The use of predictable seeds significantly reduces the number of possible seeds that an attacker would need to test in order to predict which random numbers will be generated by the PRNG.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "335", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Other"], "Impact": ["Varies by Context"]}], "PotentialMitigations": [{"Description": "Use non-predictable inputs for seed generation."}, {"MitigationID": "MIT-2", "Phase": ["Architecture and Design", "Requirements"], "Strategy": "Libraries or Frameworks", "Description": "Use products or modules that conform to FIPS 140-2 [REF-267] to avoid obvious entropy problems, or use the more recent FIPS 140-3 [REF-1192] if possible."}, {"MitigationID": "MIT-50", "Phase": ["Implementation"], "Description": "Use a PRNG that periodically re-seeds itself using input from high-quality sources, such as hardware devices with high entropy. However, do not re-seed too frequently, or else the entropy source might block."}], "DemonstrativeExamples": [{"ID": "DX-102", "Entries": [{"IntroText": "Both of these examples use a statistical PRNG seeded with the current value of the system clock to generate a random number:"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tRandom random = new Random(System.currentTimeMillis());\n\tint accountID = random.nextInt();\n```"}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tsrand(time());\n\tint randNum = rand();\n```"}, {"BodyText": "An attacker can easily predict the seed used by these PRNGs, and so also predict the stream of random numbers generated. Note these examples also exhibit CWE-338 (Use of Cryptographically Weak PRNG)."}]}], "ObservedExamples": [{"Reference": "CVE-2020-7010", "Description": "Cloud application on Kubernetes generates passwords using a weak random number generator based on deployment time.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-7010"}, {"Reference": "CVE-2019-11495", "Description": "server uses erlang:now() to seed the PRNG, which results in a small search space for potential random seeds", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-11495"}, {"Reference": "CVE-2008-0166", "Description": "The removal of a couple lines of code caused Debian's OpenSSL Package to only use the current process ID for seeding a PRNG", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0166"}, {"Reference": "CVE-2016-10180", "Description": "Router's PIN generation is based on rand(time(0)) seeding.", "Link": "https://www.cve.org/CVERecord?id=CVE-2016-10180"}, {"Reference": "CVE-2018-9057", "Description": "cloud provider product uses a non-cryptographically secure PRNG and seeds it with the current time", "Link": "https://www.cve.org/CVERecord?id=CVE-2018-9057"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, \"randomness\" is used heavily. However, within cryptography, \"entropy\" is distinct, typically implied as a measurement. There are no commonly-used definitions, even within standards documents and cryptography papers. Future versions of CWE will attempt to define these terms and, if necessary, distinguish between them in ways that are appropriate for different communities but do not reduce the usability of CWE for mapping, understanding, or other scenarios."}], "Top25Examples": [{"Reference": "CVE-2022-29965", "Description": "The Emerson DeltaV Distributed Control System (DCS) controllers and IO cards through 2022-04-29 misuse passwords. Access to privileged operations on the maintenance port TELNET interface (23/TCP) on M-series and SIS (CSLS/LSNB/LSNG) nodes is controlled by means of utility passwords. These passwords are generated using a deterministic, insecure algorithm using a single seed value composed of a day/hour/minute timestamp with less than 16 bits of entropy. The seed value is fed through a lookup table and a series of permutation operations resulting in three different four-character passwords corresponding to different privilege levels. An attacker can easily reconstruct these passwords and thus gain access to privileged maintenance operations. NOTE: this is different from CVE-2014-2350."}, {"Reference": "CVE-2022-31008", "Description": "RabbitMQ is a multi-protocol messaging and streaming broker. In affected versions the shovel and federation plugins perform URI obfuscation in their worker (link) state. The encryption key used to encrypt the URI was seeded with a predictable secret. This means that in case of certain exceptions related to Shovel and Federation plugins, reasonably easily deobfuscatable data could appear in the node log. Patched versions correctly use a cluster-wide secret for that purpose. This issue has been addressed and Patched versions: `3.10.2`, `3.9.18`, `3.8.32` are available. Users unable to upgrade should disable the Shovel and Federation plugins."}, {"Reference": "CVE-2022-31034", "Description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. All versions of Argo CD starting with v0.11.0 are vulnerable to a variety of attacks when an SSO login is initiated from the Argo CD CLI or UI. The vulnerabilities are due to the use of insufficiently random values in parameters in Oauth2/OIDC login flows. In each case, using a relatively-predictable (time-based) seed in a non-cryptographically-secure pseudo-random number generator made the parameter less random than required by the relevant spec or by general best practices. In some cases, using too short a value made the entropy even less sufficient. The attacks on login flows which are meant to be mitigated by these parameters are difficult to accomplish but can have a high impact potentially granting an attacker admin access to Argo CD. Patches for this vulnerability has been released in the following Argo CD versions: v2.4.1, v2.3.5, v2.2.10 and v2.1.16. There are no known workarounds for this vulnerability."}, {"Reference": "CVE-2022-42159", "Description": "D-Link COVR 1200,1202,1203 v1.08 was discovered to have a predictable seed in a Pseudo-Random Number Generator."}, {"Reference": "CVE-2022-40267", "Description": "Predictable Seed in Pseudo-Random Number Generator (PRNG) vulnerability in Mitsubishi Electric Corporation MELSEC iQ-F Series FX5U-xMy/z (x=32,64,80, y=T,R, z=ES,DS,ESS,DSS) with serial number 17X**** or later, and versions 1.280 and prior, Mitsubishi Electric Corporation MELSEC iQ-F Series FX5U-xMy/z (x=32,64,80, y=T,R, z=ES,DS,ESS,DSS) with serial number 179**** and prior, and versions 1.074 and prior, Mitsubishi Electric Corporation MELSEC iQ-F Series FX5UC-xMy/z (x=32,64,96, y=T, z=D,DSS)) with serial number 17X**** or later, and versions 1.280 and prior, Mitsubishi Electric Corporation MELSEC iQ-F Series FX5UC-xMy/z (x=32,64,96, y=T, z=D,DSS)) with serial number 179**** and prior, and versions 1.074 and prior, Mitsubishi Electric Corporation MELSEC iQ-F Series FX5UC-32MT/DS-TS versions 1.280 and prior, Mitsubishi Electric Corporation MELSEC iQ-F Series FX5UC-32MT/DSS-TS versions 1.280 and prior, Mitsubishi Electric Corporation MELSEC iQ-F Series FX5UJ-xMy/z (x=24,40,60, y=T,R, z=ES,ESS) versions 1.042 and prior, Mitsubishi Electric Corporation MELSEC iQ-F Series FX5UJ-xMy/ES-A (x=24,40,60, y=T,R) versions 1.043 and prior, Mitsubishi Electric Corporation MELSEC iQ-F Series FX5S-xMy/z (x=30,40,60,80, y=T,R, z=ES,ESS) versions 1.003 and prior, Mitsubishi Electric Corporation MELSEC iQ-F Series FX5UC-32MR/DS-TS versions 1.280 and prior, Mitsubishi Electric Corporation MELSEC iQ-R Series R00/01/02CPU versions 33 and prior, Mitsubishi Electric Corporation MELSEC iQ-R Series R04/08/16/32/120(EN)CPU versions 66 and prior allows a remote unauthenticated attacker to access the Web server function by guessing the random numbers used for authentication from several used random numbers."}]}
{"ID": "338", "Name": "Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product uses a Pseudo-Random Number Generator (PRNG) in a security context, but the PRNG's algorithm is not cryptographically strong.", "ExtendedDescription": "\n\nWhen a non-cryptographic PRNG is used in a cryptographic context, it can expose the cryptography to certain types of attacks.\n\n\nOften a pseudo-random number generator (PRNG) is not designed for cryptography. Sometimes a mediocre source of randomness is sufficient or preferable for algorithms that use random numbers. Weak generators generally take less processing power and/or do not use the precious, finite, entropy sources on a system. While such PRNGs might have very useful features, these same features could be used to break the cryptography.\n", "LikelihoodOfExploit": "Medium", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "330", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "330", "ViewID": "1003", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Bypass Protection Mechanism"], "Note": "If a PRNG is used for authentication and authorization, such as a session ID or a seed for generating a cryptographic key, then an attacker may be able to easily guess the ID or cryptographic key and gain access to restricted functionality."}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"Phase": ["Implementation"], "Description": "Use functions or hardware which use a hardware-based random number generation for all crypto. This is the recommended solution. Use CyptGenRandom on Windows, or hw_rand() on Linux."}], "DemonstrativeExamples": [{"ID": "DX-102", "Entries": [{"IntroText": "Both of these examples use a statistical PRNG seeded with the current value of the system clock to generate a random number:"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tRandom random = new Random(System.currentTimeMillis());\n\tint accountID = random.nextInt();\n```"}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tsrand(time());\n\tint randNum = rand();\n```"}, {"BodyText": "The random number functions used in these examples, rand() and Random.nextInt(), are not considered cryptographically strong. An attacker may be able to predict the random numbers generated by these functions. Note that these example also exhibit CWE-337 (Predictable Seed in PRNG)."}]}], "ObservedExamples": [{"Reference": "CVE-2021-3692", "Description": "PHP framework uses mt_rand() function (Marsenne Twister) when generating tokens", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-3692"}, {"Reference": "CVE-2009-3278", "Description": "Crypto product uses rand() library function to generate a recovery key, making it easier to conduct brute force attacks.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3278"}, {"Reference": "CVE-2009-3238", "Description": "Random number generator can repeatedly generate the same value.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3238"}, {"Reference": "CVE-2009-2367", "Description": "Web application generates predictable session IDs, allowing session hijacking.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2367"}, {"Reference": "CVE-2008-0166", "Description": "SSL library uses a weak random number generator that only generates 65,536 unique keys.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0166"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, \"randomness\" is used heavily. However, within cryptography, \"entropy\" is distinct, typically implied as a measurement. There are no commonly-used definitions, even within standards documents and cryptography papers. Future versions of CWE will attempt to define these terms and, if necessary, distinguish between them in ways that are appropriate for different communities but do not reduce the usability of CWE for mapping, understanding, or other scenarios."}], "Top25Examples": [{"Reference": "CVE-2021-43799", "Description": "Zulip is an open-source team collaboration tool. Zulip Server installs RabbitMQ for internal message passing. In versions of Zulip Server prior to 4.9, the initial installation (until first reboot, or restart of RabbitMQ) does not successfully limit the default ports which RabbitMQ opens; this includes port 25672, the RabbitMQ distribution port, which is used as a management port. RabbitMQ's default \"cookie\" which protects this port is generated using a weak PRNG, which limits the entropy of the password to at most 36 bits; in practicality, the seed for the randomizer is biased, resulting in approximately 20 bits of entropy. If other firewalls (at the OS or network level) do not protect port 25672, a remote attacker can brute-force the 20 bits of entropy in the \"cookie\" and leverage it for arbitrary execution of code as the rabbitmq user. They can also read all data which is sent through RabbitMQ, which includes all message traffic sent by users. Version 4.9 contains a patch for this vulnerability. As a workaround, ensure that firewalls prevent access to ports 5672 and 25672 from outside the Zulip server."}, {"Reference": "CVE-2021-45484", "Description": "In NetBSD through 9.2, the IPv6 fragment ID generation algorithm employs a weak cryptographic PRNG."}, {"Reference": "CVE-2021-45489", "Description": "In NetBSD through 9.2, the IPv6 Flow Label generation algorithm employs a weak cryptographic PRNG."}, {"Reference": "CVE-2022-29245", "Description": "SSH.NET is a Secure Shell (SSH) library for .NET. In versions 2020.0.0 and 2020.0.1, during an `X25519` key exchange, the client\u2019s private key is generated with `System.Random`. `System.Random` is not a cryptographically secure random number generator, it must therefore not be used for cryptographic purposes. When establishing an SSH connection to a remote host, during the X25519 key exchange, the private key is generated with a weak random number generator whose seed can be brute forced. This allows an attacker who is able to eavesdrop on the communications to decrypt them. Version 2020.0.2 contains a patch for this issue. As a workaround, one may disable support for `curve25519-sha256` and `curve25519-sha256@libssh.org` key exchange algorithms."}, {"Reference": "CVE-2022-45782", "Description": "An issue was discovered in dotCMS core 5.3.8.5 through 5.3.8.15 and 21.03 through 22.10.1. A cryptographically insecure random generation algorithm for password-reset token generation leads to account takeover."}, {"Reference": "CVE-2021-23126", "Description": "An issue was discovered in Joomla! 3.2.0 through 3.9.24. Usage of the insecure rand() function within the process of generating the 2FA secret."}, {"Reference": "CVE-2022-0828", "Description": "The Download Manager WordPress plugin before 3.2.34 uses the uniqid php function to generate the master key for a download, allowing an attacker to brute force the key with reasonable resources giving direct download access regardless of role based restrictions or password protections set for the download."}, {"Reference": "CVE-2021-22948", "Description": "Vulnerability in the generation of session IDs in revive-adserver < 5.3.0, based on the cryptographically insecure uniqid() PHP function. Under some circumstances, an attacker could theoretically be able to brute force session IDs in order to take over a specific account."}]}
{"ID": "339", "Name": "Small Seed Space in PRNG", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "A Pseudo-Random Number Generator (PRNG) uses a relatively small seed space, which makes it more susceptible to brute force attacks.", "ExtendedDescription": "PRNGs are entirely deterministic once seeded, so it should be extremely difficult to guess the seed. If an attacker can collect the outputs of a PRNG and then brute force the seed by trying every possibility to see which seed matches the observed output, then the attacker will know the output of any subsequent calls to the PRNG. A small seed space implies that the attacker will have far fewer possible values to try to exhaust all possibilities.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "335", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "PeerOf", "CweID": "341", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Other"], "Impact": ["Varies by Context"]}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "Use well vetted pseudo-random number generating algorithms with adequate length seeds. Pseudo-random number generators can produce predictable numbers if the generator is known and the seed can be guessed. A 256-bit seed is a good starting point for producing a \"random enough\" number."}, {"MitigationID": "MIT-2", "Phase": ["Architecture and Design", "Requirements"], "Strategy": "Libraries or Frameworks", "Description": "Use products or modules that conform to FIPS 140-2 [REF-267] to avoid obvious entropy problems, or use the more recent FIPS 140-3 [REF-1192] if possible."}], "DemonstrativeExamples": [{"ID": "DX-178", "Entries": [{"IntroText": "This code grabs some random bytes and uses them for a seed in a PRNG, in order to generate a new cryptographic key."}, {"Nature": "Bad", "Language": "Python", "ExampleCode": "```\n```\n# getting 2 bytes of randomness for the seeding the PRNG * \n\t seed = os.urandom(2)\n\t random.seed(a=seed)\n\t key = random.getrandbits(128)"}, {"BodyText": "Since only 2 bytes are used as a seed, an attacker will only need to guess 2^16 (65,536) values before being able to replicate the state of the PRNG."}]}], "ObservedExamples": [{"Reference": "CVE-2019-10908", "Description": "product generates passwords via org.apache.commons.lang.RandomStringUtils, which uses java.util.Random internally. This PRNG has only a 48-bit seed.", "Link": "https://www.cve.org/CVERecord?id=CVE-2019-10908"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "This entry may have a chaining relationship with predictable from observable state (CWE-341)."}, {"Type": "Maintenance", "Note": "As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, \"randomness\" is used heavily. However, within cryptography, \"entropy\" is distinct, typically implied as a measurement. There are no commonly-used definitions, even within standards documents and cryptography papers. Future versions of CWE will attempt to define these terms and, if necessary, distinguish between them in ways that are appropriate for different communities but do not reduce the usability of CWE for mapping, understanding, or other scenarios."}]}
{"ID": "34", "Name": "Path Traversal: '....//'", "Abstraction": "Variant", "Structure": "Simple", "Status": "Incomplete", "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '....//' (doubled dot dot slash) sequences that can resolve to a location that is outside of that directory.", "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nThe '....//' manipulation is useful for bypassing some path traversal protection schemes. If \"../\" is filtered in a sequential fashion, as done by some regular expression engines, then \"....//\" can collapse into the \"../\" unsafe value (CWE-182). It could also be useful when \"..\" is removed, if the operating system treats \"//\" and \"/\" as equivalent.\n", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "23", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Confidentiality", "Integrity"], "Impact": ["Read Files or Directories", "Modify Files or Directories"]}], "DetectionMethods": [{"Method": "Automated Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tSource code Weakness Analyzer\n\t\tContext-configured Source Code Weakness Analyzer", "Effectiveness": "SOAR Partial"}, {"Method": "Architecture or Design Review", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tInspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.)\n\t\tFormal Methods / Correct-By-Construction", "Effectiveness": "High"}], "PotentialMitigations": [{"MitigationID": "MIT-5.1", "Phase": ["Implementation"], "Strategy": "Input Validation", "Description": "\n\nAssume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.\n\n\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"\n\n\nDo not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.\n\n\nWhen validating filenames, use stringent allowlists that limit the character set to be used. If feasible, only allow a single \".\" character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as \"/\" to avoid CWE-36. Use a list of allowable file extensions, which will help to avoid CWE-434.\n\n\nDo not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a denylist, which may be incomplete (CWE-184). For example, filtering \"/\" is insufficient protection if the filesystem also supports the use of \"\\\" as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if \"../\" sequences are removed from the \".../...//\" string in a sequential fashion, two instances of \"../\" would be removed from the original string, but the remaining characters would still form the \"../\" string.\n", "Effectiveness": "High"}, {"MitigationID": "MIT-20", "Phase": ["Implementation"], "Strategy": "Input Validation", "Description": "Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked."}], "ObservedExamples": [{"Reference": "CVE-2004-1670", "Description": "Mail server allows remote attackers to create arbitrary directories via a \"..\" or rename arbitrary files via a \"....//\" in user supplied parameters.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1670"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Relationship", "Note": "This could occur due to a cleansing error that removes a single \"../\" from \"....//\""}]}
{"ID": "340", "Name": "Generation of Predictable Numbers or Identifiers", "Abstraction": "Class", "Structure": "Simple", "Status": "Incomplete", "Description": "The product uses a scheme that generates numbers or identifiers that are more predictable than required.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "330", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "CanPrecede", "CweID": "384", "ViewID": "1000"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Other"], "Impact": ["Varies by Context"]}], "DemonstrativeExamples": [{"ID": "DX-45", "Entries": [{"IntroText": "This code generates a unique random identifier for a user's session."}, {"Nature": "Bad", "Language": "PHP", "ExampleCode": "```\n\tfunction generateSessionID($userID){\n\t\tsrand($userID);\n\t\treturn rand();\n\t}\n```"}, {"BodyText": "Because the seed for the PRNG is always the user's ID, the session ID will always be the same. An attacker could thus predict any user's session ID and potentially hijack the session."}, {"BodyText": "This example also exhibits a Small Seed Space (CWE-339)."}]}], "ObservedExamples": [{"Reference": "CVE-2022-29330", "Description": "Product for administering PBX systems uses predictable identifiers and timestamps for filenames (CWE-340) which allows attackers to access files via direct request (CWE-425).", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-29330"}, {"Reference": "CVE-2001-1141", "Description": "PRNG allows attackers to use the output of small PRNG requests to determine the internal state information, which could be used by attackers to predict future pseudo-random numbers.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1141"}, {"Reference": "CVE-1999-0074", "Description": "Listening TCP ports are sequentially allocated, allowing spoofing attacks.", "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0074"}], "MappingNotes": {"Usage": "Allowed-with-Review", "Rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate", "Comments": "Examine children of this entry to see if there is a better fit", "Reasons": ["Abstraction"]}, "Notes": [{"Type": "Maintenance", "Note": "As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, \"randomness\" is used heavily. However, within cryptography, \"entropy\" is distinct, typically implied as a measurement. There are no commonly-used definitions, even within standards documents and cryptography papers. Future versions of CWE will attempt to define these terms and, if necessary, distinguish between them in ways that are appropriate for different communities but do not reduce the usability of CWE for mapping, understanding, or other scenarios."}], "Top25Examples": [{"Reference": "CVE-2022-26317", "Description": "A vulnerability has been identified in Mendix Applications using Mendix 7 (All versions < V7.23.29). When returning the result of a completed Microflow execution call the affected framework does not correctly verify, if the request was initially made by the user requesting the result. Together with predictable identifiers for Microflow execution calls, this could allow a malicious attacker to retrieve information about arbitrary Microflow execution calls made by users within the affected system."}, {"Reference": "CVE-2022-29330", "Description": "Missing access control in the backup system of Telesoft VitalPBX before 3.2.1 allows attackers to access the PJSIP and SIP extension credentials, cryptographic keys and voicemails files via unspecified vectors."}, {"Reference": "CVE-2022-38970", "Description": "ieGeek IG20 hipcam RealServer V1.0 is vulnerable to Incorrect Access Control. The algorithm used to generate device IDs (UIDs) for devices that utilize Shenzhen Yunni Technology iLnkP2P suffers from a predictability flaw that allows remote attackers to establish direct connections to arbitrary devices."}]}
{"ID": "341", "Name": "Predictable from Observable State", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "A number or object is predictable based on observations that the attacker can make about the state of the system or network, such as time, process ID, etc.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "340", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Other"], "Impact": ["Varies by Context"], "Note": "This weakness could be exploited by an attacker in a number ways depending on the context. If a predictable number is used to generate IDs or keys that are used within protection mechanisms, then an attacker could gain unauthorized access to the system. If predictable filenames are used for storing sensitive information, then an attacker might gain access to the system and may be able to gain access to the information in the file."}], "PotentialMitigations": [{"Phase": ["Implementation"], "Description": "Increase the entropy used to seed a PRNG."}, {"MitigationID": "MIT-2", "Phase": ["Architecture and Design", "Requirements"], "Strategy": "Libraries or Frameworks", "Description": "Use products or modules that conform to FIPS 140-2 [REF-267] to avoid obvious entropy problems. Consult FIPS 140-2 Annex C (\"Approved Random Number Generators\")."}, {"MitigationID": "MIT-50", "Phase": ["Implementation"], "Description": "Use a PRNG that periodically re-seeds itself using input from high-quality sources, such as hardware devices with high entropy. However, do not re-seed too frequently, or else the entropy source might block."}], "DemonstrativeExamples": [{"ID": "DX-45", "Entries": [{"IntroText": "This code generates a unique random identifier for a user's session."}, {"Nature": "Bad", "Language": "PHP", "ExampleCode": "```\n\tfunction generateSessionID($userID){\n\t\tsrand($userID);\n\t\treturn rand();\n\t}\n```"}, {"BodyText": "Because the seed for the PRNG is always the user's ID, the session ID will always be the same. An attacker could thus predict any user's session ID and potentially hijack the session."}, {"BodyText": "This example also exhibits a Small Seed Space (CWE-339)."}]}], "ObservedExamples": [{"Reference": "CVE-2002-0389", "Description": "Mail server stores private mail messages with predictable filenames in a world-executable directory, which allows local users to read private mailing list archives.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0389"}, {"Reference": "CVE-2001-1141", "Description": "PRNG allows attackers to use the output of small PRNG requests to determine the internal state information, which could be used by attackers to predict future pseudo-random numbers.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1141"}, {"Reference": "CVE-2000-0335", "Description": "DNS resolver library uses predictable IDs, which allows a local attacker to spoof DNS query results.", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0335"}, {"Reference": "CVE-2005-1636", "Description": "MFV. predictable filename and insecure permissions allows file modification to execute SQL queries.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1636"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, \"randomness\" is used heavily. However, within cryptography, \"entropy\" is distinct, typically implied as a measurement. There are no commonly-used definitions, even within standards documents and cryptography papers. Future versions of CWE will attempt to define these terms and, if necessary, distinguish between them in ways that are appropriate for different communities but do not reduce the usability of CWE for mapping, understanding, or other scenarios."}], "Top25Examples": [{"Reference": "CVE-2021-41694", "Description": "An Incorrect Access Control vulnerability exists in Premiumdatingscript 4.2.7.7 via the password change procedure in requests\\\\user.php."}, {"Reference": "CVE-2021-4277", "Description": "A vulnerability, which was classified as problematic, has been found in fredsmith utils. This issue affects some unknown processing of the file screenshot_sync of the component Filename Handler. The manipulation leads to predictable from observable state. The name of the patch is dbab1b66955eeb3d76b34612b358307f5c4e3944. It is recommended to apply a patch to fix this issue. The identifier VDB-216749 was assigned to this vulnerability."}, {"Reference": "CVE-2022-36536", "Description": "An issue in the component post_applogin.php of Super Flexible Software GmbH & Co. KG Syncovery 9 for Linux v9.47x and below allows attackers to escalate privileges via creating crafted session tokens."}]}
{"ID": "342", "Name": "Predictable Exact Value from Previous Values", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "An exact value or random number can be precisely predicted by observing previous values.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "340", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Other"], "Impact": ["Varies by Context"]}], "PotentialMitigations": [{"Description": "Increase the entropy used to seed a PRNG."}, {"MitigationID": "MIT-2", "Phase": ["Architecture and Design", "Requirements"], "Strategy": "Libraries or Frameworks", "Description": "Use products or modules that conform to FIPS 140-2 [REF-267] to avoid obvious entropy problems. Consult FIPS 140-2 Annex C (\"Approved Random Number Generators\")."}, {"MitigationID": "MIT-50", "Phase": ["Implementation"], "Description": "Use a PRNG that periodically re-seeds itself using input from high-quality sources, such as hardware devices with high entropy. However, do not re-seed too frequently, or else the entropy source might block."}], "ObservedExamples": [{"Reference": "CVE-2002-1463", "Description": "Firewall generates easily predictable initial sequence numbers (ISN), which allows remote attackers to spoof connections.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1463"}, {"Reference": "CVE-1999-0074", "Description": "Listening TCP ports are sequentially allocated, allowing spoofing attacks.", "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0074"}, {"Reference": "CVE-1999-0077", "Description": "Predictable TCP sequence numbers allow spoofing.", "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0077"}, {"Reference": "CVE-2000-0335", "Description": "DNS resolver uses predictable IDs, allowing a local user to spoof DNS query results.", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0335"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, \"randomness\" is used heavily. However, within cryptography, \"entropy\" is distinct, typically implied as a measurement. There are no commonly-used definitions, even within standards documents and cryptography papers. Future versions of CWE will attempt to define these terms and, if necessary, distinguish between them in ways that are appropriate for different communities but do not reduce the usability of CWE for mapping, understanding, or other scenarios."}]}
{"ID": "343", "Name": "Predictable Value Range from Previous Values", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product's random number generator produces a series of values which, when observed, can be used to infer a relatively small range of possibilities for the next value that could be generated.", "ExtendedDescription": "The output of a random number generator should not be predictable based on observations of previous values. In some cases, an attacker cannot predict the exact value that will be produced next, but can narrow down the possibilities significantly. This reduces the amount of effort to perform a brute force attack. For example, suppose the product generates random numbers between 1 and 100, but it always produces a larger value until it reaches 100. If the generator produces an 80, then the attacker knows that the next value will be somewhere between 81 and 100. Instead of 100 possibilities, the attacker only needs to consider 20.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "340", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Other"], "Impact": ["Varies by Context"]}], "PotentialMitigations": [{"Description": "Increase the entropy used to seed a PRNG."}, {"MitigationID": "MIT-2", "Phase": ["Architecture and Design", "Requirements"], "Strategy": "Libraries or Frameworks", "Description": "Use products or modules that conform to FIPS 140-2 [REF-267] to avoid obvious entropy problems. Consult FIPS 140-2 Annex C (\"Approved Random Number Generators\")."}, {"MitigationID": "MIT-50", "Phase": ["Implementation"], "Description": "Use a PRNG that periodically re-seeds itself using input from high-quality sources, such as hardware devices with high entropy. However, do not re-seed too frequently, or else the entropy source might block."}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, \"randomness\" is used heavily. However, within cryptography, \"entropy\" is distinct, typically implied as a measurement. There are no commonly-used definitions, even within standards documents and cryptography papers. Future versions of CWE will attempt to define these terms and, if necessary, distinguish between them in ways that are appropriate for different communities but do not reduce the usability of CWE for mapping, understanding, or other scenarios."}]}
{"ID": "344", "Name": "Use of Invariant Value in Dynamically Changing Context", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product uses a constant value, name, or reference, but this value can (or should) vary across different environments.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "330", "ViewID": "1000", "Ordinal": "Primary"}], "WeaknessOrdinalities": [{"Ordinality": "Primary"}, {"Ordinality": "Resultant"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Other"], "Impact": ["Varies by Context"]}], "DemonstrativeExamples": [{"ID": "DX-14", "Entries": [{"IntroText": "The following code is an example of an internal hard-coded password in the back-end:"}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tint VerifyAdmin(char *password) {\n\t\t\tif (strcmp(password, \"Mew!\")) {\n\t\t\t\t\t printf(\"Incorrect Password!\\n\");\n\t\t\t\t\treturn(0)\n\t\t\t}\n\t\t\tprintf(\"Entering Diagnostic Mode...\\n\");\n\t\t\treturn(1);\n\t}\n```"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tint VerifyAdmin(String password) {\n\t\tif (!password.equals(\"Mew!\")) {\n\t\t\treturn(0)\n\t\t}\n\t\t//Diagnostic Mode\n\t\treturn(1);\n\t}\n```"}, {"BodyText": "Every instance of this program can be placed into diagnostic mode with the same password. Even worse is the fact that if this program is distributed as a binary-only distribution, it is very difficult to change that password or disable this \"functionality.\""}]}, {"ID": "DX-192", "Entries": [{"IntroText": "This code assumes a particular function will always be found at a particular address. It assigns a pointer to that address and calls the function."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tint (*pt2Function) (float, char, char)=0x08040000;\n\tint result2 = (*pt2Function) (12, 'a', 'b');\n```\n// Here we can inject code to execute.*"}, {"BodyText": "The same function may not always be found at the same memory address. This could lead to a crash, or an attacker may alter the memory at the expected address, leading to arbitrary code execution."}]}], "ObservedExamples": [{"Reference": "CVE-2002-0980", "Description": "Component for web browser writes an error message to a known location, which can then be referenced by attackers to process HTML/script in a less restrictive context", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0980"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Relationship", "Note": "overlaps default configuration."}]}
{"ID": "345", "Name": "Insufficient Verification of Data Authenticity", "Abstraction": "Class", "Structure": "Simple", "Status": "Draft", "Description": "The product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "693", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "ICS/OT", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Integrity", "Other"], "Impact": ["Varies by Context", "Unexpected State"]}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "DemonstrativeExamples": [{"ID": "DX-153", "Entries": [{"IntroText": "In 2022, the OT:ICEFALL study examined products by 10 different Operational Technology (OT) vendors. The researchers reported 56 vulnerabilities and said that the products were \"insecure by design\" [REF-1283]. If exploited, these vulnerabilities often allowed adversaries to change how the products operated, ranging from denial of service to changing the code that the products executed. Since these products were often used in industries such as power, electrical, water, and others, there could even be safety implications."}, {"BodyText": "Multiple vendors did not sign firmware images."}]}], "ObservedExamples": [{"Reference": "CVE-2022-30260", "Description": "Distributed Control System (DCS) does not sign firmware images and only relies on insecure checksums for integrity checks", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30260"}, {"Reference": "CVE-2022-30267", "Description": "Distributed Control System (DCS) does not sign firmware images and only relies on insecure checksums for integrity checks", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30267"}, {"Reference": "CVE-2022-30272", "Description": "Remote Terminal Unit (RTU) does not use signatures for firmware images and relies on insecure checksums", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-30272"}], "RelatedAttackPatterns": ["111", "141", "142", "148", "218", "384", "385", "386", "387", "388", "665", "701"], "MappingNotes": {"Usage": "Discouraged", "Rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate", "Comments": "Examine children of this entry to see if there is a better fit", "Reasons": ["Abstraction"]}, "Notes": [{"Type": "Relationship", "Note": "\"origin validation\" could fall under this."}, {"Type": "Maintenance", "Note": "The specific ways in which the origin is not properly identified should be laid out as separate weaknesses. In some sense, this is more like a category."}], "Top25Examples": [{"Reference": "CVE-2022-26871", "Description": "An arbitrary file upload vulnerability in Trend Micro Apex Central could allow an unauthenticated remote attacker to upload an arbitrary file which could lead to remote code execution."}, {"Reference": "CVE-2021-44850", "Description": "On Xilinx Zynq-7000 SoC devices, physical modification of an SD boot image allows for a buffer overflow attack in the ROM. Because the Zynq-7000's boot image header is unencrypted and unauthenticated before use, an attacker can modify the boot header stored on an SD card so that a secure image appears to be unencrypted, and they will be able to modify the full range of register initialization values. Normally, these registers will be restricted when booting securely. Of importance to this attack are two registers that control the SD card's transfer type and transfer size. These registers could be modified a way that causes a buffer overflow in the ROM."}, {"Reference": "CVE-2022-28385", "Description": "An issue was discovered in certain Verbatim drives through 2022-03-31. Due to missing integrity checks, an attacker can manipulate the content of the emulated CD-ROM drive (containing the Windows and macOS client software). The content of this emulated CD-ROM drive is stored as an ISO-9660 image in the hidden sectors of the USB drive, that can only be accessed using special IOCTL commands, or when installing the drive in an external disk enclosure. By manipulating this ISO-9660 image or replacing it with another one, an attacker is able to store malicious software on the emulated CD-ROM drive. This software may get executed by an unsuspecting victim when using the device. For example, an attacker with temporary physical access during the supply chain could program a modified ISO-9660 image on a device that always accepts an attacker-controlled password for unlocking the device. If the attacker later on gains access to the used USB drive, he can simply decrypt all contained user data. Storing arbitrary other malicious software is also possible. This affects Executive Fingerprint Secure SSD GDMSFE01-INI3637-C VER1.1 and Fingerprint Secure Portable Hard Drive Part Number #53650."}, {"Reference": "CVE-2022-36360", "Description": "A vulnerability has been identified in LOGO! 8 BM (incl. SIPLUS variants) (All versions < V8.3). Affected devices load firmware updates without checking the authenticity. Furthermore the integrity of the unencrypted firmware is only verified by a non-cryptographic method. This could allow an attacker to manipulate a firmware update and flash it to the device."}, {"Reference": "CVE-2022-39199", "Description": "immudb is a database with built-in cryptographic proof and verification. immudb client SDKs use server's UUID to distinguish between different server instance so that the client can connect to different immudb instances and keep the state for multiple servers. SDK does not validate this uuid and can accept any value reported by the server. A malicious server can change the reported UUID tricking the client to treat it as a different server thus accepting a state completely irrelevant to the one previously retrieved from the server. This issue has been patched in version 1.4.1. As a workaround, when initializing an immudb client object a custom state handler can be used to store the state. Providing custom implementation that ignores the server UUID can be used to ensure that even if the server changes the UUID, client will still consider it to be the same server."}, {"Reference": "CVE-2022-39909", "Description": "Insufficient verification of data authenticity vulnerability in Samsung Gear IconX PC Manager prior to version 2.1.221019.51 allows local attackers to create arbitrary file using symbolic link."}, {"Reference": "CVE-2022-23491", "Description": "Certifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi 2022.12.07 removes root certificates from \"TrustCor\" from the root store. These are in the process of being removed from Mozilla's trust store. TrustCor's root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor's ownership also operated a business that produced spyware. Conclusions of Mozilla's investigation can be found in the linked google group discussion."}, {"Reference": "CVE-2022-30315", "Description": "Honeywell Experion PKS Safety Manager (SM and FSC) through 2022-05-06 has Insufficient Verification of Data Authenticity. According to FSCT-2022-0053, there is a Honeywell Experion PKS Safety Manager insufficient logic security controls issue. The affected components are characterized as: Honeywell FSC runtime (FSC-CPU, QPP), Honeywell Safety Builder. The potential impact is: Remote Code Execution, Denial of Service. The Honeywell Experion PKS Safety Manager family of safety controllers utilize the unauthenticated Safety Builder protocol (FSCT-2022-0051) for engineering purposes, including downloading projects and control logic to the controller. Control logic is downloaded to the controller on a block-by-block basis. The logic that is downloaded consists of FLD code compiled to native machine code for the CPU module (which applies to both the Safety Manager and FSC families). Since this logic does not seem to be cryptographically authenticated, it allows an attacker capable of triggering a logic download to execute arbitrary machine code on the controller's CPU module in the context of the runtime. While the researchers could not verify this in detail, the researchers believe that the microprocessor underpinning the FSC and Safety Manager CPU modules is incapable of offering memory protection or privilege separation capabilities which would give an attacker full control of the CPU module. There is no authentication on control logic downloaded to the controller. Memory protection and privilege separation capabilities for the runtime are possibly lacking. The researchers confirmed the issues in question on Safety Manager R145.1 and R152.2 but suspect the issue affects all FSC and SM controllers and associated Safety Builder versions regardless of software or firmware revision. An attacker who can communicate with a Safety Manager controller via the Safety Builder protocol can execute arbitrary code without restrictions on the CPU module, allowing for covert manipulation of control operations and implanting capabilities similar to the TRITON malware (MITRE ATT&CK software ID S1009). A mitigating factor with regards to some, but not all, of the above functionality is that these require the Safety Manager physical keyswitch to be in the right position."}, {"Reference": "CVE-2022-0715", "Description": "A CWE-287: Improper Authentication vulnerability exists that could cause an attacker to arbitrarily change the behavior of the UPS when a key is leaked and used to upload malicious firmware. Affected Product: APC Smart-UPS Family: SMT Series (SMT Series ID=18: UPS 09.8 and prior / SMT Series ID=1040: UPS 01.2 and prior / SMT Series ID=1031: UPS 03.1 and prior), SMC Series (SMC Series ID=1005: UPS 14.1 and prior / SMC Series ID=1007: UPS 11.0 and prior / SMC Series ID=1041: UPS 01.1 and prior), SCL Series (SCL Series ID=1030: UPS 02.5 and prior / SCL Series ID=1036: UPS 02.5 and prior), SMX Series (SMX Series ID=20: UPS 10.2 and prior / SMX Series ID=23: UPS 07.0 and prior), SRT Series (SRT Series ID=1010/1019/1025: UPS 08.3 and prior / SRT Series ID=1024: UPS 01.0 and prior / SRT Series ID=1020: UPS 10.4 and prior / SRT Series ID=1021: UPS 12.2 and prior / SRT Series ID=1001/1013: UPS 05.1 and prior / SRT Series ID=1002/1014: UPSa05.2 and prior), APC SmartConnect Family: SMT Series (SMT Series ID=1015: UPS 04.5 and prior), SMC Series (SMC Series ID=1018: UPS 04.2 and prior), SMTL Series (SMTL Series ID=1026: UPS 02.9 and prior), SCL Series (SCL Series ID=1029: UPS 02.5 and prior / SCL Series ID=1030: UPS 02.5 and prior / SCL Series ID=1036: UPS 02.5 and prior / SCL Series ID=1037: UPS 03.1 and prior), SMX Series (SMX Series ID=1031: UPS 03.1 and prior)"}, {"Reference": "CVE-2022-25262", "Description": "In JetBrains Hub before 2022.1.14434, SAML request takeover was possible."}, {"Reference": "CVE-2022-20396", "Description": "In SettingsActivity.java, there is a possible way to make a device discoverable over Bluetooth, without permission or user interaction, due to a permissions bypass. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-12L Android-13Android ID: A-234440688"}, {"Reference": "CVE-2021-46559", "Description": "The firmware on Moxa TN-5900 devices through 3.1 has a weak algorithm that allows an attacker to defeat an inspection mechanism for integrity protection."}, {"Reference": "CVE-2022-28370", "Description": "On Verizon 5G Home LVSKIHP OutDoorUnit (ODU) 3.33.101.0 devices, the RPC endpoint crtc_fw_upgrade provides a means of provisioning a firmware update for the device. /lib/functions/wnc_jsonsh/wnc_crtc_fw.sh has no cryptographic validation of the image, thus allowing an attacker to modify the installed firmware."}, {"Reference": "CVE-2022-30273", "Description": "The Motorola MDLC protocol through 2022-05-02 mishandles message integrity. It supports three security modes: Plain, Legacy Encryption, and New Encryption. In Legacy Encryption mode, traffic is encrypted via the Tiny Encryption Algorithm (TEA) block-cipher in ECB mode. This mode of operation does not offer message integrity and offers reduced confidentiality above the block level, as demonstrated by an ECB Penguin attack against any block ciphers."}, {"Reference": "CVE-2021-45419", "Description": "Certain Starcharge products are affected by Improper Input Validation. The affected products include: Nova 360 Cabinet <= 1.3.0.0.7b102 - Fixed: Beta1.3.0.1.0 and Titan 180 Premium <= 1.3.0.0.6 - Fixed: 1.3.0.0.9."}]}
{"ID": "346", "Name": "Origin Validation Error", "Abstraction": "Class", "Structure": "Simple", "Status": "Draft", "Description": "The product does not properly verify that the source of data or communication is valid.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "345", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "345", "ViewID": "1003", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "284", "ViewID": "1000"}], "WeaknessOrdinalities": [{"Ordinality": "Primary"}, {"Ordinality": "Resultant"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control", "Other"], "Impact": ["Gain Privileges or Assume Identity", "Varies by Context"], "Note": "An attacker can access any functionality that is inadvertently accessible to the source."}], "DemonstrativeExamples": [{"ID": "DX-112", "Entries": [{"IntroText": "This Android application will remove a user account when it receives an intent to do so:"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tIntentFilter filter = new IntentFilter(\"com.example.RemoveUser\");\n\tMyReceiver receiver = new MyReceiver();\n\tregisterReceiver(receiver, filter);\n\tpublic class DeleteReceiver extends BroadcastReceiver {\n\t\t@Override\n\t\tpublic void onReceive(Context context, Intent intent) {\n\t\t\tint userID = intent.getIntExtra(\"userID\");\n\t\t\tdestroyUserData(userID);\n\t\t}\n\t}\n```"}, {"BodyText": "This application does not check the origin of the intent, thus allowing any malicious application to remove a user. Always check the origin of an intent, or create an allowlist of trusted applications using the manifest.xml file."}]}, {"ID": "DX-109", "Entries": [{"IntroText": "These Android and iOS applications intercept URL loading within a WebView and perform special actions if a particular URL scheme is used, thus allowing the Javascript within the WebView to communicate with the application:"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n```\n// Android* \n\t@Override\n\tpublic boolean shouldOverrideUrlLoading(WebView view, String url){\n\t```\n\t\t\tif (url.substring(0,14).equalsIgnoreCase(\"examplescheme:\")){\n\t\t\t\tif(url.substring(14,25).equalsIgnoreCase(\"getUserInfo\")){\n\t\t\t\t\twriteDataToView(view, UserData);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t}\n```"}, {"Nature": "Bad", "Language": "Objective-C", "ExampleCode": "```\n```\n// iOS* \n\t-(BOOL) webView:(UIWebView *)exWebView shouldStartLoadWithRequest:(NSURLRequest *)exRequest navigationType:(UIWebViewNavigationType)exNavigationType\n\t{\n\t```\n\t\t\tNSURL *URL = [exRequest URL];\n\t\t\tif ([[URL scheme] isEqualToString:@\"exampleScheme\"])\n\t\t\t{\n\t\t\t\t\tNSString *functionString = [URL resourceSpecifier];\n\t\t\t\t\tif ([functionString hasPrefix:@\"specialFunction\"])\n\t\t\t\t\t{\n```\n// Make data available back in webview.* \n\t\t\t\t\t\t\tUIWebView *webView = [self writeDataToView:[URL query]];}\n\t\t\t\t\treturn NO;}\n\t\t\treturn YES;}"}, {"BodyText": "A call into native code can then be initiated by passing parameters within the URL:"}, {"Nature": "Attack", "Language": "JavaScript", "ExampleCode": "```\n\twindow.location = examplescheme://method?parameter=value\n```"}, {"BodyText": "Because the application does not check the source, a malicious website loaded within this WebView has the same access to the API as a trusted site."}]}], "ObservedExamples": [{"Reference": "CVE-2000-1218", "Description": "DNS server can accept DNS updates from hosts that it did not query, leading to cache poisoning", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1218"}, {"Reference": "CVE-2005-0877", "Description": "DNS server can accept DNS updates from hosts that it did not query, leading to cache poisoning", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0877"}, {"Reference": "CVE-2001-1452", "Description": "DNS server caches glue records received from non-delegated name servers", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1452"}, {"Reference": "CVE-2005-2188", "Description": "user ID obtained from untrusted source (URL)", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2188"}, {"Reference": "CVE-2003-0174", "Description": "LDAP service does not verify if a particular attribute was set by the LDAP server", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0174"}, {"Reference": "CVE-1999-1549", "Description": "product does not sufficiently distinguish external HTML from internal, potentially dangerous HTML, allowing bypass using special strings in the page title. Overlaps special elements.", "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1549"}, {"Reference": "CVE-2003-0981", "Description": "product records the reverse DNS name of a visitor in the logs, allowing spoofing and resultant XSS.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0981"}], "RelatedAttackPatterns": ["111", "141", "142", "160", "21", "384", "385", "386", "387", "388", "510", "59", "60", "75", "76", "89"], "MappingNotes": {"Usage": "Allowed-with-Review", "Rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate", "Comments": "Examine children of this entry to see if there is a better fit", "Reasons": ["Abstraction"]}, "Notes": [{"Type": "Maintenance", "Note": "This entry has some significant overlap with other CWE entries and may need some clarification. See terminology notes."}, {"Type": "Terminology", "Note": "The \"Origin Validation Error\" term was originally used in a 1995 thesis [REF-324]. Although not formally defined, an issue is considered to be an origin validation error if either (1) \"an object [accepts] input from an unauthorized subject,\" or (2) \"the system [fails] to properly or completely authenticate a subject.\" A later section says that an origin validation error can occur when the system (1) \"does not properly authenticate a user or process\" or (2) \"does not properly authenticate the shared data or libraries.\" The only example provided in the thesis (covered by OSVDB:57615) involves a setuid program running command-line arguments without dropping privileges. So, this definition (and its examples in the thesis) effectively cover other weaknesses such as CWE-287 (Improper Authentication), CWE-285 (Improper Authorization), and CWE-250 (Execution with Unnecessary Privileges). There appears to be little usage of this term today, except in the SecurityFocus vulnerability database, where the term is used for a variety of issues, including web-browser problems that allow violation of the Same Origin Policy and improper validation of the source of an incoming message."}], "Top25Examples": [{"Reference": "CVE-2022-25146", "Description": "The Remote App module in Liferay Portal Liferay Portal v7.4.3.4 through v7.4.3.8 and Liferay DXP 7.4 before update 5 does not check if the origin of event messages it receives matches the origin of the Remote App, allowing attackers to exfiltrate the CSRF token via a crafted event message."}, {"Reference": "CVE-2022-41924", "Description": "A vulnerability identified in the Tailscale Windows client allows a malicious website to reconfigure the Tailscale daemon `tailscaled`, which can then be used to remotely execute code. In the Tailscale Windows client, the local API was bound to a local TCP socket, and communicated with the Windows client GUI in cleartext with no Host header verification. This allowed an attacker-controlled website visited by the node to rebind DNS to an attacker-controlled DNS server, and then make local API requests in the client, including changing the coordination server to an attacker-controlled coordination server. An attacker-controlled coordination server can send malicious URL responses to the client, including pushing executables or installing an SMB share. These allow the attacker to remotely execute code on the node. All Windows clients prior to version v.1.32.3 are affected. If you are running Tailscale on Windows, upgrade to v1.32.3 or later to remediate the issue."}, {"Reference": "CVE-2022-42975", "Description": "socket/transport.ex in Phoenix before 1.6.14 mishandles check_origin wildcarding. NOTE: LiveView applications are unaffected by default because of the presence of a LiveView CSRF token."}, {"Reference": "CVE-2021-38507", "Description": "The Opportunistic Encryption feature of HTTP2 (RFC 8164) allows a connection to be transparently upgraded to TLS while retaining the visual properties of an HTTP connection, including being same-origin with unencrypted connections on port 80. However, if a second encrypted port on the same IP address (e.g. port 8443) did not opt-in to opportunistic encryption; a network attacker could forward a connection from the browser to port 443 to port 8443, causing the browser to treat the content of port 8443 as same-origin with HTTP. This was resolved by disabling the Opportunistic Encryption feature, which had low usage. This vulnerability affects Firefox < 94, Thunderbird < 91.3, and Firefox ESR < 91.3."}, {"Reference": "CVE-2022-24762", "Description": "sysend.js is a library that allows a user to send messages between pages that are open in the same browser. Users that use cross-origin communication may have their communications intercepted. Impact is limited by the communication occurring in the same browser. This issue has been patched in sysend.js version 1.10.0. The only currently known workaround is to avoid sending communications that a user does not want to have intercepted via sysend messages."}, {"Reference": "CVE-2021-33959", "Description": "Plex media server 1.21 and before is vulnerable to ddos reflection attack via plex service."}]}
{"ID": "347", "Name": "Improper Verification of Cryptographic Signature", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product does not verify, or incorrectly verifies, the cryptographic signature for data.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "345", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "345", "ViewID": "1003", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Access Control", "Integrity", "Confidentiality"], "Impact": ["Gain Privileges or Assume Identity", "Modify Application Data", "Execute Unauthorized Code or Commands"], "Note": "An attacker could gain access to sensitive data and possibly execute unauthorized code."}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "In the following code, a JarFile object is created from a downloaded file."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tFile f = new File(downloadedFilePath);\n\tJarFile jf = new JarFile(f);\n```"}, {"BodyText": "The JAR file that was potentially downloaded from an untrusted source is created without verifying the signature (if present). An alternate constructor that accepts a boolean verify parameter should be used instead."}]}], "ObservedExamples": [{"Reference": "CVE-2002-1796", "Description": "Does not properly verify signatures for \"trusted\" entities.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1796"}, {"Reference": "CVE-2005-2181", "Description": "Insufficient verification allows spoofing.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2181"}, {"Reference": "CVE-2005-2182", "Description": "Insufficient verification allows spoofing.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2182"}, {"Reference": "CVE-2002-1706", "Description": "Accepts a configuration file without a Message Integrity Check (MIC) signature.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1706"}], "RelatedAttackPatterns": ["463", "475"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2021-32977", "Description": "AVEVA System Platform versions 2017 through 2020 R2 P01 does not verify, or incorrectly verifies, the cryptographic signature for data."}, {"Reference": "CVE-2021-35097", "Description": "Possible authentication bypass due to improper order of signature verification and hashing in the signature verification call in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music, Snapdragon Wearables"}, {"Reference": "CVE-2021-35113", "Description": "Possible authentication bypass due to improper order of signature verification and hashing in the signature verification call in Snapdragon Auto, Snapdragon Compute, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Wearables"}, {"Reference": "CVE-2021-36277", "Description": "Dell Command | Update, Dell Update, and Alienware Update versions before 4.3 contains an Improper Verification of Cryptographic Signature Vulnerability. A local authenticated malicious user may exploit this vulnerability by executing arbitrary code on the system."}, {"Reference": "CVE-2021-43074", "Description": "An improper verification of cryptographic signature vulnerability [CWE-347] in FortiWeb 6.4 all versions, 6.3.16 and below, 6.2 all versions, 6.1 all versions, 6.0 all versions; FortiOS 7.0.3 and below, 6.4.8 and below, 6.2 all versions, 6.0 all versions; FortiSwitch 7.0.3 and below, 6.4.10 and below, 6.2 all versions, 6.0 all versions; FortiProxy 7.0.1 and below, 2.0.7 and below, 1.2 all versions, 1.1 all versions, 1.0 all versions may allow an attacker to decrypt portions of the administrative session management cookie if able to intercept the latter."}, {"Reference": "CVE-2022-1739", "Description": "The tested version of Dominion Voting Systems ImageCast X does not validate application signatures to a trusted root certificate. Use of a trusted root certificate ensures software installed on a device is traceable to, or verifiable against, a cryptographic key provided by the manufacturer to detect tampering. An attacker could leverage this vulnerability to install malicious code, which could also be spread to other vulnerable ImageCast X devices via removable media."}, {"Reference": "CVE-2022-20929", "Description": "A vulnerability in the upgrade signature verification of Cisco Enterprise NFV Infrastructure Software (NFVIS) could allow an unauthenticated, local attacker to provide an unauthentic upgrade file for upload. This vulnerability is due to insufficient cryptographic signature verification of upgrade files. An attacker could exploit this vulnerability by providing an administrator with an unauthentic upgrade file. A successful exploit could allow the attacker to fully compromise the Cisco NFVIS system."}, {"Reference": "CVE-2022-23507", "Description": "Tendermint is a high-performance blockchain consensus engine for Byzantine fault tolerant applications. Versions prior to 0.28.0 contain a potential attack via Improper Verification of Cryptographic Signature, affecting anyone using the tendermint-light-client and related packages to perform light client verification (e.g. IBC-rs, Hermes). The light client does not check that the chain IDs of the trusted and untrusted headers match, resulting in a possible attack vector where someone who finds a header from an untrusted chain that satisfies all other verification conditions (e.g. enough overlapping validator signatures) could fool a light client. The attack vector is currently theoretical, and no proof-of-concept exists yet to exploit it on live networks. This issue is patched in version 0.28.0. There are no workarounds."}, {"Reference": "CVE-2022-24759", "Description": "`@chainsafe/libp2p-noise` contains TypeScript implementation of noise protocol, an encryption protocol used in libp2p. `@chainsafe/libp2p-noise` before 4.1.2 and 5.0.3 does not correctly validate signatures during the handshake process. This may allow a man-in-the-middle to pose as other peers and get those peers banned. Users should upgrade to version 4.1.2 or 5.0.3 to receive a patch. There are currently no known workarounds."}, {"Reference": "CVE-2022-25898", "Description": "The package jsrsasign before 10.5.25 are vulnerable to Improper Verification of Cryptographic Signature when JWS or JWT signature with non Base64URL encoding special characters or number escaped characters may be validated as valid by mistake. Workaround: Validate JWS or JWT signature if it has Base64URL and dot safe string before executing JWS.verify() or JWS.verifyJWT() method."}, {"Reference": "CVE-2022-2790", "Description": "Emerson Electric's Proficy Machine Edition Version 9.00 and prior is vulenrable to CWE-347 Improper Verification of Cryptographic Signature, and does not properly verify compiled logic (PDT files) and data blocks data (BLD/BLK files)."}, {"Reference": "CVE-2022-31156", "Description": "Gradle is a build tool. Dependency verification is a security feature in Gradle Build Tool that was introduced to allow validation of external dependencies either through their checksum or cryptographic signatures. In versions 6.2 through 7.4.2, there are some cases in which Gradle may skip that verification and accept a dependency that would otherwise fail the build as an untrusted external artifact. This can occur in two ways. When signature verification is disabled but the verification metadata contains entries for dependencies that only have a `gpg` element but no `checksum` element. When signature verification is enabled, the verification metadata contains entries for dependencies with a `gpg` element but there is no signature file on the remote repository. In both cases, the verification will accept the dependency, skipping signature verification and not complaining that the dependency has no checksum entry. For builds that are vulnerable, there are two risks. Gradle could download a malicious binary from a repository outside your organization due to name squatting. For those still using HTTP only and not HTTPS for downloading dependencies, the build could download a malicious library instead of the expected one. Gradle 7.5 patches this issue by making sure to run checksum verification if signature verification cannot be completed, whatever the reason. Two workarounds are available: Remove all `gpg` elements from dependency verification metadata if you disable signature validation and/or avoid adding `gpg` entries for dependencies that do not have signature files."}, {"Reference": "CVE-2022-31206", "Description": "The Omron SYSMAC Nx product family PLCs (NJ series, NY series, NX series, and PMAC series) through 2022-005-18 lack cryptographic authentication. These PLCs are programmed using the SYMAC Studio engineering software (which compiles IEC 61131-3 conformant POU code to native machine code for execution by the PLC's runtime). The resulting machine code is executed by a runtime, typically controlled by a real-time operating system. The logic that is downloaded to the PLC does not seem to be cryptographically authenticated, allowing an attacker to manipulate transmitted object code to the PLC and execute arbitrary machine code on the processor of the PLC's CPU module in the context of the runtime. In the case of at least the NJ series, an RTOS and hardware combination is used that would potentially allow for memory protection and privilege separation and thus limit the impact of code execution. However, it was not confirmed whether these sufficiently segment the runtime from the rest of the RTOS."}, {"Reference": "CVE-2022-31207", "Description": "The Omron SYSMAC Cx product family PLCs (CS series, CJ series, and CP series) through 2022-05-18 lack cryptographic authentication. They utilize the Omron FINS (9600/TCP) protocol for engineering purposes, including downloading projects and control logic to the PLC. This protocol has authentication flaws as reported in FSCT-2022-0057. Control logic is downloaded to PLC volatile memory using the FINS Program Area Read and Program Area Write commands or to non-volatile memory using other commands from where it can be loaded into volatile memory for execution. The logic that is loaded into and executed from the user program area exists in compiled object code form. Upon execution, these object codes are first passed to a dedicated ASIC that determines whether the object code is to be executed by the ASIC or the microprocessor. In the former case, the object code is interpreted by the ASIC whereas in the latter case the object code is passed to the microprocessor for object code interpretation by a ROM interpreter. In the abnormal case where the object code cannot be handled by either, an abnormal condition is triggered and the PLC is halted. The logic that is downloaded to the PLC does not seem to be cryptographically authenticated, thus allowing an attacker to manipulate transmitted object code to the PLC and either execute arbitrary object code commands on the ASIC or on the microprocessor interpreter."}, {"Reference": "CVE-2022-34459", "Description": " Dell Command | Update, Dell Update, and Alienware Update versions prior to 4.7 contain a improper verification of cryptographic signature in get applicable driver component. A local malicious user could potentially exploit this vulnerability leading to malicious payload execution. "}, {"Reference": "CVE-2022-39237", "Description": "syslabs/sif is the Singularity Image Format (SIF) reference implementation. In versions prior to 2.8.1the `github.com/sylabs/sif/v2/pkg/integrity` package did not verify that the hash algorithm(s) used are cryptographically secure when verifying digital signatures. A patch is available in version >= v2.8.1 of the module. Users are encouraged to upgrade. Users unable to upgrade may independently validate that the hash algorithm(s) used for metadata digest(s) and signature hash are cryptographically secure."}, {"Reference": "CVE-2022-39366", "Description": "DataHub is an open-source metadata platform. Prior to version 0.8.45, the `StatelessTokenService` of the DataHub metadata service (GMS) does not verify the signature of JWT tokens. This allows an attacker to connect to DataHub instances as any user if Metadata Service authentication is enabled. This vulnerability occurs because the `StatelessTokenService` of the Metadata service uses the `parse` method of `io.jsonwebtoken.JwtParser`, which does not perform a verification of the cryptographic token signature. This means that JWTs are accepted regardless of the used algorithm. This issue may lead to an authentication bypass. Version 0.8.45 contains a patch for the issue. There are no known workarounds."}, {"Reference": "CVE-2022-41666", "Description": "A CWE-347: Improper Verification of Cryptographic Signature vulnerability exists that allows adversaries with local user privileges to load a malicious DLL which could lead to execution of malicious code. Affected Products: EcoStruxure Operator Terminal Expert(V3.3 Hotfix 1 or prior), Pro-face BLUE(V3.3 Hotfix1 or prior)."}, {"Reference": "CVE-2022-41669", "Description": "A CWE-347: Improper Verification of Cryptographic Signature vulnerability exists in the SGIUtility component that allows adversaries with local user privileges to load a malicious DLL which could result in execution of malicious code. Affected Products: EcoStruxure Operator Terminal Expert(V3.3 Hotfix 1 or prior), Pro-face BLUE(V3.3 Hotfix1 or prior)."}, {"Reference": "CVE-2021-23993", "Description": "An attacker may perform a DoS attack to prevent a user from sending encrypted email to a correspondent. If an attacker creates a crafted OpenPGP key with a subkey that has an invalid self signature, and the Thunderbird user imports the crafted key, then Thunderbird may try to use the invalid subkey, but the RNP library rejects it from being used, causing encryption to fail. This vulnerability affects Thunderbird < 78.9.1."}, {"Reference": "CVE-2022-23540", "Description": "In versions `<=8.5.1` of `jsonwebtoken` library, lack of algorithm definition in the `jwt.verify()` function can lead to signature validation bypass due to defaulting to the `none` algorithm for signature verification. Users are affected if you do not specify algorithms in the `jwt.verify()` function. This issue has been fixed, please update to version 9.0.0 which removes the default support for the none algorithm in the `jwt.verify()` method. There will be no impact, if you update to version 9.0.0 and you don\u2019t need to allow for the `none` algorithm. If you need 'none' algorithm, you have to explicitly specify that in `jwt.verify()` options. "}, {"Reference": "CVE-2022-42793", "Description": "An issue in code signature validation was addressed with improved checks. This issue is fixed in macOS Big Sur 11.7, macOS Ventura 13, iOS 16, iOS 15.7 and iPadOS 15.7, macOS Monterey 12.6. An app may be able to bypass code signing checks."}]}
{"ID": "348", "Name": "Use of Less Trusted Source", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product has two different sources of the same data or information, but it uses the source that has less support for verification, is less trusted, or is less resistant to attack.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "345", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Bypass Protection Mechanism", "Gain Privileges or Assume Identity"], "Note": "An attacker could utilize the untrusted data source to bypass protection mechanisms and gain access to sensitive data."}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "This code attempts to limit the access of a page to certain IP Addresses. It checks the 'HTTP_X_FORWARDED_FOR' header in case an authorized user is sending the request through a proxy."}, {"Nature": "Bad", "Language": "PHP", "ExampleCode": "```\n\t$requestingIP = '0.0.0.0';\n\tif (array_key_exists('HTTP_X_FORWARDED_FOR', $_SERVER)) {\n\t\t$requestingIP = $_SERVER['HTTP_X_FORWARDED_FOR'];\n\telse{\n\t\t$requestingIP = $_SERVER['REMOTE_ADDR'];\n\t}\n\tif(in_array($requestingIP,$ipAllowlist)){\n\t\tgeneratePage();\n\t\treturn;\n\t}\n\telse{\n\t\techo \"You are not authorized to view this page\";\n\t\treturn;\n\t}\n```"}, {"BodyText": "The 'HTTP_X_FORWARDED_FOR' header can be user controlled and so should never be trusted. An attacker can falsify the header to gain access to the page."}, {"BodyText": "This fixed code only trusts the 'REMOTE_ADDR' header and so avoids the issue:"}, {"Nature": "Good", "Language": "PHP", "ExampleCode": "```\n\t$requestingIP = '0.0.0.0';\n\tif (array_key_exists('HTTP_X_FORWARDED_FOR', $_SERVER)) {\n\t\techo \"This application cannot be accessed through a proxy.\";\n\t\treturn;\n\telse{\n\t\t$requestingIP = $_SERVER['REMOTE_ADDR'];\n\t}\n```\n...*"}, {"BodyText": "Be aware that 'REMOTE_ADDR' can still be spoofed. This may seem useless because the server will send the response to the fake address and not the attacker, but this may still be enough to conduct an attack. For example, if the generatePage() function in this code is resource intensive, an attacker could flood the server with fake requests using an authorized IP and consume significant resources. This could be a serious DoS attack even though the attacker would never see the page's sensitive content."}]}], "ObservedExamples": [{"Reference": "CVE-2001-0860", "Description": "Product uses IP address provided by a client, instead of obtaining it from the packet headers, allowing easier spoofing.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0860"}, {"Reference": "CVE-2004-1950", "Description": "Web product uses the IP address in the X-Forwarded-For HTTP header instead of a server variable that uses the connecting IP address, allowing filter bypass.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1950"}, {"Reference": "CVE-2001-0908", "Description": "Product logs IP address specified by the client instead of obtaining it from the packet headers, allowing information hiding.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0908"}, {"Reference": "CVE-2006-1126", "Description": "PHP application uses IP address from X-Forwarded-For HTTP header, instead of REMOTE_ADDR.", "Link": "https://www.cve.org/CVERecord?id=CVE-2006-1126"}], "RelatedAttackPatterns": ["141", "142", "73", "76", "85"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}}
{"ID": "349", "Name": "Acceptance of Extraneous Untrusted Data With Trusted Data", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product, when processing trusted data, accepts any untrusted data that is also included with the trusted data, treating the untrusted data as if it were trusted.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "345", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Access Control", "Integrity"], "Impact": ["Bypass Protection Mechanism", "Modify Application Data"], "Note": "An attacker could package untrusted data with trusted data to bypass protection mechanisms to gain access to and possibly modify sensitive data."}], "ObservedExamples": [{"Reference": "CVE-2002-0018", "Description": "Does not verify that trusted entity is authoritative for all entities in its response.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0018"}, {"Reference": "CVE-2006-5462", "Description": "use of extra data in a signature allows certificate signature forging", "Link": "https://www.cve.org/CVERecord?id=CVE-2006-5462"}], "RelatedAttackPatterns": ["141", "142", "75"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}}
{"ID": "35", "Name": "Path Traversal: '.../...//'", "Abstraction": "Variant", "Structure": "Simple", "Status": "Incomplete", "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '.../...//' (doubled triple dot slash) sequences that can resolve to a location that is outside of that directory.", "ExtendedDescription": "\n\nThis allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.\n\n\nThe '.../...//' manipulation is useful for bypassing some path traversal protection schemes. If \"../\" is filtered in a sequential fashion, as done by some regular expression engines, then \".../...//\" can collapse into the \"../\" unsafe value (CWE-182). Removing the first \"../\" yields \"....//\"; the second removal yields \"../\". Depending on the algorithm, the product could be susceptible to CWE-34 but not CWE-35, or vice versa.\n", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "23", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Confidentiality", "Integrity"], "Impact": ["Read Files or Directories", "Modify Files or Directories"]}], "PotentialMitigations": [{"MitigationID": "MIT-5.1", "Phase": ["Implementation"], "Strategy": "Input Validation", "Description": "\n\nAssume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.\n\n\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"\n\n\nDo not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.\n\n\nWhen validating filenames, use stringent allowlists that limit the character set to be used. If feasible, only allow a single \".\" character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as \"/\" to avoid CWE-36. Use a list of allowable file extensions, which will help to avoid CWE-434.\n\n\nDo not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a denylist, which may be incomplete (CWE-184). For example, filtering \"/\" is insufficient protection if the filesystem also supports the use of \"\\\" as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if \"../\" sequences are removed from the \".../...//\" string in a sequential fashion, two instances of \"../\" would be removed from the original string, but the remaining characters would still form the \"../\" string.\n", "Effectiveness": "High"}, {"MitigationID": "MIT-20", "Phase": ["Implementation"], "Strategy": "Input Validation", "Description": "Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked."}], "ObservedExamples": [{"Reference": "CVE-2005-2169", "Description": "chain: \".../...//\" bypasses protection mechanism using regexp's that remove \"../\" resulting in collapse into an unsafe value \"../\" (CWE-182) and resultant path traversal.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2169"}, {"Reference": "CVE-2005-0202", "Description": "\".../....///\" bypasses regexp's that remove \"./\" and \"../\"", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0202"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2022-24774", "Description": "CycloneDX BOM Repository Server is a bill of materials (BOM) repository server for distributing CycloneDX BOMs. CycloneDX BOM Repository Server before version 2.0.1 has an improper input validation vulnerability leading to path traversal. A malicious user may potentially exploit this vulnerability to create arbitrary directories or a denial of service by deleting arbitrary directories. The vulnerability is resolved in version 2.0.1. The vulnerability is not exploitable with the default configuration with the post and delete methods disabled. This can be configured by modifying the `appsettings.json` file, or alternatively, setting the environment variables `ALLOWEDMETHODS__POST` and `ALLOWEDMETHODS__DELETE` to `false`."}]}
{"ID": "350", "Name": "Reliance on Reverse DNS Resolution for a Security-Critical Action", "Abstraction": "Variant", "Structure": "Simple", "Status": "Draft", "Description": "The product performs reverse DNS resolution on an IP address to obtain the hostname and make a security decision, but it does not properly ensure that the IP address is truly associated with the hostname.", "ExtendedDescription": "\n\nSince DNS names can be easily spoofed or misreported, and it may be difficult for the product to detect if a trusted DNS server has been compromised, DNS names do not constitute a valid authentication mechanism.\n\n\nWhen the product performs a reverse DNS resolution for an IP address, if an attacker controls the DNS server for that IP address, then the attacker can cause the server to return an arbitrary hostname. As a result, the attacker may be able to bypass authentication, cause the wrong hostname to be recorded in log files to hide activities, or perform other attacks.\n\n\nAttackers can spoof DNS names by either (1) compromising a DNS server and modifying its records (sometimes called DNS cache poisoning), or (2) having legitimate control over a DNS server associated with their IP address.\n", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "290", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "807", "ViewID": "1000"}, {"Nature": "CanPrecede", "CweID": "923", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Gain Privileges or Assume Identity", "Bypass Protection Mechanism"], "Note": "Malicious users can fake authentication information by providing false DNS information."}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "Use other means of identity verification that cannot be simply spoofed. Possibilities include a username/password or certificate."}, {"MitigationID": "MIT-42", "Phase": ["Implementation"], "Description": "Perform proper forward and reverse DNS lookups to detect DNS spoofing."}], "DemonstrativeExamples": [{"ID": "DX-93", "Entries": [{"IntroText": "The following code samples use a DNS lookup in order to decide whether or not an inbound request is from a trusted host. If an attacker can poison the DNS cache, they can gain trusted status."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tstruct hostent *hp;struct in_addr myaddr;\n\tchar* tHost = \"trustme.example.com\";\n\tmyaddr.s_addr=inet_addr(ip_addr_string);\n\thp = gethostbyaddr((char *) &myaddr, sizeof(struct in_addr), AF_INET);\n\tif (hp && !strncmp(hp->h_name, tHost, sizeof(tHost))) {\n\t\ttrusted = true;\n\t} else {\n\t\ttrusted = false;\n\t}\n```"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tString ip = request.getRemoteAddr();\n\tInetAddress addr = InetAddress.getByName(ip);\n\tif (addr.getCanonicalHostName().endsWith(\"trustme.com\")) {\n\t\ttrusted = true;\n\t}\n```"}, {"Nature": "Bad", "Language": "C#", "ExampleCode": "```\n\tIPAddress hostIPAddress = IPAddress.Parse(RemoteIpAddress);\n\tIPHostEntry hostInfo = Dns.GetHostByAddress(hostIPAddress);\n\tif (hostInfo.HostName.EndsWith(\"trustme.com\")) {\n\t\ttrusted = true;\n\t}\n```"}, {"BodyText": "IP addresses are more reliable than DNS names, but they can also be spoofed. Attackers can easily forge the source IP address of the packets they send, but response packets will return to the forged IP address. To see the response packets, the attacker has to sniff the traffic between the victim machine and the forged IP address. In order to accomplish the required sniffing, attackers typically attempt to locate themselves on the same subnet as the victim machine. Attackers may be able to circumvent this requirement by using source routing, but source routing is disabled across much of the Internet today. In summary, IP address verification can be a useful part of an authentication scheme, but it should not be the single factor required for authentication."}]}, {"Entries": [{"IntroText": "In these examples, a connection is established if a request is made by a trusted host."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tsd = socket(AF_INET, SOCK_DGRAM, 0);\n\tserv.sin_family = AF_INET;\n\tserv.sin_addr.s_addr = htonl(INADDR_ANY);\n\tservr.sin_port = htons(1008);\n\tbind(sd, (struct sockaddr *) & serv, sizeof(serv));\n\twhile (1) {\n\t\t\tmemset(msg, 0x0, MAX_MSG);\n\t\t\tclilen = sizeof(cli);\n\t\t\th=gethostbyname(inet_ntoa(cliAddr.sin_addr));\n\t\t\tif (h->h_name==...) n = recvfrom(sd, msg, MAX_MSG, 0, (struct sockaddr *) & cli, &clilen);\n\t}\n```"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\twhile(true) {\n\t\t\tDatagramPacket rp=new DatagramPacket(rData,rData.length);\n\t\t\toutSock.receive(rp);\n\t\t\tString in = new String(p.getData(),0, rp.getLength());\n\t\t\tInetAddress IPAddress = rp.getAddress();\n\t\t\tint port = rp.getPort();\n\t\t\tif ((rp.getHostName()==...) & (in==...)) {\n\t\t\t\t\tout = secret.getBytes();\n\t\t\t\t\tDatagramPacket sp =new DatagramPacket(out,out.length, IPAddress, port);\n\t\t\t\t\toutSock.send(sp);\n\t\t\t}\n\t}\n```"}, {"BodyText": "These examples check if a request is from a trusted host before responding to a request, but the code only verifies the hostname as stored in the request packet. An attacker can spoof the hostname, thus impersonating a trusted client."}]}], "ObservedExamples": [{"Reference": "CVE-2001-1488", "Description": "Does not do double-reverse lookup to prevent DNS spoofing.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1488"}, {"Reference": "CVE-2001-1500", "Description": "Does not verify reverse-resolved hostnames in DNS.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1500"}, {"Reference": "CVE-2000-1221", "Description": "Authentication bypass using spoofed reverse-resolved DNS hostnames.", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-1221"}, {"Reference": "CVE-2002-0804", "Description": "Authentication bypass using spoofed reverse-resolved DNS hostnames.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0804"}, {"Reference": "CVE-2001-1155", "Description": "Filter does not properly check the result of a reverse DNS lookup, which could allow remote attackers to bypass intended access restrictions via DNS spoofing.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1155"}, {"Reference": "CVE-2004-0892", "Description": "Reverse DNS lookup used to spoof trusted content in intermediary.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0892"}, {"Reference": "CVE-2003-0981", "Description": "Product records the reverse DNS name of a visitor in the logs, allowing spoofing and resultant XSS.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0981"}], "RelatedAttackPatterns": ["142", "275", "73", "89"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "CWE-350, CWE-247, and CWE-292 were merged into CWE-350 in CWE 2.5. CWE-247 was originally derived from Seven Pernicious Kingdoms, CWE-350 from PLOVER, and CWE-292 from CLASP. All taxonomies focused closely on the use of reverse DNS for authentication of incoming requests."}]}
{"ID": "351", "Name": "Insufficient Type Distinction", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product does not properly distinguish between different types of elements in a way that leads to insecure behavior.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "345", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "PeerOf", "CweID": "436", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Other"], "Impact": ["Other"]}], "ObservedExamples": [{"Reference": "CVE-2005-2260", "Description": "Browser user interface does not distinguish between user-initiated and synthetic events.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2260"}, {"Reference": "CVE-2005-2801", "Description": "Product does not compare all required data in two separate elements, causing it to think they are the same, leading to loss of ACLs. Similar to Same Name error.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2801"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Relationship", "Note": "Overlaps others, e.g. Multiple Interpretation Errors."}]}
{"ID": "352", "Name": "Cross-Site Request Forgery (CSRF)", "Abstraction": "Compound", "Structure": "Composite", "Status": "Stable", "Description": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.", "ExtendedDescription": "When a web server is designed to receive a request from a client without any mechanism for verifying that it was intentionally sent, then it might be possible for an attacker to trick a client into making an unintentional request to the web server which will be treated as an authentic request. This can be done via a URL, image load, XMLHttpRequest, etc. and can result in exposure of data or unintended code execution.", "LikelihoodOfExploit": "Medium", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "345", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "345", "ViewID": "1003", "Ordinal": "Primary"}, {"Nature": "Requires", "CweID": "346", "ViewID": "1000"}, {"Nature": "Requires", "CweID": "441", "ViewID": "1000"}, {"Nature": "Requires", "CweID": "642", "ViewID": "1000"}, {"Nature": "Requires", "CweID": "613", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Technology", "Name": "Web Server", "Prevalence": "Undetermined"}], "AlternateTerms": [{"Term": "Session Riding"}, {"Term": "Cross Site Reference Forgery"}, {"Term": "XSRF"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Confidentiality", "Integrity", "Availability", "Non-Repudiation", "Access Control"], "Impact": ["Gain Privileges or Assume Identity", "Bypass Protection Mechanism", "Read Application Data", "Modify Application Data", "DoS: Crash, Exit, or Restart"], "Note": "The consequences will vary depending on the nature of the functionality that is vulnerable to CSRF. An attacker could effectively perform any operations as the victim. If the victim is an administrator or privileged user, the consequences may include obtaining complete control over the web application - deleting or stealing data, uninstalling the product, or using it to launch other attacks against all of the product's users. Because the attacker has the identity of the victim, the scope of CSRF is limited only by the victim's privileges."}], "DetectionMethods": [{"DetectionMethodID": "DM-7", "Method": "Manual Analysis", "Description": "\n\nThis weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.\n\n\nSpecifically, manual analysis can be useful for finding this weakness, and for minimizing false positives assuming an understanding of business logic. However, it might not achieve desired code coverage within limited time constraints. For black-box analysis, if credentials are not known for privileged accounts, then the most security-critical portions of the application may not receive sufficient attention.\n\n\nConsider using OWASP CSRFTester to identify potential issues and aid in manual analysis.\n", "Effectiveness": "High", "EffectivenessNotes": "These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules."}, {"Method": "Automated Static Analysis", "Description": "CSRF is currently difficult to detect reliably using automated techniques. This is because each application has its own implicit security policy that dictates which requests can be influenced by an outsider and automatically performed on behalf of a user, versus which requests require strong confidence that the user intends to make the request. For example, a keyword search of the public portion of a web site is typically expected to be encoded within a link that can be launched automatically when the user clicks on the link.", "Effectiveness": "Limited"}, {"Method": "Automated Static Analysis - Binary or Bytecode", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tBytecode Weakness Analysis - including disassembler + source code weakness analysis\n\t\tBinary Weakness Analysis - including disassembler + source code weakness analysis", "Effectiveness": "SOAR Partial"}, {"Method": "Manual Static Analysis - Binary or Bytecode", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tBinary / Bytecode disassembler - then use manual analysis for vulnerabilities & anomalies", "Effectiveness": "SOAR Partial"}, {"Method": "Dynamic Analysis with Automated Results Interpretation", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tWeb Application Scanner", "Effectiveness": "High"}, {"Method": "Dynamic Analysis with Manual Results Interpretation", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tFuzz Tester\n\t\tFramework-based Fuzzer", "Effectiveness": "High"}, {"Method": "Manual Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tFocused Manual Spotcheck - Focused manual analysis of source\n\t\tManual Source Code Review (not inspections)", "Effectiveness": "SOAR Partial"}, {"Method": "Automated Static Analysis - Source Code", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tSource code Weakness Analyzer\n\t\tContext-configured Source Code Weakness Analyzer", "Effectiveness": "SOAR Partial"}, {"Method": "Architecture or Design Review", "Description": "\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tInspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.)\n\t\tFormal Methods / Correct-By-Construction", "Effectiveness": "SOAR Partial"}], "PotentialMitigations": [{"MitigationID": "MIT-4", "Phase": ["Architecture and Design"], "Strategy": "Libraries or Frameworks", "Description": "\n\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\n\n\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard. [REF-330]\n\n\nAnother example is the ESAPI Session Management control, which includes a component for CSRF. [REF-45]\n"}, {"Phase": ["Implementation"], "Description": "Ensure that the application is free of cross-site scripting issues (CWE-79), because most CSRF defenses can be bypassed using attacker-controlled script."}, {"Phase": ["Architecture and Design"], "Description": "Generate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330). [REF-332]", "EffectivenessNotes": "Note that this can be bypassed using XSS (CWE-79)."}, {"Phase": ["Architecture and Design"], "Description": "Identify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.", "EffectivenessNotes": "Note that this can be bypassed using XSS (CWE-79)."}, {"Phase": ["Architecture and Design"], "Description": "\n\nUse the \"double-submitted cookie\" method as described by Felten and Zeller:\n\n\nWhen a user visits a site, the site should generate a pseudorandom value and set it as a cookie on the user's machine. The site should require every form submission to include this value as a form value and also as a cookie value. When a POST request is sent to the site, the request should only be considered valid if the form value and the cookie value are the same.\n\n\nBecause of the same-origin policy, an attacker cannot read or modify the value stored in the cookie. To successfully submit a form on behalf of the user, the attacker would have to correctly guess the pseudorandom value. If the pseudorandom value is cryptographically strong, this will be prohibitively difficult.\n\n\nThis technique requires Javascript, so it may not work for browsers that have Javascript disabled. [REF-331]\n", "EffectivenessNotes": "Note that this can probably be bypassed using XSS (CWE-79), or when using web technologies that enable the attacker to read raw headers from HTTP requests."}, {"Phase": ["Architecture and Design"], "Description": "Do not use the GET method for any request that triggers a state change."}, {"Phase": ["Implementation"], "Description": "Check the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.", "EffectivenessNotes": "Note that this can be bypassed using XSS (CWE-79). An attacker could use XSS to generate a spoofed Referer, or to generate a malicious request from a page whose Referer would be allowed."}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "This example PHP code attempts to secure the form submission process by validating that the user submitting the form has a valid session. A CSRF attack would not be prevented by this countermeasure because the attacker forges a request through the user's web browser in which a valid session already exists."}, {"BodyText": "The following HTML is intended to allow a user to update a profile."}, {"Nature": "Bad", "Language": "HTML", "ExampleCode": "```\n\t<form action=\"/url/profile.php\" method=\"post\">\n\t<input type=\"text\" name=\"firstname\"/>\n\t<input type=\"text\" name=\"lastname\"/>\n\t<br/>\n\t<input type=\"text\" name=\"email\"/>\n\t<input type=\"submit\" name=\"submit\" value=\"Update\"/>\n\t</form>\n```"}, {"BodyText": "profile.php contains the following code."}, {"Nature": "Bad", "Language": "PHP", "ExampleCode": "```\n\t// initiate the session in order to validate sessions\n\tsession_start();\n```\n//if the session is registered to a valid user then allow update* \n\t\n\tif (! session_is_registered(\"username\")) {\n\t```\n\t\t\techo \"invalid session detected!\";\n```\n// Redirect user to login page* \n\t\t\t[...]\n\t\t\t\n\t\t\texit;}\n\t\n\t\n\t *// The user session is valid, so process the request* \n\t\n\t\n\t *// and update the information* \n\t\n\tupdate_profile();\n\t\n\tfunction update_profile {\n\t```\n```\n// read in the data from $POST and send an update* \n\t\t\t\n\t\t\t\n\t\t\t *// to the database* \n\t\t\tSendUpdateToDatabase($_SESSION['username'], $_POST['email']);\n\t\t\t[...]\n\t\t\techo \"Your profile has been successfully updated.\";}"}, {"BodyText": "This code may look protected since it checks for a valid session. However, CSRF attacks can be staged from virtually any tag or HTML construct, including image tags, links, embed or object tags, or other attributes that load background images."}, {"BodyText": "The attacker can then host code that will silently change the username and email address of any user that visits the page while remaining logged in to the target web application. The code might be an innocent-looking web page such as:"}, {"Nature": "Attack", "Language": "HTML", "ExampleCode": "```\n\t<SCRIPT>\n\tfunction SendAttack () {\n\t\tform.email = \"attacker@example.com\";\n```\n// send to profile.php* \n\t\tform.submit();}\n\t</SCRIPT>\n\t\n\t<BODY onload=\"javascript:SendAttack();\">\n\t\n\t<form action=\"http://victim.example.com/profile.php\" id=\"form\" method=\"post\">\n\t<input type=\"hidden\" name=\"firstname\" value=\"Funny\">\n\t<input type=\"hidden\" name=\"lastname\" value=\"Joke\">\n\t<br/>\n\t<input type=\"hidden\" name=\"email\">\n\t</form>"}, {"BodyText": "Notice how the form contains hidden fields, so when it is loaded into the browser, the user will not notice it. Because SendAttack() is defined in the body's onload attribute, it will be automatically called when the victim loads the web page."}, {"BodyText": "Assuming that the user is already logged in to victim.example.com, profile.php will see that a valid user session has been established, then update the email address to the attacker's own address. At this stage, the user's identity has been compromised, and messages sent through this profile could be sent to the attacker's address."}]}], "ObservedExamples": [{"Reference": "CVE-2004-1703", "Description": "Add user accounts via a URL in an img tag", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1703"}, {"Reference": "CVE-2004-1995", "Description": "Add user accounts via a URL in an img tag", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1995"}, {"Reference": "CVE-2004-1967", "Description": "Arbitrary code execution by specifying the code in a crafted img tag or URL", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1967"}, {"Reference": "CVE-2004-1842", "Description": "Gain administrative privileges via a URL in an img tag", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-1842"}, {"Reference": "CVE-2005-1947", "Description": "Delete a victim's information via a URL or an img tag", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1947"}, {"Reference": "CVE-2005-2059", "Description": "Change another user's settings via a URL or an img tag", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2059"}, {"Reference": "CVE-2005-1674", "Description": "Perform actions as administrator via a URL or an img tag", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-1674"}, {"Reference": "CVE-2009-3520", "Description": "modify password for the administrator", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3520"}, {"Reference": "CVE-2009-3022", "Description": "CMS allows modification of configuration via CSRF attack against the administrator", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3022"}, {"Reference": "CVE-2009-3759", "Description": "web interface allows password changes or stopping a virtual machine via CSRF", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3759"}], "RelatedAttackPatterns": ["111", "462", "467", "62"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.", "Comments": "While attack-oriented composites are supported in CWE, they have not been a focus of research. There is a chance that future research or CWE scope clarifications will change or deprecate them. Perform root-cause analysis to determine if other weaknesses allow CSRF attacks to occur, and map to those weaknesses. For example, predictable CSRF tokens might allow bypass of CSRF protection mechanisms; if this occurs, they might be better characterized as randomness/predictability weaknesses.", "Reasons": ["Other"]}, "Notes": [{"Type": "Relationship", "Note": "\n\nThere can be a close relationship between XSS and CSRF (CWE-352). An attacker might use CSRF in order to trick the victim into submitting requests to the server in which the requests contain an XSS payload. A well-known example of this was the Samy worm on MySpace [REF-956]. The worm used XSS to insert malicious HTML sequences into a user's profile and add the attacker as a MySpace friend. MySpace friends of that victim would then execute the payload to modify their own profiles, causing the worm to propagate exponentially. Since the victims did not intentionally insert the malicious script themselves, CSRF was a root cause.\n"}, {"Type": "Theoretical", "Note": "\n\nThe CSRF topology is multi-channel:\n\n\n  - Attacker (as outsider) to intermediary (as user). The interaction point is either an external or internal channel.\n\n  - Intermediary (as user) to server (as victim). The activation point is an internal channel.\n\n"}], "Top25Examples": [{"Reference": "CVE-2021-24410", "Description": "The ?????? ?????? ??????? WordPress plugin through 1.0 is lacking any CSRF check when saving its settings and verses, and do not sanitise or escape them when outputting them back in the page. This could allow attackers to make a logged in admin change the settings, as well as add malicious verses containing JavaScript code in them, leading to Stored XSS issues"}, {"Reference": "CVE-2021-25326", "Description": "Skyworth Digital Technology RN510 V.3.1.0.4 is affected by an incorrect access control vulnerability in/cgi-bin/test_version.asp. If Wi-Fi is connected but an unauthenticated user visits a URL, the SSID password and web UI password may be disclosed."}, {"Reference": "CVE-2022-0423", "Description": "The 3D FlipBook WordPress plugin before 1.12.1 does not have authorisation and CSRF checks when updating its settings, and does not have any sanitisation/escaping, allowing any authenticated users, such as subscriber to put Cross-Site Scripting payloads in all pages with a 3d flipbook."}, {"Reference": "CVE-2022-0439", "Description": "The Email Subscribers & Newsletters WordPress plugin before 5.3.2 does not correctly escape the `order` and `orderby` parameters to the `ajax_fetch_report_list` action, making it vulnerable to blind SQL injection attacks by users with roles as low as Subscriber. Further, it does not have any CSRF protection in place for the action, allowing an attacker to trick any logged in user to perform the action by clicking a link."}, {"Reference": "CVE-2022-0450", "Description": "The Menu Image, Icons made easy WordPress plugin before 3.0.6 does not have authorisation and CSRF checks when saving menu settings, and does not validate, sanitise and escape them. As a result, any authenticate users, such as subscriber can update the settings or arbitrary menu and put Cross-Site Scripting payloads in them which will be triggered in the related menu in the frontend"}, {"Reference": "CVE-2022-0642", "Description": "The JivoChat Live Chat WordPress plugin before 1.3.5.4 does not properly check CSRF tokens on POST requests to the plugins admin page, and does not sanitise some parameters, leading to a stored Cross-Site Scripting vulnerability where an attacker can trick a logged in administrator to inject arbitrary javascript."}, {"Reference": "CVE-2022-0780", "Description": "The SearchIQ WordPress plugin before 3.9 contains a flag to disable the verification of CSRF nonces, granting unauthenticated attackers access to the siq_ajax AJAX action and allowing them to perform Cross-Site Scripting attacks due to the lack of sanitisation and escaping in the customCss parameter"}, {"Reference": "CVE-2022-0818", "Description": "The WooCommerce Affiliate Plugin WordPress plugin before 4.16.4.5 does not have authorization and CSRF checks on a specific action handler, as well as does not sanitize its settings, which enables an unauthenticated attacker to inject malicious XSS payloads into the settings page of the plugin."}, {"Reference": "CVE-2022-0830", "Description": "The FormBuilder WordPress plugin through 1.08 does not have CSRF checks in place when creating/updating and deleting forms, and does not sanitise as well as escape its form field values. As a result, attackers could make logged in admin update and delete arbitrary forms via a CSRF attack, and put Cross-Site Scripting payloads in them."}, {"Reference": "CVE-2022-0875", "Description": "The Google Authenticator WordPress plugin before 1.0.5 does not have CSRF check when saving its settings, and does not sanitise as well as escape them, allowing attackers to make a logged in admin change them and perform Cross-Site Scripting attacks"}, {"Reference": "CVE-2022-1407", "Description": "The VikBooking Hotel Booking Engine & PMS WordPress plugin before 1.5.8 does not have CSRF check in place when adding a tracking campaign, and does not escape the campaign fields when outputting them In attributes. As a result, attackers could make a logged in admin add tracking campaign with XSS payloads in them via a CSRF attack"}, {"Reference": "CVE-2022-1557", "Description": "The ULeak Security & Monitoring WordPress plugin through 1.2.3 does not have authorisation and CSRF checks when updating its settings, and is also lacking sanitisation as well as escaping in some of them, which could allow any authenticated users such as subscriber to perform Stored Cross-Site Scripting attacks against admins viewing the settings"}, {"Reference": "CVE-2022-1578", "Description": "The My wpdb WordPress plugin before 2.5 is missing CSRF check when running SQL queries, which could allow attacker to make a logged in admin run arbitrary SQL query via a CSRF attack"}, {"Reference": "CVE-2022-1593", "Description": "The Site Offline or Coming Soon WordPress plugin through 1.6.6 does not have CSRF check in place when updating its settings, and it also lacking sanitisation as well as escaping in some of them. As a result, attackers could make a logged in admin change them and put Cross-Site Scripting payloads in them via a CSRF attack"}, {"Reference": "CVE-2022-1626", "Description": "The Sharebar WordPress plugin through 1.4.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and also lead to Stored Cross-Site Scripting issue due to the lack of sanitisation and escaping in some of them"}, {"Reference": "CVE-2022-1758", "Description": "The Genki Pre-Publish Reminder WordPress plugin through 1.4.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored XSS as well as RCE when custom code is added via the plugin settings."}, {"Reference": "CVE-2022-1763", "Description": "Due to missing checks the Static Page eXtended WordPress plugin through 2.1 is vulnerable to CSRF attacks which allows changing the plugin settings, including required user levels for specific features. This could also lead to Stored Cross-Site Scripting due to the lack of escaping in some of the settings"}, {"Reference": "CVE-2022-1764", "Description": "The WP-chgFontSize WordPress plugin through 1.8 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping"}, {"Reference": "CVE-2022-1780", "Description": "The LaTeX for WordPress plugin through 3.4.10 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack which could also lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping"}, {"Reference": "CVE-2022-1781", "Description": "The postTabs WordPress plugin through 2.10.6 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack, which also lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping"}, {"Reference": "CVE-2022-1787", "Description": "The Sideblog WordPress plugin through 6.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping"}, {"Reference": "CVE-2022-1792", "Description": "The Quick Subscribe WordPress plugin through 1.7.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and leading to Stored XSS due to the lack of sanitisation and escaping in some of them"}, {"Reference": "CVE-2022-1818", "Description": "The Multi-page Toolkit WordPress plugin through 2.6 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping as well"}, {"Reference": "CVE-2022-1829", "Description": "The Inline Google Maps WordPress plugin through 5.11 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack, and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping"}, {"Reference": "CVE-2022-1830", "Description": "The Amazon Einzeltitellinks WordPress plugin through 1.3.3 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping"}, {"Reference": "CVE-2022-1842", "Description": "The OpenBook Book Data WordPress plugin through 3.5.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping as well"}, {"Reference": "CVE-2022-1844", "Description": "The WP Sentry WordPress plugin through 1.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping as well"}, {"Reference": "CVE-2022-1913", "Description": "The Add Post URL WordPress plugin through 2.1.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping"}, {"Reference": "CVE-2022-1914", "Description": "The Clean-Contact WordPress plugin through 1.6 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored XSS due to the lack of sanitisation and escaping as well"}, {"Reference": "CVE-2022-2071", "Description": "The Name Directory WordPress plugin before 1.25.4 does not have CSRF check when importing names, and is also lacking sanitisation as well as escaping in some of the imported data, which could allow attackers to make a logged in admin import arbitrary names with XSS payloads in them."}, {"Reference": "CVE-2022-2146", "Description": "The Import CSV Files WordPress plugin through 1.0 does not sanitise and escaped imported data before outputting them back in a page, and is lacking CSRF check when performing such action as well, resulting in a Reflected Cross-Site Scripting"}, {"Reference": "CVE-2022-2171", "Description": "The Progressive License WordPress plugin through 1.1.0 is lacking any CSRF check when saving its settings, which could allow attackers to make a logged in admin change them. Furthermore, as the plugin allows arbitrary HTML to be inserted in one of the settings, this could lead to Stored XSS issue which will be triggered in the frontend as well."}, {"Reference": "CVE-2022-2241", "Description": "The Featured Image from URL (FIFU) WordPress plugin before 4.0.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack. Furthermore, due to the lack of validation, sanitisation and escaping in some of them, it could also lead to Stored XSS issues"}, {"Reference": "CVE-2022-22734", "Description": "The Simple Quotation WordPress plugin through 1.3.2 does not have CSRF check when creating or editing a quote and does not sanitise and escape Quotes. As a result, attacker could make a logged in admin create or edit arbitrary quote, and put Cross-Site Scripting payloads in them"}, {"Reference": "CVE-2022-22735", "Description": "The Simple Quotation WordPress plugin through 1.3.2 does not have authorisation (and CSRF) checks in various of its AJAX actions and is lacking escaping of user data when using it in SQL statements, allowing any authenticated users, such as subscriber to perform SQL injection attacks"}, {"Reference": "CVE-2022-2312", "Description": "The Student Result or Employee Database WordPress plugin before 1.7.5 does not have CSRF in its AJAX actions, allowing attackers to make logged in user with a role as low as contributor to add/edit and delete students via CSRF attacks. Furthermore, due to the lack of sanitisation and escaping, it could also lead to Stored Cross-Site scripting"}, {"Reference": "CVE-2022-2353", "Description": "Prior to microweber/microweber v1.2.20, due to improper neutralization of input, an attacker can steal tokens to perform cross-site request forgery, fetch contents from same-site and redirect a user."}, {"Reference": "CVE-2022-2540", "Description": "The Link Optimizer Lite plugin for WordPress is vulnerable to Cross-Site Request Forgery to Cross-Site Scripting in versions up to, and including 1.4.5. This is due to missing nonce validation on the admin_page function found in the ~/admin.php file. This makes it possible for unauthenticated attackers to modify the plugin's settings and inject malicious web scripts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link."}, {"Reference": "CVE-2022-2541", "Description": "The uContext for Amazon plugin for WordPress is vulnerable to Cross-Site Request Forgery to Cross-Site Scripting in versions up to, and including 3.9.1. This is due to missing nonce validation in the ~/app/sites/ajax/actions/keyword_save.php file that is called via the doAjax() function. This makes it possible for unauthenticated attackers to modify the plugin's settings and inject malicious web scripts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link."}, {"Reference": "CVE-2022-2542", "Description": "The uContext for Clickbank plugin for WordPress is vulnerable to Cross-Site Request Forgery to Cross-Site Scripting in versions up to, and including 3.9.1. This is due to missing nonce validation in the ~/app/sites/ajax/actions/keyword_save.php file that is called via the doAjax() function. This makes it possible for unauthenticated attackers to modify the plugin's settings and inject malicious web scripts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link."}, {"Reference": "CVE-2022-2846", "Description": "The Calendar Event Multi View WordPress plugin before 1.4.07 does not have any authorisation and CSRF checks in place when creating an event, and is also lacking sanitisation as well as escaping in some of the event fields. This could allow unauthenticated attackers to create arbitrary events and put Cross-Site Scripting payloads in it."}, {"Reference": "CVE-2022-3024", "Description": "The Simple Bitcoin Faucets WordPress plugin through 1.7.0 does not have any authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscribers to call it and add/delete/edit Bonds. Furthermore, due to the lack of sanitisation and escaping, it could also lead to Stored Cross-Site Scripting issues"}, {"Reference": "CVE-2022-3568", "Description": "The ImageMagick Engine plugin for WordPress is vulnerable to deserialization of untrusted input via the 'cli_path' parameter in versions up to, and including 1.7.5. This makes it possible for unauthenticated users to call files using a PHAR wrapper, granted they can trick a site administrator into performing an action such as clicking on a link, that will deserialize and call arbitrary PHP Objects that can be used to perform a variety of malicious actions granted a POP chain is also present. It also requires that the attacker is successful in uploading a file with the serialized payload."}, {"Reference": "CVE-2022-35943", "Description": "Shield is an authentication and authorization framework for CodeIgniter 4. This vulnerability may allow [SameSite Attackers](https://canitakeyoursubdomain.name/) to bypass the [CodeIgniter4 CSRF protection](https://codeigniter4.github.io/userguide/libraries/security.html) mechanism with CodeIgniter Shield. For this attack to succeed, the attacker must have direct (or indirect, e.g., XSS) control over a subdomain site (e.g., `https://a.example.com/`) of the target site (e.g., `http://example.com/`). Upgrade to **CodeIgniter v4.2.3 or later** and **Shield v1.0.0-beta.2 or later**. As a workaround: set `Config\\\\Security::$csrfProtection` to `'session,'`remove old session data right after login (immediately after ID and password match) and regenerate CSRF token right after login (immediately after ID and password match)"}, {"Reference": "CVE-2022-38075", "Description": "Cross-Site Request Forgery (CSRF) vulnerability leading to Stored Cross-Site Scripting (XSS) in Mantenimiento web plugin <= 0.13 on WordPress."}, {"Reference": "CVE-2022-40695", "Description": "Multiple Cross-Site Scripting (CSRF) vulnerabilities in SEO Redirection Plugin plugin <= 8.9 on WordPress."}, {"Reference": "CVE-2022-41136", "Description": "Cross-Site Request Forgery (CSRF) vulnerability leading to Stored Cross-Site Scripting (XSS) in Vladimir Anokhin's Shortcodes Ultimate plugin <= 5.12.0 on WordPress."}, {"Reference": "CVE-2022-4125", "Description": "The Popup Manager WordPress plugin through 1.6.6 does not have authorisation and CSRF check when creating/updating popups, and is missing sanitisation as well as escaping, which could allow unauthenticated attackers to create arbitrary popups and add Stored XSS payloads as well"}, {"Reference": "CVE-2022-44741", "Description": "Cross-Site Request Forgery (CSRF) vulnerability leading to Cross-Site Scripting (XSS) in David Anderson Testimonial Slider plugin <= 1.3.1 on WordPress."}, {"Reference": "CVE-2022-3853", "Description": "Cross-site Scripting (XSS) is a client-side code injection attack. The attacker aims to execute malicious scripts in a web browser of the victim by including malicious code in a legitimate web page or web application."}, {"Reference": "CVE-2022-1759", "Description": "The RB Internal Links WordPress plugin through 2.0.16 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack, as well as perform Stored Cross-Site Scripting attacks due to the lack of sanitisation and escaping"}, {"Reference": "CVE-2022-1967", "Description": "The WP Championship WordPress plugin before 9.3 is lacking CSRF checks in various places, allowing attackers to make a logged in admin perform unwanted actions, such as create and delete arbitrary teams as well as update the plugin's settings. Due to the lack of sanitisation and escaping, it could also lead to Stored Cross-Site Scripting issues"}, {"Reference": "CVE-2022-0164", "Description": "The Coming soon and Maintenance mode WordPress plugin before 3.5.3 does not have authorisation and CSRF checks in its coming_soon_send_mail AJAX action, allowing any authenticated users, with a role as low as subscriber to send arbitrary emails to all subscribed users"}, {"Reference": "CVE-2022-0229", "Description": "The miniOrange's Google Authenticator WordPress plugin before 5.5 does not have proper authorisation and CSRF checks when handling the reconfigureMethod, and does not validate the parameters passed to it properly. As a result, unauthenticated users could delete arbitrary options from the blog, making it unusable."}, {"Reference": "CVE-2022-0345", "Description": "The Customize WordPress Emails and Alerts WordPress plugin before 1.8.7 does not have authorisation and CSRF check in its bnfw_search_users AJAX action, allowing any authenticated users to call it and query for user e-mail prefixes (finding the first letter, then the second one, then the third one etc.)."}, {"Reference": "CVE-2022-0363", "Description": "The myCred WordPress plugin before 2.4.3.1 does not have any authorisation and CSRF checks in the mycred-tools-import-export AJAX action, allowing any authenticated users, such as subscribers, to call it and import mycred setup, thus creating badges, managing points or creating arbitrary posts."}, {"Reference": "CVE-2022-0398", "Description": "The ThirstyAffiliates Affiliate Link Manager WordPress plugin before 3.10.5 does not have authorisation and CSRF checks when creating affiliate links, which could allow any authenticated user, such as subscriber to create arbitrary affiliate links, which could then be used to redirect users to an arbitrary website"}, {"Reference": "CVE-2022-0403", "Description": "The Library File Manager WordPress plugin before 5.2.3 is using an outdated version of the elFinder library, which is know to be affected by security issues (CVE-2021-32682), and does not have any authorisation as well as CSRF checks in its connector AJAX action, allowing any authenticated users, such as subscriber to call it. Furthermore, as the options passed to the elFinder library does not restrict any file type, users with a role as low as subscriber can Create/Upload/Delete Arbitrary files and folders."}, {"Reference": "CVE-2022-0444", "Description": "The Backup, Restore and Migrate WordPress Sites With the XCloner Plugin WordPress plugin before 4.3.6 does not have authorisation and CSRF checks when resetting its settings, allowing unauthenticated attackers to reset them, including generating a new backup encryption key."}, {"Reference": "CVE-2022-0634", "Description": "The ThirstyAffiliates WordPress plugin before 3.10.5 lacks authorization checks in the ta_insert_external_image action, allowing a low-privilege user (with a role as low as Subscriber) to add an image from an external URL to an affiliate link. Further the plugin lacks csrf checks, allowing an attacker to trick a logged in user to perform the action by crafting a special request."}, {"Reference": "CVE-2022-0833", "Description": "The Church Admin WordPress plugin before 3.4.135 does not have authorisation and CSRF in some of its action as well as requested files, allowing unauthenticated attackers to repeatedly request the \"refresh-backup\" action, and simultaneously keep requesting a publicly accessible temporary file generated by the plugin in order to disclose the final backup filename, which can then be fetched by the attacker to download the backup of the plugin's DB data"}, {"Reference": "CVE-2022-0952", "Description": "The Sitemap by click5 WordPress plugin before 1.0.36 does not have authorisation and CSRF checks when updating options via a REST endpoint, and does not ensure that the option to be updated belongs to the plugin. As a result, unauthenticated attackers could change arbitrary blog options, such as the users_can_register and default_role, allowing them to create a new admin account and take over the blog."}, {"Reference": "CVE-2022-1092", "Description": "The myCred WordPress plugin before 2.4.3.1 does not have authorisation and CSRF checks in its mycred-tools-import-export AJAX action, allowing any authenticated user to call and and retrieve the list of email address present in the blog"}, {"Reference": "CVE-2022-1203", "Description": "The Content Mask WordPress plugin before 1.8.4.1 does not have authorisation and CSRF checks in various AJAX actions, as well as does not validate the option to be updated to ensure it belongs to the plugin. As a result, any authenticated user, such as subscriber could modify arbitrary blog options"}, {"Reference": "CVE-2022-1570", "Description": "The Files Download Delay WordPress plugin before 1.0.7 does not have authorisation and CSRF checks when reseting its settings, which could allow any authenticated users, such as subscriber to perform such action."}, {"Reference": "CVE-2022-1572", "Description": "The HTML2WP WordPress plugin through 1.0.0 does not have authorisation and CSRF checks in an AJAX action, available to any authenticated users such as subscriber, which could allow them to delete arbitrary file"}, {"Reference": "CVE-2022-1574", "Description": "The HTML2WP WordPress plugin through 1.0.0 does not have authorisation and CSRF checks when importing files, and does not validate them, as a result, unauthenticated attackers can upload arbitrary files (such as PHP) on the remote server"}, {"Reference": "CVE-2022-1589", "Description": "The Change wp-admin login WordPress plugin before 1.1.0 does not properly check for authorisation and is also missing CSRF check when updating its settings, which could allow unauthenticated users to change the settings. The attacked could also be performed via a CSRF vector"}, {"Reference": "CVE-2022-2180", "Description": "The GREYD.SUITE WordPress theme does not properly validate uploaded custom font packages, and does not perform any authorization or csrf checks, allowing an unauthenticated attacker to upload arbitrary files including php source files, leading to possible remote code execution (RCE)."}, {"Reference": "CVE-2022-23601", "Description": "Symfony is a PHP framework for web and console applications and a set of reusable PHP components. The Symfony form component provides a CSRF protection mechanism by using a random token injected in the form and using the session to store and control the token submitted by the user. When using the FrameworkBundle, this protection can be enabled or disabled with the configuration. If the configuration is not specified, by default, the mechanism is enabled as long as the session is enabled. In a recent change in the way the configuration is loaded, the default behavior has been dropped and, as a result, the CSRF protection is not enabled in form when not explicitly enabled, which makes the application sensible to CSRF attacks. This issue has been resolved in the patch versions listed and users are advised to update. There are no known workarounds for this issue."}, {"Reference": "CVE-2022-23732", "Description": "A path traversal vulnerability was identified in GitHub Enterprise Server management console that allowed the bypass of CSRF protections. This could potentially lead to privilege escalation. To exploit this vulnerability, an attacker would need to target a user that was actively logged into the management console. This vulnerability affected all versions of GitHub Enterprise Server prior to 3.5 and was fixed in versions 3.1.19, 3.2.11, 3.3.6, 3.4.1. This vulnerability was reported via the GitHub Bug Bounty program."}, {"Reference": "CVE-2022-23765", "Description": "This vulnerability occured by sending a malicious POST request to a specific page while logged in random user from some family of IPTIME NAS. Remote attackers can steal root privileges by changing the password of the root through a POST request."}, {"Reference": "CVE-2022-24895", "Description": "Symfony is a PHP framework for web and console applications and a set of reusable PHP components. When authenticating users Symfony by default regenerates the session ID upon login, but preserves the rest of session attributes. Because this does not clear CSRF tokens upon login, this might enables same-site attackers to bypass the CSRF protection mechanism by performing an attack similar to a session-fixation. This issue has been fixed in the 4.4 branch. "}, {"Reference": "CVE-2022-27226", "Description": "A CSRF issue in /api/crontab on iRZ Mobile Routers through 2022-03-16 allows a threat actor to create a crontab entry in the router administration panel. The cronjob will consequently execute the entry on the threat actor's defined interval, leading to remote code execution, allowing the threat actor to gain filesystem access. In addition, if the router's default credentials aren't rotated or a threat actor discovers valid credentials, remote code execution can be achieved without user interaction."}, {"Reference": "CVE-2022-2783", "Description": "In affected versions of Octopus Server it was identified that a session cookie could be used as the CSRF token"}, {"Reference": "CVE-2022-3879", "Description": "The Car Dealer (Dealership) and Vehicle sales WordPress Plugin WordPress plugin before 3.05 does not have proper authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber to call it and install and activate arbitrary plugins from wordpress.org"}, {"Reference": "CVE-2022-3882", "Description": "The Memory Usage, Memory Limit, PHP and Server Memory Health Check and Fix Plugin WordPress plugin before 2.46 does not have proper authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber to call it and install and activate arbitrary plugins from wordpress.org"}, {"Reference": "CVE-2022-3911", "Description": "The iubenda WordPress plugin before 3.3.3 does does not have authorisation and CSRF in an AJAX action, and does not ensure that the options to be updated belong to the plugin as long as they are arrays. As a result, any authenticated users, such as subscriber can grant themselves any privileges, such as edit_plugins etc"}, {"Reference": "CVE-2022-4102", "Description": "The Royal Elementor Addons WordPress plugin before 1.3.56 does not have authorization and CSRF checks when deleting a template and does not ensure that the post to be deleted is a template. This could allow any authenticated users, such as subscribers, to delete arbitrary posts assuming they know the related slug."}, {"Reference": "CVE-2022-43407", "Description": "Jenkins Pipeline: Input Step Plugin 451.vf1a_a_4f405289 and earlier does not restrict or sanitize the optionally specified ID of the 'input' step, which is used for the URLs that process user interactions for the given 'input' step (proceed or abort) and is not correctly encoded, allowing attackers able to configure Pipelines to have Jenkins build URLs from 'input' step IDs that would bypass the CSRF protection of any target URL in Jenkins when the 'input' step is interacted with."}, {"Reference": "CVE-2021-25116", "Description": "The Enqueue Anything WordPress plugin through 1.0.1 does not have authorisation and CSRF checks in the remove_asset AJAX action, and does not ensure that the item to be deleted is actually an asset. As a result, low privilege users such as subscriber could delete arbitrary assets, as well as put arbitrary posts in the trash."}, {"Reference": "CVE-2022-3082", "Description": "The miniOrange Discord Integration WordPress plugin before 2.1.6 does not have authorisation and CSRF in some of its AJAX actions, allowing any logged in users, such as subscriber to call them, and disable the app for example"}, {"Reference": "CVE-2022-3119", "Description": "The OAuth client Single Sign On WordPress plugin before 3.0.4 does not have authorisation and CSRF when updating its settings, which could allow unauthenticated attackers to update them and change the OAuth endpoints to ones they controls, allowing them to then be authenticated as admin if they know the correct email address"}, {"Reference": "CVE-2022-4148", "Description": "The WP OAuth Server (OAuth Authentication) WordPress plugin before 4.3.0 has a flawed CSRF and authorisation check when deleting a client, which could allow any authenticated users, such as subscriber to delete arbitrary client."}, {"Reference": "CVE-2021-24890", "Description": "The Scripts Organizer WordPress plugin before 3.0 does not have capability and CSRF checks in the saveScript AJAX action, available to both unauthenticated and authenticated users, and does not validate user input in any way, which could allow unauthenticated users to put arbitrary PHP code in a file"}, {"Reference": "CVE-2022-1020", "Description": "The Product Table for WooCommerce (wooproducttable) WordPress plugin before 3.1.2 does not have authorisation and CSRF checks in the wpt_admin_update_notice_option AJAX action (available to both unauthenticated and authenticated users), as well as does not validate the callback parameter, allowing unauthenticated attackers to call arbitrary functions with either none or one user controlled argument"}, {"Reference": "CVE-2022-2276", "Description": "The WP Edit Menu WordPress plugin before 1.5.0 does not have authorisation and CSRF in an AJAX action, which could allow unauthenticated attackers to delete arbitrary posts/pages from the blog"}, {"Reference": "CVE-2022-2350", "Description": "The Disable User Login WordPress plugin through 1.0.1 does not have authorisation and CSRF checks when updating its settings, allowing unauthenticated attackers to block (or unblock) users at will."}, {"Reference": "CVE-2022-2377", "Description": "The Directorist WordPress plugin before 7.3.0 does not have authorisation and CSRF checks in an AJAX action, allowing any authenticated users to send arbitrary emails on behalf of the blog"}, {"Reference": "CVE-2022-2382", "Description": "The Product Slider for WooCommerce WordPress plugin before 2.5.7 has flawed CSRF checks and lack authorisation in some of its AJAX actions, allowing any authenticated users, such as subscriber to call them. One in particular could allow them to delete arbitrary blog options."}, {"Reference": "CVE-2022-2389", "Description": "The Abandoned Cart Recovery for WooCommerce, Follow Up Emails, Newsletter Builder & Marketing Automation By Autonami WordPress plugin before 2.1.2 does not have authorisation and CSRF checks in one of its AJAX action, allowing any authenticated users, such as subscriber to create automations"}, {"Reference": "CVE-2022-2405", "Description": "The WP Popup Builder WordPress plugin before 1.2.9 does not have authorisation and CSRF check in an AJAX action, allowing any authenticated users, such as subscribers to delete arbitrary Popup"}, {"Reference": "CVE-2022-2657", "Description": "The Multivendor Marketplace Solution for WooCommerce WordPress plugin before 3.8.12 is lacking authorisation and CSRF in multiple AJAX actions, which could allow any authenticated users, such as subscriber to call them and suspend vendors (reporter by the submitter) or update arbitrary order status (identified by WPScan when verifying the issue) for example. Other unauthenticated attacks are also possible, either directly or via CSRF"}, {"Reference": "CVE-2022-2987", "Description": "The Ldap WP Login / Active Directory Integration WordPress plugin before 3.0.2 does not have any authorisation and CSRF checks when updating it's settings (which are hooked to the init action), allowing unauthenticated attackers to update them. Attackers could set their own LDAP server to be used to authenticated users, therefore bypassing the current authentication"}, {"Reference": "CVE-2022-3489", "Description": "The WP Hide WordPress plugin through 0.0.2 does not have authorisation and CSRF checks in place when updating the custom_wpadmin_slug settings, allowing unauthenticated attackers to update it with a crafted request"}, {"Reference": "CVE-2022-3538", "Description": "The Webmaster Tools Verification WordPress plugin through 1.2 does not have authorisation and CSRF checks when disabling plugins, allowing unauthenticated users to disable arbitrary plugins"}, {"Reference": "CVE-2022-3585", "Description": "A vulnerability classified as problematic has been found in SourceCodester Simple Cold Storage Management System 1.0. Affected is an unknown function of the file /csms/?page=contact_us of the component Contact Us. The manipulation leads to cross-site request forgery. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-211194 is the identifier assigned to this vulnerability."}, {"Reference": "CVE-2022-3582", "Description": "A vulnerability has been found in SourceCodester Simple Cold Storage Management System 1.0 and classified as problematic. Affected by this vulnerability is an unknown functionality. The manipulation of the argument change password leads to cross-site request forgery. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-211189 was assigned to this vulnerability."}, {"Reference": "CVE-2022-36404", "Description": "Missing Authorization, Cross-Site Request Forgery (CSRF) vulnerability in David Cole Simple SEO (WordPress plugin) plugin <= 1.8.12 versions."}, {"Reference": "CVE-2022-4349", "Description": "A vulnerability classified as problematic has been found in CTF-hacker pwn. This affects an unknown part of the file delete.html. The manipulation leads to cross-site request forgery. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-215109 was assigned to this vulnerability."}, {"Reference": "CVE-2022-3946", "Description": "The Welcart e-Commerce WordPress plugin before 2.8.4 does not have authorisation and CSRF in an AJAX action, allowing any logged-in user to create, update and delete shipping methods."}, {"Reference": "CVE-2022-3999", "Description": "The DPD Baltic Shipping WordPress plugin before 1.2.57 does not have authorisation and CSRF in an AJAX action, which could allow any authenticated users, such as subscriber to delete arbitrary options from the blog, which could make the blog unavailable."}, {"Reference": "CVE-2022-4014", "Description": "A vulnerability, which was classified as problematic, has been found in FeehiCMS. Affected by this issue is some unknown functionality of the component Post My Comment Tab. The manipulation leads to cross-site request forgery. The attack may be launched remotely. The identifier of this vulnerability is VDB-213788."}, {"Reference": "CVE-2022-4024", "Description": "The Registration Forms WordPress plugin before 3.8.1.3 does not have authorisation and CSRF when deleting users via an init action handler, allowing unauthenticated attackers to delete arbitrary users (along with their posts)"}, {"Reference": "CVE-2022-4103", "Description": "The Royal Elementor Addons WordPress plugin before 1.3.56 does not have authorisation and CSRF checks when creating a template, and does not ensure that the post created is a template. This could allow any authenticated users, such as subscriber to create a post (as well as any post type) with an arbitrary title"}, {"Reference": "CVE-2022-4124", "Description": "The Popup Manager WordPress plugin through 1.6.6 does not have authorisation and CSRF checks when deleting popups, which could allow unauthenticated users to delete them"}, {"Reference": "CVE-2022-4872", "Description": "The Chained Products WordPress plugin before 2.12.0 does not have authorisation and CSRF checks, as well as does not ensure that the option to be updated belong to the plugin, allowing unauthenticated attackers to set arbitrary options to 'no'"}, {"Reference": "CVE-2021-37234", "Description": "Incorrect Access Control vulnerability in Modern Honey Network commit 0abf0db9cd893c6d5c727d036e1f817c02de4c7b allows remote attackers to view sensitive information via crafted PUT request to Web API."}, {"Reference": "CVE-2022-3880", "Description": "The Disable Json API, Login Lockdown, XMLRPC, Pingback, Stop User Enumeration Anti Hacker Scan WordPress plugin before 4.20 does not have proper authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber to call it and install and activate arbitrary plugins from wordpress.org"}, {"Reference": "CVE-2022-3881", "Description": "The WP Tools Increase Maximum Limits, Repair, Server PHP Info, Javascript errors, File Permissions, Transients, Error Log WordPress plugin before 3.43 does not have proper authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber to call it and install and activate arbitrary plugins from wordpress.org"}, {"Reference": "CVE-2022-3883", "Description": "The Block Bad Bots and Stop Bad Bots Crawlers and Spiders and Anti Spam Protection WordPress plugin before 7.24 does not have proper authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber to call it and install and activate arbitrary plugins from wordpress.org"}, {"Reference": "CVE-2022-3451", "Description": "The Product Stock Manager WordPress plugin before 1.0.5 does not have authorisation and proper CSRF checks in multiple AJAX actions, allowing users with a role as low as subscriber to call them. One action in particular could allow to update arbitrary options"}, {"Reference": "CVE-2021-27885", "Description": "usersettings.php in e107 through 2.3.0 lacks a certain e_TOKEN protection mechanism."}]}
{"ID": "353", "Name": "Missing Support for Integrity Check", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product uses a transmission protocol that does not include a mechanism for verifying the integrity of the data during transmission, such as a checksum.", "ExtendedDescription": "If integrity check values or \"checksums\" are omitted from a protocol, there is no way of determining if data has been corrupted in transmission. The lack of checksum functionality in a protocol removes the first application-level check of data that can be used. The end-to-end philosophy of checks states that integrity checks should be performed at the lowest level that they can be completely implemented. Excluding further sanity checks and input validation performed by applications, the protocol's checksum is the most important level of checksum, since it can be performed more completely than at any previous level and takes into account entire messages, as opposed to single packets.", "LikelihoodOfExploit": "Medium", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "345", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "PeerOf", "CweID": "354", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase."}, {"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Integrity", "Other"], "Impact": ["Other"], "Note": "Data that is parsed and used may be corrupted."}, {"Scope": ["Non-Repudiation", "Other"], "Impact": ["Hide Activities", "Other"], "Note": "Without a checksum it is impossible to determine if any changes have been made to the data after it was sent."}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "Add an appropriately sized checksum to the protocol, ensuring that data received may be simply validated before it is parsed and used."}, {"Phase": ["Implementation"], "Description": "Ensure that the checksums present in the protocol design are properly implemented and added to each message before it is sent."}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "In this example, a request packet is received, and privileged information is sent to the requester:"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\twhile(true) {\n\t\tDatagramPacket rp = new DatagramPacket(rData,rData.length);\n\t\toutSock.receive(rp);\n\t\tInetAddress IPAddress = rp.getAddress();\n\t\tint port = rp.getPort();\n\t\tout = secret.getBytes();\n\t\tDatagramPacket sp =new DatagramPacket(out, out.length, IPAddress, port);\n\t\toutSock.send(sp);\n\t}\n```"}, {"BodyText": "The response containing secret data has no integrity check associated with it, allowing an attacker to alter the message without detection."}]}], "RelatedAttackPatterns": ["13", "14", "389", "39", "665", "74", "75"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2022-2793", "Description": "Emerson Electric's Proficy Machine Edition Version 9.00 and prior is vulenrable to CWE-353 Missing Support for Integrity Check, and has no authentication or authorization of data packets after establishing a connection for the SRTP protocol."}]}
{"ID": "354", "Name": "Improper Validation of Integrity Check Value", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product does not validate or incorrectly validates the integrity check values or \"checksums\" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.", "ExtendedDescription": "Improper validation of checksums before use results in an unnecessary risk that can easily be mitigated. The protocol specification describes the algorithm used for calculating the checksum. It is then a simple matter of implementing the calculation and verifying that the calculated checksum and the received checksum match. Improper verification of the calculated checksum and the received checksum can lead to far greater consequences.", "LikelihoodOfExploit": "Medium", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "345", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "345", "ViewID": "1003", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "754", "ViewID": "1000"}, {"Nature": "PeerOf", "CweID": "353", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "REALIZATION: This weakness is caused during implementation of an architectural security tactic."}], "CommonConsequences": [{"Scope": ["Integrity", "Other"], "Impact": ["Modify Application Data", "Other"], "Note": "Integrity checks usually use a secret key that helps authenticate the data origin. Skipping integrity checking generally opens up the possibility that new data from an invalid source can be injected."}, {"Scope": ["Integrity", "Other"], "Impact": ["Other"], "Note": "Data that is parsed and used may be corrupted."}, {"Scope": ["Non-Repudiation", "Other"], "Impact": ["Hide Activities", "Other"], "Note": "Without a checksum check, it is impossible to determine if any changes have been made to the data after it was sent."}], "PotentialMitigations": [{"Phase": ["Implementation"], "Description": "Ensure that the checksums present in messages are properly checked in accordance with the protocol specification before they are parsed and used."}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "The following example demonstrates the weakness."}, {"Nature": "Bad", "Language": "C", "ExampleCode": "```\n\tsd = socket(AF_INET, SOCK_DGRAM, 0); serv.sin_family = AF_INET;\n\tserv.sin_addr.s_addr = htonl(INADDR_ANY);\n\tservr.sin_port = htons(1008);\n\tbind(sd, (struct sockaddr *) & serv, sizeof(serv));\n\twhile (1) {\n\t\t\tmemset(msg, 0x0, MAX_MSG);\n\t\t\tclilen = sizeof(cli);\n\t\t\tif (inet_ntoa(cli.sin_addr)==...) n = recvfrom(sd, msg, MAX_MSG, 0, (struct sockaddr *) & cli, &clilen);\n\t}\n```"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\twhile(true) {\n\t\tDatagramPacket packet = new DatagramPacket(data,data.length,IPAddress, port);\n\t\tsocket.send(sendPacket);\n\t}\n```"}]}], "RelatedAttackPatterns": ["145", "463", "75"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2022-36360", "Description": "A vulnerability has been identified in LOGO! 8 BM (incl. SIPLUS variants) (All versions < V8.3). Affected devices load firmware updates without checking the authenticity. Furthermore the integrity of the unencrypted firmware is only verified by a non-cryptographic method. This could allow an attacker to manipulate a firmware update and flash it to the device."}]}
{"ID": "356", "Name": "Product UI does not Warn User of Unsafe Actions", "Abstraction": "Base", "Structure": "Simple", "Status": "Incomplete", "Description": "The product's user interface does not warn the user before undertaking an unsafe action on behalf of that user. This makes it easier for attackers to trick users into inflicting damage to their system.", "ExtendedDescription": "Product systems should warn users that a potentially dangerous action may occur if the user proceeds. For example, if the user downloads a file from an unknown source and attempts to execute the file on their machine, then the application's GUI can indicate that the file is unsafe.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "221", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Non-Repudiation"], "Impact": ["Hide Activities"]}], "ObservedExamples": [{"Reference": "CVE-1999-1055", "Description": "Product does not warn user when document contains certain dangerous functions or macros.", "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1055"}, {"Reference": "CVE-1999-0794", "Description": "Product does not warn user when document contains certain dangerous functions or macros.", "Link": "https://www.cve.org/CVERecord?id=CVE-1999-0794"}, {"Reference": "CVE-2000-0277", "Description": "Product does not warn user when document contains certain dangerous functions or macros.", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0277"}, {"Reference": "CVE-2000-0517", "Description": "Product does not warn user about a certificate if it has already been accepted for a different site. Possibly resultant.", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0517"}, {"Reference": "CVE-2005-0602", "Description": "File extractor does not warn user if setuid/setgid files could be extracted. Overlaps privileges/permissions.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0602"}, {"Reference": "CVE-2000-0342", "Description": "E-mail client allows bypass of warning for dangerous attachments via a Windows .LNK file that refers to the attachment.", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0342"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Relationship", "Note": "Often resultant, e.g. in unhandled error conditions."}, {"Type": "Relationship", "Note": "Can overlap privilege errors, conceptually at least."}], "Top25Examples": [{"Reference": "CVE-2021-44714", "Description": "Acrobat Reader DC version 21.007.20099 (and earlier), 20.004.30017 (and earlier) and 17.011.30204 (and earlier) are affected by a Violation of Secure Design Principles that could lead to a Security feature bypass. Acrobat Reader DC displays a warning message when a user clicks on a PDF file, which could be used by an attacker to mislead the user. In affected versions, this warning message does not include custom protocols when used by the sender. User interaction is required to abuse this vulnerability as they would need to click 'allow' on the warning message of a malicious file."}, {"Reference": "CVE-2022-0803", "Description": "Inappropriate implementation in Permissions in Google Chrome prior to 99.0.4844.51 allowed a remote attacker to tamper with the contents of the Omnibox (URL bar) via a crafted HTML page."}, {"Reference": "CVE-2022-2622", "Description": "Insufficient validation of untrusted input in Safe Browsing in Google Chrome on Windows prior to 104.0.5112.79 allowed a remote attacker to bypass download restrictions via a crafted file."}, {"Reference": "CVE-2022-3316", "Description": "Insufficient validation of untrusted input in Safe Browsing in Google Chrome prior to 106.0.5249.62 allowed a remote attacker to bypass security feature via a crafted HTML page. (Chromium security severity: Low)"}, {"Reference": "CVE-2022-3317", "Description": "Insufficient validation of untrusted input in Intents in Google Chrome on Android prior to 106.0.5249.62 allowed a remote attacker to bypass navigation restrictions via a crafted HTML page. (Chromium security severity: Low)"}]}
{"ID": "357", "Name": "Insufficient UI Warning of Dangerous Operations", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The user interface provides a warning to a user regarding dangerous or sensitive operations, but the warning is not noticeable enough to warrant attention.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "693", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Non-Repudiation"], "Impact": ["Hide Activities"]}], "ObservedExamples": [{"Reference": "CVE-2007-1099", "Description": "User not sufficiently warned if host key mismatch occurs", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1099"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2021-42292", "Description": "Microsoft Excel Security Feature Bypass Vulnerability"}, {"Reference": "CVE-2022-41904", "Description": "Element iOS is an iOS Matrix client provided by Element. It is based on MatrixSDK. Prior to version 1.9.7, events encrypted using Megolm for which trust could not be established did not get decorated accordingly (with warning shields). Therefore a malicious homeserver could inject messages into the room without the user being alerted that the messages were not sent by a verified group member, even if the user has previously verified all group members. This issue has been patched in Element iOS 1.9.7. There are currently no known workarounds."}, {"Reference": "CVE-2022-20266", "Description": "In Companion, there is a possible way to keep a service running with elevated importance without showing foreground service notification due to improper input validation. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-211757348"}, {"Reference": "CVE-2022-3443", "Description": "Insufficient data validation in File System API in Google Chrome prior to 106.0.5249.62 allowed a remote attacker to bypass File System restrictions via a crafted HTML page. (Chromium security severity: Low)"}]}
{"ID": "358", "Name": "Improperly Implemented Security Check for Standard", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product does not implement or incorrectly implements one or more security-relevant checks as specified by the design of a standardized algorithm, protocol, or technique.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "573", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "693", "ViewID": "1000"}, {"Nature": "CanAlsoBe", "CweID": "345", "ViewID": "1000"}, {"Nature": "CanAlsoBe", "CweID": "290", "ViewID": "1000"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation", "Note": "\n\nThis is an implementation error, in which the algorithm/technique requires certain security-related behaviors or conditions that are not implemented or checked properly, thus causing a vulnerability.\n"}], "CommonConsequences": [{"Scope": ["Access Control"], "Impact": ["Bypass Protection Mechanism"]}], "ObservedExamples": [{"Reference": "CVE-2002-0862", "Description": "Browser does not verify Basic Constraints of a certificate, even though it is required, allowing spoofing of trusted certificates.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0862"}, {"Reference": "CVE-2002-0970", "Description": "Browser does not verify Basic Constraints of a certificate, even though it is required, allowing spoofing of trusted certificates.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0970"}, {"Reference": "CVE-2002-1407", "Description": "Browser does not verify Basic Constraints of a certificate, even though it is required, allowing spoofing of trusted certificates.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1407"}, {"Reference": "CVE-2005-0198", "Description": "Logic error prevents some required conditions from being enforced during Challenge-Response Authentication Mechanism with MD5 (CRAM-MD5).", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-0198"}, {"Reference": "CVE-2004-2163", "Description": "Shared secret not verified in a RADIUS response packet, allowing authentication bypass by spoofing server replies.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2163"}, {"Reference": "CVE-2005-2181", "Description": "Insufficient verification in VoIP implementation, in violation of standard, allows spoofed messages.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2181"}, {"Reference": "CVE-2005-2182", "Description": "Insufficient verification in VoIP implementation, in violation of standard, allows spoofed messages.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2182"}, {"Reference": "CVE-2005-2298", "Description": "Security check not applied to all components, allowing bypass.", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2298"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Relationship", "Note": "This is a \"missing step\" error on the product side, which can overlap weaknesses such as insufficient verification and spoofing. It is frequently found in cryptographic and authentication errors. It is sometimes resultant."}], "Top25Examples": [{"Reference": "CVE-2022-2696", "Description": "The Restaurant Menu \u2013 Food Ordering System \u2013 Table Reservation plugin for WordPress is vulnerable to authorization bypass via several AJAX actions in versions up to, and including 2.3.0 due to missing capability checks and missing nonce validation. This makes it possible for authenticated attackers with minimal permissions to perform a wide variety of actions such as modifying the plugin's settings and modifying the ordering system preferences."}, {"Reference": "CVE-2022-3056", "Description": "Insufficient policy enforcement in Content Security Policy in Google Chrome prior to 105.0.5195.52 allowed a remote attacker to bypass content security policy via a crafted HTML page."}]}
{"ID": "359", "Name": "Exposure of Private Personal Information to an Unauthorized Actor", "Abstraction": "Base", "Structure": "Simple", "Status": "Incomplete", "Description": "The product does not properly prevent a person's private, personal information from being accessed by actors who either (1) are not explicitly authorized to access the information or (2) do not have the implicit consent of the person about whom the information is collected.", "ExtendedDescription": "\n\nThere are many types of sensitive information that products must protect from attackers, including system data, communications, configuration, business secrets, intellectual property, and an individual's personal (private) information. Private personal information may include a password, phone number, geographic location, personal messages, credit card number, etc. Private information is important to consider whether the person is a user of the product, or part of a data set that is processed by the product. An exposure of private information does not necessarily prevent the product from working properly, and in fact the exposure might be intended by the developer, e.g. as part of data sharing with other organizations. However, the exposure of personal private information can still be undesirable or explicitly prohibited by law or regulation.\n\n\nSome types of private information include:\n\n\n  - Government identifiers, such as Social Security Numbers\n\n  - Contact information, such as home addresses and telephone numbers\n\n  - Geographic location - where the user is (or was)\n\n  - Employment history\n\n  - Financial data - such as credit card numbers, salary, bank accounts, and debts\n\n  - Pictures, video, or audio\n\n  - Behavioral patterns - such as web surfing history, when certain activities are performed, etc.\n\n  - Relationships (and types of relationships) with others - family, friends, contacts, etc.\n\n  - Communications - e-mail addresses, private messages, text messages, chat logs, etc.\n\n  - Health - medical conditions, insurance status, prescription records\n\n  - Account passwords and other credentials\n\nSome of this information may be characterized as PII (Personally Identifiable Information), Protected Health Information (PHI), etc. Categories of private information may overlap or vary based on the intended usage or the policies and practices of a particular industry.\n\nSometimes data that is not labeled as private can have a privacy implication in a different context. For example, student identification numbers are usually not considered private because there is no explicit and publicly-available mapping to an individual student's personal information. However, if a school generates identification numbers based on student social security numbers, then the identification numbers should be considered private.\n", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "200", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}, {"Type": "Technology", "Class": "Mobile", "Prevalence": "Undetermined"}], "AlternateTerms": [{"Term": "Privacy violation"}, {"Term": "Privacy leak"}, {"Term": "Privacy leakage"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design", "Note": "OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase."}, {"Phase": "Implementation"}, {"Phase": "Operation"}], "CommonConsequences": [{"Scope": ["Confidentiality"], "Impact": ["Read Application Data"]}], "DetectionMethods": [{"Method": "Architecture or Design Review", "Description": "\n\nPrivate personal data can enter a program in a variety of ways:\n\n\n  - Directly from the user in the form of a password or personal information\n\n  - Accessed from a database or other data store by the application\n\n  - Indirectly from a partner or other third party\n\nIf the data is written to an external location - such as the console, file system, or network - a privacy violation may occur.", "Effectiveness": "High"}, {"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "PotentialMitigations": [{"Phase": ["Requirements"], "Description": "\n\nIdentify and consult all relevant regulations for personal privacy. An organization may be required to comply with certain federal and state regulations, depending on its location, the type of business it conducts, and the nature of any private data it handles. Regulations may include Safe Harbor Privacy Framework [REF-340], Gramm-Leach Bliley Act (GLBA) [REF-341], Health Insurance Portability and Accountability Act (HIPAA) [REF-342], General Data Protection Regulation (GDPR) [REF-1047], California Consumer Privacy Act (CCPA) [REF-1048], and others.\n"}, {"Phase": ["Architecture and Design"], "Description": "\n\nCarefully evaluate how secure design may interfere with privacy, and vice versa. Security and privacy concerns often seem to compete with each other. From a security perspective, all important operations should be recorded so that any anomalous activity can later be identified. However, when private data is involved, this practice can in fact create risk. Although there are many ways in which private data can be handled unsafely, a common risk stems from misplaced trust. Programmers often trust the operating environment in which a program runs, and therefore believe that it is acceptable store private information on the file system, in the registry, or in other locally-controlled resources. However, even if access to certain resources is restricted, this does not guarantee that the individuals who do have access can be trusted.\n"}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "The following code contains a logging statement that tracks the contents of records added to a database by storing them in a log file. Among other values that are stored, the getPassword() function returns the user-supplied plaintext password associated with the account."}, {"Nature": "Bad", "Language": "C#", "ExampleCode": "```\n\tpass = GetPassword();\n\t...\n\tdbmsLog.WriteLine(id + \":\" + pass + \":\" + type + \":\" + tstamp);\n```"}, {"BodyText": "The code in the example above logs a plaintext password to the filesystem. Although many developers trust the filesystem as a safe storage location for data, it should not be trusted implicitly, particularly when privacy is a concern."}]}, {"ID": "DX-111", "Entries": [{"IntroText": "This code uses location to determine the user's current US State location."}, {"BodyText": "First the application must declare that it requires the ACCESS_FINE_LOCATION permission in the application's manifest.xml:"}, {"Nature": "Bad", "Language": "XML", "ExampleCode": "```\n\t<uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\n```"}, {"BodyText": "During execution, a call to getLastLocation() will return a location based on the application's location permissions. In this case the application has permission for the most accurate location possible:"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tlocationClient = new LocationClient(this, this, this);\n\tlocationClient.connect();\n\tLocation userCurrLocation;\n\tuserCurrLocation = locationClient.getLastLocation();\n\tderiveStateFromCoords(userCurrLocation);\n```"}, {"BodyText": "While the application needs this information, it does not need to use the ACCESS_FINE_LOCATION permission, as the ACCESS_COARSE_LOCATION permission will be sufficient to identify which US state the user is in."}]}, {"Entries": [{"IntroText": "In 2004, an employee at AOL sold approximately 92 million private customer e-mail addresses to a spammer marketing an offshore gambling web site [REF-338]. In response to such high-profile exploits, the collection and management of private data is becoming increasingly regulated."}]}], "RelatedAttackPatterns": ["464", "467", "498", "508"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Notes": [{"Type": "Maintenance", "Note": "This entry overlaps many other entries that are not organized around the kind of sensitive information that is exposed. However, because privacy is treated with such importance due to regulations and other factors, and it may be useful for weakness-finding tools to highlight capabilities that detect personal private information instead of system information, it is not clear whether - and how - this entry should be deprecated."}], "Top25Examples": [{"Reference": "CVE-2022-1365", "Description": "Exposure of Private Personal Information to an Unauthorized Actor in GitHub repository lquixada/cross-fetch prior to 3.1.5."}, {"Reference": "CVE-2021-41849", "Description": "An issue was discovered in Luna Simo PPR1.180610.011/202001031830. It sends the following Personally Identifiable Information (PII) in plaintext using HTTP to servers located in China: user's list of installed apps and device International Mobile Equipment Identity (IMEI). This PII is transmitted to log.skyroam.com.cn using HTTP, independent of whether the user uses the Simo software."}, {"Reference": "CVE-2022-36091", "Description": "XWiki Platform Web Templates are templates for XWiki Platform, a generic wiki platform. Through the suggestion feature, string and list properties of objects the user shouldn't have access to can be accessed in versions prior to 13.10.4 and 14.2. This includes private personal information like email addresses and salted password hashes of registered users but also other information stored in properties of objects. Sensitive configuration fields like passwords for LDAP or SMTP servers could be accessed. By exploiting an additional vulnerability, this issue can even be exploited on private wikis at least for string properties. The issue is patched in version 13.10.4 and 14.2. Password properties are no longer displayed and rights are checked for other properties. A workaround is available. The template file `suggest.vm` can be replaced by a patched version without upgrading or restarting XWiki unless it has been overridden, in which case the overridden template should be patched, too. This might need adjustments for older versions, though."}, {"Reference": "CVE-2022-46081", "Description": "In Garmin Connect 4.61, terminating a LiveTrack session wouldn't prevent the LiveTrack API from continued exposure of private personal information. NOTE: this is disputed by the vendor because the LiveTrack API service is not a customer-controlled product."}, {"Reference": "CVE-2021-46687", "Description": "JFrog Artifactory prior to version 7.31.10 and 6.23.38 is vulnerable to Sensitive Data Exposure through the Project Administrator REST API. This issue affects: JFrog JFrog Artifactory JFrog Artifactory versions before 7.31.10 versions prior to 7.x; JFrog Artifactory versions before 6.23.38 versions prior to 6.x."}, {"Reference": "CVE-2022-24866", "Description": "Discourse Assign is a plugin for assigning users to a topic in Discourse, an open-source messaging platform. Prior to version 1.0.1, the UserBookmarkSerializer serialized the whole User / Group object, which leaked some private information. The data was only being serialized to people who could view assignment info, which is limited to staff by default. For the vast majority of sites, this data was only leaked to trusted staff member, but for sites with assign features enabled publicly, the data was accessible to more people than just staff. Version 1.0.1 contains a patch. There are currently no known workarounds."}, {"Reference": "CVE-2022-31185", "Description": "mprweb is a hosting platform for the makedeb Package Repository. Email addresses were found to not have been hidden, even if a user had clicked the `Hide Email Address` checkbox on their account page, or during signup. This could lead to an account's email being leaked, which may be problematic if your email needs to remain private for any reason. Users hosting their own mprweb instance will need to upgrade to the latest commit to get this fixed. Users on the official instance will already have this issue fixed."}]}
{"ID": "36", "Name": "Absolute Path Traversal", "Abstraction": "Base", "Structure": "Simple", "Status": "Draft", "Description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize absolute path sequences such as \"/abs/path\" that can resolve to a location that is outside of that directory.", "ExtendedDescription": "This allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "22", "ViewID": "1000", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "22", "ViewID": "1305", "Ordinal": "Primary"}, {"Nature": "ChildOf", "CweID": "22", "ViewID": "1340", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Integrity", "Confidentiality", "Availability"], "Impact": ["Execute Unauthorized Code or Commands"], "Note": "The attacker may be able to create or overwrite critical files that are used to execute code, such as programs or libraries."}, {"Scope": ["Integrity"], "Impact": ["Modify Files or Directories"], "Note": "The attacker may be able to overwrite or create critical files, such as programs, libraries, or important data. If the targeted file is used for a security mechanism, then the attacker may be able to bypass that mechanism. For example, appending a new account at the end of a password file may allow an attacker to bypass authentication."}, {"Scope": ["Confidentiality"], "Impact": ["Read Files or Directories"], "Note": "The attacker may be able read the contents of unexpected files and expose sensitive data. If the targeted file is used for a security mechanism, then the attacker may be able to bypass that mechanism. For example, by reading a password file, the attacker could conduct brute force password guessing attacks in order to break into an account on the system."}, {"Scope": ["Availability"], "Impact": ["DoS: Crash, Exit, or Restart"], "Note": "The attacker may be able to overwrite, delete, or corrupt unexpected critical files such as programs, libraries, or important data. This may prevent the product from working at all and in the case of a protection mechanisms such as authentication, it has the potential to lockout every user of the product."}], "DetectionMethods": [{"DetectionMethodID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}], "DemonstrativeExamples": [{"ID": "DX-18", "Entries": [{"IntroText": "In the example below, the path to a dictionary file is read from a system property and used to initialize a File object."}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tString filename = System.getProperty(\"com.domain.application.dictionaryFile\");\n\tFile dictionaryFile = new File(filename);\n```"}, {"BodyText": "However, the path is not validated or modified to prevent it from containing relative or absolute path sequences before creating the File object. This allows anyone who can control the system property to determine what file is used. Ideally, the path should be resolved relative to some kind of application or user home directory."}]}, {"ID": "DX-159", "Entries": [{"IntroText": "This script intends to read a user-supplied file from the current directory. The user inputs the relative path to the file and the script uses Python's os.path.join() function to combine the path to the current working directory with the provided path to the specified file. This results in an absolute path to the desired file. If the file does not exist when the script attempts to read it, an error is printed to the user."}, {"Nature": "Bad", "Language": "Python", "ExampleCode": "```\n\t import os\n\t import sys\n\t def main():\n\t\t filename = sys.argv[1]\n\t\t path = os.path.join(os.getcwd(), filename)\n\t\t try:\n\t\t\t with open(path, 'r') as f:\n\t\t\t\t file_data = f.read()\n\t\t except FileNotFoundError as e:\n\t\t\t print(\"Error - file not found\")\n\t main() \n```"}, {"BodyText": "However, if the user supplies an absolute path, the os.path.join() function will discard the path to the current working directory and use only the absolute path provided. For example, if the current working directory is /home/user/documents, but the user inputs /etc/passwd, os.path.join() will use only /etc/passwd, as it is considered an absolute path. In the above scenario, this would cause the script to access and read the /etc/passwd file."}, {"Nature": "Good", "Language": "Python", "ExampleCode": "```\n\t import os\n\t import sys\n\t def main():\n\t\t filename = sys.argv[1]\n\t\t path = os.path.normpath(f\"{os.getcwd()}{os.sep}{filename}\")\n\t\t try:\n\t\t\t with open(path, 'r') as f:\n\t\t\t\t file_data = f.read()\n\t\t except FileNotFoundError as e:\n\t\t\t print(\"Error - file not found\")\n\t main() \n```"}, {"BodyText": "The constructed path string uses os.sep to add the appropriate separation character for the given operating system (e.g. '\\' or '/') and the call to os.path.normpath() removes any additional slashes that may have been entered - this may occur particularly when using a Windows path. By putting the pieces of the path string together in this fashion, the script avoids a call to os.path.join() and any potential issues that might arise if an absolute path is entered. With this version of the script, if the current working directory is /home/user/documents, and the user inputs /etc/passwd, the resulting path will be /home/user/documents/etc/passwd. The user is therefore contained within the current working directory as intended."}]}], "ObservedExamples": [{"Reference": "CVE-2022-31503", "Description": "Python package constructs filenames using an unsafe os.path.join call on untrusted input, allowing absolute path traversal because os.path.join resets the pathname to an absolute path that is specified as part of the input.", "Link": "https://www.cve.org/CVERecord?id=CVE-2022-31503"}, {"Reference": "CVE-2002-1345", "Description": "Multiple FTP clients write arbitrary files via absolute paths in server responses", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1345"}, {"Reference": "CVE-2001-1269", "Description": "ZIP file extractor allows full path", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1269"}, {"Reference": "CVE-2002-1818", "Description": "Path traversal using absolute pathname", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1818"}, {"Reference": "CVE-2002-1913", "Description": "Path traversal using absolute pathname", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1913"}, {"Reference": "CVE-2005-2147", "Description": "Path traversal using absolute pathname", "Link": "https://www.cve.org/CVERecord?id=CVE-2005-2147"}, {"Reference": "CVE-2000-0614", "Description": "Arbitrary files may be overwritten via compressed attachments that specify absolute path names for the decompressed output.", "Link": "https://www.cve.org/CVERecord?id=CVE-2000-0614"}, {"Reference": "CVE-1999-1263", "Description": "Mail client allows remote attackers to overwrite arbitrary files via an e-mail message containing a uuencoded attachment that specifies the full pathname for the file to be modified.", "Link": "https://www.cve.org/CVERecord?id=CVE-1999-1263"}, {"Reference": "CVE-2003-0753", "Description": "Remote attackers can read arbitrary files via a full pathname to the target file in config parameter.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-0753"}, {"Reference": "CVE-2002-1525", "Description": "Remote attackers can read arbitrary files via an absolute pathname.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1525"}, {"Reference": "CVE-2001-0038", "Description": "Remote attackers can read arbitrary files by specifying the drive letter in the requested URL.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0038"}, {"Reference": "CVE-2001-0255", "Description": "FTP server allows remote attackers to list arbitrary directories by using the \"ls\" command and including the drive letter name (e.g. C:) in the requested pathname.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0255"}, {"Reference": "CVE-2001-0933", "Description": "FTP server allows remote attackers to list the contents of arbitrary drives via a ls command that includes the drive letter as an argument.", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0933"}, {"Reference": "CVE-2002-0466", "Description": "Server allows remote attackers to browse arbitrary directories via a full pathname in the arguments to certain dynamic pages.", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-0466"}, {"Reference": "CVE-2002-1483", "Description": "Remote attackers can read arbitrary files via an HTTP request whose argument is a filename of the form \"C:\" (Drive letter), \"//absolute/path\", or \"..\" .", "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1483"}, {"Reference": "CVE-2004-2488", "Description": "FTP server read/access arbitrary files using \"C:\\\" filenames", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2488"}, {"Reference": "CVE-2001-0687", "Description": "FTP server allows a remote attacker to retrieve privileged web server system information by specifying arbitrary paths in the UNC format (\\\\computername\\sharename).", "Link": "https://www.cve.org/CVERecord?id=CVE-2001-0687"}], "RelatedAttackPatterns": ["597"], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}, "Top25Examples": [{"Reference": "CVE-2021-32506", "Description": "Absolute Path Traversal vulnerability in GetImage in QSAN Storage Manager allows remote authenticated attackers download arbitrary files via the Url path parameter. The referred vulnerability has been solved with the updated version of QSAN Storage Manager v3.3.3 ."}, {"Reference": "CVE-2022-24900", "Description": "Piano LED Visualizer is software that allows LED lights to light up as a person plays a piano connected to a computer. Version 1.3 and prior are vulnerable to a path traversal attack. The `os.path.join` call is unsafe for use with untrusted input. When the `os.path.join` call encounters an absolute path, it ignores all the parameters it has encountered till that point and starts working with the new absolute path. Since the \"malicious\" parameter represents an absolute path, the result of `os.path.join` ignores the static directory completely. Hence, untrusted input is passed via the `os.path.join` call to `flask.send_file` can lead to path traversal attacks. A patch with a fix is available on the `master` branch of the GitHub repository. This can also be fixed by preventing flow of untrusted data to the vulnerable `send_file` function. In case the application logic necessiates this behaviour, one can either use the `flask.safe_join` to join untrusted paths or replace `flask.send_file` calls with `flask.send_from_directory` calls."}, {"Reference": "CVE-2022-25216", "Description": "An absolute path traversal vulnerability allows a remote attacker to download any file on the Windows file system for which the user account running DVDFab 12 Player (recently renamed PlayerFab) has read-access, by means of an HTTP GET request to http://<IP_ADDRESS>:32080/download/<URL_ENCODED_PATH>."}, {"Reference": "CVE-2022-31501", "Description": "The ChaoticOnyx/OnyxForum repository before 2022-05-04 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31502", "Description": "The operatorequals/wormnest repository through 0.4.7 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31503", "Description": "The orchest/orchest repository before 2022.05.0 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31504", "Description": "The ChangeWeDer/BaiduWenkuSpider_flaskWeb repository before 2021-11-29 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31505", "Description": "The cheo0/MercadoEnLineaBack repository through 2022-05-04 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31506", "Description": "The cmusatyalab/opendiamond repository through 10.1.1 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31507", "Description": "The ganga-devs/ganga repository before 8.5.10 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31508", "Description": "The idayrus/evoting repository before 2022-05-08 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31509", "Description": "The iedadata/usap-dc-website repository through 1.0.1 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31510", "Description": "The sergeKashkin/Simple-RAT repository before 2022-05-03 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31511", "Description": "The AFDudley/equanimity repository through 2014-04-23 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31512", "Description": "The Atom02/flask-mvc repository through 2020-09-14 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31513", "Description": "The BolunHan/Krypton repository through 2021-06-03 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31514", "Description": "The Caoyongqi912/Fan_Platform repository through 2021-04-20 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31515", "Description": "The Delor4/CarceresBE repository through 1.0 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31516", "Description": "The Harveyzyh/Python repository through 2022-05-04 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31517", "Description": "The HolgerGraef/MSM repository through 2021-04-20 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31518", "Description": "The JustAnotherSoftwareDeveloper/Python-Recipe-Database repository through 2021-03-31 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31519", "Description": "The Lukasavicus/WindMill repository through 1.0 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31520", "Description": "The Luxas98/logstash-management-api repository through 2020-05-04 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31521", "Description": "The Niyaz-Mohamed/mosaic repository through 1.0.0 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31522", "Description": "The NotVinay/karaokey repository through 2019-12-11 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31523", "Description": "The PaddlePaddle/Anakin repository through 0.1.1 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31524", "Description": "The PureStorage-OpenConnect/swagger repository through 1.1.5 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31525", "Description": "The SummaLabs/DLS repository through 0.1.0 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31526", "Description": "The ThundeRatz/ThunderDocs repository through 2020-05-01 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31527", "Description": "The Wildog/flask-file-server repository through 2020-02-20 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31528", "Description": "The bonn-activity-maps/bam_annotation_tool repository through 2021-08-31 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31529", "Description": "The cinemaproject/monorepo repository through 2021-03-03 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31530", "Description": "The csm-aut/csm repository through 3.5 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31531", "Description": "The dainst/cilantro repository through 0.0.4 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31532", "Description": "The dankolbman/travel_blahg repository through 2016-01-16 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31533", "Description": "The decentraminds/umbral repository through 2020-01-15 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31534", "Description": "The echoleegroup/PythonWeb repository through 2018-10-31 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31535", "Description": "The freefood89/Fishtank repository through 2015-06-24 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31536", "Description": "The jaygarza1982/ytdl-sync repository through 2021-01-02 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31537", "Description": "The jmcginty15/Solar-system-simulator repository through 2021-07-26 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31538", "Description": "The joaopedro-fg/mp-m08-interface repository through 2020-12-10 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31539", "Description": "The kotekan/kotekan repository through 2021.11 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31540", "Description": "The kumardeepak/hin-eng-preprocessing repository through 2019-07-16 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31541", "Description": "The lyubolp/Barry-Voice-Assistant repository through 2021-01-18 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31542", "Description": "The mandoku/mdweb repository through 2015-05-07 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31543", "Description": "The maxtortime/SetupBox repository through 1.0 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31544", "Description": "The meerstein/rbtm repository through 1.5 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31545", "Description": "The ml-inory/ModelConverter repository through 2021-04-26 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31546", "Description": "The nlpweb/glance repository through 2014-06-27 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31547", "Description": "The noamezekiel/sphere repository through 2020-05-31 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31548", "Description": "The nrlakin/homepage repository through 2017-03-06 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31549", "Description": "The olmax99/helm-flask-celery repository before 2022-05-25 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31550", "Description": "The olmax99/pyathenastack repository through 2019-11-08 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31551", "Description": "The pleomax00/flask-mongo-skel repository through 2012-11-01 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31552", "Description": "The project-anuvaad/anuvaad-corpus repository through 2020-11-23 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31553", "Description": "The rainsoupah/sleep-learner repository through 2021-02-21 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31554", "Description": "The rohitnayak/movie-review-sentiment-analysis repository through 2017-05-07 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31555", "Description": "The romain20100/nursequest repository through 2018-02-22 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31556", "Description": "The rusyasoft/TrainEnergyServer repository through 2017-08-03 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31557", "Description": "The seveas/golem repository through 2016-05-17 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31558", "Description": "The tooxie/shiva-server repository through 0.10.0 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31559", "Description": "The tsileo/flask-yeoman repository through 2013-09-13 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31560", "Description": "The uncleYiba/photo_tag repository through 2020-08-31 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31561", "Description": "The varijkapil13/Sphere_ImageBackend repository through 2019-10-03 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31562", "Description": "The waveyan/internshipsystem repository through 2018-05-22 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31563", "Description": "The whmacmac/vprj repository through 2022-04-06 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31564", "Description": "The woduq1414/munhak-moa repository before 2022-05-03 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31565", "Description": "The yogson/syrabond repository through 2020-05-25 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31566", "Description": "The DSAB-local/DSAB repository through 2019-02-18 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31567", "Description": "The DSABenchmark/DSAB repository through 2.1 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31568", "Description": "The Rexians/rex-web repository through 2022-06-05 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31570", "Description": "The adriankoczuruek/ceneo-web-scrapper repository through 2021-03-15 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31571", "Description": "The akashtalole/python-flask-restful-api repository through 2019-09-16 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31572", "Description": "The ceee-vip/cockybook repository through 2015-04-16 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31573", "Description": "The chainer/chainerrl-visualizer repository through 0.1.1 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31574", "Description": "The deepaliupadhyay/RealEstate repository through 2018-11-30 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31575", "Description": "The duducosmos/livro_python repository through 2018-06-06 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31576", "Description": "The heidi-luong1109/shackerpanel repository through 2021-05-25 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31577", "Description": "The longmaoteamtf/audio_aligner_app repository through 2020-01-10 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31578", "Description": "The piaoyunsoft/bt_lnmp repository through 2019-10-10 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31579", "Description": "The ralphjzhang/iasset repository through 2022-05-04 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31580", "Description": "The sanojtharindu/caretakerr-api repository through 2021-05-17 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31581", "Description": "The scorelab/OpenMF repository before 2022-05-03 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31582", "Description": "The shaolo1/VideoServer repository through 2019-09-21 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31583", "Description": "The sravaniboinepelli/AutomatedQuizEval repository through 2020-04-27 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31584", "Description": "The stonethree/s3label repository through 2019-08-14 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31585", "Description": "The umeshpatil-dev/Home__internet repository through 2020-08-28 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31586", "Description": "The unizar-30226-2019-06/ChangePop-Back repository through 2019-06-04 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31587", "Description": "The yuriyouzhou/KG-fashion-chatbot repository through 2018-05-22 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-31588", "Description": "The zippies/testplatform repository through 2016-07-19 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely."}, {"Reference": "CVE-2022-39812", "Description": "Italtel NetMatch-S CI 5.2.0-20211008 allows Absolute Path Traversal under NMSCI-WebGui/SaveFileUploader. An unauthenticated user can upload files to an arbitrary path. An attacker can change the uploadDir parameter in a POST request (not possible using the GUI) to an arbitrary directory. Because the application does not check in which directory a file will be uploaded, an attacker can perform a variety of attacks that can result in unauthorized access to the server."}, {"Reference": "CVE-2022-39838", "Description": "Systematic FIX Adapter (ALFAFX) 2.4.0.25 13/09/2017 allows remote file inclusion via a UNC share pathname, and also allows absolute path traversal to local pathnames."}, {"Reference": "CVE-2022-40443", "Description": "An absolute path traversal vulnerability in ZZCMS 2022 allows attackers to obtain sensitive information via a crafted GET request sent to /one/siteinfo.php."}, {"Reference": "CVE-2022-40715", "Description": "An issue was discovered in NOKIA 1350OMS R14.2. An Absolute Path Traversal vulnerability exists for a specific endpoint via the logfile parameter, allowing a remote authenticated attacker to read files on the filesystem arbitrarily."}, {"Reference": "CVE-2022-4123", "Description": "A flaw was found in Buildah. The local path and the lowest subdirectory may be disclosed due to incorrect absolute path traversal, resulting in an impact to confidentiality."}, {"Reference": "CVE-2022-2943", "Description": "The WordPress Infinite Scroll \u2013 Ajax Load More plugin for Wordpress is vulnerable to arbitrary file reading in versions up to, and including, 5.5.3 due to insufficient file path validation on the alm_repeaters_export() function. This makes it possible for authenticated attackers, with administrative privileges, to download arbitrary files hosted on the server that may contain sensitive content, such as the wp-config.php file."}, {"Reference": "CVE-2022-23602", "Description": "Nimforum is a lightweight alternative to Discourse written in Nim. In versions prior to 2.2.0 any forum user can create a new thread/post with an include referencing a file local to the host operating system. Nimforum will render the file if able. This can also be done silently by using NimForum's post \"preview\" endpoint. Even if NimForum is running as a non-critical user, the forum.json secrets can be stolen. Version 2.2.0 of NimForum includes patches for this vulnerability. Users are advised to upgrade as soon as is possible. There are no known workarounds for this issue."}, {"Reference": "CVE-2022-20962", "Description": "A vulnerability in the Localdisk Management feature of Cisco Identity Services Engine (ISE) could allow an authenticated, remote attacker to make unauthorized changes to the file system of an affected device. This vulnerability is due to insufficient input validation. An attacker could exploit this vulnerability by sending a crafted HTTP request with absolute path sequences. A successful exploit could allow the attacker to upload malicious files to arbitrary locations within the file system. Using this method, it is possible to access the underlying operating system and execute commands with system privileges."}, {"Reference": "CVE-2022-28127", "Description": "A data removal vulnerability exists in the web_server /action/remove/ API functionality of Robustel R1510 3.3.0. A specially-crafted network request can lead to arbitrary file deletion. An attacker can send a sequence of requests to trigger this vulnerability."}]}
{"ID": "360", "Name": "Trust of System Event Data", "Abstraction": "Base", "Structure": "Simple", "Status": "Incomplete", "Description": "Security based on event locations are insecure and can be spoofed.", "ExtendedDescription": "Events are a messaging system which may provide control data to programs listening for events. Events often do not have any type of authentication framework to allow them to be verified from a trusted source. Any application, in Windows, on a given desktop can send a message to any window on the same desktop. There is no authentication framework for these messages. Therefore, any message can be used to manipulate any process on the desktop if the process does not check the validity and safeness of those messages.", "LikelihoodOfExploit": "High", "RelatedWeaknesses": [{"Nature": "ChildOf", "CweID": "345", "ViewID": "1000", "Ordinal": "Primary"}], "ApplicablePlatforms": [{"Type": "Language", "Class": "Not Language-Specific", "Prevalence": "Undetermined"}], "ModesOfIntroduction": [{"Phase": "Architecture and Design"}, {"Phase": "Implementation"}], "CommonConsequences": [{"Scope": ["Integrity", "Confidentiality", "Availability", "Access Control"], "Impact": ["Gain Privileges or Assume Identity", "Execute Unauthorized Code or Commands"], "Note": "If one trusts the system-event information and executes commands based on it, one could potentially take actions based on a spoofed identity."}], "PotentialMitigations": [{"Phase": ["Architecture and Design"], "Description": "Never trust or rely any of the information in an Event for security."}], "DemonstrativeExamples": [{"Entries": [{"IntroText": "This example code prints out secret information when an authorized user activates a button:"}, {"Nature": "Bad", "Language": "Java", "ExampleCode": "```\n\tpublic void actionPerformed(ActionEvent e) {\n\t\tif (e.getSource() == button) {\n\t\t\tSystem.out.println(\"print out secret information\");\n\t\t}\n\t}\n```"}, {"BodyText": "This code does not attempt to prevent unauthorized users from activating the button. Even if the button is rendered non-functional to unauthorized users in the application UI, an attacker can easily send a false button press event to the application window and expose the secret information."}]}], "ObservedExamples": [{"Reference": "CVE-2004-0213", "Description": "Attacker uses Shatter attack to bypass GUI-enforced protection for CVE-2003-0908.", "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0213"}], "MappingNotes": {"Usage": "Allowed", "Rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.", "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.", "Reasons": ["Acceptable-Use"]}}
